# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-19 08:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/context-propagation.adoc:6
#, fuzzy, no-wrap
msgid "Context Propagation in Quarkus"
msgstr "Propagación del contexto en Quarkus"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:17
#, fuzzy, no-wrap
msgid ""
"Traditional blocking code uses link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[`ThreadLocal`]\n"
" variables to store contextual objects in order to avoid\n"
"passing them as parameters everywhere. Many Quarkus extensions require those contextual objects to operate\n"
"properly: xref:rest-json.adoc[RESTEasy Reactive], xref:cdi-reference.adoc[ArC] and xref:transaction.adoc[Transaction]\n"
"for example.\n"
msgstr "El código de bloqueo tradicional utiliza  link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[`ThreadLocal`] variables para almacenar objetos contextuales con el fin de evitar pasarlos como parámetros en todas partes. Muchas extensiones de Quarkus requieren esos objetos contextuales para funcionar correctamente:  link:rest-json.html[RESTEasy Reactive],  link:cdi-reference.html[ArC] y  link:transaction.html[Transaction] por ejemplo."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:22
#, fuzzy
msgid "If you write reactive/async code, you have to cut your work into a pipeline of code blocks that get executed \"later\", and in practice after the method you defined them in have returned. As such, `try/finally` blocks as well as `ThreadLocal` variables stop working, because your reactive code gets executed in another thread, after the caller ran its `finally` block."
msgstr "Si escribes código reactivo/asíncrono, tienes que cortar tu trabajo en una cadena de bloques de código que se ejecutan \"más tarde\", y en la práctica después de que el método en el que los definiste haya regresado. Por lo tanto, los bloques de `try/finally` así como las variables de `ThreadLocal` dejan de funcionar, porque tu código reactivo se ejecuta en otro hilo, después de que el llamador haya ejecutado su bloque `finally`."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:27
#, fuzzy
msgid "link:https://github.com/smallrye/smallrye-context-propagation[SmallRye Context Propagation] an implementation of link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] was made to make those Quarkus extensions work properly in reactive/async settings. It works by capturing those contextual values that used to be in thread-locals, and restoring them when your code is called."
msgstr "link:https://github.com/smallrye/smallrye-context-propagation[SmallRye Context Propagation] una implementación de  link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] fue hecha para hacer que esas extensiones de Quarkus funcionen correctamente en configuraciones reactivas/async. Funciona capturando esos valores contextuales que solían estar en las ubicaciones de los hilos, y restaurándolos cuando su código es llamado."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:28
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:32
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:34
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:36
#, fuzzy
msgid "The solution is located in the `context-propagation-quickstart` link:{quickstarts-tree-url}/context-propagation-quickstart[directory]."
msgstr "La solución se encuentra en el `context-propagation-quickstart` {quickstarts-tree-url}/context-propagation-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:37
#, fuzzy, no-wrap
msgid "Setting it up"
msgstr "Cómo se prepara"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:41
#, fuzzy
msgid "If you are using link:https://smallrye.io/smallrye-mutiny[Mutiny] (the `quarkus-mutiny` extension), you just need to add the `quarkus-smallrye-context-propagation` extension to enable context propagation."
msgstr "Si utiliza  link:http://smallrye.io/smallrye-mutiny[Mutiny] (la extensión `quarkus-mutiny` ), sólo tiene que añadir la extensión `quarkus-smallrye-context-propagation` para habilitar la propagación del contexto."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:43
#, fuzzy
msgid "In other words, add the following dependencies to your build file:"
msgstr "En otras palabras, añada las siguientes dependencias a su archivo de compilación:"

#. type: Block title
#: upstream/_guides/context-propagation.adoc:45
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:57
#, no-wrap
msgid ""
"<!-- RESTEasy Reactive extension if not already included -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
"<!-- Context Propagation extension -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-context-propagation</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/context-propagation.adoc:60
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:66
#, no-wrap
msgid ""
"// RESTEasy Reactive extension if not already included\n"
"implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"
"// Context Propagation extension\n"
"implementation(\"io.quarkus:quarkus-smallrye-context-propagation\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:69
#, fuzzy
msgid "With this, you will get context propagation for ArC, RESTEasy Reactive and transactions, if you are using them."
msgstr "Con esto, obtendrá la propagación del contexto para ArC, RESTEasy Reactive y las transacciones, si las está utilizando."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:70
#, fuzzy, no-wrap
msgid "Usage example with Mutiny"
msgstr "Ejemplo de uso con Motín"

#. type: Block title
#: upstream/_guides/context-propagation.adoc:73
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motín"

#. type: delimited block =
#: upstream/_guides/context-propagation.adoc:77
#, fuzzy
msgid "This section uses Mutiny reactive types.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Esta sección utiliza los tipos reactivos de Mutiny. Si no está familiarizado con Mutiny, consulte  link:mutiny-primer.html[Mutiny - una biblioteca de programación reactiva intuitiva]."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:82
#, fuzzy
msgid "Let's write a REST endpoint that reads the next 3 items from a xref:kafka.adoc[Kafka topic], stores them in a database using xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning them to the client, you can do it like this:"
msgstr "Escribamos un endpoint REST que lea los siguientes 3 elementos de un  link:kafka.html[tema Kafka], los almacene en una base de datos usando  link:hibernate-orm-panache.html[Hibernate ORM con Panache] (todo en la misma transacción) antes de devolverlos al cliente, puedes hacerlo así:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:88
#: upstream/_guides/context-propagation.adoc:239
#, no-wrap
msgid ""
"    // Get the prices stream\n"
"    @Inject\n"
"    @Channel(\"prices\") Publisher<Double> prices;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:111
#, no-wrap
msgid ""
"    @Transactional\n"
"    @GET\n"
"    @Path(\"/prices\")\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    public Publisher<Double> prices() {\n"
"        // get the next three prices from the price stream\n"
"        return Multi.createFrom().publisher(prices)\n"
"                .select().first(3)\n"
"                // The items are received from the event loop, so cannot use Hibernate ORM (classic)\n"
"                // Switch to a worker thread, the transaction will be propagated\n"
"                .emitOn(Infrastructure.getDefaultExecutor())\n"
"                .map(price -> {\n"
"                    // store each price before we send them\n"
"                    Price priceEntity = new Price();\n"
"                    priceEntity.value = price;\n"
"                    // here we are all in the same transaction\n"
"                    // thanks to context propagation\n"
"                    priceEntity.persist();\n"
"                    return price;\n"
"                    // the transaction is committed once the stream completes\n"
"                });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:115
#, fuzzy
msgid "Notice that thanks to Mutiny support for context propagation, this works out of the box.  The 3 items are persisted using the same transaction and this transaction is committed when the stream completes."
msgstr "Obsérvese que gracias al soporte de Mutiny para la propagación de contextos, esto funciona de forma inmediata. Los 3 ítems son persistidos usando la misma transacción y esta transacción es confirmada cuando el flujo se completa."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:116
#, fuzzy, no-wrap
msgid "Usage example for `CompletionStage`"
msgstr "Ejemplo de uso de `CompletionStage`"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:124
#, fuzzy
msgid "If you are using link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[`CompletionStage`] you need manual context propagation. You can do that by injecting a `ThreadContext` or `ManagedExecutor` that will propagate every context. For example, here we use the xref:vertx.adoc[Vert.x Web Client] to get the list of Star Wars people, then store them in the database using xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning them to the client as JSON using xref:rest-json.adoc[Jackson or JSON-B]:"
msgstr "Si utiliza  link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[`CompletionStage`] necesitas una propagación manual del contexto. Puedes hacerlo inyectando un `ThreadContext` o `ManagedExecutor` que propagará cada contexto. Por ejemplo, aquí usamos el  link:vertx.html[cliente web Vert.x] para obtener la lista de personas de Star Wars, luego los almacenamos en la base de datos usando  link:hibernate-orm-panache.html[Hibernate ORM con Panache] (todo en la misma transacción) antes de devolverlos al cliente como JSON usando  link:rest-json.html[Jackson o JSON-B]:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:130
#, no-wrap
msgid ""
"    @Inject ThreadContext threadContext;\n"
"    @Inject ManagedExecutor managedExecutor;\n"
"    @Inject Vertx vertx;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:157
#, no-wrap
msgid ""
"    @Transactional\n"
"    @GET\n"
"    @Path(\"/people\")\n"
"    public CompletionStage<List<Person>> people() throws SystemException {\n"
"        // Create a REST client to the Star Wars API\n"
"        WebClient client = WebClient.create(vertx,\n"
"                         new WebClientOptions()\n"
"                          .setDefaultHost(\"swapi.dev\")\n"
"                          .setDefaultPort(443)\n"
"                          .setSsl(true));\n"
"        // get the list of Star Wars people, with context capture\n"
"        return threadContext.withContextCapture(client.get(\"/api/people/\").send())\n"
"                .thenApplyAsync(response -> {\n"
"                    JsonObject json = response.bodyAsJsonObject();\n"
"                    List<Person> persons = new ArrayList<>(json.getInteger(\"count\"));\n"
"                    // Store them in the DB\n"
"                    // Note that we're still in the same transaction as the outer method\n"
"                    for (Object element : json.getJsonArray(\"results\")) {\n"
"                        Person person = new Person();\n"
"                        person.name = ((JsonObject) element).getString(\"name\");\n"
"                        person.persist();\n"
"                        persons.add(person);\n"
"                    }\n"
"                    return persons;\n"
"                }, managedExecutor);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:161
#, fuzzy
msgid "Using `ThreadContext` or `ManagedExecutor` you can wrap most useful functional types and `CompletionStage` in order to get context propagated."
msgstr "Usando `ThreadContext` o `ManagedExecutor` puedes envolver la mayoría de los tipos funcionales útiles y `CompletionStage` para obtener la propagación del contexto."

#. type: delimited block =
#: upstream/_guides/context-propagation.adoc:165
#, fuzzy
msgid "The injected `ManagedExecutor` uses the Quarkus thread pool."
msgstr "El `ManagedExecutor` inyectado utiliza el pool de hilos de Quarkus."

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:167
#, fuzzy, no-wrap
msgid "Overriding which contexts are propagated"
msgstr "Cómo anular los contextos que se propagan"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:170
#, fuzzy
msgid "By default, all available contexts are propagated. However, you can override this behaviour in several ways."
msgstr "Por defecto, se propagan todos los contextos disponibles. Sin embargo, puedes anular este comportamiento de varias maneras."

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:171
#, fuzzy, no-wrap
msgid "Using configuration"
msgstr "Uso de la configuración"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:174
#, fuzzy
msgid "The following configuration properties allow you to specify the default sets of propagated contexts:"
msgstr "Las siguientes propiedades de configuración permiten especificar los conjuntos de contextos propagados por defecto:"

#. type: Table
#: upstream/_guides/context-propagation.adoc:177
#, fuzzy, no-wrap
msgid "Configuration Key"
msgstr "Clave de configuración"

#. type: Table
#: upstream/_guides/context-propagation.adoc:177
#: upstream/_guides/context-propagation.adoc:199
#, fuzzy, no-wrap
msgid "Description"
msgstr "Descripción"

#. type: Table
#: upstream/_guides/context-propagation.adoc:179
#, fuzzy, no-wrap
msgid "Default Value"
msgstr "Valor por defecto"

#. type: Table
#: upstream/_guides/context-propagation.adoc:180
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.propagated`"
msgstr "`mp.context.ThreadContext.propagated`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:181
#, fuzzy, no-wrap
msgid "The comma-separated set of propagated contexts"
msgstr "El conjunto separado por comas de los contextos propagados"

#. type: Table
#: upstream/_guides/context-propagation.adoc:183
#, fuzzy, no-wrap
msgid "`Remaining` (all non-explicitly list contexts)"
msgstr "`Remaining` (todos los contextos no explícitos de la lista)"

#. type: Table
#: upstream/_guides/context-propagation.adoc:184
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.cleared`"
msgstr "`mp.context.ThreadContext.cleared`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:185
#, fuzzy, no-wrap
msgid "The comma-separated set of cleared contexts"
msgstr "El conjunto separado por comas de los contextos despejados"

#. type: Table
#: upstream/_guides/context-propagation.adoc:187
#, fuzzy, no-wrap
msgid "`None` (no context), unless neither the propagated nor cleared sets contain `Remaining`, in which case the default is `Remaining` (all non-explicitly listed contexts)"
msgstr "`None` (sin contexto), a menos que ni los conjuntos propagados ni los despejados contengan `Remaining`, en cuyo caso el valor por defecto es `Remaining` (todos los contextos no enumerados explícitamente)"

#. type: Table
#: upstream/_guides/context-propagation.adoc:188
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.unchanged`"
msgstr "`mp.context.ThreadContext.unchanged`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:189
#, fuzzy, no-wrap
msgid "The comma-separated set of unchanged contexts"
msgstr "El conjunto separado por comas de los contextos no modificados"

#. type: Table
#: upstream/_guides/context-propagation.adoc:190
#, fuzzy, no-wrap
msgid "`None` (no context)"
msgstr "`None` (sin contexto)"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:194
#, fuzzy
msgid "The following contexts are available in Quarkus either out of the box, or depending on whether you include their extensions:"
msgstr "Los siguientes contextos están disponibles en Quarkus, ya sea fuera de la caja, o dependiendo de si usted incluye sus extensiones:"

#. type: Table
#: upstream/_guides/context-propagation.adoc:197
#, fuzzy, no-wrap
msgid "Context Nam"
msgstr "Contexto Nam"

#. type: Table
#: upstream/_guides/context-propagation.adoc:197
#, fuzzy, no-wrap
msgid "Name Constant"
msgstr "Nombre Constante"

#. type: Table
#: upstream/_guides/context-propagation.adoc:200
#, fuzzy, no-wrap
msgid "`None`"
msgstr "`None`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:201
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:203
#, fuzzy, no-wrap
msgid "Can be used to specify an empty set of contexts, but setting the value to empty works too"
msgstr "Puede utilizarse para especificar un conjunto vacío de contextos, pero también funciona establecer el valor como vacío"

#. type: Table
#: upstream/_guides/context-propagation.adoc:204
#, fuzzy, no-wrap
msgid "`Remaining`"
msgstr "`Remaining`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:205
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:207
#, fuzzy, no-wrap
msgid "All the contexts that are not explicitly listed in other sets"
msgstr "Todos los contextos que no figuran explícitamente en otros conjuntos"

#. type: Table
#: upstream/_guides/context-propagation.adoc:208
#, fuzzy, no-wrap
msgid "`Transaction`"
msgstr "`Transaction`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:209
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:211
#, fuzzy, no-wrap
msgid "The JTA transaction context"
msgstr "El contexto de la transacción JTA"

#. type: Table
#: upstream/_guides/context-propagation.adoc:212
#, fuzzy, no-wrap
msgid "`CDI`"
msgstr "`CDI`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:213
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:215
#, fuzzy, no-wrap
msgid "The CDI (ArC) context"
msgstr "El contexto CDI (ArC)"

#. type: Table
#: upstream/_guides/context-propagation.adoc:216
#, fuzzy, no-wrap
msgid "`Servlet`"
msgstr "`Servlet`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:217
#: upstream/_guides/context-propagation.adoc:221
#, fuzzy, no-wrap
msgid "N/A"
msgstr "N/A"

#. type: Table
#: upstream/_guides/context-propagation.adoc:219
#, fuzzy, no-wrap
msgid "The servlet context"
msgstr "El contexto del servlet"

#. type: Table
#: upstream/_guides/context-propagation.adoc:220
#, fuzzy, no-wrap
msgid "`Jakarta REST`"
msgstr "`Jakarta REST`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:223
#, fuzzy, no-wrap
msgid "The RESTEasy Reactive or RESTEasy Classic context"
msgstr "El contexto de RESTEasy Classic"

#. type: Table
#: upstream/_guides/context-propagation.adoc:224
#, fuzzy, no-wrap
msgid "`Application`"
msgstr "`Application`"

#. type: Table
#: upstream/_guides/context-propagation.adoc:225
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"

#. type: Table
#: upstream/_guides/context-propagation.adoc:226
#, fuzzy, no-wrap
msgid "The current `ThreadContextClassLoader`"
msgstr "El actual `ThreadContextClassLoader`"

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:228
#, fuzzy, no-wrap
msgid "Overriding the propagated contexts using annotations"
msgstr "Anulación de los contextos propagados mediante anotaciones"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:233
#, fuzzy
msgid "In order for automatic context propagation, such as Mutiny uses, to be overridden in specific methods, you can use the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[`@CurrentThreadContext`] annotation:"
msgstr "Para que la propagación automática de contextos, como la que utiliza Mutiny, sea anulada en métodos específicos, se puede utilizar la anotación  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[`@CurrentThreadContext`] anotación:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:250
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/prices\")\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    // Get rid of all context propagation, since we don't need it here\n"
"    @CurrentThreadContext(propagated = {}, unchanged = ThreadContext.ALL_REMAINING)\n"
"    public Publisher<Double> prices() {\n"
"        // get the next three prices from the price stream\n"
"        return Multi.createFrom().publisher(prices)\n"
"                .select().first(3);\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:252
#, fuzzy, no-wrap
msgid "Overriding the propagated contexts using CDI injection"
msgstr "Anulación de los contextos propagados mediante la inyección CDI"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:255
#, fuzzy
msgid "You can also inject a custom-built `ThreadContext` using the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`] annotation on your injection point:"
msgstr "También puede inyectar un `ThreadContext` personalizado utilizando la anotación  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`] en su punto de inyección:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:265
#, no-wrap
msgid ""
"    // Get the prices stream\n"
"    @Inject\n"
"    @Channel(\"prices\") Publisher<Double> prices;\n"
"    // Get a ThreadContext that doesn't propagate context\n"
"    @Inject\n"
"    @ThreadContextConfig(unchanged = ThreadContext.ALL_REMAINING)\n"
"    SmallRyeThreadContext threadContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:277
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/prices\")\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    public Publisher<Double> prices() {\n"
"        // Get rid of all context propagation, since we don't need it here\n"
"        try(CleanAutoCloseable ac = SmallRyeThreadContext.withThreadContext(threadContext)){\n"
"            // get the next three prices from the price stream\n"
"            return Multi.createFrom().publisher(prices)\n"
"                    .select().first(3);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:280
#, fuzzy
msgid "Likewise, there is a similar way to inject a configured instance of `ManagedExecutor` using the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ManagedExecutorConfig.html[`@ManagedExecutorConfig`] annotation:"
msgstr "Del mismo modo, existe una forma similar de inyectar una instancia configurada de `ManagedExecutor` utilizando la  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ManagedExecutorConfig.html[`@ManagedExecutorConfig`] anotación:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:287
#, no-wrap
msgid ""
"    // Custom ManagedExecutor with different async limit, queue and no propagation\n"
"    @Inject\n"
"    @ManagedExecutorConfig(maxAsync = 2, maxQueued = 3, cleared = ThreadContext.ALL_REMAINING)\n"
"    ManagedExecutor configuredCustomExecutor;\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/context-propagation.adoc:289
#, fuzzy, no-wrap
msgid "Sharing configured CDI instances of ManagedExecutor and ThreadContext"
msgstr "Compartir instancias CDI configuradas de ManagedExecutor y ThreadContext"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:294
#, fuzzy
msgid "If you need to inject the same `ManagedExecutor` or `ThreadContext` into several places and share its capacity, you can name the instance with https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/NamedInstance.html[`@NamedInstance`] annotation.  `@NamedInstance` is a CDI qualifier and all injections of the same type and name will therefore share the same underlying instance.  If you also need to customize your instance, you can do so using `@ManagedExecutorConfig`/`ThreadContextConfig` annotation on one of its injection points:"
msgstr "Si necesita inyectar el mismo `ManagedExecutor` o `ThreadContext` en varios lugares y compartir su capacidad, puede nombrar la instancia con  link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/NamedInstance.html[`@NamedInstance`] `@NamedInstance` es un calificador CDI y todas las inyecciones del mismo tipo y nombre compartirán la misma instancia subyacente. Si también necesita personalizar su instancia, puede hacerlo utilizando la anotación `@ManagedExecutorConfig`/ `ThreadContextConfig` en uno de sus puntos de inyección:"

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:302
#, no-wrap
msgid ""
"    // Custom configured ManagedExecutor with name\n"
"    @Inject\n"
"    @ManagedExecutorConfig(maxAsync = 2, maxQueued = 3, cleared = ThreadContext.ALL_REMAINING)\n"
"    @NamedInstance(\"myExecutor\")\n"
"    ManagedExecutor sharedConfiguredExecutor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:307
#, no-wrap
msgid ""
"    // Since this executor has the same name, it will be the same instance as above\n"
"    @Inject\n"
"    @NamedInstance(\"myExecutor\")\n"
"    ManagedExecutor sameExecutor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:313
#, no-wrap
msgid ""
"    // Custom ThreadContext with a name\n"
"    @Inject\n"
"    @ThreadContextConfig(unchanged = ThreadContext.ALL_REMAINING)\n"
"    @NamedInstance(\"myContext\")\n"
"    ThreadContext sharedConfiguredThreadContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/context-propagation.adoc:318
#, no-wrap
msgid ""
"    // Given equal value of @NamedInstance, this ThreadContext will be the same as the above one\n"
"    @Inject\n"
"    @NamedInstance(\"myContext\")\n"
"    ThreadContext sameContext;\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/context-propagation.adoc:320
#, fuzzy, no-wrap
msgid "Context Propagation for CDI"
msgstr "Propagación del contexto para CDI"

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:324
#, fuzzy
msgid "In terms of CDI, `@RequestScoped`, `@ApplicationScoped` and `@Singleton` beans get propagated and are available in other threads.  `@Dependent` beans as well as any custom scoped beans cannot be automatically propagated via CDI Context Propagation."
msgstr "En términos de CDI, los beans `@RequestScoped`, `@ApplicationScoped` y `@Singleton` se propagan y están disponibles en otros hilos. Los beans `@Dependent`, así como cualquier beans de ámbito personalizado, no pueden propagarse automáticamente a través de la Propagación de Contexto CDI."

#. type: Plain text
#: upstream/_guides/context-propagation.adoc:331
#, fuzzy
msgid "`@ApplicationScoped` and `@Singleton` beans are always active scopes and as such are easy to deal with - context propagation tasks can work with those beans so long as the CDI container is running.  However, `@RequestScoped` beans are a different story. They are only active for a short period of time which can be bound either to HTTP request or some other request/task when manually activated/deactivated.  In this case user must be aware that once the original thread gets to an end of a request, it will terminate the context, calling `@PreDestroy` on those beans and then clearing them from the context.  Subsequent attempts to access those beans from other threads can result in unexpected behaviour.  It is therefore recommended to make sure all tasks using request scoped beans via context propagation are performed in such a manner that they don't outlive the original request duration."
msgstr "`@ApplicationScoped` y `@Singleton` son ámbitos siempre activos y, como tales, son fáciles de tratar: las tareas de propagación de contexto pueden trabajar con esos beans siempre que el contenedor CDI esté en funcionamiento. Sin embargo, los beans de `@RequestScoped` son una historia diferente. Sólo están activos durante un corto periodo de tiempo que puede estar vinculado a una petición HTTP o a alguna otra petición/tarea cuando se activa/desactiva manualmente. En este caso el usuario debe ser consciente de que una vez que el hilo original llega al final de una petición, terminará el contexto, llamando a `@PreDestroy` en esos beans y luego los borrará del contexto. Los intentos posteriores de acceder a esos beans desde otros hilos pueden dar lugar a un comportamiento inesperado. Por lo tanto, se recomienda asegurarse de que todas las tareas que utilizan beans de ámbito de solicitud a través de la propagación del contexto se realizan de tal manera que no superan la duración de la solicitud original."

#. type: delimited block =
#: upstream/_guides/context-propagation.adoc:336
#, fuzzy
msgid "Due to the above described behavior, it is recommended to avoid using `@PreDestroy` on `@RequestScoped` beans when working with Context Propagation in CDI."
msgstr "Debido al comportamiento descrito anteriormente, se recomienda evitar el uso de `@PreDestroy` en los beans de `@RequestScoped` cuando se trabaja con la Propagación de Contexto en CDI."

#, fuzzy
#~ msgid "`JAX-RS`"
#~ msgstr "`JAX-RS`"
