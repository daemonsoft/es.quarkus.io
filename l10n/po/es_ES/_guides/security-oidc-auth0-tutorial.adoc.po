# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-12 08:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Protect Quarkus web application by using an Auth0 OpenID Connect provider"
msgstr "Proteja la aplicación web Quarkus utilizando un proveedor Auth0 OpenID Connect"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "xref:security-architecture.adoc[Quarkus Security] provides comprehensive OpenId Connect (OIDC) and OAuth2 support with its `quarkus-oidc` extension, supporting both xref:security-oidc-code-flow-authentication.adoc[Authorization code flow] and xref:security-oidc-bearer-token-authentication.adoc[Bearer token] authentication mechanisms."
msgstr "link:security-architecture.html[Quarkus Security] proporciona soporte integral OpenId Connect (OIDC) y OAuth2 con su extensión `quarkus-oidc`, soportando tanto el  link:security-oidc-code-flow-authentication.html[flujo de código de autorización] como los mecanismos de autenticación  link:security-oidc-bearer-token-authentication.html[de token de portador]."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "With Quarkus, you can easily configure OIDC providers such as link:https://www.keycloak.org/documentation[Keycloak], link:https://developer.okta.com/[Okta], link:https://auth0.com/docs/[Auth0], and other xref:security-openid-connect-providers.adoc[well-known social OIDC and OAuth2 providers]."
msgstr "Con Quarkus, puedes configurar fácilmente proveedores de OIDC como  link:https://www.keycloak.org/documentation[Keycloak],  link:https://developer.okta.com/[Okta],  link:https://auth0.com/docs/[Auth0], y otros  link:security-openid-connect-providers.html[conocidos proveedores sociales de OIDC y OAuth2]."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Learn how to use the Quarkus OpenID Connect extension (`quarkus-oidc`) together with the https://auth0.com/docs/[Auth0] OIDC provider to protect your API endpoints."
msgstr "Aprenda a utilizar la extensión OpenID Connect de Quarkus ( `quarkus-oidc`) junto con el proveedor  link:https://auth0.com/docs/[Auth0] OIDC para proteger sus puntos finales de API."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Review the following documentation before you begin:"
msgstr "Revise la siguiente documentación antes de empezar:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "link:https://auth0.com/docs/[Auth0 docs site]"
msgstr "link:https://auth0.com/docs/[Auth0 docs site]"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[Quarkus OpenID Connect Authorization code flow mechanism for protecting web applications]"
msgstr "link:security-oidc-code-flow-authentication.html[Quarkus OpenID Connect Mecanismo de flujo de código de autorización para la protección de aplicaciones web]"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[Quarkus OpenID Connect (OIDC) Bearer token authentication]"
msgstr "link:security-oidc-bearer-token-authentication.html[Quarkus OpenID Connect (OIDC) Autenticación de token de portador]"

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Create an Auth0 application"
msgstr "Crear una aplicación Auth0"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Go to the Auth0 dashboard and create a regular web application.\n"
"For example, create an Auth0 application called `QuarkusAuth0`."
msgstr "Vaya al panel de Auth0 y cree una aplicación web normal. Por ejemplo, cree una aplicación Auth0 llamada `QuarkusAuth0` ."

#. type: Block title
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Result"
msgstr "Resultado"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Your Auth0 application gets created with a client ID, secret, and HTTPS-based domain.\n"
"Make a note of these properties because you will need them to complete the Quarkus configuration in the next step."
msgstr "Su aplicación Auth0 se crea con un ID de cliente, un secreto y un dominio basado en HTTPS. Tome nota de estas propiedades porque las necesitará para completar la configuración de Quarkus en el siguiente paso."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Next, while still in the Auth0 dashboard, add some users to your application."
msgstr "A continuación, en el panel de Auth0, añada algunos usuarios a su aplicación."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Now that you have successfully created and configured your Auth0 application, you are ready to start creating and configuring a Quarkus endpoint.\n"
"In the steps that follow, you will continue to configure and update the Auth0 application as well."
msgstr "Ahora que ha creado y configurado con éxito su aplicación Auth0, está listo para empezar a crear y configurar un punto final de Quarkus. En los pasos siguientes, continuará configurando y actualizando también la aplicación Auth0."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Create a Quarkus application"
msgstr "Crear una aplicación Quarkus"

#: _guides/security-oidc-auth0-tutorial.adoc
msgid "Use the following Maven command to create a Quarkus REST (formerly RESTEasy Reactive) application that can be secured with the Quarkus OIDC extension."
msgstr ""

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Create the application workspace and import it into your favorite IDE.\n"
"Let's add a Jakarta REST endpoint that can only be accessed by authenticated users:"
msgstr "Cree el espacio de trabajo de la aplicación e impórtelo en su IDE favorito. Añadamos un punto final REST Jakarta al que sólo puedan acceder usuarios autenticados:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"The injected `JsonWebToken` (JWT) bean has an `@IdToken` qualifier, which means it represents not an access token but OIDC `ID token`.\n"
"`IdToken` provides information in the form of claims about the current user authenticated during the OIDC authorization code flow and you can use `JsonWebToken` API to access these claims."
msgstr "El frijol inyectado `JsonWebToken` (JWT) tiene un calificador `@IdToken` , lo que significa que no representa un token de acceso sino OIDC `ID token` . `IdToken` proporciona información en forma de reclamaciones sobre el usuario actual autenticado durante el flujo del código de autorización OIDC y puede utilizar la API `JsonWebToken` para acceder a estas reclamaciones."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The `io.quarkus.security.Authenticated` annotation is added to the `hello()` method, which means that only authenticated users can access it."
msgstr "La anotación `io.quarkus.security.Authenticated` se añade al método `hello()`, lo que significa que sólo los usuarios autenticados pueden acceder a él."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"The access token acquired during the authorization code flow, alongside the ID token, is not used directly by the endpoint but is used only to access downstream services on behalf of the currently authenticated user.\n"
"More to come on the topic of \"access tokens\", later in this tutorial."
msgstr "El token de acceso adquirido durante el flujo del código de autorización, junto con el token de identificación, no es utilizado directamente por el punto final, sino que se emplea únicamente para acceder a los servicios posteriores en nombre del usuario autenticado en ese momento. Más adelante en este tutorial se tratará el tema de los \"tokens de acceso\"."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Configure OIDC in the Quarkus `application.properties` file  by using the properties from the Auth0 application that you created earlier."
msgstr "Configure OIDC en el archivo `application.properties` de Quarkus utilizando las propiedades de la aplicación Auth0 que creó anteriormente."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"In completing this step, you have just configured Quarkus to use the domain, client ID, and secret of your Auth0 application.\n"
"Setting the property `quarkus.oidc.application-type=web-app` instructs Quarkus to use the OIDC authorization code flow, but there are also other methods, which are discussed later on in the tutorial."
msgstr "Al completar este paso, acaba de configurar Quarkus para que utilice el dominio, el ID de cliente y el secreto de su aplicación Auth0. La configuración de la propiedad `quarkus.oidc.application-type=web-app` indica a Quarkus que utilice el flujo de código de autorización OIDC, pero también existen otros métodos, que se tratan más adelante en el tutorial."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The endpoint address will be  \\http://localhost:8080/hello, which must also be registered as an allowed callback URL in your Auth0 application."
msgstr "La dirección del punto final será http://localhost:8080/hello, que también debe estar registrada como una URL de devolución de llamada permitida en su aplicación Auth0."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "After completing this step, when you access the Quarkus \\http://localhost:8080/hello endpoint from a browser, Auth0 redirects you back to the same address after the authentication is completed."
msgstr "Tras completar este paso, cuando acceda al punto final de Quarkus http://localhost:8080/hello desde un navegador, Auth0 le redirigirá de nuevo a la misma dirección una vez completada la autenticación."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"By default, Quarkus automatically uses the current request path as the callback path.\n"
"But you can override the default behavior and configure a specific callback path by setting the Quarkus `quarkus.oidc.authentication.redirect-path` property."
msgstr "Por defecto, Quarkus utiliza automáticamente la ruta de solicitud actual como ruta de devolución de llamada. Pero puede anular el comportamiento predeterminado y configurar una ruta de devolución de llamada específica estableciendo la propiedad `quarkus.oidc.authentication.redirect-path` de Quarkus."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"In production, your application will most likely have a larger URL space, with multiple endpoint addresses available.\n"
"In such cases, you can set a dedicated callback (redirect) path and register this URL in the provider's dashboard, as outlined in the following configuration example:"
msgstr "En producción, lo más probable es que su aplicación tenga un espacio de URL más grande, con múltiples direcciones de punto final disponibles. En tales casos, puede establecer una ruta de devolución de llamada (redirección) dedicada y registrar esta URL en el panel de control del proveedor, como se indica en el siguiente ejemplo de configuración:"

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.redirect-path=/authenticated-welcome`"
msgstr "`quarkus.oidc.authentication.redirect-path=/authenticated-welcome`"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"In the example scenario, Quarkus calls `/authenticated-welcome` after accepting a redirect from Auth0, completing the authorization code flow,  and creating the session cookie.\n"
"Successfully authenticated users are also allowed to access other parts of the secured application space, without needing to authenticate again. For example, the endpoint callback method can use a JAX-RS API to redirect users to other parts of the secured application where a session cookie will be verified."
msgstr "En el escenario del ejemplo, Quarkus llama a `/authenticated-welcome` después de aceptar una redirección de Auth0, completar el flujo del código de autorización y crear la cookie de sesión. A los usuarios autenticados con éxito también se les permite acceder a otras partes del espacio de aplicación seguro, sin necesidad de autenticarse de nuevo. Por ejemplo, el método de devolución de llamada del punto final puede utilizar una API JAX-RS para redirigir a los usuarios a otras partes de la aplicación segura donde se verificará una cookie de sesión."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now you are ready to start testing the endpoint."
msgstr "Ahora está listo para empezar a probar el punto final."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Test the Quarkus endpoint"
msgstr "Pruebe el punto final de Quarkus"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Start Quarkus in dev mode:"
msgstr "Inicia Quarkus en modo desarrollo:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"This is the only time during this tutorial when you are expected to manually start Quarkus in dev mode.\n"
"The configuration and code update steps in the remaining sections of this tutorial are automatically observed and processed by Quarkus without you needing to restart the application manually."
msgstr "Este es el único momento durante este tutorial en el que se espera que inicie manualmente Quarkus en modo dev. Los pasos de configuración y actualización del código en las secciones restantes de este tutorial son observados y procesados automáticamente por Quarkus sin necesidad de que reinicie la aplicación manualmente."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Open the browser and access http://localhost:8080/hello."
msgstr "Abra el navegador y acceda a  http://localhost:8080/hello"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "You will be redirected to Auth0 and prompted to log in:"
msgstr "Se le redirigirá a Auth0 y se le pedirá que inicie sesión:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "and authorize the `QuarkusAuth0` application to access your account:"
msgstr "y autorice a la aplicación `QuarkusAuth0` a acceder a su cuenta:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Finally, you will be redirected back to the Quarkus endpoint which will return the following response:\n"
"`Hello, auth0|60e5a305e8da5a006aef5471`"
msgstr "Por último, se le redirigirá de nuevo al punto final de Quarkus, que devolverá la siguiente respuesta: `Hello, auth0|60e5a305e8da5a006aef5471`"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Notice that the current username does not get returned.\n"
"To learn more about why this behavior occurs, you can use OIDC Dev UI as explained in the xref:security-openid-connect-dev-services.adoc#dev-ui-all-oidc-providers[Dev UI for all OpenID Connect Providers] section of the \"Dev Services and UI for OpenID Connect (OIDC)\" guide and the following section."
msgstr "Observe que no se devuelve el nombre de usuario actual. Para saber más sobre por qué se produce este comportamiento, puede utilizar OIDC Dev UI tal y como se explica en la sección xref:security-openid-connect-dev-services.adoc#dev-ui-all-oidc-providers[Dev UI para todos los proveedores de OpenID] Connect de la guía \"Dev Services and UI for OpenID Connect (OIDC)\" y en la sección siguiente."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Looking at Auth0 tokens in the OIDC Dev UI"
msgstr "Mirando los tokens Auth0 en la OIDC Dev UI"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Quarkus provides a great xref:dev-ui.adoc[Dev UI] experience.\n"
"Specifically, Quarkus offers built-in support for developing and testing OIDC endpoints with a Keycloak container.\n"
"xref:security-openid-connect-dev-services.adoc#dev-services-for-keycloak[DevService for Keycloak] is automatically started and used if the address of the OIDC provider is not specified for the Quarkus `quarkus.oidc.auth-server-url` configuration property."
msgstr "Quarkus proporciona una gran experiencia xref:dev-ui.adoc[Dev UI] . En concreto, Quarkus ofrece soporte incorporado para desarrollar y probar puntos finales OIDC con un contenedor Keycloak. xref:security-openid-connect-dev-services.adoc#dev-services-for-keycloak[DevService para] Keycloak se inicia automáticamente y se utiliza si no se especifica la dirección del proveedor de OIDC para la propiedad de configuración de Quarkus `quarkus.oidc.auth-server-url` ."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"You can continue using the Quarkus OIDC Dev UI when the provider is already configured.\n"
"Use the following instructions to update your configuration:"
msgstr "Puede seguir utilizando la Quarkus OIDC Dev UI cuando el proveedor ya esté configurado. Utilice las siguientes instrucciones para actualizar su configuración:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "First, change your Quarkus application type from `web-app` to `hybrid`, as follows:"
msgstr "En primer lugar, cambie su tipo de aplicación Quarkus de `web-app` a `hybrid`, como se indica a continuación:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Application type is changed to `hybrid` because OIDC Dev UI currently supports `SPA` (single-page application) mode only.\n"
"OIDC Dev UI single-page application, using its own Java Script, authenticates users to the OIDC provider and uses the access token as a Bearer token to access the Quarkus endpoint as a service."
msgstr "El tipo de aplicación se cambia a `hybrid` porque actualmente OIDC Dev UI sólo admite el modo `SPA` (aplicación de una sola página). La aplicación de una sola página OIDC Dev UI, utilizando su propio Java Script, autentica a los usuarios ante el proveedor OIDC y utiliza el token de acceso como token de portador para acceder al punto final Quarkus como servicio."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Typically, Quarkus must be configured with `quarkus.oidc.application-type=service` to support `Bearer` token authentication, but it also supports a `hybrid` application type, which means it can support both the authorization code and bearer token flows at the same time."
msgstr "Normalmente, Quarkus debe configurarse con `quarkus.oidc.application-type=service` para admitir la autenticación de token `Bearer`, pero también admite un tipo de aplicación `hybrid`, lo que significa que puede admitir tanto el código de autorización como los flujos de token de portador al mismo tiempo."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"You also need to configure the Auth0 application to allow the callbacks to the OIDC Dev UI.\n"
"Use the following URL format:"
msgstr "También debe configurar la aplicación Auth0 para permitir las llamadas de retorno a la OIDC Dev UI. Utilice el siguiente formato de URL:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "`http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/${provider-name}-provider`"
msgstr "`&lt;a href=\"http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/${provider-name}-provider\" class=\"bare\"&gt;http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/${provider-name}-provider&lt;/a&gt;`"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Where in this example, the `${provider-name}` is `auth0`"
msgstr "En este ejemplo, `${provider-name}` es `auth0`"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now you are ready to use OIDC Dev UI with Auth0."
msgstr "Ahora está listo para utilizar OIDC Dev UI con Auth0."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Open http://localhost:8080/q/dev/ in a browser session. An OpenId Connect card that links to an Auth0 provider SPA displays, as follows:"
msgstr "Abra  http://localhost:8080/q/dev/  en una sesión de navegador. Se muestra una tarjeta OpenId Connect que enlaza con un SPA de proveedor Auth0, como se indica a continuación:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Click *Auth0 provider* followed by *Login into Single Page Application*:"
msgstr "Haga clic en *Auth0 provider* seguido de *Login into Single Page Application*:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"You will be redirected to Auth0 to log in.\n"
"You will then be redirected to the OIDC Dev UI dashboard, as follows:"
msgstr "Será redirigido a Auth0 para iniciar sesión. A continuación, se le redirigirá al panel de control OIDC Dev UI, como se indica a continuación:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Here, you can look at both ID and access tokens in the encoded and decoded formats, copy them to the clipboard or use them to test the service endpoint. We will test the endpoint later but for now let's check the ID token:"
msgstr "Aquí puedes ver los tokens de ID y de acceso en los formatos codificado y decodificado, copiarlos al portapapeles o usarlos para probar el endpoint del servicio. Probaremos el endpoint más tarde, pero por ahora vamos a comprobar el token de ID:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "As you can see it does not have any claim representing a user name but if you check its `sub` (subject) claim you will see its value matches what you got in the response when you accessed the Quarkus endpoint directly from the browser, `auth0|60e5a305e8da5a006aef5471`."
msgstr "Como puede ver, no tiene ningún claim que represente un nombre de usuario, pero si comprueba su claim `sub` (subject) verá que su valor coincide con el que obtuvo en la respuesta cuando accedió al endpoint de Quarkus directamente desde el navegador, `auth0|60e5a305e8da5a006aef5471`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Fix it by configuring Quarkus to request a standard OIDC `profile` scope during the authentication process which should result in the ID token including more information:"
msgstr "Arréglalo configurando Quarkus para que solicite un ámbito estándar de OIDC `profile` durante el proceso de autenticación, lo que debería dar como resultado que el token de identificación incluya más información:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Request `profile` scope in addition to the default `openid` scope."
msgstr "Solicite el ámbito `profile` además del ámbito por defecto `openid`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Go back to http://localhost:8080/q/dev/, repeat the process of logging in to `Auth0` and check the ID token again, now you should see the ID token containing the `name` claim:"
msgstr "Vuelva a  http://localhost:8080/q/dev/  repita el proceso de inicio de sesión en `Auth0` y compruebe de nuevo el testigo de identificación, ahora debería ver el testigo de identificación que contiene la reclamación de `name`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "You should get the name when you access the Quarkus endpoint directly from the browser. Clear the browser cookie cache, access http://localhost:8080/hello and yet again, you get `Hello, auth0|60e5a305e8da5a006aef5471` returned. Hmm, what is wrong ?"
msgstr "Deberías obtener el nombre cuando accedes al endpoint de Quarkus directamente desde el navegador. Borre la caché de cookies del navegador, acceda a  http://localhost:8080/hello  y, de nuevo, obtendrá `Hello, auth0|60e5a305e8da5a006aef5471`. ¿Qué ocurre?"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The answer lies with the specifics of the `org.eclipse.microprofile.jwt.JsonWebToken#getName()` implementation, which, according to the https://github.com/eclipse/microprofile-jwt-auth[MicroProfile MP JWT RBAC  specification], checks an MP JWT specific `upn` claim, trying `preferred_username` next and finally `sub` which explains why you get the `Hello, auth0|60e5a305e8da5a006aef5471` answer even with the ID token containing the `name` claim. We can fix it easily by changing the endpoint `hello()` method's implementation to return a specific claim value:"
msgstr "La respuesta está en los detalles de la implementación de `org.eclipse.microprofile.jwt.JsonWebToken#getName()` , que, según la link:https://github.com/eclipse/microprofile-jwt-auth[especificación RBAC de MP JWT de MicroProfile] , comprueba una reivindicación específica de MP JWT `upn` , probando a continuación con `preferred_username` y finalmente con `sub` , lo que explica por qué obtiene la respuesta `Hello, auth0|60e5a305e8da5a006aef5471` incluso con el token de identificación que contiene la reivindicación `name` . Podemos solucionarlo fácilmente cambiando la implementación del método `hello()` del punto final para que devuelva un valor de reclamación específico:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now clear the browser cache, access http://localhost:8080/hello and finally the user name is returned."
msgstr "Ahora se borra la caché del navegador, se accede a  http://localhost:8080/hello  y finalmente se devuelve el nombre de usuario."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Logout support"
msgstr "Soporte de cierre de sesión"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now that you have the users signing in to Quarkus with the help of Auth0, you probably want to support a user-initiated logout. Quarkus supports https://quarkus.io/guides/security-oidc-code-flow-authentication#logout-and-expiration[RP-initiated and other standard OIDC logout mechanisms, as well as the local session logout]."
msgstr "Ahora que los usuarios han iniciado sesión en Quarkus con la ayuda de Auth0, es probable que desee admitir un cierre de sesión iniciado por el usuario. Quarkus admite  link:https://quarkus.io/guides/security-oidc-code-flow-authentication#logout-and-expiration[mecanismos de cierre de sesión iniciados por RP y otros mecanismos estándar de OIDC, así como el cierre de sesión local]."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Currently, Auth0 does not support the standard OIDC RP-initiated logout and does not provide an end session endpoint URL in its discoverable metadata, but it provides its own logout mechanism which works nearly exactly the same as the standard one."
msgstr "Actualmente, Auth0 no soporta el cierre de sesión estándar iniciado por RP de OIDC y no proporciona una URL de punto final de sesión en sus metadatos detectables, pero proporciona su propio mecanismo de cierre de sesión que funciona casi exactamente igual que el estándar."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "It is easy to support it with Quarkus OIDC. You must configure an Auth0 end session endpoint URL and have Quarkus include both the `client-id` query parameter and the post logout URL as the `returnTo` query parameter in the RP-initated logout redirect request to Auth0:"
msgstr "Es fácil soportarlo con Quarkus OIDC. Debe configurar una URL de punto final de sesión de Auth0 y hacer que Quarkus incluya tanto el parámetro de consulta `client-id` como la URL posterior al cierre de sesión como parámetro de consulta `returnTo` en la solicitud de redirección de cierre de sesión a Auth0 iniciada por RP:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Auth0 does not include the end session URL in its metadata, so complement it with manually configuring the Auth0 end session endpoint URL."
msgstr "Auth0 no incluye la URL de fin de sesión en sus metadatos, así que compleméntelo configurando manualmente la URL de fin de sesión de Auth0."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Auth0 will not recognize a standard `post_logout_redirect_uri` query parameter and expects a parameter `returnTo` instead."
msgstr "Auth0 no reconocerá un parámetro de consulta estándar `post_logout_redirect_uri` y espera un parámetro `returnTo` en su lugar."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Auth0 expects `client-id` in the logout request."
msgstr "Auth0 espera `client-id` en la solicitud de cierre de sesión."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Authenticated requests to `/logout` path will be treated as RP-inititated logout requests."
msgstr "Las solicitudes autenticadas a la ruta `/logout` serán tratadas como solicitudes de cierre de sesión iniciadas por el RP."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "This is a public resource to where the logged out user should be returned to."
msgstr "Se trata de un recurso público al que debe volver el usuario que ha cerrado sesión."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Make sure the `/logout` path is protected."
msgstr "Asegúrese de que la ruta `/logout` está protegida."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Here we have customized the Auth0 end session endpoint URL and indicated to Quarkus that an `http://localhost:8080/logout` request must trigger a logout of the currently authenticated user. An interesting thing about the `/logout` path is that it is `virtual`, it is not supported by any method in the JAX-RS endpoint, so for Quarkus OIDC to be able to react to `/logout` requests we attach an `authenticated` https://quarkus.io/guides/security-authorize-web-endpoints-reference#authorization-using-configuration[HTTP security policy] to this path directly in the configuration."
msgstr "Aquí hemos personalizado la URL del punto final de sesión Auth0 e indicado a Quarkus que una `&lt;a href=\"http://localhost:8080/logout\" class=\"bare\"&gt;http://localhost:8080/logout&lt;/a&gt;` debe provocar el cierre de sesión del usuario autenticado en ese momento. Una cosa interesante sobre la ruta `/logout` es que es `virtual`, no está soportada por ningún método en el endpoint JAX-RS, así que para que Quarkus OIDC pueda reaccionar a las peticiones `/logout` adjuntamos una  link:https://quarkus.io/guides/security-authorize-web-endpoints-reference#authorization-using-configuration[política de seguridad HTTP] `authenticated` a esta ruta directamente en la configuración."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "We also have configured Quarkus to return the logged out user to the public `/hello/post-logout` resource, and this path is included in the logout request as the Auth0 specific `returnTo` query parameter. Finally, the Quarkus application's `client-id` is included in the logout URL as well."
msgstr "También hemos configurado Quarkus para que devuelva al usuario que ha cerrado la sesión al recurso público `/hello/post-logout`, y esta ruta se incluye en la solicitud de cierre de sesión como parámetro de consulta `returnTo` específico de Auth0. Por último, la dirección `client-id` de la aplicación Quarkus también se incluye en la URL de cierre de sesión."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Update the endpoint to accept the post logout redirects:"
msgstr "Actualiza el endpoint para aceptar las redirecciones posteriores al cierre de sesión:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Note the addition of the public `/hello/post-logout` resource method."
msgstr "Observe la adición del método de recurso público `/hello/post-logout`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Before we test the logout, make sure the `Auth0` application is configured to allow this post logout redirect back to Quarkus after the user has been logged out:"
msgstr "Antes de probar el cierre de sesión, asegúrese de que la aplicación `Auth0` está configurada para permitir esta redirección posterior al cierre de sesión de vuelta a Quarkus después de que el usuario haya cerrado la sesión:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now, clear the browser cookie cache, access http://localhost:8080/hello, login to Quarkus with Auth0, get the user name returned, and go to `http://localhost:8080/logout`. You'll see the `You were logged out` message displayed in the browser."
msgstr "Ahora, borre la caché de cookies del navegador, acceda a  http://localhost:8080/hello  inicie sesión en Quarkus con Auth0, obtenga el nombre de usuario devuelto y vaya a `&lt;a href=\"http://localhost:8080/logout\" class=\"bare\"&gt;http://localhost:8080/logout&lt;/a&gt;`. Verás que en el navegador aparece el mensaje `You were logged out`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Next, go to the http://localhost:8080/q/dev/, login to Auth0 from the Dev UI SPA and notice you can now logout from the OIDC Dev UI too, see the symbol representing the logout next to the `Logged in as Sergey Beryozkin` text:"
msgstr "A continuación, vaya a  http://localhost:8080/q/dev/  inicie sesión en Auth0 desde Dev UI SPA y observe que ahora también puede cerrar sesión desde OIDC Dev UI, vea el símbolo que representa el cierre de sesión junto al texto `Logged in as Sergey Beryozkin`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "For the logout to work from OIDC DevUI, the Auth0 application's list of allowed logout callbacks has to be updated to include the OIDC DevUI endpoint:"
msgstr "Para que el cierre de sesión funcione desde OIDC DevUI, la lista de retrollamadas de cierre de sesión permitidas de la aplicación Auth0 debe actualizarse para incluir el punto final de OIDC DevUI:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now logout directly from OIDC Dev UI and login as a new user - add more users to the registered Auth0 application if required."
msgstr "Ahora cierre la sesión directamente desde OIDC Dev UI e inicie sesión como nuevo usuario - añada más usuarios a la aplicación Auth0 registrada si es necesario."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Role-based access control"
msgstr "Control de acceso basado en funciones"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "We have confirmed that the Quarkus endpoint can be accessed by users who have authenticated with the help of `Auth0`."
msgstr "Hemos confirmado que los usuarios que se han autenticado con la ayuda de `Auth0` pueden acceder al punto final de Quarkus."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The next step is to introduce role-based access control (RBAC) to have users in a specific role only, such as `admin`, be able to access the endpoint."
msgstr "El siguiente paso es introducir el control de acceso basado en roles (RBAC) para que sólo los usuarios con un rol específico, como `admin`, puedan acceder al endpoint."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "See also the <<permission-based-access-control>> section below."
msgstr "Consulte también la sección <<permission-based-access-control>> más abajo."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Auth0 tokens do not include any claims containing roles by default, so, first, you must customize the `Login` flow of the `Auth0` application with a custom action which will add the roles to tokens. Select `Actions/Flows/Login` in the `Auth0` dashboard, choose `Add Action/Build Custom`, name it as `AddRoleClaim`:"
msgstr "Los tokens Auth0 no incluyen ninguna reclamación que contenga roles de forma predeterminada, por lo que, en primer lugar, debe personalizar el flujo `Login` de la aplicación `Auth0` con una acción personalizada que añadirá los roles a los tokens. Seleccione `Actions/Flows/Login` en el dashboard de `Auth0`, elija `Add Action/Build Custom`, nómbrelo como `AddRoleClaim`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Add the following action script to it:"
msgstr "Añádele el siguiente script de acción:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Note a custom Auth0 claim has to be namespace qualified, so the claim which will contain roles will be named as \"https://quarkus-security.com/roles\". Have a look at the ID token content we analyzed in the previous sections and you will see how this claim is represented, for example:"
msgstr "Tenga en cuenta que una solicitud Auth0 personalizada debe estar calificada por el espacio de nombres, por lo que la solicitud que contendrá roles se denominará \"https://quarkus-security.com/roles\". Echa un vistazo al contenido del token de ID que analizamos en las secciones anteriores y verás cómo se representa esta reivindicación, por ejemplo:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The `Auth0` Login Flow diagram should look like this now:"
msgstr "El diagrama de flujo de inicio de sesión de `Auth0` debería tener ahora este aspecto:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "You must add a role such as `admin` to the users registered in the `Auth0` application."
msgstr "Debe añadir un rol como `admin` a los usuarios registrados en la aplicación `Auth0`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Create an `admin` role:"
msgstr "Cree una función `admin`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "and add it to the registered user:"
msgstr "y añadirlo al usuario registrado:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Next, update the Quarkus endpoint to require that only users with the `admin` role can access the endpoint:"
msgstr "A continuación, actualice el punto final de Quarkus para que sólo los usuarios con la función `admin` puedan acceder al punto final:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Open http://localhost:8080/hello, authenticate to Auth0 and get `403`. The reason you get `403` is because Quarkus OIDC does not know which claim in the `Auth0` tokens represents the roles information, by default a `groups` claim is checked, while Auth0 tokens are now expected to have an \"https://quarkus-security.com/roles\" claim."
msgstr "Abra  http://localhost:8080/hello  autentifíquese en Auth0 y obtenga `403`. La razón por la que obtienes `403` es porque Quarkus OIDC no sabe qué claim en los tokens `Auth0` representa la información de roles, por defecto se comprueba un claim `groups`, mientras que ahora se espera que los tokens Auth0 tengan un claim \"https://quarkus-security.com/roles\"."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Fix it by telling Quarkus OIDC which claim must be checked to enforce RBAC:"
msgstr "Para solucionarlo, indique a Quarkus OIDC qué reclamación debe comprobarse para aplicar RBAC:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Point to the custom roles claim. The path to the roles claim is in double quotes because the claim is namespace qualified."
msgstr "Apunta a la reivindicación de roles personalizada. La ruta a la reivindicación de roles está entre comillas dobles porque la reivindicación está calificada por el espacio de nombres."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now, clear the browser cookie cache, access http://localhost:8080/hello again, authenticate to Auth0 and get an expected user name."
msgstr "Ahora, borre la caché de cookies del navegador, acceda de nuevo a  http://localhost:8080/hello , autentifíquese en Auth0 y obtenga un nombre de usuario esperado."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Access Quarkus with opaque Auth0 access tokens"
msgstr "Acceso a Quarkus con tokens de acceso opacos Auth0"

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The main goal of this section is to explain how Quarkus can be tuned to accept `opaque` bearer Auth0 access tokens as opposed to Auth0 JWT access tokens because Auth0 access tokens issued during the authorization code flow are opaque by default and they can only be used to request `UserInfo` in addition to the information about the current user which is already available in ID token. Learning how to verify opaque tokens can be useful because many OIDC and OAuth2 providers will issue opaque access tokens only."
msgstr "El objetivo principal de esta sección es explicar cómo Quarkus puede ser ajustado para aceptar `opaque` tokens de acceso Auth0 portadores en lugar de tokens de acceso Auth0 JWT porque los tokens de acceso Auth0 emitidos durante el flujo de código de autorización son opacos por defecto y sólo pueden ser utilizados para solicitar `UserInfo` además de la información sobre el usuario actual que ya está disponible en el token de identificación. Aprender a verificar tokens opacos puede ser útil porque muchos proveedores de OIDC y OAuth2 emitirán tokens de acceso opacos solamente."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "For more information on how to configure Auth0 and Quarkus to have authorization code access tokens issued in the JWT format and propagated to service endpoints, see the following <<token-propagation>> and <<jwt-access-tokens>> sections."
msgstr "Para más información sobre cómo configurar Auth0 y Quarkus para que los tokens de acceso al código de autorización se emitan en formato JWT y se propaguen a los puntos finales de servicio, consulte las siguientes secciones <<token-propagation>> y <<jwt-access-tokens>> ."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "So far we have only tested the Quarkus endpoint using OIDC authorization code flow. In this flow you use the browser to access the Quarkus endpoint, Quarkus itself manages the authorization code flow, a user is redirected to Auth0, logs in, is redirected back to Quarkus, Quarkus completes the flow by exchanging the code for the ID, access, and refresh tokens, and works with the ID token representing the successful user authentication. The access token is not relevant at the moment. As mentioned earlier, in the authorization code flow, Quarkus will only use the access token to access downstream services on behalf of the currently authenticated user."
msgstr "Hasta ahora sólo hemos probado el endpoint de Quarkus usando el flujo de código de autorización OIDC. En este flujo se utiliza el navegador para acceder al endpoint de Quarkus, el propio Quarkus gestiona el flujo de código de autorización, un usuario es redirigido a Auth0, inicia sesión, es redirigido de nuevo a Quarkus, Quarkus completa el flujo intercambiando el código para los tokens de ID, acceso y actualización, y trabaja con el token de ID que representa la autenticación exitosa del usuario. El token de acceso no es relevante en este momento. Como se mencionó anteriormente, en el flujo de código de autorización, Quarkus sólo utilizará el token de acceso para acceder a los servicios posteriores en nombre del usuario autenticado en ese momento."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Let's imagine though that the Quarkus endpoint we have developed has to accept `Bearer` access tokens too: it may be that the other Quarkus endpoint which is propagating it to this endpoint or it can be SPA which uses the access token to access the Quarkus endpoint. And Quarkus OIDC DevUI SPA which we already used to analyze the ID token fits perfectly for using the access token available to SPA to test the Quarkus endpoint."
msgstr "Pero imaginemos que el punto final de Quarkus que hemos desarrollado también tiene que aceptar los tokens de acceso de `Bearer` : puede ser el otro punto final de Quarkus el que lo propague a este punto final o puede ser SPA el que utilice el token de acceso para acceder al punto final de Quarkus. Y Quarkus OIDC DevUI SPA que ya hemos utilizado para analizar el token de identificación encaja perfectamente para utilizar el token de acceso a disposición de SPA para probar el punto final de Quarkus."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Let's go again to http://localhost:8080/q/dev-ui, select the `OpenId Connect` card, login to Auth0, and check the Access token content:"
msgstr "Vayamos de nuevo a link:http://localhost:8080/q/dev-ui[http://localhost:8080/q/dev-ui,] seleccionemos la tarjeta `OpenId Connect` , iniciemos sesión en Auth0 y comprobemos el contenido del token de acceso:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "This access token, as opposed to the ID token we looked at earlier, cannot be verified by Quarkus directly. This is because the access token is in `JWE` (encrypted) as opposed to `JWS` (signed) format. You can see from the decoded token headers that it has been encrypted directly with a secret key known to Auth0 only, and therefore its content cannot be decrypted by Quarkus. From the Quarkus's perspective this access token is an `opaque` one, Quarkus cannot use public Auth0 asymmetric verification keys to verify it."
msgstr "Este token de acceso, a diferencia del token de identificación que vimos antes, no puede ser verificado directamente por Quarkus. Esto se debe a que el token de acceso está en formato `JWE` (cifrado) en lugar de `JWS` (firmado). Se puede ver en las cabeceras decodificadas del token que ha sido encriptado directamente con una clave secreta conocida sólo por Auth0, y por lo tanto su contenido no puede ser desencriptado por Quarkus. Desde la perspectiva de Quarkus este token de acceso es un `opaque`, Quarkus no puede usar claves de verificación asimétricas públicas de Auth0 para verificarlo."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "To confirm it, enter `/hello` as the `Service Address` in the `Test Service` area and press `With Access Token` and you will get the HTTP `401` status:"
msgstr "Para confirmarlo, introduzca `/hello` como `Service Address` en el área `Test Service` y pulse `With Access Token` y obtendrá el estado HTTP `401`:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"For Quarkus be able to accept such access tokens, one of the two options should be available.\n"
"The first option is to introspect the opaque token remotely using a provider's introspection endpoint. Token introspection is typically supported at the `OAuth2` level, and since `OIDC` is built on top of `OAuth2`, some OIDC providers such as Keycloak support the token introspection as well. However, Auth0 does not support the token introspection, you can check it by looking at the publicly available Auth0 metadata, add `/.well-known/openid-configuration` to the address of your configured Auth0 provider, and open the resulting URL, `https://dev-3ve0cgn7.us.auth0.com/.well-known/openid-configuration`. You will see that Auth0 does not have an introspection endpoint:"
msgstr "Para que Quarkus pueda aceptar dichos tokens de acceso, debe disponer de una de las dos opciones. La primera opción es introspeccionar el token opaco de forma remota utilizando el punto final de introspección de un proveedor. La introspección de tokens suele estar soportada en el nivel `OAuth2` , y dado que `OIDC` está construido sobre `OAuth2` , algunos proveedores de OIDC como Keycloak también soportan la introspección de tokens. Sin embargo, Auth0 no soporta la introspección de tokens, puede comprobarlo mirando los metadatos de Auth0 disponibles públicamente, añada `/.well-known/openid-configuration` a la dirección de su proveedor Auth0 configurado y abra la URL resultante, `https://dev-3ve0cgn7.us.auth0.com/.well-known/openid-configuration` . Verá que Auth0 no tiene un punto final de introspección:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Therefore the other option, indirect access token verification, where the access token is used to acquire `UserInfo` from Auth0 can be used to accept and verify opaque Auth0 tokens. This option works because OIDC providers have to verify access tokens before they can issue `UserInfo` and Auth0 has a `UserInfo` endpoint."
msgstr "Por lo tanto, la otra opción, la verificación indirecta de tokens de acceso, en la que el token de acceso se utiliza para adquirir `UserInfo` de Auth0 puede utilizarse para aceptar y verificar tokens opacos de Auth0. Esta opción funciona porque los proveedores de OIDC tienen que verificar los tokens de acceso antes de poder emitir `UserInfo` y Auth0 tiene un punto final `UserInfo`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "So lets configure Quarkus to request that the access tokens must be verified by using them to acquire `UserInfo`:"
msgstr "Así que vamos a configurar Quarkus para solicitar que los tokens de acceso deben ser verificados mediante el uso de ellos para adquirir `UserInfo`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Verify access tokens indirectly by using them to request `UserInfo`."
msgstr "Verifique los tokens de acceso indirectamente utilizándolos para solicitar `UserInfo`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Update the endpoint code to expect `UserInfo` as opposed to `ID token`:"
msgstr "Actualice el código del punto final para esperar `UserInfo` en lugar de `ID token`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "This code will now work both for the authorization code and bearer access token flows."
msgstr "Este código funcionará ahora tanto para el código de autorización como para los flujos de token de acceso al portador."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Let's go to the OIDC Dev UI where we looked at the access token, enter `/hello` as the `Service Address` in the `Test Service` area and press `With Access Token` and you will get `200`:"
msgstr "Vayamos a la OIDC Dev UI donde vimos el token de acceso, introduzca `/hello` como `Service Address` en el área `Test Service` y pulse `With Access Token` y obtendrá `200`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "To confirm that it really does work, update the test endpoint to allow a `user` role only with `@RolesAllowed(\"user\")`. Try to access the endpoint from OIDC Dev UI again, and you will get the HTTP `403` error. Revert the code back to `@RolesAllowed(\"admin\")` to get the reassuring HTTP `200` status again."
msgstr "Para confirmar que realmente funciona, actualice el endpoint de prueba para permitir un rol `user` sólo con `@RolesAllowed(\"user\")`. Intente acceder de nuevo al endpoint desde OIDC Dev UI y obtendrá el error HTTP `403`. Revierta el código a `@RolesAllowed(\"admin\")` para volver a obtener el estado HTTP `200`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "When verifying the opaque access token indirectly, by using it to request `UserInfo`, Quarkus will use `UserInfo` as the source of the roles information, if any. As it happens, Auth0 includes the custom role claim which was created earlier in the `UserInfo` response as well."
msgstr "Al verificar el token de acceso opaco de forma indirecta, utilizándolo para solicitar `UserInfo`, Quarkus utilizará `UserInfo` como fuente de información de los roles, si los hubiera. Resulta que Auth0 incluye también en la respuesta `UserInfo` la reivindicación de rol personalizada que se creó anteriormente."

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "As has already been mentioned in the introduction to this section, the main goal of this section is to explain how Quarkus can verify opaque access tokens. In general, propagating access tokens whose only purpose is to allow retrieving `UserInfo` to services should be avoided unless the front-end JAX-RS endpoint or SPA prefers to delegate UserInfo retrieval to the trusted service."
msgstr "Como ya se ha mencionado en la introducción a esta sección, el objetivo principal de esta sección es explicar cómo Quarkus puede verificar tokens de acceso opacos. En general, la propagación de tokens de acceso cuyo único propósito es permitir la recuperación de `UserInfo` a los servicios debe evitarse a menos que el frontend JAX-RS endpoint o SPA prefiera delegar la recuperación de UserInfo al servicio de confianza."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "For a recommended approach of working with Auth0 access tokens, see the following <<token-propagation>> and <<jwt-access-tokens>> sections."
msgstr "Para un enfoque recomendado de trabajo con los tokens de acceso Auth0, consulte las siguientes secciones <<token-propagation>> y <<jwt-access-tokens>> ."

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Typically one uses access tokens to access remote services but OIDC DevUI SPA dashboard also offers an option to test with the ID token. This option is only available to emulate the cases where SPA delegates to the endpoint to verify and retrieve some information from the ID token for SPA to use - but ID token will still be sent to the endpoint as Bearer token by OIDC DevUI. Prefer testing with the access token in most cases."
msgstr "Típicamente uno usa tokens de acceso para acceder a servicios remotos pero el tablero OIDC DevUI SPA también ofrece una opción para probar con el token ID. Esta opción sólo está disponible para emular los casos en que SPA delega en el endpoint para verificar y recuperar alguna información del token de ID para que SPA la utilice - pero el token de ID seguirá siendo enviado al endpoint como token Bearer por OIDC DevUI. Prefiero probar con el token de acceso en la mayoría de los casos."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"You can use SwaggerUI or GraphQL from OIDC DevUI for testing the service, instead of manually entering the service path to test.\n"
"For example, if you add"
msgstr "Puede utilizar SwaggerUI o GraphQL de OIDC DevUI para probar el servicio, en lugar de introducir manualmente la ruta del servicio a probar. Por ejemplo, si añade"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "to your application's pom then you will see a Swagger link in OIDC Dev UI:"
msgstr "al pom de su aplicación, entonces verá un enlace Swagger en OIDC Dev UI:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Click the Swagger link and start testing the service."
msgstr "Haz clic en el enlace Swagger y empieza a probar el servicio."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Propagate access tokens to microservices"
msgstr "Propagar tokens de acceso a microservicios"

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now that we have managed to use OIDC authorization code flow and used both ID token and UserInfo to access the user information, the next typical task is to propagate the current Auth0 access token to access the downstream service on behalf of the currently authenticated user."
msgstr "Ahora que hemos conseguido utilizar el flujo de código de autorización OIDC y hemos utilizado tanto ID token como UserInfo para acceder a la información del usuario, la siguiente tarea típica es propagar el token de acceso Auth0 actual para acceder al servicio descendente en nombre del usuario autenticado actualmente."

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "In fact, the last code example, showing the injected `UserInfo`, is a concrete example of the access token propagation, in this case, Quarkus propagates the Auth0 access token to the Auth0 `UserInfo` endpoint to acquire `UserInfo`. Quarkus does it without users having to do anything themselves."
msgstr "De hecho, el último ejemplo de código, que muestra el inyectado `UserInfo`, es un ejemplo concreto de la propagación del token de acceso, en este caso, Quarkus propaga el token de acceso Auth0 al endpoint Auth0 `UserInfo` para adquirir `UserInfo`. Quarkus lo hace sin que los usuarios tengan que hacer nada por sí mismos."

#: _guides/security-oidc-auth0-tutorial.adoc
msgid "But what about propagating access tokens to some custom services ? It is very easy to achieve in Quarkus, both for the authorization code and bearer token flows. All you need to do is to create a REST Client interface for calling the service requiring a Bearer token access and annotate it with `@AccessToken` and the access token arriving to the front-end endpoint as the Auth0 Bearer access token or acquired by Quarkus after completing the Auth0 authorization code flow, will be propagated to the target microservice. This is as easy as it can get."
msgstr ""

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"For examples of propagating access tokens, see the following sections in this tutorial.\n"
"For more information about token propagation, see xref:security-openid-connect-client-reference.adoc#reactive-token-propagation[OIDC token propagation]."
msgstr "Para ver ejemplos de propagación de tokens de acceso, consulte las siguientes secciones de este tutorial. Para más información sobre la propagación de tokens, consulte xref:security-openid-connect-client-reference.adoc#reactive-token-propagation[Propagación de tokens OIDC] ."

#. type: Title ===
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Access tokens in JWT format"
msgstr "Tokens de acceso en formato JWT"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "We have already looked in detail at how Quarkus OIDC can handle <<opaque-access-tokens>>, but we don't want to propagate Auth0 opaque tokens to micro services which do something useful on behalf on the currently authenticated user, beyond checking its UserInfo."
msgstr "Ya hemos visto en detalle cómo Quarkus OIDC puede gestionar <<opaque-access-tokens>> , pero no queremos propagar tokens opacos Auth0 a microservicios que hagan algo útil en nombre del usuario autenticado en ese momento, más allá de comprobar su UserInfo."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "A microservice which the front-end Quarkus application will access by propagating authorization code flow access tokens to it is represented in the Auth0 dashboard as an `API`. Let's add it in the `Applications/APIs`:"
msgstr "Un microservicio al que la aplicación front-end Quarkus accederá propagándole tokens de acceso de flujo de código de autorización se representa en el cuadro de mandos Auth0 como un `API` . Vamos a añadirlo en el `Applications/APIs` :"

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The `https://quarkus-auth0` identifier of the created `QuarkusAuth0API` will serve as this API's `audience`. Providing this audience as a query parameter in the authorization code flow redirect to Auth0 will ensure that Auth0 issues access tokens in the JWT format."
msgstr "El identificador `&lt;a href=\"https://quarkus-auth0\" class=\"bare\"&gt;https://quarkus-auth0&lt;/a&gt;` identificador del `QuarkusAuth0API` creado servirá como `audience` de esta API. Proporcionar esta audiencia como parámetro de consulta en la redirección del flujo del código de autorización a Auth0 garantizará que Auth0 emita tokens de acceso en el formato JWT."

#. type: Title ===
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "API microservice"
msgstr "Microservicio API"

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Add the following dependencies to the project to support OIDC token propagation and REST clients:"
msgstr "Añade las siguientes dependencias al proyecto para soportar la propagación de tokens OIDC y clientes REST:"

#. type: Block title
#: _guides/security-oidc-auth0-tutorial.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Create `ApiEchoService` service class:"
msgstr "Cree la clase de servicio `ApiEchoService`:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"And configure it as an OIDC `service` application which will only fetch public verification keys from Auth0.\n"
"The configuration for this microservice should only have a single line:"
msgstr "Y configúrelo como una aplicación OIDC `service` que sólo obtendrá claves públicas de verificación de Auth0. La configuración de este microservicio solo debe tener una línea:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "which is all what is needed for the OIDC `service` application to fetch Auth0 public verification keys and use them to verify Auth0 access tokens in JWT format."
msgstr "que es todo lo que se necesita para que la aplicación OIDC `service` recupere las claves públicas de verificación Auth0 y las utilice para verificar los tokens de acceso Auth0 en formato JWT."

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "In this tutorial you have already configured the OIDC `hybrid` application which can handle both authorization code and bearer token authentication flows. In production you will run microservices as separate servers but for the sake of simplicity `ApiEchoService` will not have to be started as a second server with its own configuration containing `quarkus.oidc.auth-server-url=https://dev-3ve0cgn7.us.auth0.com` only, and therefore the current configuration which already has the Auth0 dev tenant address configured will be reused."
msgstr "En este tutorial ya has configurado la aplicación OIDC `hybrid` que puede manejar flujos de autenticación tanto de código de autorización como de token de portador. En producción ejecutarás microservicios como servidores separados pero por simplicidad `ApiEchoService` no tendrá que ser iniciado como un segundo servidor con su propia configuración conteniendo `quarkus.oidc.auth-server-url=https://dev-3ve0cgn7.us.auth0.com` solamente, y por lo tanto la configuración actual que ya tiene la dirección dev tenant Auth0 configurada será reutilizada."

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The `hybrid` OIDC application type will ensure that `http://localhost:8080/hello` requests to `GreetingResource` initiate an Authorization code flow while `http://localhost:8080/echo` requests to `ApiEchoService`, initiated by `GreetingResource`, will lead to the authorization code flow tokens being propagated and accepted by `ApiEchoService` as bearer JWT access tokens."
msgstr "El tipo de aplicación `hybrid` OIDC garantizará que `&lt;a href=\"http://localhost:8080/hello\" class=\"bare\"&gt;http://localhost:8080/hello&lt;/a&gt;` las solicitudes a `GreetingResource` inicien un flujo de código de autorización mientras que `&lt;a href=\"http://localhost:8080/echo\" class=\"bare\"&gt;http://localhost:8080/echo&lt;/a&gt;` las solicitudes a `ApiEchoService`, iniciadas por `GreetingResource`, conducirán a que los tokens de flujo de código de autorización sean propagados y aceptados por `ApiEchoService` como tokens de acceso JWT portadores."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Next, add a REST client interface representing `ApiEchoService`:"
msgstr "A continuación, añada una interfaz de cliente REST que represente a `ApiEchoService`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Propagate access token as an HTTP `Authorization: Bearer accesstoken` header"
msgstr "Propagar el token de acceso como cabecera HTTP `Authorization: Bearer accesstoken`"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "And update the configuration for the Quarkus front-end application, `GreetingResource`, which has been created earlier, to request that an authorization code flow access token (as opposed to ID token) includes an `aud` (audience) claim targeting `ApiEchoService`, as well as configure the base URL for the `ApiEchoService` REST client:"
msgstr "Y actualizar la configuración para la aplicación frontend de Quarkus, `GreetingResource`, que se ha creado anteriormente, para solicitar que un token de acceso de flujo de código de autorización (en lugar de token de ID) incluya una reclamación `aud` (audiencia) dirigida a `ApiEchoService`, así como configurar la URL base para el cliente REST `ApiEchoService`:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"Pass an extra `audience` query parameter to the Auth0 authorization endpoint during the authorization code flow redirect from Quarkus to Auth0.\n"
"It will ensure that the access token is issued in the JWT format and includes an `aud` (audience) claim which will contain `https://quarkus-auth0`."
msgstr "Pase un parámetro de consulta `audience` adicional al punto final de autorización Auth0 durante la redirección del flujo del código de autorización desde Quarkus a Auth0. Se asegurará de que el token de acceso se emita en el formato JWT e incluya una reclamación `aud` (audiencia) que contendrá `https://quarkus-auth0` ."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Point `ApiEchoServiceClient` to the `ApiEchoService` endpoint. HTTP port in the `org.acme.ApiEchoServiceClient/mp-rest/url=http://localhost:${port}` property is parameterized to ensure the correct URL is built while using the dev, test and prod modes."
msgstr "Apunta `ApiEchoServiceClient` al endpoint `ApiEchoService`. El puerto HTTP de la propiedad `org.acme.ApiEchoServiceClient/mp-rest/url=http://localhost:${port}` está parametrizado para garantizar que se construye la URL correcta en los modos dev, test y prod."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Finally update `GreetingResource` to request that `ApiEchoService` echoes a user name:"
msgstr "Por último, actualice `GreetingResource` para solicitar que `ApiEchoService` se haga eco de un nombre de usuario:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Inject `ApiEchoServiceClient` REST client"
msgstr "Inyecte `ApiEchoServiceClient` cliente REST"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Use `ApiEchoServiceClient` to echo the user name."
msgstr "Utilice `ApiEchoServiceClient` para hacer eco del nombre de usuario."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Open a browser, access http://localhost:8080/hello and get your name displayed in the browser."
msgstr "Abre un navegador, accede a  http://localhost:8080/hello  y haz que aparezca tu nombre en el navegador."

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Let's go to http://localhost:8080/q/dev-ui, select the `OpenId Connect` card, login to Auth0, and check the Access token content:"
msgstr "Vayamos a link:http://localhost:8080/q/dev-ui[http://localhost:8080/q/dev-ui,] seleccionemos la tarjeta `OpenId Connect` , iniciemos sesión en Auth0 y comprobemos el contenido del token de acceso:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "As you can see, the access token is no longer encrypted as shown in the <<opaque-access-tokens>> section and indeed it is in the JWT format now."
msgstr "Como puede ver, el token de acceso ya no está encriptado como se muestra en la sección <<opaque-access-tokens>> y, de hecho, ahora está en formato JWT."

#. type: Title ===
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Permission Based Access Control"
msgstr "Control de acceso basado en permisos"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "We have discussed in the <<role-based-access-control>> section how to get Quarkus to check a namespace qualified claim containing user roles and use this information to enforce role-based access control. You have configured Auth0 to add the custom roles claim to both ID and access tokens."
msgstr "Hemos discutido en la sección <<role-based-access-control>> cómo conseguir que Quarkus compruebe una reivindicación cualificada de espacio de nombres que contenga roles de usuario y utilice esta información para hacer cumplir el control de acceso basado en roles. Ha configurado Auth0 para que añada la reivindicación de roles personalizados tanto al ID como a los tokens de acceso."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "However, Permission Based Access Control is better suited to the case where an access token is propagated by the front-end endpoint to a microservice which will check if a given access token has been authorized for this service to perform a concrete action, as opposed to this token vouching for a user be in a specific role. For example, being in the admin role does not necessarily mean the user is allowed to have a read and write access to some of this microservice's content."
msgstr "Sin embargo, el Control de Acceso Basado en Permisos se adapta mejor al caso en el que un token de acceso es propagado por el punto final del frontend a un microservicio que comprobará si un token de acceso dado ha sido autorizado para que este servicio realice una acción concreta, en contraposición a que este token avale que un usuario está en un rol específico. Por ejemplo, estar en el rol de administrador no significa necesariamente que el usuario esté autorizado a tener acceso de lectura y escritura a algunos de los contenidos de este microservicio."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Let's see how Permission Based Access Control constraints can be applied to `ApiEchoService`."
msgstr "Veamos cómo pueden aplicarse las restricciones del control de acceso basado en permisos a `ApiEchoService`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Go to the Auth0 dashboard, add an `echo:name` permission to the `QuarkusAuth0API` API:"
msgstr "Vaya al panel de Auth0, añada un permiso `echo:name` a la API `QuarkusAuth0API`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The `echo:name` permission will be included in the access token as a standard OAuth2 `scope` claim value if this scope will also be requested during the authorization code flow. Update the configuration as follows:"
msgstr "El permiso `echo:name` se incluirá en el token de acceso como un valor de reclamación estándar de OAuth2 `scope` si este ámbito también se solicitará durante el flujo de código de autorización. Actualice la configuración como se indica a continuación:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "An extra `echo:name` scope will be requested during the authorization code flow."
msgstr "Se solicitará un ámbito adicional `echo:name` durante el flujo del código de autorización."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now update `ApiEchoService` to enforce Permission Based Access Control:"
msgstr "Ahora actualice `ApiEchoService` para aplicar el Control de acceso basado en permisos:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "This is all what is needed as Quarkus OIDC automatically associates `scope` claim values as permissions with the current security identity."
msgstr "Esto es todo lo que se necesita, ya que Quarkus OIDC asocia automáticamente los valores de reclamación `scope` como permisos con la identidad de seguridad actual."

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "You can enforce both Role Based and Permission Based Access Controls in Quarkus by combining `@RolesAllowed` and `@PermissionsAllowed` annotations."
msgstr "En Quarkus se pueden aplicar controles de acceso basados tanto en funciones como en permisos combinando las anotaciones `@RolesAllowed` y `@PermissionsAllowed`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Open a browser, access http://localhost:8080/hello and get the name displayed in the browser."
msgstr "Abra un navegador, acceda a  http://localhost:8080/hello  y obtenga el nombre que aparece en el navegador."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "To confirm the permission is correctly enforced, change it to `echo.name`: `@PermissionsAllowed(\"echo.name\")`. Clear the browser cache, access http://localhost:8080/hello again and you will get `403` reported by `ApiEchoService`. Now revert it back to `@PermissionsAllowed(\"echo:name\")`."
msgstr "Para confirmar que el permiso se aplica correctamente, cámbielo por `echo.name`: `@PermissionsAllowed(\"echo.name\")`. Borre la caché del navegador, acceda de nuevo a  http://localhost:8080/hello  y obtendrá `403` reportado por `ApiEchoService`. Ahora vuelva a `@PermissionsAllowed(\"echo:name\")`."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Integration testing"
msgstr "Pruebas de integración"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "You have already used OIDC DevUI SPA to login to Auth0 and test the Quarkus endpoint with the access token, updating the endpoint code along the way."
msgstr "Ya ha utilizado OIDC DevUI SPA para iniciar sesión en Auth0 y probar el punto final Quarkus con el token de acceso, actualizando el código del punto final en el camino."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "However, running tests is also essential, lets see how we can test the endpoint and configuration which you have developed during the course of this tutorial, using xref:continuous-testing.adoc[Quarkus Continuous Testing] feature."
msgstr "Sin embargo, la ejecución de pruebas también es esencial, vamos a ver cómo podemos probar el punto final y la configuración que se han desarrollado durante el curso de este tutorial, utilizando  link:continuous-testing.html[Quarkus Continuous Testing] característica."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Start with the following test code :"
msgstr "Comience con el siguiente código de prueba :"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "If you recall, when the application was started in dev mode, the following could be seen in the CLI window:"
msgstr "Si recuerda, cuando la aplicación se iniciaba en modo dev, en la ventana CLI podía verse lo siguiente:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Press `r` and notice this test failing with `403` which is expected because the test does not send a token to the endpoint:"
msgstr "Pulse `r` y observe que esta prueba falla con `403`, lo cual es de esperar porque la prueba no envía un token al endpoint:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Before fixing the test, let's review the options available for testing Quarkus endpoints secured by OIDC. These options might vary, depending on which flow your application supports and how you prefer to test. Endpoints which use OIDC authorization code flow can be tested using xref:security-oidc-code-flow-authentication#integration-testing[one of these options] and endpoints which use Bearer token authentication can be tested using xref:security-oidc-bearer-token-authentication#integration-testing[one of these options]."
msgstr "Antes de fijar la prueba, revisemos las opciones disponibles para probar los puntos finales de Quarkus asegurados por OIDC. Estas opciones pueden variar dependiendo de qué flujo soporta su aplicación y cómo prefiere probar. Los puntos finales que utilizan flujo de código de autorización OIDC pueden probarse utilizando  link:security-oidc-code-flow-authentication.html#integration-testing[una] de  link:security-oidc-bearer-token-authentication.html#integration-testing[estas opciones] y los puntos finales que utilizan autenticación de token de portador pueden probarse utilizando  link:security-oidc-bearer-token-authentication.html#integration-testing[una de estas] opciones."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "As you can see, testing of the endpoints secured with Auth0 can be done with the help of `Wiremock`, or `@TestSecurity` annotation. Experiment with writing such tests on your own and reach out if you encounter any problems."
msgstr "Como puede ver, las pruebas de los endpoints asegurados con Auth0 pueden realizarse con la ayuda de `Wiremock`, o `@TestSecurity` annotation. Por favor, experimenta escribiendo estas pruebas por tu cuenta y contacta con nosotros si encuentras algún problema."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "In this tutorial though, we will use a recently added `OidcTestClient` to support testing endpoints which use live Auth0 development tenants."
msgstr "En este tutorial, sin embargo, vamos a utilizar un `OidcTestClient` recientemente añadido para soportar endpoints de prueba que utilizan inquilinos de desarrollo Auth0 en vivo."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Here is a related fragment of the configuration:"
msgstr "He aquí un fragmento relacionado de la configuración:"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "In production, you will distinguish between prod and test level configuration with `%prod.` and `%test.` qualifiers. Let's assume that the above configuration will indeed be prefixed with `%test.` in your real application, with this configuration also including the `%prod.` qualified Auth0 production tenant configuration."
msgstr "En producción, distinguirá entre la configuración a nivel de producción y de prueba con los calificadores `%prod.` y `%test.` . Supongamos que la configuración anterior llevará efectivamente el prefijo `%test.` en su aplicación real, y que esta configuración incluye también la configuración del inquilino de producción Auth0 con el calificador `%prod.` ."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Using `OidcTestClient` to test such configuration requires acquiring a token from the Auth0 dev tenant, using either OAuth2 `password` or `client_credentials` grant, we will try a `password` grant. Make sure the application registered in the Auth0 dashboard allows the `password` grant:"
msgstr "Usar `OidcTestClient` para probar dicha configuración requiere adquirir un token del Auth0 dev tenant, usando una concesión OAuth2 `password` o `client_credentials`, nosotros probaremos una concesión `password`. Asegúrate de que la aplicación registrada en el panel de Auth0 permite la concesión `password`:"

#. type: delimited block =
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "It is important to clarify that we do not recommend using the deprecated OAuth2 `password` token grant in production. However using it can help testing the endpoint with tokens acquired from the live dev Auth0 tenant."
msgstr "Es importante aclarar que no recomendamos utilizar la concesión de tokens obsoleta de OAuth2 `password` en producción. Sin embargo, su uso puede ayudar a probar el endpoint con tokens adquiridos del tenant dev Auth0 en vivo."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "`OidcTestClient` should be used to test applications accepting bearer tokens which will work for the endpoint developed in this tutorial as it supports both authorization code flow and bearer token authentication. You would need to use OIDC WireMock or `HtmlUnit` directly against the Auth0 dev tenant if only the authorization code flow was supported - in the latter case `HtmlUnit` test code would have to be aligned with how Auth0 challenges users to enter their credentials. If you like, you can copy the xref:security-oidc-code-flow-authentication#integration-testing-wiremock[HtmlUnit test fragment] from the documentation and experiment with it."
msgstr "`OidcTestClient` debería usarse para probar aplicaciones que aceptan tokens de portador que funcionarán para el endpoint desarrollado en este tutorial ya que soporta tanto el flujo de código de autorización como la autenticación de token de portador. Tendrías que usar OIDC WireMock o `HtmlUnit` directamente contra el Auth0 dev tenant si sólo el flujo de código de autorización fuera soportado - en este último caso `HtmlUnit` el código de prueba tendría que estar alineado con cómo Auth0 desafía a los usuarios a introducir sus credenciales - por favor copia y pega un  link:security-oidc-code-flow-authentication.html#integration-testing-wiremock[fragmento de prueba HtmlUnit] de la documentación y experimenta si quieres."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "In meantime we will now proceed with fixing the currently failing test using `OidcTestClient`."
msgstr "Mientras tanto, procederemos a reparar la prueba que falla actualmente utilizando `OidcTestClient`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "First you must add the following dependency:"
msgstr "Primero debe añadir la siguiente dependencia:"

#. type: Block title
#: _guides/security-oidc-auth0-tutorial.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "which provides a utility class `io.quarkus.test.oidc.client.OidcTestClient` which can be used in tests for acquiring access tokens (This dependency also offers an OIDC WireMock support - review the documentation how to use it for testing if you want)."
msgstr "que proporciona una clase de utilidad `io.quarkus.test.oidc.client.OidcTestClient` que se puede utilizar en las pruebas para la adquisición de tokens de acceso (Esta dependencia también ofrece un soporte OIDC WireMock - por favor revise la documentación de cómo utilizarlo para las pruebas si lo desea)."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Now update the test code like this:"
msgstr "Ahora actualiza el código de prueba así:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "`OidcTestClient` is used to acquire an access token, using one of the registered user's name and password, as well as the `audience` and `scope` parameters."
msgstr "`OidcTestClient` se utiliza para adquirir un token de acceso, utilizando uno de los nombres y contraseñas del usuario registrado, así como los parámetros `audience` y `scope`."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "`OidcTestClient` will itself find out the `Auth0` token endpoint address, client id and secret."
msgstr "`OidcTestClient` averiguará por sí mismo la dirección del punto final del token `Auth0`, el identificador del cliente y el secreto."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Press `r` again and have the test passing:"
msgstr "Vuelva a pulsar `r` y pase la prueba:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "By the way, if you like, you can run the tests in Continuous mode directly from DevUI:"
msgstr "Por cierto, si quieres puedes ejecutar las pruebas en modo continuo directamente desde DevUI:"

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Production mode"
msgstr "Modo de producción"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"You have developed and tested the Quarkus endpoint secured with Auth0 in the development mode.\n"
"The next step is to run your application in the production mode.\n"
"Choose between JVM and native modes."
msgstr "Ha desarrollado y probado el punto final de Quarkus asegurado con Auth0 en el modo de desarrollo. El siguiente paso es ejecutar su aplicación en el modo de producción. Elija entre los modos JVM y nativo."

#. type: Title ===
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Run the Application in JVM mode"
msgstr "Ejecutar la aplicación en modo JVM"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Compile the application:"
msgstr "Compila la aplicación:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Run the application:"
msgstr "Ejecuta la aplicación:"

#. type: Title ===
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Run the application in native mode"
msgstr "Ejecutar la aplicación en modo nativo"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"You can compile this same demo into native mode without needing any modifications.\n"
"This implies that you no longer need to install a JVM on your production environment.\n"
"The runtime technology is included in the produced binary and optimized to run with minimal resources required."
msgstr "Puede compilar esta misma demo en modo nativo sin necesidad de realizar ninguna modificación. Esto implica que ya no necesita instalar una JVM en su entorno de producción. La tecnología de tiempo de ejecución está incluida en el binario producido y optimizada para ejecutarse con los mínimos recursos necesarios."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Compilation takes a bit longer, so this step is disabled by default."
msgstr "La compilación tarda un poco más, por lo que este paso está desactivado por defecto."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Build your application again by enabling the `native` profile:"
msgstr "Vuelva a crear su aplicación activando el perfil `native`:"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Next run the following binary directly:"
msgstr "A continuación, ejecute directamente el siguiente binario:"

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Troubleshooting"
msgstr "Solución de problemas"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "The steps described in this tutorial should work exactly as the tutorial describes. You might have to clear the browser cookies when accessing the updated Quarkus endpoint if you have already completed the authentication. You might need to restart the Quarkus application manually in dev mode but it is not expected. If you need help completing this tutorial, you can get in touch with the Quarkus team."
msgstr "Los pasos descritos en este tutorial deberían funcionar exactamente como el tutorial describe. Es posible que tenga que borrar las cookies del navegador cuando acceda al punto final actualizado de Quarkus si ya ha completado la autenticación. Puede que tenga que reiniciar manualmente la aplicación Quarkus en modo dev, pero no es lo esperado. Si necesita ayuda para completar este tutorial, puede ponerse en contacto con el equipo de Quarkus."

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumen"

#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid ""
"This tutorial demonstrated how Quarkus endpoints can be secured with the `quarkus-oidc` extension and Auth0 using Authorization code and Bearer token authentication flows, with both flows being supported by the same endpoint code.\n"
"Without writing a single line of code, you have added support for the custom Auth0 logout flow and enabled role-based access control with a custom Auth0 namespace qualified claim.\n"
"Token propagation from the front-end endpoint to the microservice endpoint has been achieved by adding the `@AccessToken` annotation to the microservice REST client.\n"
"Microservice endpoint activated the permission-based access control with the `@PermissionsAllowed` annotation.\n"
"You used Quarkus dev mode to update the code and configuration without restarting the endpoint, and you also used the OIDC Dev UI to visualize and test Auth0 tokens.\n"
"You used the continuous testing feature of Quarkus to complement OIDC Dev UI tests with integration tests against the live Auth0 development tenant.\n"
"Finally, you have run the application in JVM and native modes."
msgstr "Este tutorial ha demostrado cómo se pueden asegurar los puntos finales de Quarkus con la extensión `quarkus-oidc` y Auth0 utilizando el código de autorización y los flujos de autenticación con token de portador, siendo ambos flujos compatibles con el mismo código de punto final. Sin escribir una sola línea de código, se ha añadido soporte para el flujo de cierre de sesión personalizado de Auth0 y se ha habilitado el control de acceso basado en roles con un reclamo calificado de espacio de nombres personalizado de Auth0. La propagación de tokens desde el punto final del front-end al punto final del microservicio se ha logrado añadiendo la anotación `@AccessToken` al cliente REST del microservicio. El punto final de microservicio ha activado el control de acceso basado en permisos con la anotación `@PermissionsAllowed` . Ha utilizado el modo dev de Quarkus para actualizar el código y la configuración sin reiniciar el endpoint, y también ha utilizado la Dev UI de OIDC para visualizar y probar los tokens Auth0. Ha utilizado la función de pruebas continuas de Quarkus para complementar las pruebas de OIDC Dev UI con pruebas de integración contra el inquilino de desarrollo Auth0 en vivo. Por último, ha ejecutado la aplicación en los modos JVM y nativo."

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "Enjoy!"
msgstr "¡Que aproveche!"

#. type: Title ==
#: _guides/security-oidc-auth0-tutorial.adoc
#, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
"xref:security-overview.adoc\n"
"[Visión general de Quarkus Security]"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "link:security-oidc-code-flow-authentication-concept.html[Mecanismo de flujo de código OIDC para proteger las aplicaciones web]"

#. type: Plain text
#: _guides/security-oidc-auth0-tutorial.adoc
#, fuzzy
msgid "xref:security-openid-connect-providers.adoc[Configuring well-known OpenID Connect providers]"
msgstr "xref:security-openid-connect-providers.adoc[Configuración de proveedores de OpenID Connect conocidos]"
