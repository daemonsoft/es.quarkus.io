# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-19 08:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/command-mode-reference.adoc:6
#, fuzzy, no-wrap
msgid "Command Mode Applications"
msgstr "Aplicaciones en modo comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:13
#, fuzzy
msgid "This reference covers how to write applications that run and then exit."
msgstr "Esta referencia cubre cómo escribir aplicaciones que se ejecutan y luego salen."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:14
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:18
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:20
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:22
#, fuzzy
msgid "The solution is located in the `getting-started-command-mode` link:{quickstarts-tree-url}/getting-started-command-mode[directory]."
msgstr "La solución se encuentra en el `getting-started-command-mode` {quickstarts-tree-url}/getting-started-command-mode[directorio]."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:23
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:26
#, fuzzy
msgid "First, we need to create a new Quarkus project with the following command:"
msgstr "En primer lugar, tenemos que crear un nuevo proyecto Quarkus con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:32
#, fuzzy
msgid "The suggested project creation command lines disable the codestarts to avoid including a REST server. Similarly, if you use code.quarkus.io to generate a project, you need to go to *MORE OPTIONS -> Starter Code* and select *No* to avoid adding the RESTEasy Reactive extension."
msgstr "Las líneas de comando sugeridas para la creación de proyectos desactivan los codestarts para evitar incluir un servidor REST. Del mismo modo, si utiliza code.quarkus.io para generar un proyecto, debe ir a *MÁS OPCIONES → Código de inicio* y seleccionar *No* para evitar añadir la extensión RESTEasy Reactive."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:34
#, fuzzy
msgid "The RESTEasy Reactive extension is added automatically only if you ask for codestarts and you didn't specify any extensions."
msgstr "La extensión RESTEasy Reactive se añade automáticamente sólo si se solicita codestarts y no se especifica ninguna extensión."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:36
#, fuzzy, no-wrap
msgid "Writing Command Mode Applications"
msgstr "Escritura de aplicaciones en modo comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:40
#, fuzzy
msgid "There are two different approaches that can be used to implement applications that exit."
msgstr "Hay dos enfoques diferentes que se pueden utilizar para implementar aplicaciones que salen."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:42
#, fuzzy
msgid "Implement `QuarkusApplication` and have Quarkus run this method automatically"
msgstr "Implementar `QuarkusApplication` y hacer que Quarkus ejecute este método automáticamente"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:43
#, fuzzy
msgid "Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus"
msgstr "Implementar `QuarkusApplication` y un método principal Java, y utilizar el método principal Java para lanzar Quarkus"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:46
#, fuzzy
msgid "In this document the `QuarkusApplication` instance is referred to as the application main, and a class with a Java main method is the Java main."
msgstr "En este documento, la instancia `QuarkusApplication` se denomina main de la aplicación, y una clase con un método main de Java es el main de Java."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:48
#, fuzzy
msgid "The simplest possible command mode application with access to Quarkus APIs might appear as follows:"
msgstr "La aplicación de modo de comando más simple posible con acceso a las API de Quarkus podría aparecer como sigue:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:53
#, no-wrap
msgid ""
"import io.quarkus.runtime.QuarkusApplication;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:62
#, no-wrap
msgid ""
"@QuarkusMain    // <.>\n"
"public class HelloWorldMain implements QuarkusApplication {\n"
"  @Override\n"
"  public int run(String... args) throws Exception {   // <.>\n"
"    System.out.println(\"Hello \" + args[0]);\n"
"    return 0;\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:65
#, fuzzy
msgid "<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.  <.> The `run` method is invoked once Quarkus starts, and the application stops when it finishes."
msgstr "<li> <p>La anotación `@QuarkusMain` le dice a Quarkus que este es el punto de entrada principal. &lt;.&gt; El método `run` se invoca una vez que Quarkus se inicia, y la aplicación se detiene cuando termina.</p> </li>"

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:66
#, fuzzy, no-wrap
msgid "Contexts"
msgstr "Contextos"

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:69
#, fuzzy, no-wrap
msgid "Got a `ContextNotActiveException`?"
msgstr "¿Tienes un `ContextNotActiveException`?"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:74
#, fuzzy
msgid "A command mode application (like a CLI) is a bit different from say an HTTP service, there is a single call from the command line.  So the notion of _request_ let alone multiple requests does not exist per se.  Therefore, request scope is not the default."
msgstr "Una aplicación en modo comando (como un CLI) es un poco diferente de, por ejemplo, un servicio HTTP, hay una sola llamada desde la línea de comandos. Así que la noción de _solicitud_ y mucho menos de múltiples solicitudes no existe per se. Por lo tanto, el ámbito de la solicitud no es el predeterminado."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:77
#, fuzzy
msgid "To get access to your application beans and services, be aware that a `@QuarkusMain` instance is an application scoped bean by default.  It has access to singletons, application and dependent scoped beans."
msgstr "Para acceder a los beans y servicios de tu aplicación, ten en cuenta que una instancia de `@QuarkusMain` es un bean de ámbito de aplicación por defecto. Tiene acceso a singletons, beans de ámbito de aplicación y dependientes."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:81
#, fuzzy
msgid "If you want to interact with beans that requires a request scope, simply add the `@ActivateRequestContext` annotation on your `run()` method.  This let `run()` have access to methods like `listAll()` and `query*` methods on a Panache Entity.  Without it, you will eventually get a `ContextNotActiveException` when accessing such classes/beans."
msgstr "Si quieres interactuar con beans que requieren un ámbito de petición, simplemente añade la anotación `@ActivateRequestContext` en tu método `run()`. Esto permite que `run()` tenga acceso a métodos como `listAll()` y `query*` en una Entidad Panache. Sin ella, eventualmente obtendrás un `ContextNotActiveException` cuando accedas a tales clases/beans."

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:83
#, fuzzy, no-wrap
msgid "Main method"
msgstr "Método principal"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:85
#, fuzzy
msgid "If we want to use a Java main to run the application main it would look like:"
msgstr "Si queremos utilizar un main de Java para ejecutar el main de la aplicación se vería así:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:90
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:93
#, no-wrap
msgid ""
"@QuarkusMain\n"
"public class JavaMain {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:98
#, no-wrap
msgid ""
"    public static void main(String... args) {\n"
"        Quarkus.run(HelloWorldMain.class, args);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:102
#, fuzzy
msgid "This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can be run from the IDE."
msgstr "Esto es efectivamente lo mismo que ejecutar la aplicación main de `HelloWorldMain` directamente, pero tiene la ventaja de que se puede ejecutar desde el IDE."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:104
#, fuzzy
msgid "If a class that implements `QuarkusApplication` and has a Java main then the Java main will be run."
msgstr "Si una clase que implementa `QuarkusApplication` y tiene un main de Java, se ejecutará el main de Java."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:109
#, fuzzy
msgid "It is recommended that a Java main perform very little logic, and just launch the application main. In development mode the Java main will run in a different ClassLoader to the main application, so may not behave as you would expect."
msgstr "Se recomienda que un main de Java realice muy poca lógica, y sólo lance el main de la aplicación. En el modo de desarrollo, el main de Java se ejecutará en un ClassLoader diferente al de la aplicación principal, por lo que puede no comportarse como se espera."

#. type: Title ====
#: upstream/_guides/command-mode-reference.adoc:110
#, fuzzy, no-wrap
msgid "Multiple Main Methods"
msgstr "Múltiples métodos principales"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:116
#, fuzzy
msgid "It is possible to have multiple main methods in an application, and select between them at build time.  The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the main to run using the `quarkus.package.main-class` build time configuration option. If you don't want to use annotations this can also be used to specify the fully qualified name of a main class."
msgstr "Es posible tener varios métodos main en una aplicación, y seleccionar entre ellos en tiempo de compilación. La anotación `@QuarkusMain` toma un parámetro opcional 'name', y esto puede ser usado para seleccionar el main a ejecutar usando la opción de configuración en tiempo de construcción `quarkus.package.main-class`. Si no quieres usar anotaciones, esto también puede usarse para especificar el nombre completo de una clase principal."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:120
#, fuzzy
msgid "By default, the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class that just runs the application."
msgstr "Por defecto se utilizará el `@QuarkusMain` sin nombre (es decir, la cadena vacía), y si no está presente y no se especifica `quarkus.package.main-class` entonces Quarkus generará automáticamente una clase principal que sólo ejecuta la aplicación."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:124
#, fuzzy
msgid "The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not unique."
msgstr "El `name` de `@QuarkusMain` debe ser único (incluyendo la cadena vacía por defecto). Si tiene varias anotaciones de `@QuarkusMain` en su aplicación, la compilación fallará si los nombres no son únicos."

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:125
#, fuzzy, no-wrap
msgid "The command mode lifecycle"
msgstr "El ciclo de vida del modo comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:128
#, fuzzy
msgid "When running a command mode application the basic lifecycle is as follows:"
msgstr "Cuando se ejecuta una aplicación en modo comando, el ciclo de vida básico es el siguiente:"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:130
#, fuzzy
msgid "Start Quarkus"
msgstr "Iniciar Quarkus"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:131
#, fuzzy
msgid "Run the `QuarkusApplication` main method"
msgstr "Ejecute el método principal `QuarkusApplication`"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:132
#, fuzzy
msgid "Shut down Quarkus and exit the JVM after the main method returns"
msgstr "Apagar Quarkus y salir de la JVM después de que el método principal regrese"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:136
#, fuzzy
msgid "Shutdown is always initiated by the application main thread returning. If you want to run some logic on startup, and then run like a normal application (i.e. not exit) then you should call `Quarkus.waitForExit` from the main thread (A non-command mode application is essentially just running an application that just calls `waitForExit`)."
msgstr "El cierre siempre se inicia con el retorno del hilo principal de la aplicación. Si desea ejecutar alguna lógica en el inicio, y luego ejecutar como una aplicación normal (es decir, no salir) entonces debe llamar a `Quarkus.waitForExit` desde el hilo principal (Una aplicación en modo no comando es esencialmente sólo la ejecución de una aplicación que sólo llama a `waitForExit`)."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:139
#, fuzzy
msgid "If you want to shut down a running application and you are not in the main thread, then you should call `Quarkus.asyncExit` in order to unblock the main thread and initiate the shutdown process."
msgstr "Si quieres cerrar una aplicación en ejecución y no estás en el hilo principal, debes llamar a `Quarkus.asyncExit` para desbloquear el hilo principal e iniciar el proceso de cierre."

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:140
#, fuzzy, no-wrap
msgid "Development Mode"
msgstr "Modo de desarrollo"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:144
#, fuzzy
msgid "Also, for command mode applications, the dev mode is supported.  When you start your application in dev mode, the command mode application is executed:"
msgstr "También para las aplicaciones en modo comando se soporta el modo dev. Cuando se inicia la aplicación en modo dev, se ejecuta la aplicación en modo comando:"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:148
#, fuzzy
msgid "As command mode applications will often require arguments to be passed on the command line, this is also possible in dev mode:"
msgstr "Como las aplicaciones en modo comando a menudo requieren que se pasen argumentos en la línea de comandos, esto también es posible en modo dev:"

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:150
#, fuzzy, no-wrap
msgid "CLI"
msgstr "CLI"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:153
#, no-wrap
msgid "quarkus dev '--help'\n"
msgstr ""

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:156
#, fuzzy, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:159
#, no-wrap
msgid "./mvnw quarkus:dev -Dquarkus.args='--help'\n"
msgstr ""

#. type: Block title
#: upstream/_guides/command-mode-reference.adoc:162
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "Gradle"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:165
#, no-wrap
msgid "./gradlew quarkusDev --quarkus-args='--help'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:168
#, fuzzy
msgid "You should see the following down the bottom of the screen after the application is stopped:"
msgstr "Debería ver lo siguiente en la parte inferior de la pantalla después de que la aplicación se detenga:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:171
#, no-wrap
msgid "--\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:173
msgid "Press [space] to restart, [e] to edit command line args (currently '-w --tags 1.0.1.Final'), [r] to resume testing, [o] Toggle test output, [h] for more options>"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:177
#, fuzzy
msgid "You can press the `Space bar` key and the application will be started again.  You can also use the `e` hotkey to edit the command line arguments and restart your application."
msgstr "Puede pulsar la tecla `Space bar` y la aplicación se iniciará de nuevo. También puede utilizar la tecla de acceso directo `e` para editar los argumentos de la línea de comandos y reiniciar la aplicación."

#. type: Title ==
#: upstream/_guides/command-mode-reference.adoc:178
#, fuzzy, no-wrap
msgid "Testing Command Mode Applications"
msgstr "Prueba de aplicaciones en modo comando"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:183
#, fuzzy
msgid "Command Mode applications can be tested using the `@QuarkusMainTest` and `@QuarkusMainIntegrationTest` annotations. These work in a similar way to `@QuarkusTest` and `@QuarkusIntegrationTest` where `@QuarkusMainTest` will run the CLI tests within the current JVM, while `QuarkusIntegrationTest` is used to run the generated executable (both jars and native)."
msgstr "Las aplicaciones en modo comando pueden ser probadas usando las anotaciones `@QuarkusMainTest` y `@QuarkusMainIntegrationTest`. Éstas funcionan de forma similar a `@QuarkusTest` y `@QuarkusIntegrationTest`, donde `@QuarkusMainTest` ejecutará las pruebas CLI dentro de la JVM actual, mientras que `QuarkusIntegrationTest` se utiliza para ejecutar el ejecutable generado (tanto jars como nativo)."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:185
#, fuzzy
msgid "We can write a simple test for our CLI application above as follows:"
msgstr "Podemos escribir una prueba sencilla para nuestra aplicación CLI anterior de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:194
#, no-wrap
msgid ""
"import io.quarkus.test.junit.main.Launch;\n"
"import io.quarkus.test.junit.main.LaunchResult;\n"
"import io.quarkus.test.junit.main.QuarkusMainLauncher;\n"
"import io.quarkus.test.junit.main.QuarkusMainTest;\n"
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:197
#, no-wrap
msgid ""
"@QuarkusMainTest\n"
"public class HelloTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:203
#, no-wrap
msgid ""
"    @Test\n"
"    @Launch(\"World\")\n"
"    public void testLaunchCommand(LaunchResult result) {\n"
"        Assertions.assertTrue(result.getOutput().contains(\"Hello World\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:208
#, no-wrap
msgid ""
"    @Test\n"
"    @Launch(value = {}, exitCode = 1)\n"
"    public void testLaunchCommandFailed() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:216
#, no-wrap
msgid ""
"    @Test\n"
"    public void testManualLaunch(QuarkusMainLauncher launcher) {\n"
"        LaunchResult result = launcher.launch(\"Everyone\");\n"
"        Assertions.assertEquals(0, result.exitCode());\n"
"        Assertions.assertTrue(result.getOutput().contains(\"Hello Everyone\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:221
#, fuzzy
msgid "Each test method must be annotated with `@Launch` to automatically start the application or have a `QuarkusMainLauncher` parameter to manually launch the application."
msgstr "Cada método de prueba debe ser anotado con `@Launch` para iniciar automáticamente la aplicación o tener un parámetro `QuarkusMainLauncher` para iniciar manualmente la aplicación."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:223
#, fuzzy
msgid "We can then extend this with an integration test that can be used to test the native executable or runnable jar:"
msgstr "A continuación, podemos ampliar esto con una prueba de integración que se puede utilizar para probar el ejecutable nativo o jar ejecutable:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:227
#, no-wrap
msgid "import io.quarkus.test.junit.main.QuarkusMainIntegrationTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:231
#, no-wrap
msgid ""
"@QuarkusMainIntegrationTest\n"
"public class HelloIT extends HelloTest {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/command-mode-reference.adoc:233
#, fuzzy, no-wrap
msgid "Mocking"
msgstr "Burlándose de"

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:237
#, fuzzy
msgid "CDI injection is not supported in the `@QuarkusMainTest` tests.  Consequently, mocking CDI beans with `QuarkusMock` or `@InjectMock` is not supported either."
msgstr "La inyección CDI no está soportada en las pruebas de `@QuarkusMainTest`. En consecuencia, tampoco se admite la imitación de beans CDI con `QuarkusMock` o `@InjectMock`."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:239
#, fuzzy
msgid "It is possible to mock CDI beans by leveraging xref:getting-started-testing.adoc#testing_different_profiles[test profiles] though."
msgstr "Sin embargo, es posible simular los beans CDI aprovechando  link:getting-started-testing.html#testing_different_profiles[los perfiles de prueba]."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:241
#, fuzzy
msgid "For instance, in the following test, the singleton `CdiBean1` will be mocked by `MockedCdiBean1`:"
msgstr "Por ejemplo, en la siguiente prueba, el singleton `CdiBean1` será burlado por `MockedCdiBean1`:"

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:245
#, no-wrap
msgid "package org.acme.commandmode.test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:247
#, no-wrap
msgid "import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:250
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Alternative;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:253
#, no-wrap
msgid ""
"import org.junit.jupiter.api.Test;\n"
"import org.acme.commandmode.test.MyCommandModeTest.MyTestProfile;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:259
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTestProfile;\n"
"import io.quarkus.test.junit.TestProfile;\n"
"import io.quarkus.test.junit.main.Launch;\n"
"import io.quarkus.test.junit.main.LaunchResult;\n"
"import io.quarkus.test.junit.main.QuarkusMainTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:263
#, no-wrap
msgid ""
"@QuarkusMainTest\n"
"@TestProfile(MyTestProfile.class)\n"
"public class MyCommandModeTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:269
#, no-wrap
msgid ""
"    @Test\n"
"    @Launch(value = {})\n"
"    public void testLaunchCommand(LaunchResult result) {\n"
"        // ... assertions ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:271
#, no-wrap
msgid "    public static class MyTestProfile implements QuarkusTestProfile {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:277
#, no-wrap
msgid ""
"        @Override\n"
"        public Set<Class<?>> getEnabledAlternatives() {\n"
"            return Set.of(MockedCdiBean1.class); <1>\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:281
#, no-wrap
msgid ""
"    @Alternative <2>\n"
"    @Singleton <3>\n"
"    public static class MockedCdiBean1 implements CdiBean1 {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/command-mode-reference.adoc:288
#, no-wrap
msgid ""
"        @Override\n"
"        public String myMethod() {\n"
"            return \"mocked value\";\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:290
#, fuzzy
msgid "List all the CDI beans for which you want to enable an alternative mocked bean."
msgstr "Enumere todos los beans CDI para los que desea habilitar un bean alternativo imitado."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:291
#, fuzzy
msgid "Use `@Alternative` without a `@Priority`. Make sure you don't use `@Mock`."
msgstr "Utilice `@Alternative` sin `@Priority`. Asegúrese de no utilizar `@Mock`."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:292
#, fuzzy
msgid "The scope of the mocked bean should be consistent with the original one."
msgstr "El ámbito del frijol burlado debe ser coherente con el original."

#. type: Plain text
#: upstream/_guides/command-mode-reference.adoc:293
#, fuzzy
msgid "Using this pattern, you can enable specific alternatives for any given test."
msgstr "Utilizando este patrón, puede habilitar alternativas específicas para cualquier prueba."
