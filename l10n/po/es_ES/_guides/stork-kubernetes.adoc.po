# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-15 08:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/stork-kubernetes.adoc:6
#, fuzzy, no-wrap
msgid "Using Stork with Kubernetes"
msgstr "Uso de Stork con Kubernetes"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:11
#, fuzzy
msgid "This guide explains how to use Stork with Kubernetes for service discovery and load balancing."
msgstr "Esta guía explica cómo utilizar Stork con Kubernetes para el descubrimiento de servicios y el equilibrio de carga."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:13
#, fuzzy
msgid "If you are new to Stork, please read the xref:stork.adoc[Stork Getting Started Guide]."
msgstr "Si eres nuevo en Stork, por favor lee la  link:stork.html[Guía de inicio de Stork]."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:16
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:21
#, fuzzy
msgid "Access to a Kubernetes cluster (Minikube is a viable option)"
msgstr "Acceso a un clúster Kubernetes (Minikube es una opción viable)"

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:22
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:25
#, fuzzy
msgid "In this guide, we will work with a few components deployed in a Kubernetes cluster:"
msgstr "En esta guía, trabajaremos con algunos componentes desplegados en un clúster Kubernetes:"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:27
#, fuzzy
msgid "A simple blue service."
msgstr "Un simple servicio azul."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:28
#, fuzzy
msgid "A simple red service."
msgstr "Un simple servicio rojo."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:29
#, fuzzy
msgid "The `color-service` is the Kubernetes service which is the entry point to the Blue and Red instances."
msgstr "El `color-service` es el servicio Kubernetes que es el punto de entrada a las instancias Azul y Roja."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:30
#, fuzzy
msgid "A client service using a REST client to call the blue or the red service. Service discovery and selection are delegated to Stork."
msgstr "Un servicio cliente que utiliza un cliente REST para llamar al servicio azul o al rojo. El descubrimiento y la selección del servicio se delegan en Stork."

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_guides/stork-kubernetes.adoc:31
#, fuzzy, no-wrap
msgid "Architecture of the application"
msgstr "Arquitectura de la aplicación"

#. type: Target for macro image
#: upstream/_guides/stork-kubernetes.adoc:31
#, no-wrap
msgid "stork-kubernetes-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:34
#, fuzzy
msgid "For the sake of simplicity, everything will be deployed in the same namespace of the Kubernetes cluster."
msgstr "Para simplificar, todo se desplegará en el mismo espacio de nombres del clúster de Kubernetes."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:35
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:39
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the applications step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree las aplicaciones paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:41
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:43
#, fuzzy
msgid "The solution is located in the `stork-kubernetes-quickstart` link:{quickstarts-tree-url}/stork-kubernetes-quickstart[directory]."
msgstr "La solución se encuentra en el `stork-kubernetes-quickstart` {quickstarts-tree-url}/stork-kubernetes-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:44
#, fuzzy, no-wrap
msgid "Discovery and selection"
msgstr "Descubrimiento y selección"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:47
#, fuzzy
msgid "Before going further, we need to discuss discovery vs. selection."
msgstr "Antes de seguir adelante, tenemos que hablar del descubrimiento frente a la selección."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:50
#, fuzzy
msgid "Service discovery is the process of locating service instances.  It produces a list of service instances that is potentially empty (if no service matches the request) or contains multiple service instances."
msgstr "El descubrimiento de servicios es el proceso de localización de instancias de servicio. Produce una lista de instancias de servicio que puede estar vacía (si ningún servicio coincide con la solicitud) o contener múltiples instancias de servicio."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:53
#, fuzzy
msgid "Service selection, also called load-balancing, chooses the best instance from the list returned by the discovery process.  The result is a single service instance or an exception when no suitable instance can be found."
msgstr "La selección de servicios, también llamada equilibrio de carga, elige la mejor instancia de la lista devuelta por el proceso de descubrimiento. El resultado es una única instancia de servicio o una excepción cuando no se encuentra ninguna instancia adecuada."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:57
#, fuzzy
msgid "Stork handles both discovery and selection.  However, it does not handle the communication with the service but only provides a service instance.  The various integrations in Quarkus extract the location of the service from that service instance."
msgstr "Stork se encarga tanto del descubrimiento como de la selección. Sin embargo, no maneja la comunicación con el servicio, sino que sólo proporciona una instancia de servicio. Las diversas integraciones en Quarkus extraen la ubicación del servicio de esa instancia de servicio."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:59
#, fuzzy, no-wrap
msgid "Bootstrapping the project"
msgstr "Puesta en marcha del proyecto"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:62
#, fuzzy
msgid "Create a Quarkus project importing the quarkus-rest-client-reactive and quarkus-resteasy-reactive extensions using your favorite approach:"
msgstr "Crea un proyecto Quarkus importando las extensiones quarkus-rest-client-reactive y quarkus-resteasy-reactive utilizando tu enfoque favorito:"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:68
#, fuzzy
msgid "In the generated project, also add the following dependencies:"
msgstr "En el proyecto generado, añada también las siguientes dependencias:"

#. type: Block title
#: upstream/_guides/stork-kubernetes.adoc:70
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:92
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-service-discovery-kubernetes</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"      <groupId>io.smallrye.stork</groupId>\n"
"      <artifactId>stork-load-balancer-random</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes-client</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-container-image-jib</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/stork-kubernetes.adoc:95
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:102
#, no-wrap
msgid ""
"implementation(\"io.smallrye.stork:stork-service-discovery-kubernetes\")\n"
"implementation(\"io.smallrye.stork:stork-load-balancer-random\")\n"
"implementation(\"io.quarkus:quarkus-kubernetes\")\n"
"implementation(\"io.quarkus:quarkus-kubernetes-client\")\n"
"implementation(\"io.quarkus:quarkus-container-image-jib\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:105
#, fuzzy
msgid "`stork-service-discovery-kubernetes` provides an implementation of service discovery for Kubernetes. `stork-load-balancer-random` provides an implementation of random load balancer. `quarkus-kubernetes` enables the generation of Kubernetes manifests each time we perform a build. The `quarkuks-kubernetes-client` extension enables the use of the Fabric8 Kubernetes Client in native mode. And `quarkus-container-image-jib` enables the build of a container image using https://github.com/GoogleContainerTools/jib[Jib]."
msgstr "`stork-service-discovery-kubernetes` proporciona una implementación de descubrimiento de servicios para Kubernetes. `stork-load-balancer-random` proporciona una implementación de equilibrador de carga aleatoria. `quarkus-kubernetes` permite la generación de manifiestos de Kubernetes cada vez que realizamos una compilación. La extensión `quarkuks-kubernetes-client` permite el uso del Cliente Kubernetes Fabric8 en modo nativo. Y `quarkus-container-image-jib` permite la construcción de una imagen de contenedor usando  link:https://github.com/GoogleContainerTools/jib[Jib]."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:106
#, fuzzy, no-wrap
msgid "The Blue and Red services"
msgstr "Los servicios Azul y Rojo"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:109
#, fuzzy
msgid "Let's start with the very beginning: the service we will discover, select and call."
msgstr "Empecemos por el principio: el servicio que vamos a descubrir, seleccionar y llamar."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:111
#, fuzzy
msgid "The Red and Blue are two simple REST services serving an endpoint responding `Hello from Red!` and `Hello from Blue!` respectively. The code of both applications has been developed following the xref:getting-started.adoc[Getting Started Guide]."
msgstr "El Rojo y el Azul son dos simples servicios REST que sirven a un punto final que responde a `Hello from Red!` y `Hello from Blue!` respectivamente. El código de ambas aplicaciones se ha desarrollado siguiendo la  link:https://quarkus.io/guides/getting-started[Guía de Inicio]."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:113
#, fuzzy
msgid "As the goal of this guide is to show how to use Stork Kubernetes service discovery, we won't provide the specifics steps for the Red and Blue services. Their container images are already built and available in a public registry:"
msgstr "Como el objetivo de esta guía es mostrar cómo utilizar el descubrimiento de servicios Kubernetes de Stork, no proporcionaremos los pasos específicos para los servicios Red y Blue. Sus imágenes de contenedor ya están construidas y disponibles en un registro público:"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:115
#, fuzzy
msgid "https://quay.io/repository/quarkus/blue-service[Blue service container image]"
msgstr "link:https://quay.io/repository/quarkus/blue-service[Imagen del contenedor de servicio azul]"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:116
#, fuzzy
msgid "https://quay.io/repository/quarkus/red-service[Red service container image]"
msgstr "link:https://quay.io/repository/quarkus/red-service[Imagen de contenedor de servicio rojo]"

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:118
#, fuzzy, no-wrap
msgid "Deploy the Blue and Red services in Kubernetes"
msgstr "Despliegue de los servicios Azul y Rojo en Kubernetes"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:121
#, fuzzy
msgid "Now that we have our service container images available in a public registry, we need to deploy them into the Kubernetes cluster."
msgstr "Ahora que tenemos nuestras imágenes de contenedores de servicio disponibles en un registro público, necesitamos desplegarlas en el clúster de Kubernetes."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:123
#, fuzzy
msgid "The following file contains all the Kubernetes resources needed to deploy the Blue and Red services in the cluster and make them accessible:"
msgstr "El siguiente archivo contiene todos los recursos de Kubernetes necesarios para desplegar los servicios Blue y Red en el clúster y hacerlos accesibles:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:135
#, no-wrap
msgid ""
"kind: Role\n"
"apiVersion: rbac.authorization.k8s.io/v1\n"
"metadata:\n"
"  namespace: development\n"
"  name: endpoints-reader\n"
"rules:\n"
"  - apiGroups: [\"\"] # \"\" indicates the core API group\n"
"    resources: [\"endpoints\", \"pods\"]\n"
"    verbs: [\"get\", \"list\"]\n"
"---\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:151
#, no-wrap
msgid ""
"apiVersion: rbac.authorization.k8s.io/v1\n"
"kind: RoleBinding\n"
"metadata:\n"
"  name: stork-rb\n"
"  namespace: development\n"
"subjects:\n"
"  - kind: ServiceAccount\n"
"    # Reference to upper's `metadata.name`\n"
"    name: default\n"
"    # Reference to upper's `metadata.namespace`\n"
"    namespace: development\n"
"roleRef:\n"
"  kind: Role\n"
"  name: endpoints-reader\n"
"  apiGroup: rbac.authorization.k8s.io\n"
"---\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:171
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Service\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/commit-id: f747f359406bedfb1a39c57392a5b5a9eaefec56\n"
"    app.quarkus.io/build-timestamp: 2022-03-31 - 10:36:56 +0000\n"
"  labels:\n"
"    app.kubernetes.io/name: color-service\n"
"    app.kubernetes.io/version: \"1.0\"\n"
"  name: color-service //<1>\n"
"spec:\n"
"  ports:\n"
"    - name: http\n"
"      port: 80\n"
"      targetPort: 8080\n"
"  selector:\n"
"    app.kubernetes.io/version: \"1.0\"\n"
"    type: color-service\n"
"  type: ClusterIP\n"
"---\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:214
#, no-wrap
msgid ""
"apiVersion: apps/v1\n"
"kind: Deployment\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/commit-id: f747f359406bedfb1a39c57392a5b5a9eaefec56\n"
"    app.quarkus.io/build-timestamp: 2022-03-31 - 10:36:56 +0000\n"
"  labels:\n"
"    color: blue\n"
"    type: color-service\n"
"    app.kubernetes.io/name: blue-service\n"
"    app.kubernetes.io/version: \"1.0\"\n"
"  name: blue-service //<2>\n"
"spec:\n"
"  replicas: 1\n"
"  selector:\n"
"    matchLabels:\n"
"      app.kubernetes.io/name: blue-service\n"
"      app.kubernetes.io/version: \"1.0\"\n"
"  template:\n"
"    metadata:\n"
"      annotations:\n"
"        app.quarkus.io/commit-id: f747f359406bedfb1a39c57392a5b5a9eaefec56\n"
"        app.quarkus.io/build-timestamp: 2022-03-31 - 10:36:56 +0000\n"
"      labels:\n"
"        color: blue\n"
"        type: color-service\n"
"        app.kubernetes.io/name: blue-service\n"
"        app.kubernetes.io/version: \"1.0\"\n"
"    spec:\n"
"      containers:\n"
"        - env:\n"
"            - name: KUBERNETES_NAMESPACE\n"
"              valueFrom:\n"
"                fieldRef:\n"
"                  fieldPath: metadata.namespace\n"
"          image: quay.io/quarkus/blue-service:1.0\n"
"          imagePullPolicy: Always\n"
"          name: blue-service\n"
"          ports:\n"
"            - containerPort: 8080\n"
"              name: http\n"
"              protocol: TCP\n"
"---\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:257
#, no-wrap
msgid ""
"apiVersion: apps/v1\n"
"kind: Deployment\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/commit-id: 27be03414510f776ca70d70d859b33e134570443\n"
"    app.quarkus.io/build-timestamp: 2022-03-31 - 10:38:54 +0000\n"
"  labels:\n"
"    color: red\n"
"    type: color-service\n"
"    app.kubernetes.io/version: \"1.0\"\n"
"    app.kubernetes.io/name: red-service\n"
"  name: red-service //<2>\n"
"spec:\n"
"  replicas: 1\n"
"  selector:\n"
"    matchLabels:\n"
"      app.kubernetes.io/version: \"1.0\"\n"
"      app.kubernetes.io/name: red-service\n"
"  template:\n"
"    metadata:\n"
"      annotations:\n"
"        app.quarkus.io/commit-id: 27be03414510f776ca70d70d859b33e134570443\n"
"        app.quarkus.io/build-timestamp: 2022-03-31 - 10:38:54 +0000\n"
"      labels:\n"
"        color: red\n"
"        type: color-service\n"
"        app.kubernetes.io/version: \"1.0\"\n"
"        app.kubernetes.io/name: red-service\n"
"    spec:\n"
"      containers:\n"
"        - env:\n"
"            - name: KUBERNETES_NAMESPACE\n"
"              valueFrom:\n"
"                fieldRef:\n"
"                  fieldPath: metadata.namespace\n"
"          image: quay.io/quarkus/red-service:1.0\n"
"          imagePullPolicy: Always\n"
"          name: red-service\n"
"          ports:\n"
"            - containerPort: 8080\n"
"              name: http\n"
"              protocol: TCP\n"
"---\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:282
#, no-wrap
msgid ""
"apiVersion: networking.k8s.io/v1\n"
"kind: Ingress //<3>\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/commit-id: f747f359406bedfb1a39c57392a5b5a9eaefec56\n"
"    app.quarkus.io/build-timestamp: 2022-03-31 - 10:46:19 +0000\n"
"  labels:\n"
"    app.kubernetes.io/name: color-service\n"
"    app.kubernetes.io/version: \"1.0\"\n"
"    color: blue\n"
"    type: color-service\n"
"  name: color-service\n"
"spec:\n"
"  rules:\n"
"    - host: color-service.127.0.0.1.nip.io\n"
"      http:\n"
"        paths:\n"
"          - backend:\n"
"              service:\n"
"                name: color-service\n"
"                port:\n"
"                  name: http\n"
"            path: /\n"
"            pathType: Prefix\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:286
#, fuzzy
msgid "There are a few interesting parts in this listing:"
msgstr "Hay algunas partes interesantes en este listado:"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:288
#, fuzzy
msgid "The Kubernetes Service resource, `color-service`, that Stork will discover."
msgstr "El recurso del Servicio Kubernetes, `color-service`, que Stork descubrirá."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:289
#, fuzzy
msgid "The Red and Blue service instances behind the `color-service` Kubernetes service."
msgstr "Las instancias de servicio Red y Blue detrás del servicio Kubernetes `color-service`."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:290
#, fuzzy
msgid "A Kubernetes Ingress resource making the `color-service` accessible from the outside of the cluster at the `color-service.127.0.0.1.nip.io` url. Note that the Ingress is not needed for Stork however, it helps to check that the architecture is in place."
msgstr "Un recurso Kubernetes Ingress que hace que el `color-service` sea accesible desde el exterior del clúster en la url `color-service.127.0.0.1.nip.io`. No es que el Ingress no sea necesario para Stork sin embargo, ayuda a comprobar que la arquitectura está en su lugar."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:292
#, fuzzy
msgid "Create a file named `kubernetes-setup.yml` with the content above at the root of the project and run the following commands to deploy all the resources in the Kubernetes cluster. Don't forget to create a dedicated namespace:"
msgstr "Crea un archivo llamado `kubernetes-setup.yml` con el contenido anterior en la raíz del proyecto y ejecuta los siguientes comandos para desplegar todos los recursos en el clúster de Kubernetes. No olvides crear un espacio de nombres dedicado:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:297
#, no-wrap
msgid ""
"kubectl create namespace development\n"
"kubectl apply -f kubernetes-setup.yml -n=development\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:300
#, fuzzy
msgid "If everything went well the Color service is accessible on http://color-service.127.0.0.1.nip.io. You should have `Hello from Red!` and `Hello from Blue!` response randomly."
msgstr "Si todo ha ido bien, el servicio Color es accesible en  http://color-service.127.0.0.1.nip.io  Debería tener `Hello from Red!` y `Hello from Blue!` respuesta al azar."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:302
#, fuzzy
msgid "Stork is not limited to Kubernetes and integrates with other service discovery mechanisms."
msgstr "Stork no se limita a Kubernetes y se integra con otros mecanismos de descubrimiento de servicios."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:304
#, fuzzy, no-wrap
msgid "The REST Client interface and the front end API"
msgstr "La interfaz del cliente REST y la API del front-end"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:307
#, fuzzy
msgid "So far, we didn't use Stork; we just deployed the services we will be discovering, selecting, and calling."
msgstr "Hasta ahora, no hemos utilizado Stork; sólo hemos desplegado los servicios que vamos a descubrir, seleccionar y llamar."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:310
#, fuzzy
msgid "We will call the services using the Reactive REST Client.  Create the `src/main/java/org/acme/MyService.java` file with the following content:"
msgstr "Llamaremos a los servicios utilizando el Cliente REST Reactivo. Crea el archivo `src/main/java/org/acme/MyService.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:314
#: upstream/_guides/stork-kubernetes.adoc:347
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:316
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:320
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:330
#, no-wrap
msgid ""
"/**\n"
" * The REST Client interface.\n"
" *\n"
" * Notice the `baseUri`. It uses `stork://` as URL scheme indicating that the called service uses Stork to locate and\n"
" * select the service instance. The `my-service` part is the service name. This is used to configure Stork discovery\n"
" * and selection in the `application.properties` file.\n"
" */\n"
"@RegisterRestClient(baseUri = \"stork://my-service\")\n"
"public interface MyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:335
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    String get();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:338
#, fuzzy
msgid "It's a straightforward REST client interface containing a single method. However, note the `baseUri` attribute:"
msgstr "Es una interfaz de cliente REST sencilla que contiene un único método. Sin embargo, observe el atributo `baseUri`:"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:339
#, fuzzy
msgid "the `stork://` suffix instructs the REST client to delegate the discovery and selection of the service instances to Stork,"
msgstr "el sufijo `stork://` indica al cliente REST que delegue el descubrimiento y la selección de las instancias de servicio a Stork,"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:340
#, fuzzy
msgid "the `my-service` part of the URI is the service name we will be using in the application configuration."
msgstr "la parte `my-service` del URI es el nombre del servicio que utilizaremos en la configuración de la aplicación."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:343
#, fuzzy
msgid "It does not change how the REST client is used.  Create the `src/main/java/org/acme/FrontendApi.java` file with the following content:"
msgstr "No cambia la forma de utilizar el cliente REST. Cree el archivo `src/main/java/org/acme/FrontendApi.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:349
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:354
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:360
#, no-wrap
msgid ""
"/**\n"
" * A frontend API using our REST Client (which uses Stork to locate and select the service instance on each call).\n"
" */\n"
"@Path(\"/api\")\n"
"public class FrontendApi {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:362
#, no-wrap
msgid "    @RestClient MyService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:368
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String invoke() {\n"
"        return service.get();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:370
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:373
#, fuzzy
msgid "It injects and uses the REST client as usual."
msgstr "Inyecta y utiliza el cliente REST como siempre."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:374
#, fuzzy, no-wrap
msgid "Stork configuration"
msgstr "Configuración de la cigüeña"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:377
#, fuzzy
msgid "Now we need to configure Stork for using Kubernetes to discover the red and blue instances of the service."
msgstr "Ahora necesitamos configurar Stork para usar Kubernetes para descubrir las instancias rojas y azules del servicio."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:379
#, fuzzy
msgid "In the `src/main/resources/application.properties`, add:"
msgstr "En la página web `src/main/resources/application.properties`, añada:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:386
#, no-wrap
msgid ""
"quarkus.stork.my-service.service-discovery.type=kubernetes\n"
"quarkus.stork.my-service.service-discovery.k8s-namespace=development\n"
"quarkus.stork.my-service.service-discovery.application=color-service\n"
"quarkus.stork.my-service.load-balancer.type=random\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:393
#, fuzzy
msgid "`stork.my-service.service-discovery` indicates which type of service discovery we will be using to locate the `my-service` service.  In our case, it's `kubernetes`.  If your access to the Kubernetes cluster is configured via Kube config file, you don't need to configure the access to it. Otherwise, set the proper Kubernetes url using the `quarkus.stork.my-service.service-discovery.k8s-host` property.  `quarkus.stork.my-service.service-discovery.application` contains the name of the Kubernetes service Stork is going to ask for. In our case, this is the `color-service` corresponding to the kubernetes service backed by the Red and Blue instances.  Finally, `quarkus.stork.my-service.load-balancer.type` configures the service selection. In our case, we use a `random` Load Balancer."
msgstr "`stork.my-service.service-discovery` indica qué tipo de descubrimiento de servicios vamos a utilizar para localizar el servicio `my-service`. En nuestro caso, es `kubernetes`. Si tu acceso al clúster de Kubernetes está configurado a través del archivo de configuración de Kube, no necesitas configurar el acceso al mismo. En caso contrario, establece la url de Kubernetes adecuada mediante la propiedad `quarkus.stork.my-service.service-discovery.k8s-host`. `quarkus.stork.my-service.service-discovery.application` contiene el nombre del servicio de Kubernetes que Stork va a solicitar. En nuestro caso, es el `color-service` correspondiente al servicio de Kubernetes respaldado por las instancias Roja y Azul. Por último, `quarkus.stork.my-service.load-balancer.type` configura la selección del servicio. En nuestro caso, utilizamos un `random` Load Balancer."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:394
#, fuzzy, no-wrap
msgid "Deploy the REST Client interface and the front end API in the Kubernetes cluster"
msgstr "Despliegue de la interfaz del cliente REST y de la API del front-end en el clúster Kubernetes"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:398
#, fuzzy
msgid "The system is almost complete. We only need to deploy the REST Client interface and the client service to the cluster.  In the `src/main/resources/application.properties`, add:"
msgstr "El sistema está casi completo. Sólo tenemos que desplegar la interfaz de cliente REST y el servicio de cliente en el clúster. En la página `src/main/resources/application.properties`, añade:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:405
#, no-wrap
msgid ""
"quarkus.container-image.registry=<public registry>\n"
"quarkus.kubernetes-client.trust-certs=true\n"
"quarkus.kubernetes.ingress.expose=true\n"
"quarkus.kubernetes.ingress.host=my-service.127.0.0.1.nip.io\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:410
#, fuzzy
msgid "The `quarkus.container-image.registry` contains the container registry to use.  The `quarkus.kubernetes.ingress.expose` indicates that the service will be accessible from the outside of the cluster.  The `quarkus.kubernetes.ingress.host` contains the url to access the service. We are using https://nip.io/[nip.io] wildcard for IP address mappings."
msgstr "El `quarkus.container-image.registry` contiene el registro de contenedores a utilizar. El `quarkus.kubernetes.ingress.expose` indica que el servicio será accesible desde el exterior del cluster. El `quarkus.kubernetes.ingress.host` contiene la url para acceder al servicio. Estamos utilizando el comodín de  link:https://nip.io/[nip.io] para el mapeo de direcciones IP."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:412
#, fuzzy
msgid "For a more customized configuration you can check the xref:deploying-to-kubernetes.adoc[Deploying to Kubernetes guide]"
msgstr "Para una configuración más personalizada puedes consultar la  link:https://quarkus.io/guides/deploying-to-kubernetes[guía de Despliegue en Kubernetes]"

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:413
#, fuzzy, no-wrap
msgid "Build and push the container image"
msgstr "Construir y empujar la imagen del contenedor"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:416
#, fuzzy
msgid "Thanks to the extensions we are using, we can perform the build of a container image using Jib and also enabling the generation of Kubernetes manifests while building the application. For example, the following command will generate a Kubernetes manifest in the `target/kubernetes/` directory and also build and push a container image for the project:"
msgstr "Gracias a las extensiones que estamos usando, podemos realizar la construcción de una imagen de contenedor usando Jib y también habilitar la generación de manifiestos de Kubernetes mientras se construye la aplicación. Por ejemplo, el siguiente comando generará un manifiesto de Kubernetes en el directorio `target/kubernetes/` y también construirá y empujará una imagen de contenedor para el proyecto:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:420
#, no-wrap
msgid "./mvnw package -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:422
#, fuzzy, no-wrap
msgid "Deploy client service to the Kubernetes cluster"
msgstr "Despliegue del servicio cliente en el clúster Kubernetes"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:425
#, fuzzy
msgid "The generated manifest can be applied to the cluster from the project root using kubectl:"
msgstr "El manifiesto generado puede aplicarse al clúster desde la raíz del proyecto utilizando kubectl:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:429
#, no-wrap
msgid "kubectl apply -f target/kubernetes/kubernetes.yml -n=development\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/stork-kubernetes.adoc:435
#, fuzzy
msgid "Please note that if you use Elliptic Curve keys with Stork and are getting exceptions like `java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.BouncyCastleProvider`, then adding a BouncyCastle PKIX dependency (`org.bouncycastle:bcpkix-jdk18on`) is required."
msgstr "Por favor, tenga en cuenta que si utiliza claves de curva elíptica con Stork y obtiene excepciones como `java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.BouncyCastleProvider`, entonces es necesario añadir una dependencia de BouncyCastle PKIX ( `org.bouncycastle:bcpkix-jdk15on`)."

#. type: delimited block =
#: upstream/_guides/stork-kubernetes.adoc:437
#, fuzzy
msgid "Note that internally an `org.bouncycastle.jce.provider.BouncyCastleProvider` provider will be registered if it has not already been registered."
msgstr "Tenga en cuenta que internamente se registrará un proveedor de `org.bouncycastle.jce.provider.BouncyCastleProvider` si no se ha registrado ya."

#. type: delimited block =
#: upstream/_guides/stork-kubernetes.adoc:439
#, fuzzy
msgid "You can have this provider registered as described in the xref:security-customization.adoc#bouncy-castle[BouncyCastle] or xref:security-customization.adoc#bouncy-castle-fips[BouncyCastle FIPS] sections."
msgstr "Puede hacer que este proveedor se registre como se describe en las secciones  link:security-customization.html#bouncy-castle[BouncyCastle] o  link:security-customization.html#bouncy-castle-fips[BouncyCastle FIPS]."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:443
#, fuzzy
msgid "We're done! So, let's see if it works."
msgstr "¡Ya está! Entonces, veamos si funciona."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:445
#, fuzzy
msgid "Open a browser and navigate to http://my-service.127.0.0.1.nip.io/api."
msgstr "Abra un navegador y navegue hasta  http://my-service.127.0.0.1.nip.io/api"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:447
#, fuzzy
msgid "Or if you prefer, in another terminal, run:"
msgstr "O si lo prefieres, en otra terminal, ejecuta"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:456
#, no-wrap
msgid ""
"> curl http://my-service.127.0.0.1.nip.io/api\n"
"...\n"
"> curl http://my-service.127.0.0.1.nip.io/api\n"
"...\n"
"> curl http://my-service.127.0.0.1.nip.io/api\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:459
#, fuzzy
msgid "The responses should alternate randomly between `Hello from Red!` and `Hello from Blue!`."
msgstr "Las respuestas deben alternar aleatoriamente entre `Hello from Red!` y `Hello from Blue!`."

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:461
#, fuzzy
msgid "You can compile this application into a native executable:"
msgstr "Puedes compilar esta aplicación en un ejecutable nativo:"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:465
#, fuzzy
msgid "Then, you need to build a container image based on the native executable. For this use the corresponding Dockerfile:"
msgstr "A continuación, es necesario construir una imagen de contenedor basada en el ejecutable nativo. Para ello, utilice el archivo Dockerfile correspondiente:"

#. type: delimited block -
#: upstream/_guides/stork-kubernetes.adoc:469
#, no-wrap
msgid "> docker build -f src/main/docker/Dockerfile.native -t quarkus/stork-kubernetes-quickstart .\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:472
#, fuzzy
msgid "After publishing the new image to the container registry. You can redeploy the Kubernetes manifest to the cluster."
msgstr "Después de publicar la nueva imagen en el registro de contenedores. Puede volver a desplegar el manifiesto de Kubernetes en el clúster."

#. type: Title ==
#: upstream/_guides/stork-kubernetes.adoc:473
#, fuzzy, no-wrap
msgid "Going further"
msgstr "Ir más allá"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:477
#, fuzzy
msgid "This guide has shown how to use SmallRye Stork to discover and select your services.  You can find more about Stork in:"
msgstr "Esta guía ha mostrado cómo utilizar SmallRye Stork para descubrir y seleccionar sus servicios. Puede encontrar más información sobre Stork en:"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:479
#, fuzzy
msgid "the xref:stork-reference.adoc[Stork reference guide],"
msgstr "la  link:stork-reference.html[guía de referencia de la cigüeña],"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:480
#, fuzzy
msgid "the xref:stork.adoc[Stork with Consul reference guide],"
msgstr "la  link:stork.html[guía de referencia de la cigüeña con el cónsul],"

#. type: Plain text
#: upstream/_guides/stork-kubernetes.adoc:480
#, fuzzy
msgid "the https://smallrye.io/smallrye-stork[SmallRye Stork website]."
msgstr "el  link:https://smallrye.io/smallrye-stork[sitio web de SmallRye Stork]."

#, fuzzy
#~ msgid "Getting Started with SmallRye Stork"
#~ msgstr "Cómo empezar con SmallRye Stork"

#, fuzzy
#~ msgid "The essence of distributed systems resides in the interaction between services.  In modern architecture, you often have multiple instances of your service to share the load or improve the resilience by redundancy.  But how do you select the best instance of your service? That's where https://smallrye.io/smallrye-stork[SmallRye Stork] helps.  Stork is going to choose the most appropriate instance.  It offers:"
#~ msgstr "La esencia de los sistemas distribuidos reside en la interacción entre servicios. En la arquitectura moderna, a menudo se dispone de varias instancias del servicio para compartir la carga o mejorar la resistencia mediante la redundancia. Pero, ¿cómo se selecciona la mejor instancia de su servicio? Ahí es donde ayuda  link:https://smallrye.io/smallrye-stork[SmallRye Stork]. Stork va a elegir la instancia más adecuada. Ofrece:"

#, fuzzy
#~ msgid "Extensible service discovery mechanisms"
#~ msgstr "Mecanismos extensibles de descubrimiento de servicios"

#, fuzzy
#~ msgid "Built-in support for Consul and Kubernetes"
#~ msgstr "Soporte integrado para Consul y Kubernetes"

#, fuzzy
#~ msgid "Customizable client load-balancing strategies"
#~ msgstr "Estrategias de equilibrio de carga de clientes personalizables"
