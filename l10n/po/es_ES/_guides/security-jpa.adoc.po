# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 08:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-jpa.adoc:7
#, fuzzy, no-wrap
msgid "Quarkus Security with Jakarta Persistence"
msgstr "Seguridad Quarkus con Jakarta Persistence"

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:14
#, fuzzy
msgid "Quarkus provides a Jakarta Persistence (formerly known as JPA) identity provider, similar to the xref:security-jdbc.adoc[JDBC identity provider], suitable for use with the xref:security-basic-authentication.adoc[Basic] and xref:security-authentication-mechanisms.adoc#form-auth[Form-based] Quarkus Security mechanisms, which require a combination of username and password credentials."
msgstr "Quarkus proporciona un proveedor de identidad Jakarta Persistence (anteriormente conocido como JPA), similar al  link:security-jdbc.html[proveedor de identidad JDBC], adecuado para su uso con los mecanismos de seguridad Quarkus  link:security-basic-authentication.html[Basic] y  link:security-authentication-mechanisms.html#form-auth[Form-based], que requieren una combinación de credenciales de nombre de usuario y contraseña."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:16
#, fuzzy
msgid "The Jakarta Persistence `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr "Jakarta Persistence `IdentityProvider` crea una instancia `SecurityIdentity`, que se utiliza durante la autenticación del usuario para verificar y autorizar las solicitudes de acceso haciendo que su aplicación Quarkus sea segura."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:18
#, fuzzy
msgid "For an example of practical use of Basic authentication and Jakarta Persistence, see the xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence] tutorial."
msgstr "Para un ejemplo de uso práctico de la autenticación Básica y  link:security-basic-authentication-tutorial.html[Jakarta Persistence], véase el tutorial  link:security-basic-authentication-tutorial.html[Asegurar una aplicación Quarkus con autenticación Básica y Jakarta Persistence]."

#. type: Title ==
#: upstream/_guides/security-jpa.adoc:20
#, fuzzy, no-wrap
msgid "Jakarta Persistence entity specification"
msgstr "Especificación de la entidad Jakarta Persistence"

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:23
#, fuzzy
msgid "Quarkus security offers a Jakarta Persistence integration to collect usernames, passwords, and roles, and store them into Jakarta Persistence database entities."
msgstr "Quarkus security ofrece una integración con Jakarta Persistence para recopilar nombres de usuario, contraseñas y roles, y almacenarlos en entidades de base de datos de Jakarta Persistence."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:25
#, fuzzy
msgid "The following Jakarta Persistence entity specification demonstrates how users' information needs to be stored in a Jakarta Persistence entity and properly mapped so that Quarkus can retrieve this information from a database."
msgstr "La siguiente especificación de entidad Jakarta Persistence demuestra cómo debe almacenarse la información de los usuarios en una entidad Jakarta Persistence y asignarse adecuadamente para que Quarkus pueda recuperar esta información de una base de datos."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:28
#, fuzzy
msgid "The `@UserDefinition` annotation must be present on a Jakarta Persistence entity, regardless of whether xref:hibernate-orm-panache.adoc[simplified Hibernate ORM with Panache] is used or not."
msgstr "La anotación `@UserDefinition` debe estar presente en una entidad Jakarta Persistence, independientemente de si se utiliza o no  link:https://quarkus.io/guides/hibernate-orm-panache[Hibernate ORM simplificado con Panache]."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:30
#, fuzzy
msgid "The `@Username` and `@Password` field types are always `String`."
msgstr "Los tipos de campo `@Username` y `@Password` deben ser del tipo `String`."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:32
#, fuzzy
msgid "The `@Roles` field must either be `String`, `Collection<String>`, or a `Collection<X>`, where `X` is an entity class with a single `String` field annotated as `@RolesValue`."
msgstr "El campo `@Roles` debe ser del tipo `String` o `Collection&amp;lt;String&amp;gt;` o, alternativamente, un `Collection&amp;lt;X&amp;gt;` donde `X` es una clase de entidad con un campo `String` anotado con la anotación `@RolesValue`."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:34
#, fuzzy
msgid "Each `String` role element type is parsed as a comma-separated list of roles."
msgstr "Cada tipo de elemento de rol `String` se analizará como una lista de roles separada por comas."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:36
#, fuzzy
msgid "The following example demonstrates storing security information by adding annotations to the `user` entity:"
msgstr "Ahora podemos describir cómo se almacena nuestra información de seguridad en nuestro modelo añadiendo algunas anotaciones a nuestra entidad `User`:"

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:40
#, no-wrap
msgid "package org.acme.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:43
#, no-wrap
msgid ""
"import jakarta.persistence.Entity;\n"
"import jakarta.persistence.Table;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:50
#, no-wrap
msgid ""
"import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
"import io.quarkus.elytron.security.common.BcryptUtil;\n"
"import io.quarkus.security.jpa.Password;\n"
"import io.quarkus.security.jpa.Roles;\n"
"import io.quarkus.security.jpa.UserDefinition;\n"
"import io.quarkus.security.jpa.Username;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:61
#, no-wrap
msgid ""
"@Entity\n"
"@Table(name = \"test_user\")\n"
"@UserDefinition <1>\n"
"public class User extends PanacheEntity {\n"
"    @Username <2>\n"
"    public String username;\n"
"    @Password <3>\n"
"    public String password;\n"
"    @Roles <4>\n"
"    public String role;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:76
#, no-wrap
msgid ""
"    /**\n"
"     * Adds a new user to the database\n"
"     * @param username the username\n"
"     * @param password the unencrypted password (it will be encrypted with bcrypt)\n"
"     * @param role the comma-separated roles\n"
"     */\n"
"    public static void add(String username, String password, String role) { <5>\n"
"        User user = new User();\n"
"        user.username = username;\n"
"        user.password = BcryptUtil.bcryptHash(password);\n"
"        user.role = role;\n"
"        user.persist();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:80
#, fuzzy
msgid "The `security-jpa` extension initializes only if a single entity is annotated with `@UserDefinition`."
msgstr "La extensión `security-jpa` sólo se inicializa si hay una única entidad anotada con `@UserDefinition`."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:82
#, fuzzy
msgid "The `@UserDefinition` annotation must be present on a single entity, either a regular Hibernate ORM entity or a Hibernate ORM with a Panache entity."
msgstr "Esta anotación debe estar presente en una sola entidad. Puede ser una entidad Hibernate ORM normal o una entidad Hibernate ORM con Panache como en este ejemplo."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:83
#, fuzzy
msgid "Indicates the field used for the username."
msgstr "Indica el campo utilizado para el nombre de usuario."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:85
#, fuzzy
msgid "Indicates the field used for the password.  By default, `security-jpa` uses bcrypt-hashed passwords, or you can configure plain text or custom passwords instead."
msgstr "Indica el campo utilizado para la contraseña. Por defecto se utilizan contraseñas con hash bcrypt, pero también se puede configurar para contraseñas en texto claro o personalizadas."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:86
#, fuzzy
msgid "This indicates the comma-separated list of roles added to the target principal representation attributes."
msgstr "Indica la lista separada por comas de los roles añadidos a los atributos de representación del director de destino."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:87
#, fuzzy
msgid "This method allows you to add users while hashing passwords with the proper `bcrypt` hash."
msgstr "Este método nos permite añadir usuarios mientras se hace el hash de la contraseña con el hash de bcrypt adecuado."

#. type: Title ==
#: upstream/_guides/security-jpa.adoc:89
#, fuzzy, no-wrap
msgid "Jakarta Persistence entity as storage of roles"
msgstr "Entidad Jakarta Persistence como almacenamiento de roles"

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:92
#, fuzzy
msgid "Use the following example to store roles inside another Jakarta Persistence entity:"
msgstr "Utilice el siguiente ejemplo para almacenar roles dentro de otra entidad Jakarta Persistence:"

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:101
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class User extends PanacheEntity {\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:104
#, no-wrap
msgid ""
"    @Password\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:109
#, no-wrap
msgid ""
"    @ManyToMany\n"
"    @Roles\n"
"    public List<Role> roles = new ArrayList<>();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:112
#, no-wrap
msgid ""
"@Entity\n"
"public class Role extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:115
#, no-wrap
msgid ""
"    @ManyToMany(mappedBy = \"roles\")\n"
"    public List<ExternalRolesUserEntity> users;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:119
#, no-wrap
msgid ""
"    @RolesValue\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-jpa.adoc:121
#, fuzzy, no-wrap
msgid "Password storage and hashing"
msgstr "Almacenamiento de contraseñas y hashing"

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:124
#, fuzzy
msgid "When developing applications with Quarkus, you can decide how to manage password storage and hashing. You can choose to keep the default password and hashing settings of Quarkus, or you can hash passwords manually."
msgstr "Cuando se desarrollan aplicaciones con Quarkus, se puede decidir cómo gestionar el almacenamiento de contraseñas y el hash. Puede optar por mantener la configuración predeterminada de Quarkus para las contraseñas y el hash, o puede hacer el hash de las contraseñas manualmente."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:129
#, fuzzy
msgid "With the default option, passwords are stored and hashed with https://en.wikipedia.org/wiki/Bcrypt[bcrypt] under the https://en.wikipedia.org/wiki/Crypt_(C)[Modular Crypt Format] (MCF).  While using MCF, the hashing algorithm, iteration count, and salt are stored as a part of the hashed value.  As such, we do not need dedicated columns to keep them."
msgstr "Por defecto, consideramos que las contraseñas se almacenan con hash con  link:https://en.wikipedia.org/wiki/Bcrypt[bcrypt] bajo el  link:https://en.wikipedia.org/wiki/Crypt_©[formato Modular Crypt Format] (MCF)."

#. type: delimited block =
#: upstream/_guides/security-jpa.adoc:133
#, fuzzy
msgid "In cryptography, a salt is a name for random data used as an additional input to a one-way function that hashes data, a password, or a passphrase."
msgstr "En criptografía, una sal es un nombre para los datos aleatorios utilizados como entrada adicional a una función unidireccional que encripta datos, una contraseña o una frase de contraseña."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:136
#, fuzzy
msgid "To represent passwords stored in the database which were hashed using different hashing algorithms, create a class that implements `org.wildfly.security.password.PasswordProvider` as shown in the example below."
msgstr "Para el hash manual de contraseñas, cree una clase que implemente el `CustomPasswordProvider` como se muestra en el siguiente ejemplo."

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:138
#, fuzzy
msgid "The following snippet shows how to set a custom password provider that represents a password which was hashed with the SHA256 hashing algorithm."
msgstr "El siguiente fragmento muestra cómo configurar un proveedor de contraseñas personalizado que utilice el algoritmo hash SHA256."

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:143
#, no-wrap
msgid ""
"import org.wildfly.security.password.Password;\n"
"import org.wildfly.security.password.PasswordProvider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:151
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class CustomPasswordUserEntity {\n"
"    @Id\n"
"    @GeneratedValue\n"
"    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:155
#, no-wrap
msgid ""
"    @Column(name = \"username\")\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:159
#, no-wrap
msgid ""
"    @Column(name = \"password\")\n"
"    @Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:163
#, no-wrap
msgid ""
"    @Roles\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:168
#, no-wrap
msgid ""
"public class CustomPasswordProvider implements PasswordProvider {\n"
"    @Override\n"
"    public Password getPassword(String passwordInDatabase) {\n"
"        byte[] digest = DatatypeConverter.parseHexBinary(passwordInDatabase);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa.adoc:173
#, no-wrap
msgid ""
"        // Let the security runtime know that this passwordInDatabase is hashed using the SHA256 hashing algorithm\n"
"        return SimpleDigestPassword.createRaw(SimpleDigestPassword.ALGORITHM_SIMPLE_DIGEST_SHA_256, digest);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-jpa.adoc:179
#, fuzzy
msgid "For quick creation of a hashed password, use `String BcryptUtil.bcryptHash(String password)`, which defaults to creating a random salt and hashing in ten iterations.  This method also allows specifying the desired amount of iterations and the salt used."
msgstr "Cuando necesites crear una contraseña con hash, te ofrecemos la práctica función `String BcryptUtil.bcryptHash(String password)`, que por defecto crea una sal aleatoria y hace un hash en 10 iteraciones (aunque también puedes especificar las iteraciones y la sal)."

#. type: delimited block =
#: upstream/_guides/security-jpa.adoc:184
#, fuzzy
msgid "For applications running in a production environment, do not store passwords as plain text."
msgstr "Para las aplicaciones que se ejecutan en un entorno de producción, no almacene las contraseñas como texto sin formato."

#. type: delimited block =
#: upstream/_guides/security-jpa.adoc:186
#, fuzzy
msgid "However, it is possible to store passwords as plain text with the `@Password(PasswordType.CLEAR)` annotation when operating in a test environment."
msgstr "ADVERTENCIA: también se pueden almacenar contraseñas en texto claro con `@Password(PasswordType.CLEAR)`, pero se desaconseja encarecidamente en producción."

#. type: delimited block =
#: upstream/_guides/security-jpa.adoc:193
msgid "The xref:hibernate-orm.adoc#multitenancy[Hibernate Multitenancy] is supported and you can store the user entity in a persistence unit with enabled multitenancy.  However, if your `io.quarkus.hibernate.orm.runtime.tenant.TenantResolver` must access the `io.vertx.ext.web.RoutingContext` to resolve request details, you must disable proactive authentication.  For more information about proactive authentication, please see the Quarkus xref:security-proactive-authentication.adoc[Proactive authentication] guide."
msgstr ""

#. type: Title ==
#: upstream/_guides/security-jpa.adoc:197
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:200
#, fuzzy
msgid "xref:security-getting-started-tutorial.adoc[Getting Started with Security using Basic authentication and Jakarta Persistence]"
msgstr "link:security-basic-authentication-tutorial.html[Proteger una aplicación Quarkus con autenticación básica y Jakarta Persistence]"

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:201
#, fuzzy
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr "link:security-identity-providers.html[Proveedores de identidad]"

#. type: Plain text
#: upstream/_guides/security-jpa.adoc:201
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "link:security.html[Seguridad Quarkus]"

#, fuzzy
#~ msgid "Using Security with JPA"
#~ msgstr "Uso de la seguridad con JPA"

#, fuzzy
#~ msgid "This guide demonstrates how your Quarkus application can use a database to store your user identities with xref:hibernate-orm.adoc[Hibernate ORM] or xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache]."
#~ msgstr "Esta guía demuestra cómo su aplicación Quarkus puede utilizar una base de datos para almacenar sus identidades de usuario con  link:hibernate-orm.html[Hibernate ORM] o  link:hibernate-orm-panache.html[Hibernate ORM con Panache]."

#, fuzzy
#~ msgid "Prerequisites"
#~ msgstr "Requisitos previos"

#, fuzzy
#~ msgid "Architecture"
#~ msgstr "Arquitectura"

#, fuzzy
#~ msgid "In this example, we build a very simple microservice which offers three endpoints:"
#~ msgstr "En este ejemplo, construimos un microservicio muy simple que ofrece tres puntos finales:"

#, fuzzy
#~ msgid "`/api/public`"
#~ msgstr "`/api/public`"

#, fuzzy
#~ msgid "`/api/users/me`"
#~ msgstr "`/api/users/me`"

#, fuzzy
#~ msgid "`/api/admin`"
#~ msgstr "`/api/admin`"

#, fuzzy
#~ msgid "The `/api/public` endpoint can be accessed anonymously.  The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.  The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
#~ msgstr "Se puede acceder al endpoint `/api/public` de forma anónima. El punto final `/api/admin` está protegido con RBAC (Role-Based Access Control), donde sólo los usuarios con el rol `admin` pueden acceder. En este punto final, utilizamos la anotación `@RolesAllowed` para imponer declarativamente la restricción de acceso. El endpoint `/api/users/me` también está protegido con RBAC (Role-Based Access Control) donde sólo los usuarios con el rol `user` pueden acceder. Como respuesta, devuelve un documento JSON con detalles sobre el usuario."

#, fuzzy
#~ msgid "Solution"
#~ msgstr "Solución"

#, fuzzy
#~ msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
#~ msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#, fuzzy
#~ msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
#~ msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#, fuzzy
#~ msgid "The solution is located in the `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directory]."
#~ msgstr "La solución se encuentra en el `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directorio]."

#, fuzzy
#~ msgid "Creating the Maven Project"
#~ msgstr "Creación del proyecto Maven"

#, fuzzy
#~ msgid "First, we need a new project. Create a new project with the following command:"
#~ msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#, fuzzy
#~ msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
#~ msgstr "No te olvides de añadir la biblioteca del conector de la base de datos que elijas. Aquí estamos usando PostgreSQL como almacén de identidad."

#, fuzzy
#~ msgid "This command generates a Maven project, importing the `security-jpa` extension which allows you to map your security source to JPA entities."
#~ msgstr "Este comando genera un proyecto Maven, importando la extensión `security-jpa` que permite mapear su fuente de seguridad a entidades JPA."

#, fuzzy
#~ msgid "If you already have your Quarkus project configured, you can add the `security-jpa` extension to your project by running the following command in your project base directory:"
#~ msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `security-jpa` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#, fuzzy
#~ msgid "This will add the following to your build file:"
#~ msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#, fuzzy
#~ msgid "pom.xml"
#~ msgstr "pom.xml"

#, fuzzy
#~ msgid "build.gradle"
#~ msgstr "build.gradle"

#, fuzzy
#~ msgid "Writing the application"
#~ msgstr "Escribir la aplicación"

#, fuzzy
#~ msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular JAX-RS resource:"
#~ msgstr "Empecemos por implementar el endpoint `/api/public`. Como puedes ver en el código fuente de abajo, es sólo un recurso JAX-RS normal:"

#, fuzzy
#~ msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
#~ msgstr "El código fuente del endpoint `/api/admin` también es muy sencillo. La principal diferencia aquí es que estamos utilizando una anotación `@RolesAllowed` para asegurarnos de que sólo los usuarios con el rol `admin` pueden acceder al endpoint:"

#, fuzzy
#~ msgid "Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.  We are using `SecurityContext` to get access to the current authenticated Principal, and we return the user's name. This information is loaded from the database."
#~ msgstr "Finalmente, consideremos el endpoint `/api/users/me`. Como puedes ver en el código fuente de abajo, estamos confiando sólo en los usuarios con el rol `user`. Estamos usando `SecurityContext` para obtener acceso al Principal autenticado actual y devolvemos el nombre del usuario. Esta información se carga desde la base de datos."

#, fuzzy
#~ msgid "Defining our user entity"
#~ msgstr "Definir nuestra entidad de usuario"

#, fuzzy
#~ msgid "Configuring the Application"
#~ msgstr "Configuración de la aplicación"

#, fuzzy
#~ msgid "The `security-jpa` extension requires at least one datasource to access to your database."
#~ msgstr "La extensión `security-jpa` requiere al menos una fuente de datos para acceder a su base de datos."

#, fuzzy
#~ msgid "In our context, we are using PostgreSQL as identity store. The database schema is created by Hibernate ORM automatically on startup (change this in production), and we initialize the database with users and roles in the `Startup` class:"
#~ msgstr "En nuestro contexto, estamos utilizando PostgreSQL como almacén de identidades. El esquema de la base de datos es creado por Hibernate ORM automáticamente al inicio (cambiar esto en producción) y se inicializa la base de datos con los usuarios y roles en la clase `Startup`:"

#, fuzzy
#~ msgid "It is probably useless, but we kindly remind you that you must not store clear-text passwords in production environments ;-).  As a result, the `security-jpa` defaults to using bcrypt-hashed passwords."
#~ msgstr "Probablemente sea inútil, pero le recordamos que no debe almacenar contraseñas en texto claro en entornos de producción ;-). En consecuencia, el sitio `security-jpa` utiliza por defecto contraseñas cifradas con bcrypt."

#, fuzzy
#~ msgid "Testing the Application"
#~ msgstr "Probar la aplicación"

#, fuzzy
#~ msgid "You can start the application in dev mode as follows:"
#~ msgstr "Puedes iniciar la aplicación en modo dev como sigue:"

#, fuzzy
#~ msgid "In the following tests we use the basic authentication mechanism, you can enable it by setting `quarkus.http.auth.basic=true` in the `application.properties` file."
#~ msgstr "En las siguientes pruebas utilizamos el mecanismo de autenticación básica, puedes habilitarlo configurando `quarkus.http.auth.basic=true` en el archivo `application.properties`."

#, fuzzy
#~ msgid "The application is now protected and the identities are provided by our database.  The very first thing to check is to ensure the anonymous access works."
#~ msgstr "La aplicación está ahora protegida y las identidades son proporcionadas por nuestra base de datos. Lo primero que hay que comprobar es que el acceso anónimo funciona."

#, fuzzy
#~ msgid "Now, let's try to hit a protected resource anonymously."
#~ msgstr "Ahora, intentemos atacar un recurso protegido de forma anónima."

#, fuzzy
#~ msgid "So far so good, now let's try with an allowed user."
#~ msgstr "Hasta aquí todo bien, ahora probemos con un usuario permitido."

#, fuzzy
#~ msgid "By providing the `admin:admin` credentials, the extension authenticated the user and loaded their roles.  The `admin` user is authorized to access to the protected resources."
#~ msgstr "Al proporcionar las credenciales de `admin:admin`, la extensión autentificó al usuario y cargó sus roles. El usuario de `admin` está autorizado a acceder a los recursos protegidos."

#, fuzzy
#~ msgid "The user `admin` should be forbidden to access a resource protected with `@RolesAllowed(\"user\")` because it doesn't have this role."
#~ msgstr "El usuario `admin` debería tener prohibido el acceso a un recurso protegido con `@RolesAllowed(\"user\")` porque no tiene este rol."

#, fuzzy
#~ msgid "Finally, using the user `user` works and the security context contains the principal details (username for instance)."
#~ msgstr "Por último, el uso del usuario `user` funciona y el contexto de seguridad contiene los detalles principales (nombre de usuario, por ejemplo)."

#, fuzzy
#~ msgid "Supported model types"
#~ msgstr "Tipos de modelos admitidos"

#, fuzzy
#~ msgid "The `@UserDefinition` class must be a JPA entity (with Panache or not)."
#~ msgstr "La clase `@UserDefinition` debe ser una entidad JPA (con Panache o no)."

#, fuzzy
#~ msgid "Storing roles in another entity"
#~ msgstr "Almacenamiento de roles en otra entidad"

#, fuzzy
#~ msgid "You can also store roles in another entity:"
#~ msgstr "También puede almacenar los roles en otra entidad:"

#, fuzzy
#~ msgid "with MCF you don't need dedicated columns to store the hashing algorithm, the iterations count or the salt because they're all stored in the hashed value."
#~ msgstr "Con MCF no se necesitan columnas dedicadas para almacenar el algoritmo de hashing, el recuento de iteraciones o la sal, ya que todo se almacena en el valor de hashed."

#, fuzzy
#~ msgid "You also have the possibility to store password using different hashing algorithm `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`:"
#~ msgstr "También tiene la posibilidad de almacenar la contraseña utilizando diferentes algoritmos de hashing `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`:"
