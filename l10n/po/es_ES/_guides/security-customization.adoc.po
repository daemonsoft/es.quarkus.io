# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-15 08:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-customization.adoc:6
#, fuzzy, no-wrap
msgid "Security Tips and Tricks"
msgstr "Consejos y trucos de seguridad"

#. type: Title ==
#: upstream/_guides/security-customization.adoc:9
#, fuzzy, no-wrap
msgid "Quarkus Security Dependency"
msgstr "Dependencia de seguridad de Quarkus"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:12
#, fuzzy
msgid "`io.quarkus:quarkus-security` module contains the core Quarkus Security classes."
msgstr "`io.quarkus:quarkus-security` contiene el núcleo de las clases de seguridad de Quarkus."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:15
#, fuzzy
msgid "In most cases, it does not have to be added directly to your project's build file as it is already provided by all the security extensions.  However, if you need to write your own custom security code (for example, register a xref:jaxrs-security-context[Custom Jakarta REST SecurityContext]) or use xref:bouncy-castle[BouncyCastle] libraries, then please make sure it is included:"
msgstr "En la mayoría de los casos, no es necesario añadirlo directamente al archivo de compilación de su proyecto, ya que lo proporcionan todas las extensiones de seguridad. Sin embargo, si necesitas escribir tu propio código de seguridad personalizado (por ejemplo, registrar un  link:#jaxrs-security-context[JAX-RS SecurityContext personalizado]) o utilizar las bibliotecas de  link:#bouncy-castle[BouncyCastle], entonces asegúrate de que está incluido:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:17
#: upstream/_guides/security-customization.adoc:415
#: upstream/_guides/security-customization.adoc:450
#: upstream/_guides/security-customization.adoc:478
#: upstream/_guides/security-customization.adoc:529
#: upstream/_guides/security-customization.adoc:601
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:23
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-security</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-customization.adoc:26
#: upstream/_guides/security-customization.adoc:424
#: upstream/_guides/security-customization.adoc:459
#: upstream/_guides/security-customization.adoc:487
#: upstream/_guides/security-customization.adoc:543
#: upstream/_guides/security-customization.adoc:610
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:29
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-security\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:31
#, fuzzy, no-wrap
msgid "HttpAuthenticationMechanism Customization"
msgstr "Personalización de HttpAuthenticationMechanism"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:35
#, fuzzy
msgid "One can customize `HttpAuthenticationMechanism` by registering a CDI implementation bean.  In the example below the custom authenticator delegates to `JWTAuthMechanism` provided by `quarkus-smallrye-jwt`:"
msgstr "Se puede personalizar `HttpAuthenticationMechanism` registrando un bean de implementación de CDI. En el siguiente ejemplo, el autentificador personalizado delega en `JWTAuthMechanism` proporcionado por `quarkus-smallrye-jwt`:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:42
#, no-wrap
msgid ""
"@Alternative\n"
"@Priority(1)\n"
"@ApplicationScoped\n"
"public class CustomAwareJWTAuthMechanism implements HttpAuthenticationMechanism {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:44
#: upstream/_guides/security-customization.adoc:93
#, no-wrap
msgid "\tprivate static final Logger LOG = LoggerFactory.getLogger(CustomAwareJWTAuthMechanism.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:47
#, no-wrap
msgid ""
"\t@Inject\n"
"\tJWTAuthMechanism delegate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:53
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<SecurityIdentity> authenticate(RoutingContext context, IdentityProviderManager identityProviderManager) {\n"
"\t    // do some custom action and delegate\n"
"            return delegate.authenticate(context, identityProviderManager);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:58
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<ChallengeData> getChallenge(RoutingContext context) {\n"
"\t\treturn delegate.getChallenge(context);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:63
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Set<Class<? extends AuthenticationRequest>> getCredentialTypes() {\n"
"\t\treturn delegate.getCredentialTypes();\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:68
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<HttpCredentialTransport> getCredentialTransport() {\n"
"\t\treturn delegate.getCredentialTransport();\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:70
#: upstream/_guides/security-customization.adoc:132
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:73
#, fuzzy, no-wrap
msgid "Dealing with more than one HttpAuthenticationMechanism"
msgstr "Tratar con más de un HttpAuthenticationMechanism"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:76
#, fuzzy
msgid "More than one `HttpAuthenticationMechanism` can be combined, for example, the built-in `Basic` or `JWT` mechanism provided by `quarkus-smallrye-jwt` has to be used to verify the service clients credentials passed as the HTTP `Authorization` `Basic` or `Bearer` scheme values while the `Authorization Code` mechanism provided by `quarkus-oidc` has to be used to authenticate the users with Keycloak or other OpenID Connect providers."
msgstr "Se puede combinar más de un `HttpAuthenticationMechanism`, por ejemplo, el mecanismo incorporado `Basic` o `JWT` proporcionado por `quarkus-smallrye-jwt` tiene que ser utilizado para verificar las credenciales de los clientes del servicio pasadas como los valores del esquema HTTP `Authorization` `Basic` o `Bearer` mientras que el mecanismo `Authorization Code` proporcionado por `quarkus-oidc` tiene que ser utilizado para autenticar a los usuarios con `Keycloak` u otros proveedores de `OpenId Connect`."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:78
#, fuzzy
msgid "In such cases the mechanisms are asked to verify the credentials in turn until a `SecurityIdentity` is created. The mechanisms are sorted in the descending order using their priority. `Basic` authentication mechanism has the highest priority of `2000`, followed by the `Authorization Code` one with the priority of `1001`, with all other mechanisms provided by Quarkus having the priority of `1000`."
msgstr "En estos casos, se pide a los mecanismos que verifiquen las credenciales por turnos hasta que se cree un `SecurityIdentity`. Los mecanismos se clasifican en orden descendente utilizando su prioridad. El mecanismo de autenticación `Basic` tiene la prioridad más alta de `2000`, seguido por el de `Authorization Code` con la prioridad de `1001`, teniendo todos los demás mecanismos proporcionados por Quarkus la prioridad de `1000`."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:80
#, fuzzy
msgid "If no credentials are provided then the mechanism specific challenge is created, for example, `401` status is returned by either `Basic` or `JWT` mechanisms, URL redirecting the user to the OpenID Connect provider is returned by `quarkus-oidc`, etc."
msgstr "Si no se proporcionan credenciales, se crea el desafío específico del mecanismo, por ejemplo, el estado `401` es devuelto por los mecanismos `Basic` o `JWT`, la URL que redirige al usuario al proveedor `OpenId Connect` es devuelta por `quarkus-oidc`, etc."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:82
#, fuzzy
msgid "So if `Basic` and `Authorization Code` mechanisms are combined then `401` will be returned if no credentials are provided and if `JWT` and `Authorization Code` mechanisms are combined then a redirect URL will be returned."
msgstr "Así, si se combinan los mecanismos `Basic` y `Authorization Code`, se devolverá `401` si no se proporcionan credenciales, y si se combinan los mecanismos `JWT` y `Authorization Code`, se devolverá una URL de redirección."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:84
#, fuzzy
msgid "In some cases such a default logic of selecting the challenge is exactly what is required by a given application, but sometimes it may not meet the requirements. In such cases (or indeed in other similar cases where you'd like to change the order in which the mechanisms are asked to handle the current authentication or challenge request), you can create a custom mechanism and choose which mechanism should create a challenge, for example:"
msgstr "En algunos casos, esa lógica por defecto de selección del reto es exactamente lo que requiere una aplicación determinada, pero a veces puede no cumplir los requisitos. En estos casos (o incluso en otros casos similares en los que te gustaría cambiar el orden en el que se pide a los mecanismos que gestionen la solicitud de autenticación o desafío actual), puedes crear un mecanismo personalizado y elegir qué mecanismo debe crear un desafío, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:91
#, no-wrap
msgid ""
"@Alternative <1>\n"
"@Priority(1)\n"
"@ApplicationScoped\n"
"public class CustomAwareJWTAuthMechanism implements HttpAuthenticationMechanism {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:96
#, no-wrap
msgid ""
"\t@Inject\n"
"\tJWTAuthMechanism jwt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:99
#, no-wrap
msgid ""
"        @Inject\n"
"\tOidcAuthenticationMechanism oidc;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:104
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<SecurityIdentity> authenticate(RoutingContext context, IdentityProviderManager identityProviderManager) {\n"
"\t    return selectBetweenJwtAndOidc(context).authenticate(context, identityProviderManager);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:109
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<ChallengeData> getChallenge(RoutingContext context) {\n"
"            return selectBetweenJwtAndOidcChallenge(context).getChallenge(context);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:117
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Set<Class<? extends AuthenticationRequest>> getCredentialTypes() {\n"
"            Set<Class<? extends AuthenticationRequest>> credentialTypes = new HashSet<>();\n"
"            credentialTypes.addAll(jwt.getCredentialTypes());\n"
"            credentialTypes.addAll(oidc.getCredentialTypes());\n"
"            return credentialTypes;\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:122
#, no-wrap
msgid ""
"        @Override\n"
"        public Uni<HttpCredentialTransport> getCredentialTransport(RoutingContext context) {\n"
"            return selectBetweenJwtAndOidc(context).getCredentialTransport(context);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:126
#, no-wrap
msgid ""
"        private HttpAuthenticationMechanism selectBetweenJwtAndOidc(RoutingContext context) {\n"
"            ....\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:130
#, no-wrap
msgid ""
"        private HttpAuthenticationMechanism selectBetweenJwtAndOidcChallenge(RoutingContext context) {\n"
"            // for example, if no `Authorization` header is available and no `code` parameter is provided - use `jwt` to create a challenge\n"
"        }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:134
#, fuzzy
msgid "Declaring the mechanism an alternative bean ensures this mechanism is used rather than `OidcAuthenticationMechanism` and `JWTAuthMechanism`."
msgstr "Declarar el mecanismo como un frijol alternativo garantiza que se utilice este mecanismo en lugar de `OidcAuthenticationMechanism` y `JWTAuthMechanism`."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:136
#, fuzzy, no-wrap
msgid "Security Identity Customization"
msgstr "Personalización de la identidad de seguridad"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:139
#, fuzzy
msgid "Internally, the identity providers create and update an instance of the `io.quarkus.security.identity.SecurityIdentity` class which holds the principal, roles, credentials which were used to authenticate the client (user) and other security attributes. An easy option to customize `SecurityIdentity` is to register a custom `SecurityIdentityAugmentor`. For example, the augmentor below adds an addition role:"
msgstr "Internamente, los proveedores de identidad crean y actualizan una instancia de la clase `io.quarkus.security.identity.SecurityIdentity` que contiene el principal, los roles, las credenciales que se utilizaron para autenticar al cliente (usuario) y otros atributos de seguridad. Una opción fácil para personalizar `SecurityIdentity` es registrar un `SecurityIdentityAugmentor` personalizado. Por ejemplo, el aumentador de abajo añade un rol adicional:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:147
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:150
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:153
#: upstream/_guides/security-customization.adoc:195
#: upstream/_guides/security-customization.adoc:251
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class RolesAugmentor implements SecurityIdentityAugmentor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:157
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        return Uni.createFrom().item(build(identity));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:161
#, no-wrap
msgid ""
"        // Do 'return context.runBlocking(build(identity));'\n"
"        // if a blocking call is required to customize the identity\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:168
#, no-wrap
msgid ""
"    private Supplier<SecurityIdentity> build(SecurityIdentity identity) {\n"
"        if(identity.isAnonymous()) {\n"
"            return () -> identity;\n"
"        } else {\n"
"            // create a new builder and copy principal, attributes, credentials and roles from the original identity\n"
"            QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:175
#, no-wrap
msgid ""
"            // add custom role source here\n"
"            builder.addRole(\"dummy\");\n"
"            return builder::build;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:178
#, fuzzy
msgid "Here is another example showing how to use the client certificate available in the current xref:security-authentication-mechanisms.adoc#mutual-TLS-authentication[mutual TLS (mTLS) authentication] request to add more roles:"
msgstr "Aquí hay otro ejemplo que muestra cómo utilizar el certificado de cliente disponible en la solicitud de  link:security-built-in-authentication.html#mutual-tls[TLS mutua] actual para añadir más roles:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:188
#, no-wrap
msgid ""
"import java.security.cert.X509Certificate;\n"
"import io.quarkus.security.credential.CertificateCredential;\n"
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:192
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import java.util.function.Supplier;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:200
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        return Uni.createFrom().item(build(identity));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:204
#, no-wrap
msgid ""
"    private Supplier<SecurityIdentity> build(SecurityIdentity identity) {\n"
"        // create a new builder and copy principal, attributes, credentials and roles from the original identity\n"
"        QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:211
#, no-wrap
msgid ""
"        CertificateCredential certificate = identity.getCredential(CertificateCredential.class);\n"
"        if (certificate != null) {\n"
"            builder.addRoles(extractRoles(certificate.getCertificate()));\n"
"        }\n"
"        return builder::build;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:214
#, no-wrap
msgid ""
"    private Set<String> extractRoles(X509Certificate certificate) {\n"
"        String name = certificate.getSubjectX500Principal().getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:225
#, no-wrap
msgid ""
"        switch (name) {\n"
"            case \"CN=client\":\n"
"                return Collections.singleton(\"user\");\n"
"            case \"CN=guest-client\":\n"
"                return Collections.singleton(\"guest\");\n"
"            default:\n"
"                return Collections.emptySet();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:231
#, fuzzy
msgid "If more than one custom `SecurityIdentityAugmentor` is registered then they will be considered equal candidates and invoked in random order.  You can enforce the order by implementing a default `SecurityIdentityAugmentor#priority` method. Augmentors with higher priorities will be invoked first."
msgstr "Si se registra más de un `SecurityIdentityAugmentor` personalizado, se considerarán candidatos iguales y se invocarán en orden aleatorio. Se puede imponer el orden implementando un método por defecto `SecurityIdentityAugmentor#priority`. Los aumentadores con mayor prioridad serán invocados primero."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:235
#, fuzzy
msgid "By default, the request context is not activated when augmenting the security identity, this means that if you want to use for example Hibernate that mandates a request context, you will have a `jakarta.enterprise.context.ContextNotActiveException`."
msgstr "Por defecto, el contexto de petición no se activa cuando se aumenta la identidad de seguridad, esto significa que si quieres usar por ejemplo Hibernate que obliga a tener un contexto de petición, tendrás un `javax.enterprise.context.ContextNotActiveException`."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:237
#, fuzzy
msgid "The solution is to activate the request context, the following example shows how to get the roles from an Hibernate with Panache `UserRoleEntity`."
msgstr "La solución es activar el contexto de petición, el siguiente ejemplo muestra cómo obtener los roles de un Hibernate con Panache `UserRoleEntity`."

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:244
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:248
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.inject.Instance;\n"
"import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:254
#, no-wrap
msgid ""
"    @Inject\n"
"    Instance<SecurityIdentitySupplier> identitySupplierInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:260
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        if(identity.isAnonymous()) {\n"
"            return Uni.createFrom().item(identity);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:267
#, no-wrap
msgid ""
"        // Hibernate ORM is blocking\n"
"        SecurityIdentitySupplier identitySupplier = identitySupplierInstance.get();\n"
"        identitySupplier.setIdentity(identity);\n"
"        return context.runBlocking(identitySupplier);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:273
#, no-wrap
msgid ""
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:277
#, no-wrap
msgid ""
"import jakarta.enterprise.context.Dependent;\n"
"import jakarta.enterprise.context.control.ActivateRequestContext;\n"
"import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:280
#, no-wrap
msgid ""
"@Dependent\n"
"class SecurityIdentitySupplier implements Supplier<SecurityIdentity> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:282
#, no-wrap
msgid "    private SecurityIdentity identity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:288
#, no-wrap
msgid ""
"    @Override\n"
"    @ActivateRequestContext\n"
"    public SecurityIdentity get() {\n"
"        QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
"        String user = identity.getPrincipal().getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:292
#, no-wrap
msgid ""
"        UserRoleEntity.<userRoleEntity>streamAll()\n"
"                .filter(role -> user.equals(role.user))\n"
"                .forEach(role -> builder.addRole(role.role));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:295
#, no-wrap
msgid ""
"        return builder.build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:300
#, no-wrap
msgid ""
"    public void setIdentity(SecurityIdentity identity) {\n"
"        this.identity = identity;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:303
#, fuzzy, no-wrap
msgid "Custom Jakarta REST SecurityContext"
msgstr "Contexto de seguridad JAX-RS personalizado"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:306
#, fuzzy
msgid "If you use Jakarta REST `ContainerRequestFilter` to set a custom Jakarta REST `SecurityContext` then make sure `ContainerRequestFilter` runs in the Jakarta REST pre-match phase by adding a `@PreMatching` annotation to it for this custom security context to be linked with Quarkus `SecurityIdentity`, for example:"
msgstr "Si utiliza JAX-RS `ContainerRequestFilter` para establecer un JAX-RS personalizado `SecurityContext` entonces asegúrese de que `ContainerRequestFilter` se ejecute en la fase de precomparación de JAX-RS añadiendo una anotación `@PreMatching` para que este contexto de seguridad personalizado se vincule con Quarkus `SecurityIdentity`, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:310
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:316
#, no-wrap
msgid ""
"import jakarta.ws.rs.container.ContainerRequestContext;\n"
"import jakarta.ws.rs.container.ContainerRequestFilter;\n"
"import jakarta.ws.rs.container.PreMatching;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
"import jakarta.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:335
#, no-wrap
msgid ""
"@Provider\n"
"@PreMatching\n"
"public class SecurityOverrideFilter implements ContainerRequestFilter {\n"
"    @Override\n"
"    public void filter(ContainerRequestContext requestContext) throws IOException {\n"
"        String user = requestContext.getHeaders().getFirst(\"User\");\n"
"        String role = requestContext.getHeaders().getFirst(\"Role\");\n"
"        if (user != null && role != null) {\n"
"            requestContext.setSecurityContext(new SecurityContext() {\n"
"                @Override\n"
"                public Principal getUserPrincipal() {\n"
"                    return new Principal() {\n"
"                        @Override\n"
"                        public String getName() {\n"
"                            return user;\n"
"                        }\n"
"                    };\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:340
#, no-wrap
msgid ""
"                @Override\n"
"                public boolean isUserInRole(String r) {\n"
"                    return role.equals(r);\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:345
#, no-wrap
msgid ""
"                @Override\n"
"                public boolean isSecure() {\n"
"                    return false;\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:352
#, no-wrap
msgid ""
"                @Override\n"
"                public String getAuthenticationScheme() {\n"
"                    return \"basic\";\n"
"                }\n"
"            });\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:355
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-customization.adoc:357
#, fuzzy, no-wrap
msgid "Disabling Authorization"
msgstr "Desactivación de la autorización"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:360
#, fuzzy
msgid "If you have a good reason to disable the authorization then you can register a custom `AuthorizationController`:"
msgstr "Si tiene una buena razón para desactivar la autorización, entonces puede registrar un `AuthorizationController` personalizado:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:369
#, no-wrap
msgid ""
"@Alternative\n"
"@Priority(Interceptor.Priority.LIBRARY_AFTER)\n"
"@ApplicationScoped\n"
"public class DisabledAuthController extends AuthorizationController {\n"
"    @ConfigProperty(name = \"disable.authorization\", defaultValue = \"false\")\n"
"    boolean disableAuthorization;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:375
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isAuthorizationEnabled() {\n"
"        return !disableAuthorization;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:378
#, fuzzy
msgid "For manual testing Quarkus provides a convenient config property to disable authorization in dev mode. This property has the exact same effect as the custom `AuthorizationController` shown above, but is only available in dev mode:"
msgstr "Para las pruebas manuales, Quarkus proporciona una conveniente propiedad de configuración para deshabilitar la autorización en modo dev. Esta propiedad tiene exactamente el mismo efecto que la personalizada `AuthorizationController` mostrada arriba, pero sólo está disponible en modo dev:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:382
#, no-wrap
msgid "quarkus.security.auth.enabled-in-dev-mode=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:385
#, fuzzy
msgid "Please also see xref:security-testing.adoc#testing-security[TestingSecurity Annotation] section on how to disable the security checks using `TestSecurity` annotation."
msgstr "Por favor, vea también la sección  link:security-testing.html#testing-security[Anotación de Seguridad de Pruebas] sobre cómo desactivar las comprobaciones de seguridad utilizando la anotación `TestSecurity`."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:386
#, fuzzy, no-wrap
msgid "Registering Security Providers"
msgstr "Registro de proveedores de seguridad"

#. type: Title ===
#: upstream/_guides/security-customization.adoc:388
#, fuzzy, no-wrap
msgid "Default providers"
msgstr "Proveedores por defecto"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:394
#, fuzzy
msgid "When running in native mode, the default behavior for GraalVM native executable generation is to only include the main \"SUN\" provider unless you have enabled SSL, in which case all security providers are registered. If you are not using SSL, then you can selectively register security providers by name using the `quarkus.security.security-providers` property. The following example illustrates configuration to register the \"SunRsaSign\" and \"SunJCE\" security providers:"
msgstr "Cuando se ejecuta en modo nativo, el comportamiento por defecto para la generación de ejecutables nativos de GraalVM es incluir sólo el proveedor principal \"SUN\" a menos que hayas habilitado SSL, en cuyo caso se registran todos los proveedores de seguridad. Si no estás usando SSL, entonces puedes registrar selectivamente los proveedores de seguridad por nombre usando la propiedad `quarkus.security.security-providers`. El siguiente ejemplo ilustra la configuración para registrar los proveedores de seguridad \"SunRsaSign\" y \"SunJCE\":"

#. type: Block title
#: upstream/_guides/security-customization.adoc:395
#, fuzzy, no-wrap
msgid "Example Security Providers Configuration"
msgstr "Ejemplo de configuración de proveedores de seguridad"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:399
#, no-wrap
msgid "quarkus.security.security-providers=SunRsaSign,SunJCE\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-customization.adoc:402
#, fuzzy, no-wrap
msgid "BouncyCastle"
msgstr "BouncyCastle"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:405
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jce.provider.BouncyCastleProvider` JCE provider then please set a `BC` provider name:"
msgstr "Si necesita registrar un proveedor de JCE en `org.bouncycastle.jce.provider.BouncyCastleProvider`, establezca un nombre de proveedor en `BC`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:406
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle Configuration"
msgstr "Ejemplo de configuración de proveedores de seguridad BouncyCastle"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:410
#, no-wrap
msgid "quarkus.security.security-providers=BC\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:413
#, fuzzy
msgid "and add the BouncyCastle provider dependency:"
msgstr "y añadir la dependencia del proveedor BouncyCastle:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:421
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.bouncycastle</groupId>\n"
"    <artifactId>bcprov-jdk18on</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:427
#, no-wrap
msgid "implementation(\"org.bouncycastle:bcprov-jdk18on\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-customization.adoc:430
#, fuzzy, no-wrap
msgid "BouncyCastle JSSE"
msgstr "BouncyCastle JSSE"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:433
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it instead of the default SunJSSE provider then please set a `BCJSSE` provider name:"
msgstr "Si necesita registrar un proveedor JSSE de `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` y utilizarlo en lugar del proveedor SunJSSE predeterminado, establezca un nombre de proveedor de `BCJSSE`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:434
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle JSSE Configuration"
msgstr "Ejemplo de proveedores de seguridad Configuración de BouncyCastle JSSE"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:438
#, no-wrap
msgid "quarkus.security.security-providers=BCJSSE\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:440
#: upstream/_guides/security-customization.adoc:515
#, no-wrap
msgid "quarkus.http.ssl.client-auth=REQUIRED\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:445
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks\n"
"quarkus.http.ssl.certificate.key-store-password=password\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks\n"
"quarkus.http.ssl.certificate.trust-store-password=password\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:448
#, fuzzy
msgid "and add the BouncyCastle TLS dependency:"
msgstr "y añadir la dependencia de BouncyCastle TLS:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:456
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.bouncycastle</groupId>\n"
"    <artifactId>bctls-jdk18on</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:462
#, no-wrap
msgid "implementation(\"org.bouncycastle:bctls-jdk18on\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-customization.adoc:465
#, fuzzy, no-wrap
msgid "BouncyCastle FIPS"
msgstr "BouncyCastle FIPS"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:468
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` JCE provider then please set a `BCFIPS` provider name:"
msgstr "Si necesita registrar un proveedor de JCE en `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider`, establezca un nombre de proveedor en `BCFIPS`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:469
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle FIPS Configuration"
msgstr "Ejemplo de proveedores de seguridad Configuración FIPS de BouncyCastle"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:473
#, no-wrap
msgid "quarkus.security.security-providers=BCFIPS\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:476
#, fuzzy
msgid "and add the BouncyCastle FIPS provider dependency:"
msgstr "y añadir la dependencia del proveedor BouncyCastle FIPS:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:484
#: upstream/_guides/security-customization.adoc:540
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.bouncycastle</groupId>\n"
"    <artifactId>bc-fips</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:490
#, no-wrap
msgid "implementation(\"org.bouncycastle:bc-fips\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:495
#, fuzzy
msgid "`BCFIPS` provider option is supported in native image but the algorithm self-tests which rely on `java.security.SecureRandom` to verify the generated keys have been removed for these tests to pass. The following classes have been affected:"
msgstr "`BCFIPS` La opción del proveedor es compatible con la imagen nativa, pero las autopruebas del algoritmo que dependen de `java.security.SecureRandom` para verificar las claves generadas se han eliminado para que estas pruebas pasen. Las siguientes clases se han visto afectadas:"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:496
#, fuzzy
msgid "`org.bouncycastle.crypto.general.DSA`"
msgstr "`org.bouncycastle.crypto.general.DSA`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:497
#, fuzzy
msgid "`org.bouncycastle.crypto.general.DSTU4145`"
msgstr "`org.bouncycastle.crypto.general.DSTU4145`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:498
#, fuzzy
msgid "`org.bouncycastle.crypto.general.ECGOST3410`"
msgstr "`org.bouncycastle.crypto.general.ECGOST3410`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:499
#, fuzzy
msgid "`org.bouncycastle.crypto.general.GOST3410`"
msgstr "`org.bouncycastle.crypto.general.GOST3410`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:500
#, fuzzy
msgid "`org.bouncycastle.crypto.fips.FipsDSA`"
msgstr "`org.bouncycastle.crypto.fips.FipsDSA`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:501
#, fuzzy
msgid "`org.bouncycastle.crypto.fips.FipsEC`"
msgstr "`org.bouncycastle.crypto.fips.FipsEC`"

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:502
#, fuzzy
msgid "`org.bouncycastle.crypto.fips.FipsRSA`"
msgstr "`org.bouncycastle.crypto.fips.FipsRSA`"

#. type: Title ===
#: upstream/_guides/security-customization.adoc:505
#, fuzzy, no-wrap
msgid "BouncyCastle JSSE FIPS"
msgstr "BouncyCastle JSSE FIPS"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:508
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it in combination with `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` instead of the default SunJSSE provider then please set a `BCFIPSJSSE` provider name:"
msgstr "Si necesita registrar un proveedor JSSE de `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` y utilizarlo en combinación con `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` en lugar del proveedor SunJSSE predeterminado, establezca un nombre de proveedor `BCFIPSJSSE`:"

#. type: Block title
#: upstream/_guides/security-customization.adoc:509
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle FIPS JSSE Configuration"
msgstr "Ejemplo de configuración de proveedores de seguridad BouncyCastle FIPS JSSE"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:513
#, no-wrap
msgid "quarkus.security.security-providers=BCFIPSJSSE\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:524
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks\n"
"quarkus.http.ssl.certificate.key-store-password=password\n"
"quarkus.http.ssl.certificate.key-store-file-type=BCFKS\n"
"quarkus.http.ssl.certificate.key-store-provider=BCFIPS\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks\n"
"quarkus.http.ssl.certificate.trust-store-password=password\n"
"quarkus.http.ssl.certificate.trust-store-file-type=BCFKS\n"
"quarkus.http.ssl.certificate.trust-store-provider=BCFIPS\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:527
#, fuzzy
msgid "and the BouncyCastle TLS dependency optimized for using the BouncyCastle FIPS provider:"
msgstr "y la dependencia de BouncyCastle TLS optimizada para utilizar el proveedor BouncyCastle FIPS:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:535
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>org.bouncycastle</groupId>\n"
"  <artifactId>bctls-fips</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:547
#, no-wrap
msgid ""
"implementation(\"org.bouncycastle:bctls-fips\")\n"
"implementation(\"org.bouncycastle:bc-fips\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:551
#, fuzzy
msgid "Note that the keystore and truststore type and provider are set to `BCFKS` and `BCFIPS`.  One can generate a keystore with this type and provider like this:"
msgstr "Tenga en cuenta que el tipo y el proveedor de keystore y truststore están configurados como `BCFKS` y `BCFIPS`. Se puede generar un keystore con este tipo y proveedor así:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:555
#, no-wrap
msgid "keytool -genkey -alias server -keyalg RSA -keystore server-keystore.jks -keysize 2048 -keypass password -provider org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider -providerpath $PATH_TO_BC_FIPS_JAR -storetype BCFKS\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:560
#, fuzzy
msgid "`BCFIPSJSSE` provider option is currently not supported in native image."
msgstr "`BCFIPSJSSE` Actualmente, la opción de proveedor no es compatible con la imagen nativa."

#. type: Title ===
#: upstream/_guides/security-customization.adoc:563
#, fuzzy, no-wrap
msgid "SunPKCS11"
msgstr "SunPKCS11"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:566
#, fuzzy
msgid "`SunPKCS11` provider provides a bridge to specific `PKCS#11` implementations such as cryptographic smartcards and other Hardware Security Modules, Network Security Services in FIPS mode, etc."
msgstr "`SunPKCS11` proporciona un puente hacia implementaciones específicas de `PKCS#11`, como tarjetas inteligentes criptográficas y otros módulos de seguridad de hardware, servicios de seguridad de red en modo FIPS, etc."

#. type: Plain text
#: upstream/_guides/security-customization.adoc:568
#, fuzzy
msgid "Typically, in order to work with `SunPKCS11`, one needs to install a `PKCS#11` implementation, generate a configuration which usually refers to a shared library, token slot, etc and write the following Java code:"
msgstr "Normalmente, para trabajar con `SunPKCS11`, hay que instalar una implementación de `PKCS#11`, generar una configuración que suele hacer referencia a una biblioteca compartida, a un slot de fichas, etc. y escribir el siguiente código Java:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:573
#, no-wrap
msgid ""
"import java.security.Provider;\n"
"import java.security.Security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:575
#, no-wrap
msgid "String configuration = \"pkcs11.cfg\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:581
#, no-wrap
msgid ""
"Provider sunPkcs11 = Security.getProvider(\"SunPKCS11\");\n"
"Provider pkcsImplementation = sunPkcs11.configure(configuration);\n"
"// or prepare configuration in the code or read it from the file such as \"pkcs11.cfg\" and do\n"
"// sunPkcs11.configure(\"--\" + configuration);\n"
"Security.addProvider(pkcsImplementation);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:584
#, fuzzy
msgid "In Quarkus you can achieve the same at the configuration level only without having to modify the code, for example:"
msgstr "En Quarkus se puede conseguir lo mismo sólo a nivel de configuración sin tener que modificar el código, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:589
#, no-wrap
msgid ""
"quarkus.security.security-providers=SunPKCS11\n"
"quarkus.security.security-provider-config.SunPKCS11=pkcs11.cfg\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-customization.adoc:594
#, fuzzy
msgid "Note that while accessing the `SunPKCS11` bridge provider is supported in native image, configuring `SunPKCS11` is currently not supported in native image at the Quarkus level."
msgstr "Tenga en cuenta que mientras que el acceso al proveedor de puentes `SunPKCS11` está soportado en la imagen nativa, la configuración de `SunPKCS11` no está actualmente soportada en la imagen nativa a nivel de Quarkus."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:596
#, fuzzy, no-wrap
msgid "Reactive Security"
msgstr "Seguridad reactiva"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:599
#, fuzzy
msgid "If you are going to use security in a reactive environment, you will likely need SmallRye Context Propagation:"
msgstr "Si va a utilizar la seguridad en un entorno reactivo, es probable que necesite SmallRye Context Propagation:"

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:607
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-context-propagation</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-customization.adoc:613
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-context-propagation\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-customization.adoc:619
#, fuzzy
msgid "This will allow you to propagate the identity throughout the reactive callbacks. You also need to make sure you are using an executor that is capable of propagating the identity (e.g. no `CompletableFuture.supplyAsync`), to make sure that Quarkus can propagate it. For more information see the xref:context-propagation.adoc[Context Propagation Guide]."
msgstr "Esto le permitirá propagar la identidad a través de las devoluciones de llamada reactivas. También hay que asegurarse de que se utiliza un ejecutor capaz de propagar la identidad (por ejemplo, no `CompletableFuture.supplyAsync`), para asegurarse de que Quarkus pueda propagarla. Para más información, véase la  link:context-propagation.html[Guía de Propagación de Contexto]."

#. type: Title ==
#: upstream/_guides/security-customization.adoc:620
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:623
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "link:security.html[Seguridad Quarkus]"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:624
#, fuzzy
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr "link:security.html[Seguridad Quarkus]"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:625
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr "link:security-authentication-mechanisms-concept.html#other-supported-authentication-mechanisms[Mecanismos de autenticación en Quarkus]"

#. type: Plain text
#: upstream/_guides/security-customization.adoc:625
#, fuzzy
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr "link:security.html[Seguridad Quarkus]"
