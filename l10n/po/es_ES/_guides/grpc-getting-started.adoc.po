# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/grpc-getting-started.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started with gRPC"
msgstr "Introducción a gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:15
#, fuzzy
msgid "This page explains how to start using gRPC in your Quarkus application.  While this page describes how to configure it with Maven, it is also possible to use Gradle."
msgstr "Esta página explica cómo empezar a usar gRPC en tu aplicación Quarkus. Aunque esta página describe cómo configurarlo con Maven, también es posible utilizar Gradle."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:18
#, fuzzy
msgid "Let's imagine you have a regular Quarkus project, generated from the https://code.quarkus.io[Quarkus project generator].  The default configuration is enough, but you can also select some extensions if you want."
msgstr "Imaginemos que tienes un proyecto normal de Quarkus, generado desde el  link:https://code.quarkus.io[generador de proyectos de Quarkus]. La configuración por defecto es suficiente, pero también puede seleccionar algunas extensiones si lo desea."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:19
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:23
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:25
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:27
#, fuzzy
msgid "The solution is located in the `grpc-plain-text-quickstart` link:{quickstarts-tree-url}/grpc-plain-text-quickstart[directory]."
msgstr "La solución se encuentra en el `grpc-plain-text-quickstart` {quickstarts-tree-url}/grpc-plain-text-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:28
#, fuzzy, no-wrap
msgid "Configuring your project"
msgstr "Configurar su proyecto"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:31
#, fuzzy
msgid "Add the Quarkus gRPC extension to your build file:"
msgstr "Añade la extensión Quarkus gRPC a tu archivo de compilación:"

#. type: Block title
#: upstream/_guides/grpc-getting-started.adoc:33
#: upstream/_guides/grpc-getting-started.adoc:52
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:39
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-grpc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/grpc-getting-started.adoc:42
#: upstream/_guides/grpc-getting-started.adoc:61
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:45
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-grpc\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:50
#, fuzzy
msgid "By default, the `quarkus-grpc` extension relies on the reactive programming model.  In this guide we will follow a reactive approach.  Under the `dependencies` section of your `pom.xml` file, make sure you have the RESTEasy Reactive dependency:"
msgstr "Por defecto, la extensión `quarkus-grpc` se basa en el modelo de programación reactiva. En esta guía seguiremos un enfoque reactivo. En la sección de dependencias de su archivo `pom.xml`, asegúrese de tener la dependencia RESTEasy Reactive:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:58
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:64
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-reactive\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:69
#, fuzzy
msgid "If you are using Maven, make sure you have the `generate-code` goal of `quarkus-maven-plugin` enabled in your `pom.xml`.  If you wish to generate code from different `proto` files for tests, also add the `generate-code-tests` goal.  Please note that no additional task/goal is required for the Gradle plugin."
msgstr "Asegúrese de que tiene habilitado el objetivo `generate-code` de `quarkus-maven-plugin` en su `pom.xml`. Si desea generar código de diferentes archivos `proto` para las pruebas, añada también el objetivo `generate-code-tests`. Ten en cuenta que no se requiere ninguna tarea/objetivo adicional para el plugin de Gradle."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:91
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-maven-plugin</artifactId>\n"
"            <version>${quarkus-plugin.version}</version>\n"
"            <extensions>true</extensions>\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>build</goal>\n"
"                        <goal>generate-code</goal>\n"
"                        <goal>generate-code-tests</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:95
#, fuzzy
msgid "With this configuration, you can put your service and message definitions in the `src/main/proto` directory.  `quarkus-maven-plugin` will generate Java files from your `proto` files."
msgstr "Con esta configuración, puede poner sus definiciones de servicios y mensajes en el directorio `src/main/proto`. `quarkus-maven-plugin` generará los archivos Java a partir de sus archivos `proto`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:101
#, fuzzy
msgid "`quarkus-maven-plugin` retrieves a version of `protoc` (the protobuf compiler) from Maven repositories. The retrieved version matches your operating system and CPU architecture.  If this retrieved version does not work in your context, you can either force to use a different OS classifier with `-Dquarkus.grpc.protoc-os-classifier=your-os-classifier` (e.g. `osx-x86_64`).  You can also download the suitable binary and specify the location via `-Dquarkus.grpc.protoc-path=/path/to/protoc`."
msgstr "`quarkus-maven-plugin` recupera una versión de `protoc` (el compilador protobuf) de los repositorios de Maven. La versión recuperada coincide con tu sistema operativo y arquitectura de CPU. Si esta versión recuperada no funciona en tu contexto, puedes forzar el uso de un clasificador de SO diferente con `-Dquarkus.grpc.protoc-os-classifier=your-os-classifier` (por ejemplo, `osx-x86_64`). También puede descargar el binario adecuado y especificar la ubicación a través de `-Dquarkus.grpc.protoc-path=/path/to/protoc`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:105
#, fuzzy
msgid "Alternatively to using the `generate-code` goal of the `quarkus-maven-plugin`, you can use `protobuf-maven-plugin` to generate these files.  See the xref:protobuf-maven-plugin[Generating Java files from proto with protobuf-maven-plugin] section for more information."
msgstr "Como alternativa al uso del objetivo `generate-code` del `quarkus-maven-plugin`, puedes utilizar `protobuf-maven-plugin` para generar estos archivos, más en  link:#Generating Java files from proto with protobuf-maven-plugin[[Generación de archivos Java desde proto con protobuf-maven-plugin]]."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:108
#, fuzzy
msgid "Let's start with a simple _Hello_ service.  Create the `src/main/proto/helloworld.proto` file with the following content:"
msgstr "Empecemos con un simple servicio _Hello_. Cree el archivo `src/main/proto/helloworld.proto` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:112
#, no-wrap
msgid "syntax = \"proto3\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:116
#, no-wrap
msgid ""
"option java_multiple_files = true;\n"
"option java_package = \"io.quarkus.example\";\n"
"option java_outer_classname = \"HelloWorldProto\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:118
#, no-wrap
msgid "package helloworld;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:124
#, no-wrap
msgid ""
"// The greeting service definition.\n"
"service Greeter {\n"
"    // Sends a greeting\n"
"    rpc SayHello (HelloRequest) returns (HelloReply) {}\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:129
#, no-wrap
msgid ""
"// The request message containing the user's name.\n"
"message HelloRequest {\n"
"    string name = 1;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:134
#, no-wrap
msgid ""
"// The response message containing the greetings\n"
"message HelloReply {\n"
"    string message = 1;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:137
#, fuzzy
msgid "This `proto` file defines a simple service interface with a single method (`SayHello`), and the exchanged messages (`HelloRequest` containing the name and `HelloReply` containing the greeting message)."
msgstr "Este archivo `proto` define una interfaz de servicio simple con un solo método ( `SayHello`), y los mensajes intercambiados ( `HelloRequest` que contiene el nombre y `HelloReply` que contiene el mensaje de saludo)."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:139
#, fuzzy
msgid "Your `proto` file must not contain `option java_generic_services = true;`. https://developers.google.com/protocol-buffers/docs/reference/java-generated?hl=en#service[Generic services are deprecated] and are not compatible with Quarkus code generation plugins."
msgstr "Su archivo `proto` no debe contener `option java_generic_services = true;`. Los  link:https://developers.google.com/protocol-buffers/docs/reference/java-generated?hl=en#service[servicios genéricos están obsoletos] y no son compatibles con los plugins de generación de código de Quarkus."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:142
#, fuzzy
msgid "Before coding, we need to generate the classes used to implement and consume gRPC services.  In a terminal, run:"
msgstr "Antes de codificar, necesitamos generar las clases utilizadas para implementar y consumir los servicios gRPC. En un terminal, ejecuta"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:146
#, no-wrap
msgid "$ mvn compile\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:149
#, fuzzy
msgid "Once generated, you can look at the `target/generated-sources/grpc` directory:"
msgstr "Una vez generado, puede consultar el directorio `target/generated-sources/grpc`:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:166
#, no-wrap
msgid ""
"target/generated-sources/grpc\n"
"└── io\n"
"    └── quarkus\n"
"        └── example\n"
"            ├── Greeter.java\n"
"            ├── GreeterBean.java\n"
"            ├── GreeterClient.java\n"
"            ├── GreeterGrpc.java\n"
"            ├── HelloReply.java\n"
"            ├── HelloReplyOrBuilder.java\n"
"            ├── HelloRequest.java\n"
"            ├── HelloRequestOrBuilder.java\n"
"            ├── HelloWorldProto.java\n"
"            └── MutinyGreeterGrpc.java\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:169
#, fuzzy
msgid "These are the classes we are going to use."
msgstr "Estas son las clases que vamos a utilizar."

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:171
#, fuzzy, no-wrap
msgid "`proto` files with imports"
msgstr "`proto` archivos con importaciones"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:175
#, fuzzy
msgid "Protocol Buffers specification provides a way to import `proto` files.  The Quarkus code generation mechanism lets you control the scope of dependencies to scan for possible imports by setting the `quarkus.generate-code.grpc.scan-for-imports` property to one of the following:"
msgstr "La especificación Protocol Buffers proporciona una manera de importar archivos `proto`. El mecanismo de generación de código de Quarkus le permite controlar el alcance de las dependencias para buscar posibles importaciones estableciendo la propiedad `quarkus.generate-code.grpc.scan-for-imports` a una de las siguientes:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:177
#, fuzzy
msgid "`all` - scan all the dependencies"
msgstr "`all` - escanear todas las dependencias"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:178
#, fuzzy
msgid "`none` - don't scan the dependencies, use only what is defined in the `src/main/proto` or `src/test/proto`"
msgstr "`none` - no escudriñe las dependencias, use sólo lo que está definido en el `src/main/proto` o `src/test/proto`"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:179
#, fuzzy
msgid "`groupId1:artifactId1,groupId2:artifactId2` - scan only the dependencies with group id and artifact id in the list."
msgstr "`groupId1:artifactId1,groupId2:artifactId2` - escanear sólo las dependencias con id de grupo e id de artefacto en la lista."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:182
#, fuzzy
msgid "If not specified, the property is set to `com.google.protobuf:protobuf-java`.  To override it, set the `quarkus.generate-code.grpc.scan-for-imports` property in your application.properties to the desired value, e.g."
msgstr "Si no se especifica, la propiedad se establece en `com.google.protobuf:protobuf-java`. Para anularla, establezca la propiedad `quarkus.generate-code.grpc.scan-for-imports` en su application.properties con el valor deseado, por ejemplo."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:186
#, no-wrap
msgid "quarkus.generate-code.grpc.scan-for-imports=all\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:188
#, fuzzy, no-wrap
msgid "`proto` files from dependencies"
msgstr "`proto` archivos de las dependencias"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:190
#, fuzzy
msgid "In some cases, you may want to use `proto` files from a different project to generate the gRPC stubs. In this case:"
msgstr "En algunos casos, es posible que desee utilizar los archivos `proto` de un proyecto diferente para generar los stubs de gRPC. En este caso:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:192
#, fuzzy
msgid "Add a dependency on the artifact that contains the proto file to your project"
msgstr "Añade una dependencia del artefacto que contiene el archivo proto a tu proyecto"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:193
#, fuzzy
msgid "In `application.properties`, specify the dependencies you want to scan for proto files."
msgstr "En `application.properties`, especifique las dependencias que desea escanear en busca de archivos proto."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:197
#, no-wrap
msgid "quarkus.generate-code.grpc.scan-for-proto=<groupId>:<artifactId>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:199
#, fuzzy
msgid "The value of the property may be `none`, which is the default value, or a comma separated list of `groupId:artifactId` coordinates."
msgstr "El valor de la propiedad puede ser `none`, que es el valor por defecto, o una lista de coordenadas separadas por comas de `groupId:artifactId`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:201
#, fuzzy
msgid "`option java_generic_services = true;` will automatically be removed from proto file containing it."
msgstr "`option java_generic_services = true;` se eliminará automáticamente del archivo proto que lo contenga."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:203
#, fuzzy
msgid "If the dependency contains a lot of proto files and you want to generate classes for only a subset of them, you can specify glob patterns per dependency. The path to match are relative to the path `src/main/resources` in the dependency."
msgstr "Si la dependencia contiene muchos archivos proto y desea generar clases sólo para un subconjunto de ellos, puede especificar patrones glob por dependencia. Las rutas a comparar son relativas a la ruta `src/main/resources` en la dependencia."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:205
#, fuzzy
msgid "For instance, having the following properties in your `application.properties`:"
msgstr "Para ello, defina primero las 2 propiedades siguientes en la sección `&amp;lt;properties&amp;gt;`:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:210
#, no-wrap
msgid ""
"quarkus.generate-code.grpc.scan-for-proto-include.\"<groupId>\\:<artifactId>\"=foo/**,bar/**,banana/a-proto.proto\n"
"quarkus.generate-code.grpc.scan-for-proto-exclude.\"<groupId>\\:<artifactId>\"=foo/private/**,bar/another-proto.proto\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:213
#, fuzzy
msgid "will include:"
msgstr "incluirá:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:215
#, fuzzy
msgid "all files in the `foo/` directory and its subdirectories except for files in `foo/private/` and its subdirectories,"
msgstr "todos los archivos del directorio `foo/` y sus subdirectorios, excepto los archivos de `foo/private/` y sus subdirectorios,"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:216
#, fuzzy
msgid "all files in the `bar/` directory and its subdirectories except for `another-proto.proto`."
msgstr "todos los archivos del directorio `bar/` y sus subdirectorios excepto `another-proto.proto`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:217
#, fuzzy
msgid "`banana/a-proto.proto` file."
msgstr "`banana/a-proto.proto` archivo."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:219
#, fuzzy
msgid "`:` character in the property keys must be escaped."
msgstr "`:` en las claves de las propiedades."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:220
#, fuzzy, no-wrap
msgid "Different gRPC implementations / types"
msgstr "Diferentes implementaciones / tipos de gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:223
#, fuzzy
msgid "Another thing to take note as well is that Quarkus' gRPC support currently includes 3 different types of gRPC usage:"
msgstr "Otra cosa a tener en cuenta también es que el soporte gRPC de Quarkus incluye actualmente 3 tipos diferentes de uso de gRPC:"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:225
#, fuzzy
msgid "old Vert.x gRPC implementation with a separate gRPC server (default)"
msgstr "implementación antigua de Vert.x gRPC con un servidor gRPC independiente (por defecto)"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:226
#, fuzzy
msgid "new Vert.x gRPC implementation on top of the existing HTTP server"
msgstr "nueva implementación de Vert.x gRPC sobre el servidor HTTP existente"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:227
#, fuzzy
msgid "https://grpc.github.io/grpc/core/md_doc_grpc_xds_features.html[xDS gRPC] wrapper over https://github.com/grpc/grpc-java[grpc-java] with a separate Netty based gRPC server"
msgstr "link:https://grpc.github.io/grpc/core/md_doc_grpc_xds_features.html[xDS gRPC] wrapper sobre  link:https://github.com/grpc/grpc-java[grpc-java] con un servidor gRPC independiente basado en Netty"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:229
#, fuzzy
msgid "Further docs explain how to enable and use each of them."
msgstr "En otros documentos se explica cómo activar y utilizar cada uno de ellos."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:230
#, fuzzy, no-wrap
msgid "Implementing a gRPC service"
msgstr "Implementación de un servicio gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:233
#, fuzzy
msgid "Now that we have the generated classes let's implement our _hello_ service."
msgstr "Ahora que tenemos las clases generadas vamos a implementar nuestro servicio _hello_."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:237
#, fuzzy
msgid "With Quarkus, implementing a service requires to implement the generated service interface based on Mutiny, a Reactive Programming API integrated in Quarkus, and expose it as a CDI bean.  Learn more about Mutiny on the xref:mutiny-primer.adoc[Mutiny guide].  The service class must be annotated with the `@io.quarkus.grpc.GrpcService` annotation."
msgstr "Con Quarkus, la implementación de un servicio requiere implementar la interfaz de servicio generada basada en Mutiny, una API de programación reactiva integrada en Quarkus, y exponerla como un bean CDI. Aprende más sobre Mutiny en la  link:mutiny-primer.html[guía de Mutiny]. La clase de servicio debe ser anotada con la anotación `@io.quarkus.grpc.GrpcService`."

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:238
#, fuzzy, no-wrap
msgid "Implementing a service"
msgstr "Implementación de un servicio"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:241
#, fuzzy
msgid "Create the `src/main/java/org/acme/HelloService.java` file with the following content:"
msgstr "Cree el archivo `src/main/java/org/acme/HelloService.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:245
#: upstream/_guides/grpc-getting-started.adoc:272
#: upstream/_guides/grpc-getting-started.adoc:322
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:251
#, no-wrap
msgid ""
"import io.quarkus.example.Greeter;\n"
"import io.quarkus.example.HelloReply;\n"
"import io.quarkus.example.HelloRequest;\n"
"import io.quarkus.grpc.GrpcService;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:254
#, no-wrap
msgid ""
"@GrpcService <1>\n"
"public class HelloService implements Greeter {  <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:262
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<HelloReply> sayHello(HelloRequest request) { <3>\n"
"        return Uni.createFrom().item(() ->\n"
"                HelloReply.newBuilder().setMessage(\"Hello \" + request.getName()).build()\n"
"        );\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:264
#: upstream/_guides/grpc-getting-started.adoc:292
#, fuzzy
msgid "Expose your implementation as a bean."
msgstr "Exponga su implementación como un bean."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:265
#, fuzzy
msgid "Implement the generated service interface."
msgstr "Implementar la interfaz de servicio generada."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:266
#: upstream/_guides/grpc-getting-started.adoc:294
#, fuzzy
msgid "Implement the methods defined in the service definition (here we have a single method)."
msgstr "Implementar los métodos definidos en la definición del servicio (aquí tenemos un único método)."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:268
#, fuzzy
msgid "You can also use the default gRPC API instead of Mutiny:"
msgstr "También puede utilizar la API gRPC por defecto en lugar de Mutiny:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:278
#, no-wrap
msgid ""
"import io.grpc.stub.StreamObserver;\n"
"import io.quarkus.example.GreeterGrpc;\n"
"import io.quarkus.example.HelloReply;\n"
"import io.quarkus.example.HelloRequest;\n"
"import io.quarkus.grpc.GrpcService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:281
#, no-wrap
msgid ""
"@GrpcService <1>\n"
"public class HelloService extends GreeterGrpc.GreeterImplBase { <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:290
#, no-wrap
msgid ""
"    @Override\n"
"    public void sayHello(HelloRequest request, StreamObserver<HelloReply> responseObserver) { <3>\n"
"        String name = request.getName();\n"
"        String message = \"Hello \" + name;\n"
"        responseObserver.onNext(HelloReply.newBuilder().setMessage(message).build()); <4>\n"
"        responseObserver.onCompleted(); <5>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:293
#, fuzzy
msgid "Extends the `ImplBase` class. This is a generated class."
msgstr "Extiende la clase `ImplBase`. Esta es una clase generada."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:295
#, fuzzy
msgid "Build and send the response."
msgstr "Construye y envía la respuesta."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:296
#, fuzzy
msgid "Close the response."
msgstr "Cierra la respuesta."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:301
#, fuzzy
msgid "If your service implementation logic is blocking (use blocking I/O for example), annotate your method with `@Blocking`.  The `io.smallrye.common.annotation.Blocking` annotation instructs the framework to invoke the annotated method on a worker thread instead of the I/O thread (event-loop)."
msgstr "Si la lógica de la implementación de tu servicio es de bloqueo (por ejemplo, si usas E/S de bloqueo), anota tu método con `@Blocking`. La anotación `io.smallrye.common.annotation.Blocking` indica al framework que invoque el método anotado en un hilo de trabajo en lugar del hilo de E/S (bucle de eventos)."

#. type: Title ===
#: upstream/_guides/grpc-getting-started.adoc:302
#, fuzzy, no-wrap
msgid "The gRPC server"
msgstr "El servidor gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:306
#, fuzzy
msgid "The services are _served_ by a _server_.  Available services (_CDI beans_) are automatically registered and exposed."
msgstr "Los servicios son _servidos_ por un _servidor_. Los servicios disponibles _(beans CDI_) se registran y exponen automáticamente."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:309
#, fuzzy
msgid "By default, the server is exposed on `localhost:9000`, and uses _plain-text_ (so no TLS) when running normally, and `localhost:9001` for tests."
msgstr "Por defecto, el servidor está expuesto en `localhost:9000`, y utiliza _texto plano_ (así que no hay TLS) cuando se ejecuta normalmente, y `localhost:9001` para las pruebas."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:311
#, fuzzy
msgid "Run the application using: `mvn quarkus:dev`."
msgstr "Ejecute la aplicación con: `mvn quarkus:dev`."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:312
#, fuzzy, no-wrap
msgid "Consuming a gRPC service"
msgstr "Consumir un servicio gRPC"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:316
#, fuzzy
msgid "In this section, we are going to consume the service we expose.  To simplify, we are going to consume the service from the same application, which in the real world, does not make sense."
msgstr "En esta sección, vamos a consumir el servicio que exponemos. Para simplificar, vamos a consumir el servicio desde la misma aplicación, que en el mundo real, no tiene sentido."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:318
#, fuzzy
msgid "Open the existing `org.acme.ExampleResource` class, and edit the content to become:"
msgstr "Abra la clase existente `org.acme.ExampleResource`, y edite el contenido para que sea:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:327
#, no-wrap
msgid ""
"import io.quarkus.example.Greeter;\n"
"import io.quarkus.example.HelloRequest;\n"
"import io.quarkus.grpc.GrpcClient;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:332
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:335
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:338
#, no-wrap
msgid ""
"    @GrpcClient                               // <1>\n"
"    Greeter hello;                            // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:344
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:352
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{name}\")\n"
"    public Uni<String> hello(String name) {\n"
"        return hello.sayHello(HelloRequest.newBuilder().setName(name).build())\n"
"                .onItem().transform(helloReply -> helloReply.getMessage());  // <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:354
#, fuzzy
msgid "Inject the service and configure its name. The name is used in the application configuration. If not specified then the field name is used instead: `hello` in this particular case."
msgstr "Inyecte el servicio y configure su nombre. El nombre se utiliza en la configuración de la aplicación. Si no se especifica, se utiliza el nombre del campo: `hello` en este caso particular."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:355
#, fuzzy
msgid "Use the generated service interface based on Mutiny API."
msgstr "Utilice la interfaz de servicio generada basada en la API de Mutiny."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:356
#, fuzzy
msgid "Invoke the service."
msgstr "Invocar el servicio."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:359
#, fuzzy
msgid "We need to configure the application to indicate where the `hello` service is found.  In the `src/main/resources/application.properties` file, add the following property:"
msgstr "Necesitamos configurar la aplicación para indicar dónde se encuentra el servicio `hello`. En el archivo `src/main/resources/application.properties`, añade la siguiente propiedad:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:363
#, no-wrap
msgid "quarkus.grpc.clients.hello.host=localhost\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:366
#, fuzzy
msgid "`hello` is the name used in the `@GrpcClient` annotation."
msgstr "`hello` es el nombre utilizado en la anotación `@GrpcClient`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:367
#, fuzzy
msgid "`host` configures the service host (here it's localhost)."
msgstr "`host` configura el host del servicio (aquí es localhost)."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:369
#, fuzzy
msgid "Then, open http://localhost:8080/hello/quarkus in a browser, and you should get `Hello quarkus`!"
msgstr "¡A continuación, abra  http://localhost:8080/hello/quarkus  en un navegador, y debería obtener `Hello quarkus`!"

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:370
#, fuzzy, no-wrap
msgid "Packaging the application"
msgstr "Empaquetar la aplicación"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:374
#, fuzzy
msgid "Like any other Quarkus applications, you can package it with: `mvn package`.  You can also package the application into a native executable with: `mvn package -Dnative`."
msgstr "Como cualquier otra aplicación de Quarkus, puedes empaquetarla con: `mvn package`. También puede empaquetar la aplicación en un ejecutable nativo con: `mvn package -Pnative`."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:376
#, fuzzy, no-wrap
msgid "Generating Java files from proto with protobuf-maven-plugin"
msgstr "Generación de archivos Java desde proto con protobuf-maven-plugin"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:380
#, fuzzy
msgid "Alternatively to using Quarkus code generation to generate stubs for `proto` files, you can also use `protobuf-maven-plugin`."
msgstr "Como alternativa al uso de la generación de código de Quarkus para generar stubs para los archivos `proto`, también se puede utilizar `protobuf-maven-plugin`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:382
#, fuzzy
msgid "To do it, first define the 2 following properties in the `<properties>` section:"
msgstr "Para ello, defina primero las 2 propiedades siguientes en la sección `&amp;lt;properties&amp;gt;`:"

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:387
#, no-wrap
msgid ""
"<grpc.version>{grpc-version}</grpc.version>\n"
"<protoc.version>{protoc-version}</protoc.version>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:390
#, fuzzy
msgid "They configure the gRPC version and the `protoc` version."
msgstr "Configuran la versión gRPC y la versión `protoc`."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:392
#, fuzzy
msgid "Then, add to the `build` section the `os-maven-plugin` extension and the `protobuf-maven-plugin` configuration."
msgstr "A continuación, añada a la sección `build` la extensión `os-maven-plugin` y la configuración `protobuf-maven-plugin`."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:403
#, no-wrap
msgid ""
"<build>\n"
"    <extensions>\n"
"        <extension>\n"
"            <groupId>kr.motd.maven</groupId>\n"
"            <artifactId>os-maven-plugin</artifactId>\n"
"            <version>${os-maven-plugin-version}</version>\n"
"        </extension>\n"
"    </extensions>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:440
#, no-wrap
msgid ""
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>org.xolstice.maven.plugins</groupId>\n"
"            <artifactId>protobuf-maven-plugin</artifactId>      // <1>\n"
"            <version>${protobuf-maven-plugin-version}</version>\n"
"            <configuration>\n"
"                <protocArtifact>com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}</protocArtifact> // <2>\n"
"                <pluginId>grpc-java</pluginId>\n"
"                <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>\n"
"                <protocPlugins>\n"
"                    <protocPlugin>\n"
"                        <id>quarkus-grpc-protoc-plugin</id>\n"
"                        <groupId>io.quarkus</groupId>\n"
"                        <artifactId>quarkus-grpc-protoc-plugin</artifactId>\n"
"                        <version>{quarkus-version}</version>\n"
"                        <mainClass>io.quarkus.grpc.protoc.plugin.MutinyGrpcGenerator</mainClass>\n"
"                    </protocPlugin>\n"
"                </protocPlugins>\n"
"            </configuration>\n"
"            <executions>\n"
"                <execution>\n"
"                    <id>compile</id>\n"
"                    <goals>\n"
"                        <goal>compile</goal>\n"
"                        <goal>compile-custom</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"                <execution>\n"
"                    <id>test-compile</id>\n"
"                    <goals>\n"
"                        <goal>test-compile</goal>\n"
"                        <goal>test-compile-custom</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:444
#, no-wrap
msgid ""
"        <!-- ... -->\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:446
#, fuzzy
msgid "The `protobuf-maven-plugin` that generates stub classes from your gRPC service definition (`proto` files)."
msgstr "El `protobuf-maven-plugin` que genera clases stub a partir de su definición de servicio gRPC (archivos `proto` )."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:448
#, fuzzy
msgid "The class generation uses a tool named `protoc`, which is OS-specific.  That's why we use the `os-maven-plugin` to target the executable compatible with the operating system."
msgstr "La generación de clases utiliza una herramienta llamada `protoc`, que es específica del sistema operativo. Por eso utilizamos el `os-maven-plugin` para apuntar el ejecutable compatible con el sistema operativo."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:450
#, fuzzy
msgid "This configuration instructs the `protobuf-maven-plugin` to generate the default gRPC classes and classes using Mutiny to fit with the Quarkus development experience."
msgstr "Esta configuración indica a `protobuf-maven-plugin` que genere las clases gRPC por defecto y las clases que utilizan Mutiny para adaptarse a la experiencia de desarrollo de Quarkus."

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:452
#, fuzzy
msgid "When using `protobuf-maven-plugin`, instead of the `quarkus-maven-plugin`, every time you update the `proto` files, you need to re-generate the classes (using `mvn compile`)."
msgstr "Cuando se utiliza `protobuf-maven-plugin`, en lugar de `quarkus-maven-plugin`, cada vez que se actualizan los archivos `proto`, es necesario volver a generar las clases (utilizando `mvn compile`)."

#. type: Title ==
#: upstream/_guides/grpc-getting-started.adoc:454
#, fuzzy, no-wrap
msgid "gRPC classes from dependencies"
msgstr "Clases gRPC de las dependencias"

#. type: Plain text
#: upstream/_guides/grpc-getting-started.adoc:458
#, fuzzy
msgid "When gRPC classes - the classes generated from `proto` files - are in a dependency of the application, then the dependency needs a Jandex index.  The `jandex-maven-plugin` can be used to create a Jandex index. More information on this topic can be found in the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr "Cuando las clases gRPC - las clases generadas a partir de los archivos `proto` - están en una dependencia de la aplicación, entonces la dependencia necesita un índice Jandex. El `jandex-maven-plugin` se puede utilizar para crear un índice Jandex. Se puede encontrar más información sobre este tema en la sección  link:cdi-reference.html#bean_discovery[Bean Discovery] de la guía CDI."

#. type: delimited block -
#: upstream/_guides/grpc-getting-started.adoc:478
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.smallrye</groupId>\n"
"            <artifactId>jandex-maven-plugin</artifactId>\n"
"            <version>{jandex-version}</version>\n"
"            <executions>\n"
"                <execution>\n"
"                <id>make-index</id>\n"
"                <goals>\n"
"                    <goal>jandex</goal>\n"
"                </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#, fuzzy
#~ msgid "Edit the `pom.xml` file to add the Quarkus gRPC extension dependency (just under `<dependencies>`):"
#~ msgstr "Edite el archivo `pom.xml` para añadir la dependencia de la extensión Quarkus gRPC (justo debajo de `&amp;lt;dependencies&amp;gt;`):"
