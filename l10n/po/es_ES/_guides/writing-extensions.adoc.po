# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-15 08:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/writing-extensions.adoc:6
#, fuzzy, no-wrap
msgid "Writing Your Own Extension"
msgstr "Escribir su propia extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:15
#, fuzzy
msgid "Quarkus extensions add a new developer focused behavior to the core offering, and consist of two distinct parts, buildtime augmentation and runtime container. The augmentation part is responsible for all metadata processing, such as reading annotations, XML descriptors etc. The output of this augmentation phase is recorded bytecode which is responsible for directly instantiating the relevant runtime services."
msgstr "Las extensiones de Quarkus añaden un nuevo comportamiento centrado en el desarrollador a la oferta principal, y constan de dos partes distintas, el aumento en tiempo de construcción y el contenedor en tiempo de ejecución. La parte de aumento es responsable de todo el procesamiento de metadatos, como la lectura de anotaciones, descriptores XML, etc. El resultado de esta fase de aumento es un código de bytes grabado que se encarga de instanciar directamente los servicios de tiempo de ejecución pertinentes."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:18
#, fuzzy
msgid "This means that metadata is only processed once at build time, which both saves on startup time, and also on memory usage as the classes etc that are used for processing are not loaded (or even present) in the runtime JVM."
msgstr "Esto significa que los metadatos sólo se procesan una vez en el momento de la compilación, lo que ahorra tanto el tiempo de inicio como el uso de memoria, ya que las clases, etc., que se utilizan para el procesamiento no se cargan (o ni siquiera están presentes) en la JVM en tiempo de ejecución."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:20
#, fuzzy
msgid "This is an in-depth documentation, see the xref:building-my-first-extension.adoc[building my first extension] if you need an introduction."
msgstr "Esta es una documentación en profundidad, vea la  link:building-my-first-extension.html[construcción de mi primera extensión] si necesita una introducción."

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:21
#, fuzzy, no-wrap
msgid "Extension philosophy"
msgstr "Filosofía de la extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:24
#, fuzzy
msgid "This section is a work in progress and gathers the philosophy under which extensions should be designed and written."
msgstr "Esta sección es un trabajo en curso y recoge la filosofía bajo la cual deben diseñarse y escribirse las extensiones."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:25
#, fuzzy, no-wrap
msgid "Why an extension framework"
msgstr "Por qué un marco de extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:31
#, fuzzy
msgid "Quarkus’s mission is to transform your entire application including the libraries it uses, into an artifact that uses significantly less resources than traditional approaches. These can then be used to build native applications using GraalVM.  To do this you need to analyze and understand the full \"closed world\" of the application.  Without the full and complete context, the best that can be achieved is partial and limited generic support.  By using the Quarkus extension approach, we can bring Java applications in line with memory footprint constrained environments like Kubernetes or cloud platforms."
msgstr "La misión de Quarkus es transformar toda tu aplicación, incluyendo las librerías que utiliza, en un artefacto que utiliza significativamente menos recursos que los enfoques tradicionales. A continuación, se puede utilizar para construir aplicaciones nativas utilizando GraalVM. Para ello es necesario analizar y comprender el \"mundo cerrado\" completo de la aplicación. Sin el contexto total y completo, lo mejor que se puede conseguir es un soporte genérico parcial y limitado. Utilizando el enfoque de la extensión de Quarkus, podemos hacer que las aplicaciones Java se ajusten a los entornos con limitaciones de huella de memoria como Kubernetes o las plataformas en la nube."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:34
#, fuzzy
msgid "The Quarkus extension framework results in significantly improved resource utilization even when GraalVM is not used (e.g. in HotSpot).  Let’s list the actions an extension performs:"
msgstr "El marco de extensiones de Quarkus permite mejorar significativamente la utilización de los recursos incluso cuando no se utiliza GraalVM (por ejemplo, en HotSpot). Enumeremos las acciones que realiza una extensión:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:36
#, fuzzy
msgid "Gather build time metadata and generate code"
msgstr "Recoger los metadatos del tiempo de construcción y generar el código"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:37
#, fuzzy
msgid "This part has nothing to do with GraalVM, it is how Quarkus starts frameworks “at build time”"
msgstr "Esta parte no tiene nada que ver con GraalVM, es como Quarkus inicia los frameworks \"en tiempo de construcción\""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:38
#, fuzzy
msgid "The extension framework facilitates reading metadata, scanning classes as well as generating classes as needed"
msgstr "El marco de extensión facilita la lectura de metadatos, la exploración de clases y la generación de clases según sea necesario"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:39
#, fuzzy
msgid "A small part of the extension work is executed at runtime via the generated classes, while the bulk of the work is done at build time (called deployment time)"
msgstr "Una pequeña parte del trabajo de extensión se ejecuta en tiempo de ejecución a través de las clases generadas, mientras que el grueso del trabajo se realiza en tiempo de construcción (llamado tiempo de despliegue)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:40
#, fuzzy
msgid "Enforce opinionated and sensible defaults based on the close world view of the application (e.g. an application with no `@Entity` does not need to start Hibernate ORM)"
msgstr "Aplicar valores predeterminados opinables y sensatos basados en la visión cercana del mundo de la aplicación (por ejemplo, una aplicación sin `@Entity` no necesita iniciar Hibernate ORM)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:41
#, fuzzy
msgid "An extension hosts Substrate VM code substitution so that libraries can run on GraalVM"
msgstr "Una extensión acoge la sustitución de código de Substrate VM para que las bibliotecas puedan ejecutarse en GraalVM"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:42
#, fuzzy
msgid "Most changes are pushed upstream to help the underlying library run on GraalVM"
msgstr "La mayoría de los cambios se han introducido para ayudar a que la biblioteca subyacente funcione en GraalVM"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:43
#, fuzzy
msgid "Not all changes can be pushed upstream, extensions host Substrate VM substitutions - which is a form of code patching - so that libraries can run"
msgstr "No todos los cambios pueden ser empujados aguas arriba, las extensiones albergan sustituciones de Substrate VM - que es una forma de parcheo de código - para que las bibliotecas puedan ejecutarse"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:44
#, fuzzy
msgid "Host Substrate VM code substitution to help dead code elimination based on the application needs"
msgstr "Sustitución del código de la VM del sustrato del host para ayudar a la eliminación del código muerto en función de las necesidades de la aplicación"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:45
#, fuzzy
msgid "This is application dependent and cannot really be shared in the library itself"
msgstr "Esto depende de la aplicación y no puede ser compartido en la propia biblioteca"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:46
#, fuzzy
msgid "For example, Quarkus optimizes the Hibernate code because it knows it only needs a specific connection pool and cache provider"
msgstr "Por ejemplo, Quarkus optimiza el código de Hibernate porque sabe que sólo necesita un pool de conexiones y un proveedor de caché específicos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:47
#, fuzzy
msgid "Send metadata to GraalVM for example classes in need of reflection"
msgstr "Enviar metadatos a GraalVM para las clases de ejemplo que necesitan reflexión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:48
#, fuzzy
msgid "This information is not static per library (e.g. Hibernate) but the framework has the semantic knowledge and knows which classes need to have reflection (for example @Entity classes)"
msgstr "Esta información no es estática por biblioteca (por ejemplo, Hibernate), sino que el marco de trabajo tiene el conocimiento semántico y sabe qué clases necesitan tener reflexión (por ejemplo, las clases @Entity)"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:49
#, fuzzy, no-wrap
msgid "Favor build time work over runtime work"
msgstr "Favorecer el trabajo en tiempo de construcción sobre el trabajo en tiempo de ejecución"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:53
#, fuzzy
msgid "As much as possible favor doing work at build time (deployment part of the extension) as opposed to let the framework do work at startup time (runtime).  The more is done there, the smaller Quarkus applications using that extension will be and the faster they will load."
msgstr "En la medida de lo posible, favorezca el trabajo en tiempo de construcción (parte de despliegue de la extensión) en lugar de dejar que el marco haga el trabajo en tiempo de inicio (tiempo de ejecución). Cuanto más se haga allí, más pequeñas serán las aplicaciones de Quarkus que usen esa extensión y más rápido se cargarán."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:54
#, fuzzy, no-wrap
msgid "How to expose configuration"
msgstr "Cómo exponer la configuración"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:58
#, fuzzy
msgid "Quarkus simplifies the most common usages.  This means that its defaults might be different from the library it integrates."
msgstr "Quarkus simplifica los usos más comunes. Esto significa que sus valores predeterminados pueden ser diferentes a los de la biblioteca que integra."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:61
#, fuzzy
msgid "To make the simple experience easiest, unify the configuration in `application.properties` via SmallRye Config.  Avoid library specific configuration files, or at least make them optional: e.g. `persistence.xml` for Hibernate ORM is optional."
msgstr "Para facilitar la experiencia, unifique la configuración en `application.properties` a través de SmallRye Config. Evite los archivos de configuración específicos de la biblioteca, o al menos hágalos opcionales: por ejemplo, `persistence.xml` para Hibernate ORM es opcional."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:66
#, fuzzy
msgid "Extensions should see the configuration holistically as a Quarkus application instead of focusing on the library experience.  For example `quarkus.database.url` and friends are shared between extensions as defining a database access is a shared task (instead of a `hibernate.` property for example).  The most useful configuration options should be exposed as `quarkus.[extension].` instead of the natural namespace of the library.  Less common properties can live in the library namespace."
msgstr "Las extensiones deberían ver la configuración de forma holística como una aplicación de Quarkus en lugar de centrarse en la experiencia de la biblioteca. Por ejemplo, `quarkus.database.url` y los amigos se comparten entre las extensiones, ya que la definición de un acceso a la base de datos es una tarea compartida (en lugar de una propiedad `hibernate.`, por ejemplo). Las opciones de configuración más útiles deberían exponerse como `quarkus.[extension].` en lugar del espacio de nombres natural de la biblioteca. Las propiedades menos comunes pueden vivir en el espacio de nombres de la biblioteca."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:70
#, fuzzy
msgid "To fully enable the close world assumptions that Quarkus can optimize best, it is better to consider configuration options as build time settled vs overridable at runtime.  Of course properties like host, port, password should be overridable at runtime.  But many properties like enable caching or setting the JDBC driver can safely require a rebuild of the application."
msgstr "Para habilitar completamente las suposiciones del mundo cercano que Quarkus puede optimizar mejor, es mejor considerar las opciones de configuración como asentadas en tiempo de compilación frente a las anulables en tiempo de ejecución. Por supuesto, las propiedades como el host, el puerto y la contraseña deberían ser anulables en tiempo de ejecución. Pero muchas propiedades como la habilitación de la caché o la configuración del controlador JDBC pueden requerir con seguridad una reconstrucción de la aplicación."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:71
#, fuzzy, no-wrap
msgid "Static Init Config"
msgstr "Configuración estática de inicio"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:74
#, fuzzy
msgid "If the extension provides additional Config Sources and if these are required during Static Init, these must be registered with `StaticInitConfigBuilderBuildItem`. Configuration in Static Init does not scan for additional sources to avoid double initialization at application startup time."
msgstr "Si la extensión proporciona fuentes de configuración adicionales y si éstas son necesarias durante el Static Init, éstas deben ser registradas con `StaticInitConfigSourceProviderBuildItem`. La configuración en Static Init no busca fuentes adicionales para evitar una doble inicialización en el momento de iniciar la aplicación."

#
#
#
#. === API
#. TODO: Describe where to put APIs
#. I wonder if that content should be in the technical aspects
#. === Substitution and recorders
#. TODO: Describe where Substitutions and recorders should live
#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:86
#, fuzzy, no-wrap
msgid "Expose your components via CDI"
msgstr "Exponga sus componentes a través de CDI"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:91
#, fuzzy
msgid "Since CDI is the central programming model when it comes to component composition, frameworks and extensions should expose their components as beans that are easily consumable by user applications.  For example, Hibernate ORM exposes `EntityManagerFactory` and `EntityManager` beans, the connection pool exposes `DataSource` beans etc.  Extensions must register these bean definitions at build time."
msgstr "Dado que CDI es el modelo de programación central en lo que respecta a la composición de componentes, los marcos y las extensiones deben exponer sus componentes como beans que sean fácilmente consumibles por las aplicaciones de usuario. Por ejemplo, Hibernate ORM expone los beans `EntityManagerFactory` y `EntityManager`, el pool de conexiones expone los beans `DataSource`, etc. Las extensiones deben registrar estas definiciones de beans en tiempo de construcción."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:92
#, fuzzy, no-wrap
msgid "Beans backed by classes"
msgstr "Frijoles respaldados por clases"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:95
#, fuzzy
msgid "An extension can produce an xref:cdi-integration.adoc#additional_bean_build_item[`AdditionalBeanBuildItem`] to instruct the container to read a bean definition from a class as if it was part of the original application:"
msgstr "Una extensión puede producir un  link:cdi-reference.html#additional_beans[`AdditionalBeanBuildItem`] para indicar al contenedor que lea una definición de bean de una clase como si fuera parte de la aplicación original:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:96
#, fuzzy, no-wrap
msgid "Bean Class Registered by `AdditionalBeanBuildItem`"
msgstr "Clase de frijoles registrada por `AdditionalBeanBuildItem`"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:101
#, no-wrap
msgid ""
"@Singleton <1>\n"
"public class Echo {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:106
#, no-wrap
msgid ""
"   public String echo(String val) {\n"
"      return val;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:108
#, fuzzy
msgid "If a bean registered by an `AdditionalBeanBuildItem` does not specify a scope then `@Dependent` is assumed."
msgstr "Si un bean registrado por un `AdditionalBeanBuildItem` no especifica un ámbito de aplicación, se asume `@Dependent`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:110
#, fuzzy
msgid "All other beans can inject such a bean:"
msgstr "Todos los demás frijoles pueden inyectar dicho frijol:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:111
#, fuzzy, no-wrap
msgid "Bean Injecting a Bean Produced by an `AdditionalBeanBuildItem`"
msgstr "Inyección de un frijol producido por un `AdditionalBeanBuildItem`"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:116
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:119
#, no-wrap
msgid ""
"    @Inject\n"
"    Echo echo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:126
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(String foo) {\n"
"        return echo.echo(foo);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:129
#, fuzzy
msgid "And vice versa - the extension bean can inject application beans and beans provided by other extensions:"
msgstr "Y viceversa: el bean de la extensión puede inyectar beans de la aplicación y beans proporcionados por otras extensiones:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:130
#, fuzzy, no-wrap
msgid "Extension Bean Injection Example"
msgstr "Ejemplo de inyección de frijoles de extensión"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:135
#, no-wrap
msgid ""
"@Singleton\n"
"public class Echo {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:138
#, no-wrap
msgid ""
"    @Inject\n"
"    DataSource dataSource;  <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:141
#, no-wrap
msgid ""
"    @Inject\n"
"    Instance<List<String>> listsOfStrings; <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:144
#, no-wrap
msgid ""
"    //...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:146
#, fuzzy
msgid "Inject a bean provided by other extension."
msgstr "Inyectar un bean proporcionado por otra extensión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:147
#, fuzzy
msgid "Inject all beans matching the type `List<String>`."
msgstr "Inyectar todos los granos que coincidan con el tipo `List&amp;lt;String&amp;gt;`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:149
#, fuzzy, no-wrap
msgid "Bean initialization"
msgstr "Inicialización de los frijoles"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:156
#, fuzzy
msgid "Some components may require additional initialization based on information collected during augmentation.  The most straightforward solution is to obtain a bean instance and call a method directly from a build step.  However, it is _illegal_ to obtain a bean instance during the augmentation phase.  The reason is that the CDI container is not started yet.  It's started during the xref:bootstrap-three-phases[Static init bootstrap phase]."
msgstr "Algunos componentes pueden requerir una inicialización adicional basada en la información recogida durante la ampliación. La solución más directa es obtener una instancia de bean y llamar a un método directamente desde un paso de construcción. Sin embargo, es _ilegal_ obtener una instancia de bean durante la fase de aumento. La razón es que el contenedor CDI aún no se ha iniciado. Se inicia durante la fase de arranque  link:#bootstrap-three-phases[Static init]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:158
#, fuzzy
msgid "`BUILD_AND_RUN_TIME_FIXED` and `RUN_TIME` config roots can be injected in any bean. `RUN_TIME` config roots should only be injected after the bootstrap though."
msgstr "`BUILD_AND_RUN_TIME_FIXED` y `RUN_TIME` config roots pueden inyectarse en cualquier bean. Sin embargo, `RUN_TIME` config roots sólo debe inyectarse después del bootstrap."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:164
#, fuzzy
msgid "It is possible to invoke a bean method from a xref:bytecode-recording[recorder method] though.  If you need to access a bean in a `@Record(STATIC_INIT)` build step then is must either depend on the `BeanContainerBuildItem` or wrap the logic in a `BeanContainerListenerBuildItem`.  The reason is simple - we need to make sure the CDI container is fully initialized and started.  However, it is safe to expect that the CDI container is fully initialized and running in a `@Record(RUNTIME_INIT)` build step.  You can obtain a reference to the container via `CDI.current()` or Quarkus-specific `Arc.container()`."
msgstr "Sin embargo, es posible invocar un método bean desde un  link:#bytecode-recording[método registrador]. Si necesitas acceder a un bean en un paso de construcción de `@Record(STATIC_INIT)`, entonces debes depender de `BeanContainerBuildItem` o envolver la lógica en un `BeanContainerListenerBuildItem`. La razón es simple: necesitamos asegurarnos de que el contenedor CDI está completamente inicializado y arrancado. Sin embargo, es seguro esperar que el contenedor CDI esté completamente inicializado y ejecutado en un paso de construcción `@Record(RUNTIME_INIT)`. Se puede obtener una referencia al contenedor a través de `CDI.current()` o de `Arc.container()` específico de Quarkus."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:166
#, fuzzy
msgid "Don't forget to make sure the bean state guarantees the visibility, e.g. via the `volatile` keyword."
msgstr "No olvides asegurarte de que el estado del frijol garantiza la visibilidad, por ejemplo, a través de la palabra clave `volatile`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:170
#, fuzzy
msgid "There is one significant drawback of this \"late initialization\" approach.  An _uninitialized_ bean may be accessed by other extensions or application components that are instantiated during bootstrap.  We'll cover a more robust solution in the xref:synthetic_beans[Synthetic beans]."
msgstr "Este enfoque de \"inicialización tardía\" tiene un inconveniente importante. Un bean _no inicializado_ puede ser accedido por otras extensiones o componentes de la aplicación que se instancian durante el bootstrap. Cubriremos una solución más robusta en  link:#synthetic_beans[[synthetic_beans]]."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:171
#, fuzzy, no-wrap
msgid "Default beans"
msgstr "Frijoles por defecto"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:176
#, fuzzy
msgid "A very useful pattern of creating such beans but also giving application code the ability to easily override some beans with custom implementations, is to use the `@DefaultBean` that Quarkus provides.  This is best explained with an example."
msgstr "Un patrón muy útil para crear dichos beans pero también para dar al código de la aplicación la capacidad de anular fácilmente algunos de los beans con implementaciones personalizadas, es utilizar el `@DefaultBean` que proporciona Quarkus. Esto se explica mejor con un ejemplo."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:178
#, fuzzy
msgid "Let us assume that the Quarkus extension needs to provide a `Tracer` bean which application code is meant to inject into its own beans."
msgstr "Supongamos que la extensión de Quarkus necesita proporcionar un bean `Tracer` que el código de la aplicación debe inyectar en sus propios beans."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:183
#, no-wrap
msgid ""
"@Dependent\n"
"public class TracerConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:188
#, no-wrap
msgid ""
"    @Produces\n"
"    public Tracer tracer(Reporter reporter, Configuration configuration) {\n"
"        return new Tracer(reporter, configuration);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:194
#, no-wrap
msgid ""
"    @Produces\n"
"    @DefaultBean\n"
"    public Configuration configuration() {\n"
"        // create a Configuration\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:201
#, no-wrap
msgid ""
"    @Produces\n"
"    @DefaultBean\n"
"    public Reporter reporter(){\n"
"        // create a Reporter\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:204
#, fuzzy
msgid "If for example application code wants to use `Tracer`, but also needs to use a custom `Reporter` bean, such a requirement could easily be done using something like:"
msgstr "Si, por ejemplo, el código de la aplicación quiere usar `Tracer`, pero también necesita usar un bean personalizado de `Reporter`, tal requisito podría hacerse fácilmente usando algo como:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:210
#, no-wrap
msgid ""
"@Dependent\n"
"public class CustomTracerConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:216
#, no-wrap
msgid ""
"    @Produces\n"
"    public Reporter reporter(){\n"
"        // create a custom Reporter\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:218
#, fuzzy, no-wrap
msgid "How to Override a Bean Defined by a Library/Quarkus Extension that doesn't use @DefaultBean"
msgstr "Cómo anular un bean definido por una biblioteca/extensión de Quarkus que no utiliza @DefaultBean"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:223
#, fuzzy
msgid "Although `@DefaultBean` is the recommended approach, it is also possible for application code to override beans provided by an extension by marking beans as a CDI `@Alternative` and including `@Priority` annotation.  Let's show a simple example.  Suppose we work on an imaginary \"quarkus-parser\" extension and we have a default bean implementation:"
msgstr "Aunque `@DefaultBean` es el enfoque recomendado, también es posible que el código de la aplicación anule los beans proporcionados por una extensión marcando los beans como CDI `@Alternative` e incluyendo la anotación `@Priority`. Veamos un ejemplo sencillo. Supongamos que trabajamos en una extensión imaginaria \"quarkus-parser\" y tenemos una implementación de beans por defecto:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:228
#, no-wrap
msgid ""
"@Dependent\n"
"class Parser {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:233
#, no-wrap
msgid ""
"  String[] parse(String expression) {\n"
"    return expression.split(\"::\");\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:236
#, fuzzy
msgid "And our extension also consumes this parser:"
msgstr "Y nuestra extensión también consume este parser:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:241
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class ParserService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:244
#, no-wrap
msgid ""
"  @Inject\n"
"  Parser parser;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:247
#, no-wrap
msgid ""
"  //...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:250
#, fuzzy
msgid "Now, if a user or even some other extension needs to override the default implementation of the `Parser` the simplest solution is to use CDI `@Alternative` + `@Priority`:"
msgstr "Ahora bien, si un usuario o incluso alguna otra extensión necesita anular la implementación por defecto del `Parser` la solución más sencilla es utilizar CDI `@Alternative` + `@Priority`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:257
#, no-wrap
msgid ""
"@Alternative <1>\n"
"@Priority(1) <2>\n"
"@Singleton\n"
"class MyParser extends Parser {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:262
#, no-wrap
msgid ""
"  String[] parse(String expression) {\n"
"    // my super impl...\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:264
#, fuzzy
msgid "`MyParser` is an alternative bean."
msgstr "`MyParser` es una judía alternativa."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:265
#, fuzzy
msgid "Enables the alternative. The priority could be any number to override the default bean but if there are multiple alternatives the highest priority wins."
msgstr "Activa la alternativa. La prioridad puede ser cualquier número para anular el frijol por defecto, pero si hay múltiples alternativas, la prioridad más alta gana."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:267
#, fuzzy
msgid "CDI alternatives are only considered during injection and type-safe resolution. For example the default implementation would still receive observer notifications."
msgstr "Las alternativas de CDI sólo se consideran durante la inyección y la resolución a prueba de tipos. Por ejemplo, la implementación por defecto seguiría recibiendo notificaciones de los observadores."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:269
#, fuzzy, no-wrap
msgid "Synthetic beans"
msgstr "Frijoles sintéticos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:274
#, fuzzy
msgid "Sometimes it is very useful to be able to register a synthetic bean.  Bean attributes of a synthetic bean are not derived from a java class, method or field.  Instead, the attributes are specified by an extension."
msgstr "A veces es muy útil poder registrar un bean sintético. Los atributos de un bean sintético no se derivan de una clase, método o campo de java. En su lugar, los atributos se especifican mediante una extensión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:277
#, fuzzy
msgid "Since the CDI container does not control the instantiation of a synthetic bean the dependency injection and other services (such as interceptors) are not supported.  In other words, it's up to the extension to provide all required services to a synthetic bean instance."
msgstr "Dado que el contenedor CDI no controla la instanciación de un bean sintético, la inyección de dependencia y otros servicios (como los interceptores) no están soportados. En otras palabras, es la extensión la que debe proporcionar todos los servicios necesarios a una instancia de bean sintético."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:280
#, fuzzy
msgid "There are several ways to register a xref:cdi-reference.adoc#synthetic_beans[synthetic bean] in Quarkus.  In this chapter, we will cover a use case that can be used to initialize extension beans in a safe manner (compared to xref:bean_init[Bean initialization])."
msgstr "Hay varias maneras de registrar un  link:cdi-reference.html#synthetic_beans[frijol sintético] en Quarkus. En este capítulo, cubriremos un caso de uso que puede ser utilizado para inicializar beans de extensión de una manera segura (en comparación con  link:#bean_init[[bean_init]])."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:282
#, fuzzy
msgid "The `SyntheticBeanBuildItem` can be used to register a synthetic bean:"
msgstr "La página `SyntheticBeanBuildItem` puede utilizarse para registrar una judía sintética:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:284
#, fuzzy
msgid "whose instance can be easily produced through a xref:bytecode-recording[recorder],"
msgstr "cuya instancia puede producirse fácilmente a través de una  link:#bytecode-recording[grabadora],"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:285
#, fuzzy
msgid "to provide a \"context\" bean that holds all the information collected during augmentation so that the real components do not need any \"late initialization\" because they can inject the context bean directly."
msgstr "para proporcionar un bean de \"contexto\" que contenga toda la información recopilada durante el aumento, de modo que los componentes reales no necesiten ninguna \"inicialización tardía\" porque pueden inyectar el bean de contexto directamente."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:286
#, fuzzy, no-wrap
msgid "Instance Produced Through Recorder"
msgstr "Instancia producida a través de la grabadora"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:296
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(STATIC_INIT)\n"
"SyntheticBeanBuildItem syntheticBean(TestRecorder recorder) {\n"
"   return SyntheticBeanBuildItem.configure(Foo.class).scope(Singleton.class)\n"
"                .runtimeValue(recorder.createFoo(\"parameters are recorder in the bytecode\")) <1>\n"
"                .done();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:298
#, fuzzy
msgid "The string value is recorded in the bytecode and used to initialize the instance of `Foo`."
msgstr "El valor de la cadena se registra en el bytecode y se utiliza para inicializar la instancia de `Foo`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:299
#, fuzzy, no-wrap
msgid "\"Context\" Holder"
msgstr "\"Contexto\" Titular"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:309
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(STATIC_INIT)\n"
"SyntheticBeanBuildItem syntheticBean(TestRecorder recorder) {\n"
"   return SyntheticBeanBuildItem.configure(TestContext.class).scope(Singleton.class)\n"
"                .runtimeValue(recorder.createContext(\"parameters are recorder in the bytecode\")) <1>\n"
"                .done();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:311
#, fuzzy
msgid "The \"real\" components can inject the `TestContext` directly."
msgstr "Los componentes \"reales\" pueden inyectar el `TestContext` directamente."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:312
#, fuzzy, no-wrap
msgid "Some types of extensions"
msgstr "Algunos tipos de extensiones"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:315
#, fuzzy
msgid "There exist multiple stereotypes of extension, let's list a few."
msgstr "Existen múltiples estereotipos de extensión, vamos a enumerar algunos."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:316
#, fuzzy, no-wrap
msgid "Bare library running"
msgstr "Biblioteca desnuda en funcionamiento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:321
#, fuzzy
msgid "This is the less sophisticated extension.  It consists of a set of patches to make sure a library runs on GraalVM.  If possible, contribute these patches upstream, not in extensions.  Second best is to write Substrate VM substitutions, which are patches applied during native image compilation."
msgstr "Esta es la extensión menos sofisticada. Consiste en un conjunto de parches para asegurar que una biblioteca se ejecute en GraalVM. Si es posible, contribuya con estos parches en el flujo ascendente, no en las extensiones. La segunda mejor opción es escribir sustituciones de Substrate VM, que son parches aplicados durante la compilación de la imagen nativa."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:322
#, fuzzy, no-wrap
msgid "Get a framework running"
msgstr "Conseguir que un marco funcione"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:325
#, fuzzy
msgid "A framework at runtime typically reads configuration, scan the classpath and classes for metadata (annotations, getters etc.), build a metamodel on top of which it runs, find options via the service loader pattern, prepare invocation calls (reflection), proxy interfaces, etc. + These operations should be done at build time and the metamodel be passed to the recorder DSL that will generate classes that will be executed at runtime and boot the framework."
msgstr "Un framework en tiempo de ejecución suele leer la configuración, escanear el classpath y las clases en busca de metadatos (anotaciones, getters, etc.), construir un metamodelo sobre el que se ejecuta, encontrar opciones a través del patrón del cargador de servicios, preparar las llamadas de invocación (reflexión), proxy de interfaces, etc. + Estas operaciones deben realizarse en tiempo de compilación y el metamodelo debe pasarse al DSL del grabador que generará las clases que se ejecutarán en tiempo de ejecución y arrancarán el framework."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:326
#, fuzzy, no-wrap
msgid "Get a CDI portable extension running"
msgstr "Obtener una extensión portátil CDI en funcionamiento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:331
#, fuzzy
msgid "The CDI portable extension model is very flexible.  Too flexible to benefit from the build time boot promoted by Quarkus.  Most extension we have seen do not make use of these extreme flexibility capabilities.  The way to port a CDI extension to Quarkus is to rewrite it as a Quarkus extension which will define the various beans at build time (deployment time in extension parlance)."
msgstr "El modelo de extensión portátil CDI es muy flexible. Demasiado flexible para beneficiarse del arranque en tiempo de construcción promovido por Quarkus. La mayoría de las extensiones que hemos visto no hacen uso de estas capacidades de extrema flexibilidad. La forma de portar una extensión CDI a Quarkus es reescribirla como una extensión de Quarkus que definirá los distintos beans en tiempo de construcción (tiempo de despliegue en la jerga de las extensiones)."

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:332
#, fuzzy, no-wrap
msgid "Technical aspect"
msgstr "Aspecto técnico"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:335
#, fuzzy, no-wrap
msgid "Three Phases of Bootstrap and Quarkus Philosophy"
msgstr "Tres fases de la filosofía de Bootstrap y Quarkus"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:338
#, fuzzy
msgid "There are three distinct bootstrap phases of a Quarkus app:"
msgstr "Hay tres fases distintas de arranque de una aplicación Quarkus:"

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:339
#, fuzzy, no-wrap
msgid "Augmentation"
msgstr "Aumento"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:345
#, fuzzy
msgid "This is the first phase, and is done by the xref:build-step-processors[Build Step Processors]. These processors have access to Jandex annotation information and can parse any descriptors and read annotations, but should not attempt to load any application classes. The output of these build steps is some recorded bytecode, using an extension of the ObjectWeb ASM project called Gizmo(ext/gizmo), that is used to actually bootstrap the application at runtime.  Depending on the `io.quarkus.deployment.annotations.ExecutionTime` value of the `@io.quarkus.deployment.annotations.Record` annotation associated with the build step, the step may be run in a different JVM based on the following two modes."
msgstr "Esta es la primera fase, y es realizada por los  link:#Build Step Processors[[Procesadores del Paso de Construcción]]. Estos procesadores tienen acceso a la información de las anotaciones de Jandex y pueden analizar los descriptores y leer las anotaciones, pero no deben intentar cargar ninguna clase de la aplicación. La salida de estos pasos de construcción es un bytecode grabado, utilizando una extensión del proyecto ObjectWeb ASM llamada Gizmo(ext/gizmo), que se utiliza para arrancar realmente la aplicación en tiempo de ejecución. Dependiendo del valor `io.quarkus.deployment.annotations.ExecutionTime` de la anotación `@io.quarkus.deployment.annotations.Record` asociada con el paso de construcción, el paso puede ser ejecutado en una JVM diferente basada en los siguientes dos modos."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:346
#, fuzzy, no-wrap
msgid "Static Init"
msgstr "Init estático"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:352
#, fuzzy
msgid "If bytecode is recorded with `@Record(STATIC_INIT)` then it will be executed from a static init method on the main class. For a native executable build, this code is executed in a normal JVM as part of the native build process, and any retained objects that are produced in this stage will be directly serialized into the native executable via an image mapped file.  This means that if a framework can boot in this phase then it will have its booted state directly written to the image, and so the boot code does not need to be executed when the image is started."
msgstr "Si el bytecode se graba con `@Record(STATIC_INIT)` entonces se ejecutará desde un método estático init en la clase principal. Para una construcción de un ejecutable nativo, este código se ejecuta en una JVM normal como parte del proceso de construcción nativo, y cualquier objeto retenido que se produzca en esta fase se serializará directamente en el ejecutable nativo a través de un archivo mapeado en la imagen. Esto significa que si un marco puede arrancar en esta fase, entonces tendrá su estado de arranque directamente escrito en la imagen, y por lo tanto el código de arranque no necesita ser ejecutado cuando la imagen se inicia."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:354
#, fuzzy
msgid "There are some restrictions on what can be done in this stage as the Substrate VM disallows some objects in the native executable. For example you should not attempt to listen on a port or start threads in this phase. In addition, it is disallowed to read run time configuration during static initialization."
msgstr "Existen algunas restricciones sobre lo que se puede hacer en esta fase, ya que la VM de Substrate deshabilita algunos objetos en el ejecutable nativo. Por ejemplo, no se debe intentar escuchar en un puerto o iniciar hilos en esta fase. Además, no está permitido leer la configuración en tiempo de ejecución durante la inicialización estática."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:359
#, fuzzy
msgid "In non-native pure JVM mode, there is no real difference between Static and Runtime Init, except that Static Init is always executed first. This mode benefits from the same build phase augmentation as native mode as the descriptor parsing and annotation scanning are done at build time and any associated class/framework dependencies can be removed from the build output jar. In servers like WildFly, deployment related classes such as XML parsers hang around for the life of the application, using up valuable memory. Quarkus aims to eliminate this, so that the only classes loaded at runtime are actually used at runtime."
msgstr "En el modo JVM puro no nativo, no hay ninguna diferencia real entre Static y Runtime Init, excepto que Static Init siempre se ejecuta primero. Este modo se beneficia de la misma ampliación de la fase de compilación que el modo nativo, ya que el análisis de los descriptores y el escaneo de las anotaciones se realizan en el momento de la compilación y cualquier dependencia de clase/marco asociada puede eliminarse del tarro de salida de la compilación. En servidores como WildFly, las clases relacionadas con el despliegue, como los analizadores XML, permanecen durante toda la vida de la aplicación, consumiendo una valiosa memoria. Quarkus pretende eliminar esto, de modo que las únicas clases cargadas en tiempo de ejecución se utilicen realmente en tiempo de ejecución."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:362
#, fuzzy
msgid "As an example, the only reason that a Quarkus application should load an XML parser is if the user is using XML in their application. Any XML parsing of configuration should be done in the Augmentation phase."
msgstr "Como ejemplo, la única razón por la que una aplicación Quarkus debería cargar un analizador XML es si el usuario está utilizando XML en su aplicación. Cualquier análisis XML de la configuración debe hacerse en la fase de aumento."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:363
#, fuzzy, no-wrap
msgid "Runtime Init"
msgstr "Init en tiempo de ejecución"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:367
#, fuzzy
msgid "If bytecode is recorded with `@Record(RUNTIME_INIT)` then it is executed from the application's main method. This code will be run on native executable boot. In general as little code as possible should be executed in this phase, and should be restricted to code that needs to open ports etc."
msgstr "Si el bytecode se graba con `@Record(RUNTIME_INIT)` entonces se ejecuta desde el método principal de la aplicación. Este código se ejecutará en el arranque del ejecutable nativo. En general, se debe ejecutar el menor código posible en esta fase, y debe restringirse al código que necesita abrir puertos, etc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:369
#, fuzzy
msgid "Pushing as much as possible into the `@Record(STATIC_INIT)` phase allows for two different optimizations:"
msgstr "Llevar todo lo posible a la fase `@Record(STATIC_INIT)` permite dos optimizaciones diferentes:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:371
#, fuzzy
msgid "In both native executable and pure JVM mode this allows the app to start as fast as possible since processing was done during build time. This also minimizes the classes/native code needed in the application to pure runtime related behaviors."
msgstr "Tanto en el modo ejecutable nativo como en el modo JVM puro, esto permite que la aplicación se inicie lo más rápido posible, ya que el procesamiento se realizó durante el tiempo de compilación. Esto también minimiza las clases/código nativo necesario en la aplicación a comportamientos puramente relacionados con el tiempo de ejecución."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:374
#, fuzzy
msgid "Another benefit with native executable mode is that Substrate can more easily eliminate features that are not used. If features are directly initialized via bytecode, Substrate can detect that a method is never called and eliminate that method. If config is read at runtime, Substrate cannot reason about the contents of the config and so needs to keep all features in case they are required."
msgstr "Otra ventaja del modo ejecutable nativo es que Substrate puede eliminar más fácilmente las funciones que no se utilizan. Si las funciones se inicializan directamente a través del código de bytes, Substrate puede detectar que un método nunca se llama y eliminar ese método. Si la configuración se lee en tiempo de ejecución, Substrate no puede razonar sobre el contenido de la configuración y por lo tanto necesita mantener todas las funciones en caso de que se requieran."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:376
#, fuzzy, no-wrap
msgid "Project setup"
msgstr "Configuración del proyecto"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:379
#, fuzzy
msgid "Your extension project should be setup as a multi-module project with two submodules:"
msgstr "Su proyecto de extensión debe ser configurado como un proyecto multimódulo con dos submódulos:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:381
#, fuzzy
msgid "A deployment time submodule that handles the build time processing and bytecode recording."
msgstr "Un submódulo de tiempo de despliegue que maneja el procesamiento de tiempo de construcción y la grabación de código de bytes."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:383
#, fuzzy
msgid "A runtime submodule that contains the runtime behavior that will provide the extension behavior in the native executable or runtime JVM."
msgstr "Un submódulo de tiempo de ejecución que contiene el comportamiento de tiempo de ejecución que proporcionará el comportamiento de la extensión en el ejecutable nativo o la JVM de tiempo de ejecución."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:388
#, fuzzy
msgid "Your runtime artifact should depend on `io.quarkus:quarkus-core`, and possibly the runtime artifacts of other Quarkus modules if you want to use functionality provided by them.  Your deployment time module should depend on `io.quarkus:quarkus-core-deployment`, your runtime artifact, and possibly the deployment artifacts of other Quarkus modules if you want to use functionality provided by them."
msgstr "Tu artefacto de tiempo de ejecución debe depender de `io.quarkus:quarkus-core`, y posiblemente de los artefactos de tiempo de ejecución de otros módulos de Quarkus si quieres utilizar la funcionalidad proporcionada por ellos. Su módulo de tiempo de despliegue debe depender de `io.quarkus:quarkus-core-deployment`, su artefacto de tiempo de ejecución, y posiblemente los artefactos de despliegue de otros módulos de Quarkus si desea utilizar la funcionalidad proporcionada por ellos."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:393
#, fuzzy
msgid "Under no circumstances can the runtime module depend on a deployment artifact. This would result in pulling all the deployment time code into runtime scope, which defeats the purpose of having the split."
msgstr "Bajo ninguna circunstancia el módulo de tiempo de ejecución puede depender de un artefacto de despliegue. Esto daría lugar a tirar de todo el código de tiempo de despliegue en el ámbito de tiempo de ejecución, lo que anula el propósito de tener la división."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:395
#, fuzzy, no-wrap
msgid "Using Maven"
msgstr "Uso de Maven"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:398
#, fuzzy
msgid "You will need to include the `io.quarkus:quarkus-extension-maven-plugin` and configure the `maven-compiler-plugin` to detect the `quarkus-extension-processor` annotation processor to collect and generate the necessary xref:extension-metadata.adoc[Quarkus extension metadata] for the extension artifacts, if you are using the Quarkus parent pom it will automatically inherit the correct configuration."
msgstr "Tendrás que incluir el `io.quarkus:quarkus-extension-maven-plugin` y configurar el `maven-compiler-plugin` para detectar el procesador de anotaciones `quarkus-extension-processor` para recoger y generar los  link:extension-metadata.html[metadatos de extensión de Quarkus] necesarios para los artefactos de extensión, si estás usando el pom padre de Quarkus heredará automáticamente la configuración correcta."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:400
#, fuzzy
msgid "You may want to use the `create-extension` mojo of `{quarkus-platform-groupid}:quarkus-maven-plugin` to create these Maven modules - see the next section."
msgstr "Es posible que desee utilizar el `create-extension` mojo de `io.quarkus.platform:quarkus-maven-plugin` para crear estos módulos Maven - ver la siguiente sección."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:403
#, fuzzy
msgid "By convention the deployment time artifact has the `-deployment` suffix, and the runtime artifact has no suffix (and is what the end user adds to their project)."
msgstr "Por convención, el artefacto de tiempo de despliegue tiene el sufijo `-deployment`, y el artefacto de tiempo de ejecución no tiene sufijo (y es lo que el usuario final añade a su proyecto)."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:413
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"      <groupId>io.quarkus</groupId>\n"
"      <artifactId>quarkus-core</artifactId>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:445
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-extension-maven-plugin</artifactId>\n"
"            <!-- Executions configuration can be inherited from quarkus-build-parent -->\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>extension-descriptor</goal>\n"
"                    </goals>\n"
"                    <configuration>\n"
"                         <deployment>${project.groupId}:${project.artifactId}-deployment:${project.version}</deployment>\n"
"                   </configuration>\n"
"               </execution>\n"
"           </executions>\n"
"        </plugin>\n"
"        <plugin>\n"
"            <groupId>org.apache.maven.plugins</groupId>\n"
"            <artifactId>maven-compiler-plugin</artifactId>\n"
"            <configuration>\n"
"                <annotationProcessorPaths>\n"
"                    <path>\n"
"                        <groupId>io.quarkus</groupId>\n"
"                        <artifactId>quarkus-extension-processor</artifactId>\n"
"                    </path>\n"
"                </annotationProcessorPaths>\n"
"            </configuration>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:448
#, fuzzy
msgid "The above `maven-compiler-plugin` configuration requires version 3.5+."
msgstr "La configuración anterior de `maven-compiler-plugin` requiere la versión 3.5+."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:450
#, fuzzy
msgid "You will also need to configure the `maven-compiler-plugin` of the deployment module to detect the `quarkus-extension-processor` annotation processor."
msgstr "También tendrá que configurar el `maven-compiler-plugin` del módulo de despliegue para detectar el procesador de anotaciones `quarkus-extension-processor`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:459
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-core-deployment</artifactId>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:476
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>org.apache.maven.plugins</groupId>\n"
"            <artifactId>maven-compiler-plugin</artifactId>\n"
"            <configuration>\n"
"                <annotationProcessorPaths>\n"
"                    <path>\n"
"                        <groupId>io.quarkus</groupId>\n"
"                        <artifactId>quarkus-extension-processor</artifactId>\n"
"                    </path>\n"
"                </annotationProcessorPaths>\n"
"            </configuration>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:478
#, fuzzy, no-wrap
msgid "Create new Quarkus Core extension modules using Maven"
msgstr "Crear nuevos módulos de extensión de Quarkus Core usando Maven"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:481
#, fuzzy
msgid "Quarkus provides `create-extension` Maven Mojo to initialize your extension project."
msgstr "Quarkus proporciona `create-extension` Maven Mojo para inicializar su proyecto de extensión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:483
#, fuzzy
msgid "It will try to auto-detect its options:"
msgstr "Intentará autodetectar sus opciones:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:485
#, fuzzy
msgid "from `quarkus` (Quarkus Core) or `quarkus/extensions` directory, it will use the 'Quarkus Core' extension layout and defaults."
msgstr "desde `quarkus` (Quarkus Core) o el directorio `quarkus/extensions`, utilizará el diseño de la extensión 'Quarkus Core' y los valores predeterminados."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:486
#, fuzzy
msgid "with `-DgroupId=io.quarkiverse.[extensionId]`, it will use the 'Quarkiverse' extension layout and defaults."
msgstr "con `-DgroupId=io.quarkiverse.[extensionId]`, utilizará el diseño y los valores predeterminados de la extensión 'Quarkiverse'."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:487
#, fuzzy
msgid "in other cases it will use the 'Standalone' extension layout and defaults."
msgstr "en otros casos utilizará el diseño de la extensión 'Standalone' y los valores predeterminados."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:488
#, fuzzy
msgid "we may introduce other layout types in the future."
msgstr "es posible que en el futuro introduzcamos otros tipos de diseño."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:490
#, fuzzy
msgid "You may not specify any parameter to use the interactive mode: `mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"
msgstr "No puede especificar ningún parámetro para utilizar el modo interactivo: `mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:492
#, fuzzy
msgid "As and example, let's add a new extension called `my-ext` to the Quarkus source tree:"
msgstr "Como ejemplo, vamos a añadir una nueva extensión llamada `my-ext` al árbol de fuentes de Quarkus:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:501
#, no-wrap
msgid ""
"git clone https://github.com/quarkusio/quarkus.git\n"
"cd quarkus\n"
"mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create-extension -N \\\n"
"    -DextensionId=my-ext \\\n"
"    -DextensionName=\"My Extension\" \\\n"
"    -DextensionDescription=\"Do something useful.\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:504
#, fuzzy
msgid "By default, the `groupId`, `version`, `quarkusVersion`, `namespaceId`, and `namespaceName` will be consistent with other Quarkus core extensions."
msgstr "Por defecto, las extensiones `groupId`, `version`, `quarkusVersion`, `namespaceId`, y `namespaceName` serán consistentes con otras extensiones del núcleo de Quarkus."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:506
#, fuzzy
msgid "The extension description is important as it is displayed on https://code.quarkus.io/, when listing extensions with the Quarkus CLI, etc."
msgstr "La descripción de la extensión es importante ya que se muestra en  https://code.quarkus.io/  cuando se listan las extensiones con el CLI de Quarkus, etc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:508
#, fuzzy
msgid "The above sequence of commands does the following:"
msgstr "La secuencia de comandos anterior hace lo siguiente:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:510
#, fuzzy
msgid "Creates four new Maven modules:"
msgstr "Crea cuatro nuevos módulos Maven:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:511
#, fuzzy
msgid "`quarkus-my-ext-parent` in the `extensions/my-ext` directory"
msgstr "`quarkus-my-ext-parent` en el directorio `extensions/my-ext`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:512
#, fuzzy
msgid "`quarkus-my-ext` in the `extensions/my-ext/runtime` directory"
msgstr "`quarkus-my-ext` en el directorio `extensions/my-ext/runtime`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:513
#, fuzzy
msgid "`quarkus-my-ext-deployment` in the `extensions/my-ext/deployment` directory; a basic `MyExtProcessor` class is generated in this module."
msgstr "`quarkus-my-ext-deployment` en el directorio `extensions/my-ext/deployment`; en este módulo se genera una clase básica `MyExtProcessor`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:514
#, fuzzy
msgid "`quarkus-my-ext-integration-test` in the `integration-tests/my-ext/deployment` directory; an empty Jakarta REST Resource class and two test classes (for JVM mode and native mode) are generated in this module."
msgstr "`quarkus-my-ext-integration-test` en el directorio `integration-tests/my-ext/deployment`; en este módulo se genera una clase de recurso JAX-RS vacía y dos clases de prueba (para el modo JVM y el modo nativo)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:515
#, fuzzy
msgid "Links these three modules where necessary:"
msgstr "Enlaza estos tres módulos cuando sea necesario:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:516
#, fuzzy
msgid "`quarkus-my-ext-parent` is added to the `<modules>` of `quarkus-extensions-parent`"
msgstr "`quarkus-my-ext-parent` se añade a la `&amp;lt;modules&amp;gt;` de `quarkus-extensions-parent`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:517
#, fuzzy
msgid "`quarkus-my-ext` is added to the `<dependencyManagement>` of the Quarkus BOM (Bill of Materials) `bom/application/pom.xml`"
msgstr "`quarkus-my-ext` se añade a la `&amp;lt;dependencyManagement&amp;gt;` de la lista de materiales de Quarkus `bom/application/pom.xml`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:518
#, fuzzy
msgid "`quarkus-my-ext-deployment` is added to the `<dependencyManagement>` of the Quarkus BOM (Bill of Materials) `bom/application/pom.xml`"
msgstr "`quarkus-my-ext-deployment` se añade a la `&amp;lt;dependencyManagement&amp;gt;` de la lista de materiales de Quarkus `bom/application/pom.xml`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:519
#, fuzzy
msgid "`quarkus-my-ext-integration-test` is added to the `<modules>` of `quarkus-integration-tests-parent`"
msgstr "`quarkus-my-ext-integration-test` se añade a la `&amp;lt;modules&amp;gt;` de `quarkus-integration-tests-parent`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:521
#, fuzzy
msgid "You also have to fill the xref:extension-metadata.adoc#quarkus-extension-yaml[quarkus-extension.yaml] template file that describe your extension inside the runtime module `src/main/resources/META-INF` folder."
msgstr "También tienes que rellenar el archivo `quarkus-extension.yaml` que describe tu extensión dentro de la carpeta del módulo de ejecución `src/main/resources/META-INF`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:523
#, fuzzy
msgid "This is the `quarkus-extension.yaml` template of the `quarkus-agroal` extension, you can use it as an example:"
msgstr "Este es el `quarkus-extension.yaml` de la extensión `quarkus-agroal`, puede utilizarlo como ejemplo:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:537
#, no-wrap
msgid ""
"name: \"Agroal - Database connection pool\" <1>\n"
"metadata:\n"
"  keywords: <2>\n"
"  - \"agroal\"\n"
"  - \"database-connection-pool\"\n"
"  - \"datasource\"\n"
"  - \"jdbc\"\n"
"  guide: \"https://quarkus.io/guides/datasource\" <3>\n"
"  categories: <4>\n"
"  - \"data\"\n"
"  status: \"stable\" <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:540
#, fuzzy
msgid "the name of the extension that will be displayed to users"
msgstr "el nombre de la extensión que se mostrará a los usuarios"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:541
#, fuzzy
msgid "keywords that can be used to find the extension in the extension catalog"
msgstr "palabras clave que pueden utilizarse para encontrar la extensión en el catálogo de extensiones"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:542
#, fuzzy
msgid "link to the extension's guide or documentation"
msgstr "enlace a la guía o documentación de la extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:543
#, fuzzy
msgid "categories under which the extension should appear on https://code.quarkus.io[code.quarkus.io], could be omitted, in which case the extension will still be listed but not under any specific category"
msgstr "las categorías bajo las cuales la extensión debe aparecer en  link:https://code.quarkus.io[code.quarkus.io], pueden ser omitidas, en cuyo caso la extensión seguirá apareciendo pero no bajo ninguna categoría específica"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:544
#, fuzzy
msgid "maturity status, which could be `stable`, `preview` or `experimental`, evaluated by extension maintainers"
msgstr "estado de madurez, que puede ser `stable`, `preview` o `experimental`, evaluado por los mantenedores de la extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:548
#, fuzzy
msgid "The `name` parameter of the mojo is optional.  If you do not specify it on the command line, the plugin will derive it from `extensionId` by replacing dashes with spaces and uppercasing each token.  So you may consider omitting explicit `name` in some cases."
msgstr "El parámetro `name` del mojo es opcional. Si no lo especifica en la línea de comandos, el plugin lo derivará de `extensionId` sustituyendo los guiones por espacios y poniendo en mayúsculas cada token. Así que puede considerar omitir `name` explícitamente en algunos casos."

#.  The following link should point to the mojo page once https://github.com/quarkusio/quarkusio.github.io/issues/265 is fixed
#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:551
#, fuzzy
msgid "Please refer to https://github.com/quarkusio/quarkus/blob/{quarkus-version}/devtools/maven/src/main/java/io/quarkus/maven/CreateExtensionMojo.java[CreateExtensionMojo JavaDoc] for all the available options of the mojo."
msgstr "Consulte  link:https://github.com/quarkusio/quarkus/blob/{quarkus-version}/devtools/maven/src/main/java/io/quarkus/maven/CreateExtensionMojo.java[el JavaDoc de CreateExtensionMojo] para conocer todas las opciones disponibles del mojo."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:552
#, fuzzy, no-wrap
msgid "Using Gradle"
msgstr "Uso de Gradle"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:558
#, fuzzy
msgid "You will need to apply the `io.quarkus.extension` plugin in the `runtime` module of your extension project.  The plugin includes the `extensionDescriptor` task that will generate `META-INF/quarkus-extension.properties` and `META-INF/quarkus-extension.yml` files.  The plugin also enables the `io.quarkus:quarkus-extension-processor` annotation processor in both `deployment` and `runtime` modules to collect and generate the rest of the xref:extension-metadata.adoc[Quarkus extension metadata].  The name of the deployment module can be configured in the plugin by setting the `deploymentModule` property. The property is set to `deployment` by default:"
msgstr "Deberá aplicar el plugin `io.quarkus.extension` en el módulo `runtime` de su proyecto de extensión. El plugin incluye la tarea `extensionDescriptor` que generará los archivos `META-INF/quarkus-extension.properties` y `META-INF/quarkus-extension.yml`. El plugin también habilita el procesador de anotaciones `io.quarkus:quarkus-extension-processor` en los módulos `deployment` y `runtime`. El nombre del módulo de despliegue se puede configurar en el plugin estableciendo la propiedad `deploymentArtifact`. La propiedad se establece por defecto en `deployment`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:565
#, no-wrap
msgid ""
"plugins {\n"
"    id 'java'\n"
"    id 'io.quarkus.extension'\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:569
#, no-wrap
msgid ""
"quarkusExtension {\n"
"    deploymentModule = 'deployment'\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:573
#, no-wrap
msgid ""
"dependencies {\n"
"    implementation platform('io.quarkus:quarkus-bom:{quarkus-version}')\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:578
#, fuzzy
msgid "This plugin is still experimental, it does not validate the extension dependencies as the equivalent Maven plugin does."
msgstr "Este plugin es todavía experimental, no valida las dependencias de la extensión como lo hace el plugin equivalente de Maven."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:581
#, fuzzy, no-wrap
msgid "Build Step Processors"
msgstr "Construir procesadores de paso"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:586
#, fuzzy
msgid "Work is done at augmentation time by _build steps_ which produce and consume _build items_.  The build steps found in the deployment modules that correspond to the extensions in the project build are automatically wired together and executed to produce the final build artifact(s)."
msgstr "El trabajo se realiza en tiempo de aumento mediante pasos de _construcción_ que producen y consumen _elementos de construcción_. Los pasos de construcción que se encuentran en los módulos de despliegue que corresponden a las extensiones en la construcción del proyecto se conectan automáticamente y se ejecutan para producir el artefacto o artefactos de construcción final."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:587
#, fuzzy, no-wrap
msgid "Build steps"
msgstr "Construir pasos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:592
#, fuzzy
msgid "A _build step_ is a non-static method which is annotated with the `@io.quarkus.deployment.annotations.BuildStep` annotation.  Each build step may xref:consuming-values[consume] items that are produced by earlier stages, and xref:producing-values[produce] items that can be consumed by later stages. Build steps are normally only run when they produce a build item that is ultimately consumed by another step."
msgstr "Un paso de _construcción_ es un método no estático que está anotado con la anotación `@io.quarkus.deployment.annotations.BuildStep`. Cada paso de construcción puede  link:#consuming-values[consumir] elementos producidos por etapas anteriores y  link:#producing-values[producir] elementos que pueden ser consumidos por etapas posteriores. Los pasos de construcción normalmente sólo se ejecutan cuando producen un elemento de construcción que finalmente es consumido por otro paso."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:595
#, fuzzy
msgid "Build steps are normally placed on plain classes within an extension's deployment module.  The classes are automatically instantiated during the augment process and utilize xref:injection[injection]."
msgstr "Los pasos de construcción se colocan normalmente en clases simples dentro del módulo de despliegue de una extensión. Las clases se instancian automáticamente durante el proceso de aumento y utilizan  link:#injection[la inyección]."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:597
#, fuzzy, no-wrap
msgid "Build items"
msgstr "Construir elementos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:603
#, fuzzy
msgid "Build items are concrete, final subclasses of the abstract `io.quarkus.builder.item.BuildItem` class.  Each build item represents some unit of information that must be passed from one stage to another.  The base `BuildItem` class may not itself be directly subclassed; rather, there are abstract subclasses for each of the kinds of build item subclasses that _may_ be created: xref:simple-build-items[simple], xref:multi-build-items[multi], and xref:empty-build-items[empty]."
msgstr "Los elementos de construcción son subclases concretas y finales de la clase abstracta `io.quarkus.builder.item.BuildItem`. Cada elemento de construcción representa alguna unidad de información que debe pasar de una etapa a otra. La clase base `BuildItem` no puede subclasificarse directamente, sino que existen subclases abstractas para cada uno de los tipos de subclases de elementos de construcción que _pueden_ crearse:  link:#simple-build-items[simples],  link:#multi-build-items[múltiples] y  link:#empty-build-items[vacíos]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:605
#, fuzzy
msgid "Think of build items as a way for different extensions to communicate with one another.  For example, a build item can:"
msgstr "Piensa en los elementos de construcción como una manera de que las diferentes extensiones se comuniquen entre sí. Por ejemplo, un elemento de construcción puede:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:607
#, fuzzy
msgid "expose the fact that a database configuration exists"
msgstr "exponer el hecho de que existe una configuración de base de datos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:608
#, fuzzy
msgid "consume that database configuration (e.g. a connection pool extension or an ORM extension)"
msgstr "consumir esa configuración de la base de datos (por ejemplo, una extensión del pool de conexiones o una extensión del ORM)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:610
#, fuzzy
msgid "ask an extension to do work for another extension: e.g. an extension wanting to define a new CDI bean and asking the ArC extension to do so"
msgstr "pedir a una extensión que haga un trabajo para otra extensión: por ejemplo, una extensión que quiera definir un nuevo bean CDI y pedir a la extensión ArC que lo haga"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:612
#, fuzzy
msgid "This is a very flexible mechanism."
msgstr "Se trata de un mecanismo muy flexible."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:615
#, fuzzy
msgid "`BuildItem` instances should be immutable, as the producer/consumer model does not allow for mutation to be correctly ordered. This is not enforced but failure to adhere to this rule can result in race conditions."
msgstr "`BuildItem` Las instancias deben ser inmutables, ya que el modelo productor/consumidor no permite ordenar correctamente la mutación. Esto no se impone, pero el incumplimiento de esta regla puede dar lugar a condiciones de carrera."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:617
#, fuzzy
msgid "Build steps are executed if and only if they produce build items that are (transitively) needed by other build steps. Make sure your build step produces a build item, otherwise you should probably produce either `ValidationErrorBuildItem` for build validations, or `ArtifactResultBuildItem` for generated artifacts."
msgstr "Los pasos de construcción se ejecutan si y sólo si producen elementos de construcción que son (transitoriamente) necesarios para otros pasos de construcción. Asegúrese de que su paso de compilación produce un elemento de compilación, de lo contrario probablemente debería producir `ValidationErrorBuildItem` para las validaciones de compilación, o `ArtifactResultBuildItem` para los artefactos generados."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:619
#, fuzzy, no-wrap
msgid "Simple build items"
msgstr "Elementos de construcción sencillos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:625
#, fuzzy
msgid "Simple build items are final classes which extend `io.quarkus.builder.item.SimpleBuildItem`.  Simple build items may only be produced by one step in a given build; if multiple steps in a build declare that they produce the same simple build item, an error is raised.  Any number of build steps may consume a simple build item.  A build step which consumes a simple build item will always run _after_ the build step which produced that item."
msgstr "Los elementos de construcción simples son clases finales que extienden `io.quarkus.builder.item.SimpleBuildItem`. Los elementos de construcción simples sólo pueden ser producidos por un paso en una construcción dada; si varios pasos en una construcción declaran que producen el mismo elemento de construcción simple, se produce un error. Cualquier número de pasos de compilación puede consumir un elemento de compilación simple. Un paso de compilación que consume un elemento de compilación simple siempre se ejecutará _después_ del paso de compilación que produjo ese elemento."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:626
#, fuzzy, no-wrap
msgid "Example of a single build item"
msgstr "Ejemplo de un elemento de construcción único"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:635
#, no-wrap
msgid ""
"/**\n"
" * The build item which represents the Jandex index of the application,\n"
" * and would normally be used by many build steps to find usages\n"
" * of annotations.\n"
" */\n"
"public final class ApplicationIndexBuildItem extends SimpleBuildItem {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:637
#, no-wrap
msgid "    private final Index index;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:641
#, no-wrap
msgid ""
"    public ApplicationIndexBuildItem(Index index) {\n"
"        this.index = index;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:646
#, no-wrap
msgid ""
"    public Index getIndex() {\n"
"        return index;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:650
#, fuzzy, no-wrap
msgid "Multi build items"
msgstr "Artículos de construcción múltiple"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:655
#, fuzzy
msgid "Multiple or \"multi\" build items are final classes which extend `io.quarkus.builder.item.MultiBuildItem`.  Any number of multi build items of a given class may be produced by any number of steps, but any steps which consume multi build items will only run _after_ every step which can produce them has run."
msgstr "Los elementos de construcción múltiples o \"multi\" son clases finales que extienden `io.quarkus.builder.item.MultiBuildItem`. Cualquier número de elementos de construcción múltiple de una clase determinada puede ser producido por cualquier número de pasos, pero cualquier paso que consuma elementos de construcción múltiple sólo se ejecutará _después de_ que se hayan ejecutado todos los pasos que puedan producirlos."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:656
#, fuzzy, no-wrap
msgid "Example of a multiple build item"
msgstr "Ejemplo de un elemento de construcción múltiple"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:662
#, no-wrap
msgid ""
"public final class ServiceWriterBuildItem extends MultiBuildItem {\n"
"    private final String serviceName;\n"
"    private final List<String> implementations;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:672
#, no-wrap
msgid ""
"    public ServiceWriterBuildItem(String serviceName, String... implementations) {\n"
"        this.serviceName = serviceName;\n"
"        // Make sure it's immutable\n"
"        this.implementations = Collections.unmodifiableList(\n"
"            Arrays.asList(\n"
"                implementations.clone()\n"
"            )\n"
"        );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:676
#, no-wrap
msgid ""
"    public String getServiceName() {\n"
"        return serviceName;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:681
#, no-wrap
msgid ""
"    public List<String> getImplementations() {\n"
"        return implementations;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:683
#, fuzzy, no-wrap
msgid "Example of multiple build item usage"
msgstr "Ejemplo de uso de elementos de construcción múltiples"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:698
#, no-wrap
msgid ""
"/**\n"
" * This build step produces a single multi build item that declares two\n"
" * providers of one configuration-related service.\n"
" */\n"
"@BuildStep\n"
"public ServiceWriterBuildItem registerOneService() {\n"
"    return new ServiceWriterBuildItem(\n"
"        Converter.class.getName(),\n"
"        MyFirstConfigConverterImpl.class.getName(),\n"
"        MySecondConfigConverterImpl.class.getName()\n"
"    );\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:717
#, no-wrap
msgid ""
"/**\n"
" * This build step produces several multi build items that declare multiple\n"
" * providers of multiple configuration-related services.\n"
" */\n"
"@BuildStep\n"
"public void registerSeveralServices(\n"
"    BuildProducer<ServiceWriterBuildItem> providerProducer\n"
") {\n"
"    providerProducer.produce(new ServiceWriterBuildItem(\n"
"        Converter.class.getName(),\n"
"        MyThirdConfigConverterImpl.class.getName(),\n"
"        MyFourthConfigConverterImpl.class.getName()\n"
"    ));\n"
"    providerProducer.produce(new ServiceWriterBuildItem(\n"
"        ConfigSource.class.getName(),\n"
"        MyConfigSourceImpl.class.getName()\n"
"    ));\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:728
#, no-wrap
msgid ""
"/**\n"
" * This build step aggregates all the produced service providers\n"
" * and outputs them as resources.\n"
" */\n"
"@BuildStep\n"
"public void produceServiceFiles(\n"
"    List<ServiceWriterBuildItem> items,\n"
"    BuildProducer<GeneratedResourceBuildItem> resourceProducer\n"
") throws IOException {\n"
"    // Aggregate all the providers\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:739
#, no-wrap
msgid ""
"    Map<String, Set<String>> map = new HashMap<>();\n"
"    for (ServiceWriterBuildItem item : items) {\n"
"        String serviceName = item.getName();\n"
"        for (String implName : item.getImplementations()) {\n"
"            map.computeIfAbsent(\n"
"                serviceName,\n"
"                (k, v) -> new LinkedHashSet<>()\n"
"            ).add(implName);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:760
#, no-wrap
msgid ""
"    // Now produce the resource(s) for the SPI files\n"
"    for (Map.Entry<String, Set<String>> entry : map.entrySet()) {\n"
"        String serviceName = entry.getKey();\n"
"        try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {\n"
"            try (OutputStreamWriter w = new OutputStreamWriter(os, StandardCharsets.UTF_8)) {\n"
"                for (String implName : entry.getValue()) {\n"
"                    w.write(implName);\n"
"                    w.write(System.lineSeparator());\n"
"                }\n"
"                w.flush();\n"
"            }\n"
"            resourceProducer.produce(\n"
"                new GeneratedResourceBuildItem(\n"
"                    \"META-INF/services/\" + serviceName,\n"
"                    os.toByteArray()\n"
"                )\n"
"            );\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:763
#, fuzzy, no-wrap
msgid "Empty build items"
msgstr "Elementos de construcción vacíos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:768
#, fuzzy
msgid "Empty build items are final (usually empty) classes which extend `io.quarkus.builder.item.EmptyBuildItem`.  They represent build items that don't actually carry any data, and allow such items to be produced and consumed without having to instantiate empty classes.  They cannot themselves be instantiated."
msgstr "Los elementos de construcción vacíos son clases finales (normalmente vacías) que extienden `io.quarkus.builder.item.EmptyBuildItem`. Representan elementos de construcción que en realidad no llevan ningún dato, y permiten que tales elementos sean producidos y consumidos sin tener que instanciar clases vacías. No pueden ser instanciados."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:771
#, fuzzy
msgid "As they cannot be instantiated, they cannot be injected by any means, nor be returned by a build step (or via a `BuildProducer`).  To produce an empty build item you must annotate the build step with `@Produce(MyEmptyBuildItem.class)` and to consume it by `@Consume(MyEmptyBuildItem.class)`."
msgstr "Como no pueden ser instanciados, no pueden ser inyectados por ningún medio, ni ser devueltos por un paso de construcción (o a través de un `BuildProducer`). Para producir un elemento de compilación vacío debes anotar el paso de compilación con `@Produce(MyEmptyBuildItem.class)` y consumirlo mediante `@Consume(MyEmptyBuildItem.class)`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:772
#, fuzzy, no-wrap
msgid "Example of an empty build item"
msgstr "Ejemplo de un elemento de construcción vacío"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:778
#, no-wrap
msgid ""
"public final class NativeImageBuildItem extends EmptyBuildItem {\n"
"    // empty\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:783
#, fuzzy
msgid "Empty build items can represent \"barriers\" which can impose ordering between steps.  They can also be used in the same way that popular build systems use \"pseudo-targets\", which is to say that the build item can represent a conceptual goal that does not have a concrete representation."
msgstr "Los elementos de construcción vacíos pueden representar \"barreras\" que pueden imponer un orden entre los pasos. También se pueden utilizar de la misma manera que los sistemas de construcción populares utilizan \"pseudo-objetivos\", es decir, el elemento de construcción puede representar un objetivo conceptual que no tiene una representación concreta."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:784
#, fuzzy, no-wrap
msgid "Example of usage of an empty build item in a \"pseudo-target\" style"
msgstr "Ejemplo de uso de un elemento de construcción vacío en un estilo \"pseudo-objetivo\""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:799
#, no-wrap
msgid ""
"/**\n"
" * Contrived build step that produces the native image on disk.  The main augmentation\n"
" * step (which is run by Maven or Gradle) would be declared to consume this empty item,\n"
" * causing this step to be run.\n"
" */\n"
"@BuildStep\n"
"@Produce(NativeImageBuildItem.class)\n"
"void produceNativeImage() {\n"
"    // ...\n"
"    // (produce the native image)\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:801
#, fuzzy, no-wrap
msgid "Example of usage of an empty build item in a \"barrier\" style"
msgstr "Ejemplo de uso de un elemento de construcción vacío en un estilo de \"barrera\""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:813
#, no-wrap
msgid ""
"/**\n"
" * This would always run after {@link #produceNativeImage()} completes, producing\n"
" * an instance of {@code SomeOtherBuildItem}.\n"
" */\n"
"@BuildStep\n"
"@Consume(NativeImageBuildItem.class)\n"
"SomeOtherBuildItem secondBuildStep() {\n"
"    return new SomeOtherBuildItem(\"foobar\");\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:816
#, fuzzy, no-wrap
msgid "Validation Error build items"
msgstr "Artículos de construcción múltiple"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:819
#, fuzzy
msgid "They represent build items with validation errors that make the build fail. These build items are consumed during the initialization of the CDI container."
msgstr "Representan elementos de construcción con errores de validación que hacen que la construcción falle. Estos elementos de compilación se consumen durante la inicialización del contenedor CDI."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:820
#, fuzzy, no-wrap
msgid "Example of usage of an validation error build item in a \"pseudo-target\" style"
msgstr "Ejemplo de uso de un elemento de construcción vacío en un estilo \"pseudo-objetivo\""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:831
#, no-wrap
msgid ""
"@BuildStep\n"
"void checkCompatibility(Capabilities capabilities, BuildProducer<ValidationErrorBuildItem> validationErrors) {\n"
"    if (capabilities.isMissing(Capability.RESTEASY_REACTIVE)\n"
"            && capabilities.isMissing(Capability.RESTEASY_CLASSIC)) {\n"
"        validationErrors.produce(new ValidationErrorBuildItem(\n"
"                new ConfigurationException(\"Cannot use both RESTEasy Classic and Reactive extensions at the same time\")));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:834
#, fuzzy, no-wrap
msgid "Artifact Result build items"
msgstr "Artículos de construcción múltiple"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:838
#, fuzzy
msgid "They represent build items containing the runnable artifact generated by the build, such as an uberjar or thin jar.  These build items can also be used to always execute a build step without needing to produce anything."
msgstr "Representan elementos de compilación que contienen el artefacto ejecutable generado por la compilación, como un uberjar o un thin jar. Estos elementos de compilación también pueden utilizarse para ejecutar siempre un paso de compilación sin necesidad de producir nada."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:839
#, fuzzy, no-wrap
msgid "Example of build step that is always executed in a \"pseudo-target\" style"
msgstr "Ejemplo de uso de un elemento de construcción vacío en un estilo \"pseudo-objetivo\""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:847
#, no-wrap
msgid ""
"@BuildStep\n"
"@Produce(ArtifactResultBuildItem.class)\n"
"void runBuildStepThatProducesNothing() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:850
#, fuzzy, no-wrap
msgid "Injection"
msgstr "Inyección"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:853
#, fuzzy
msgid "Classes which contain build steps support the following types of injection:"
msgstr "Las clases que contienen pasos de construcción admiten los siguientes tipos de inyección:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:855
#, fuzzy
msgid "Constructor parameter injection"
msgstr "Inyección de parámetros del constructor"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:856
#, fuzzy
msgid "Field injection"
msgstr "Inyección en el campo"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:857
#, fuzzy
msgid "Method parameter injection (for build step methods only)"
msgstr "Inyección de parámetros de métodos (sólo para métodos de pasos de construcción)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:860
#, fuzzy
msgid "Build step classes are instantiated and injected for each build step invocation, and are discarded afterwards.  State should only be communicated between build steps by way of build items, even if the steps are on the same class."
msgstr "Las clases de pasos de construcción se instancian e inyectan para cada invocación de pasos de construcción, y se descartan después. El estado sólo debe comunicarse entre los pasos de construcción por medio de elementos de construcción, incluso si los pasos están en la misma clase."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:863
#, fuzzy
msgid "Final fields are not considered for injection, but can be populated by way of constructor parameter injection if desired.  Static fields are never considered for injection."
msgstr "Los campos finales no se consideran para la inyección, pero pueden ser rellenados mediante la inyección de parámetros del constructor si se desea. Los campos estáticos nunca se consideran para la inyección."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:865
#, fuzzy
msgid "The types of values that can be injected include:"
msgstr "Los tipos de valores que se pueden inyectar incluyen:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:867
#, fuzzy
msgid "xref:build-items[Build items] produced by previous build steps"
msgstr "link:#build-items[Elementos de construcción] producidos por pasos de construcción anteriores"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:868
#, fuzzy
msgid "xref:producing-values[Build producers] to produce items for subsequent build steps"
msgstr "link:#producing-values[Construir productores] para producir artículos para los siguientes pasos de construcción"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:869
#, fuzzy
msgid "xref:configuration[Configuration Mapping] types"
msgstr "Tipos de link:#configuration-roots[raíces de configuración]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:870
#, fuzzy
msgid "Template objects for xref:bytecode-recording[bytecode recording]"
msgstr "Objetos de plantilla para la  link:#bytecode-recording[grabación de código de bytes]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:873
#, fuzzy
msgid "Objects which are injected into a build step method or its class _must not_ be used outside that method's execution."
msgstr "Los objetos que se inyectan en un método de paso de construcción o en su clase _no deben_ utilizarse fuera de la ejecución de ese método."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:876
#, fuzzy
msgid "Injection is resolved at compile time via an annotation processor, and the resulting code does not have permission to inject private fields or invoke private methods."
msgstr "La inyección se resuelve en tiempo de compilación mediante un procesador de anotaciones, y el código resultante no tiene permiso para inyectar campos privados o invocar métodos privados."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:878
#, fuzzy, no-wrap
msgid "Producing values"
msgstr "Producción de valores"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:881
#, fuzzy
msgid "A build step may produce values for subsequent steps in several possible ways:"
msgstr "Un paso de construcción puede producir valores para los pasos posteriores de varias maneras posibles:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:883
#, fuzzy
msgid "By returning a xref:simple-build-items[simple build item] or xref:multi-build-items[multi build item] instance"
msgstr "Devolviendo un elemento de  link:#simple-build-items[construcción simple] o una instancia de  link:#multi-build-items[elemento de construcción múltiple]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:884
#, fuzzy
msgid "By returning a `List` of a multi build item class"
msgstr "Devolviendo un `List` de una clase de artículo de construcción múltiple"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:885
#, fuzzy
msgid "By injecting a `BuildProducer` of a simple or multi build item class"
msgstr "Inyectando un `BuildProducer` de una clase de artículo simple o de construcción múltiple"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:887
#, fuzzy
msgid "By annotating the method with `@io.quarkus.deployment.annotations.Produce`, giving the class name of an xref:empty-build-items[empty build item]"
msgstr "Anotando el método con `@io.quarkus.deployment.annotations.Produce`, dando el nombre de la clase de un  link:#empty-build-items[elemento de construcción vacío]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:890
#, fuzzy
msgid "If a simple build item is declared on a build step, it _must_ be produced during that build step, otherwise an error will result.  Build producers, which are injected into steps, _must not_ be used outside that step."
msgstr "Si se declara un elemento de construcción simple en un paso de construcción, _debe_ producirse durante ese paso de construcción, de lo contrario se producirá un error. Los productores de construcción que se inyectan en los pasos _no deben_ utilizarse fuera de ese paso."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:896
#, fuzzy
msgid "Note that a `@BuildStep` method will only be called if it produces something that another consumer or the final output requires. If there is no consumer for a particular item then it will not be produced. What is required will depend on the final target that is being produced.  For example, when running in developer mode the final output will not ask for GraalVM-specific build items such as `ReflectiveClassBuildItem`, so methods that only produce these items will not be invoked."
msgstr "Tenga en cuenta que un método `@BuildStep` sólo será llamado si produce algo que otro consumidor o la salida final requiere. Si no hay ningún consumidor para un elemento concreto, entonces no se producirá. Lo que se requiera dependerá del objetivo final que se esté produciendo. Por ejemplo, cuando se ejecuta en modo desarrollador la salida final no pedirá elementos de construcción específicos de GraalVM como `ReflectiveClassBuildItem`, por lo que los métodos que sólo producen estos elementos no serán invocados."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:898
#, fuzzy, no-wrap
msgid "Consuming values"
msgstr "Valores de consumo"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:901
#, fuzzy
msgid "A build step may consume values from previous steps in the following ways:"
msgstr "Un paso de construcción puede consumir valores de pasos anteriores de las siguientes maneras:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:903
#, fuzzy
msgid "By injecting a xref:simple-build-items[simple build item]"
msgstr "Al inyectar un  link:#simple-build-items[simple elemento de construcción]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:904
#, fuzzy
msgid "By injecting an `Optional` of a simple build item class"
msgstr "Inyectando un `Optional` de una simple clase de elemento de construcción"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:905
#, fuzzy
msgid "By injecting a `List` of a xref:multi-build-items[multi build item] class"
msgstr "Inyectando un `List` de una clase de  link:#multi-build-items[artículo de construcción múltiple]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:907
#, fuzzy
msgid "By annotating the method with `@io.quarkus.deployment.annotations.Consume`, giving the class name of an xref:empty-build-items[empty build item]"
msgstr "Anotando el método con `@io.quarkus.deployment.annotations.Consume`, dando el nombre de la clase de un  link:#empty-build-items[elemento de construcción vacío]"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:910
#, fuzzy
msgid "Normally it is an error for a step which is included to consume a simple build item that is not produced by any other step.  In this way, it is guaranteed that all the declared values will be present and non-`null` when a step is run."
msgstr "Normalmente es un error que un paso incluido consuma un elemento de construcción simple que no sea producido por ningún otro paso. De este modo, se garantiza que todos los valores declarados estarán presentes y no `null` cuando se ejecute un paso."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:913
#, fuzzy
msgid "Sometimes a value isn't necessary for the build to complete, but might inform some behavior of the build step if it is present.  In this case, the value can be optionally injected."
msgstr "A veces, un valor no es necesario para que la construcción se complete, pero puede informar de algún comportamiento del paso de construcción si está presente. En este caso, el valor puede ser inyectado opcionalmente."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:915
#, fuzzy
msgid "Multi build values are always considered _optional_.  If not present, an empty list will be injected."
msgstr "Los valores de construcción múltiple se consideran siempre _opcionales_. Si no están presentes, se inyectará una lista vacía."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:917
#, fuzzy, no-wrap
msgid "Weak value production"
msgstr "Producción de valor débil"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:922
#, fuzzy
msgid "Normally a build step is included whenever it produces any build item which is in turn consumed by any other build step.  In this way, only the steps necessary to produce the final artifact(s) are included, and steps which pertain to extensions which are not installed or which only produce build items which are not relevant for the given artifact type are excluded."
msgstr "Normalmente, un paso de construcción se incluye siempre que produce cualquier elemento de construcción que a su vez es consumido por cualquier otro paso de construcción. De este modo, sólo se incluyen los pasos necesarios para producir el artefacto o artefactos finales, y se excluyen los pasos que pertenecen a extensiones que no están instaladas o que sólo producen elementos de construcción que no son relevantes para el tipo de artefacto dado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:925
#, fuzzy
msgid "For cases where this is not desired behavior, the `@io.quarkus.deployment.annotations.Weak` annotation may be used.  This annotation indicates that the build step should not automatically be included solely on the basis of producing the annotated value."
msgstr "Para los casos en los que no se desea este comportamiento, se puede utilizar la anotación `@io.quarkus.deployment.annotations.Weak`. Esta anotación indica que el paso de construcción no debe incluirse automáticamente sólo por producir el valor anotado."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:926
#, fuzzy, no-wrap
msgid "Example of producing a build item weakly"
msgstr "Ejemplo de producción débil de un elemento de construcción"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:942
#, no-wrap
msgid ""
"/**\n"
" * This build step is only run if something consumes the ExecutorClassBuildItem.\n"
" */\n"
"@BuildStep\n"
"void createExecutor(\n"
"        @Weak BuildProducer<GeneratedClassBuildItem> classConsumer,\n"
"        BuildProducer<ExecutorClassBuildItem> executorClassConsumer\n"
") {\n"
"        ClassWriter cw = new ClassWriter(Gizmo.ASM_API_VERSION);\n"
"        String className = generateClassThatCreatesExecutor(cw); // <1>\n"
"        classConsumer.produce(new GeneratedClassBuildItem(true, className, cw.toByteArray()));\n"
"        executorClassConsumer.produce(new ExecutorClassBuildItem(className));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:944
#, fuzzy
msgid "This method (not provided in this example) would generate the class using the ASM API."
msgstr "Este método (no proporcionado en este ejemplo) generaría la clase utilizando la API de ASM."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:951
#, fuzzy
msgid "Certain types of build items are generally always consumed, such as generated classes or resources.  An extension might produce a build item along with a generated class to facilitate the usage of that build item.  Such a build step would use the `@Weak` annotation on the generated class build item, while normally producing the other build item.  If the other build item is ultimately consumed by something, then the step would run and the class would be generated.  If nothing consumes the other build item, the step would not be included in the build process."
msgstr "Algunos tipos de elementos de compilación se consumen generalmente siempre, como las clases generadas o los recursos. Una extensión puede producir un elemento de compilación junto con una clase generada para facilitar el uso de ese elemento de compilación. Este paso de compilación utilizaría la anotación `@Weak` en el elemento de compilación de la clase generada, mientras que normalmente produce el otro elemento de compilación. Si el otro elemento de compilación es consumido por algo, entonces el paso se ejecutaría y la clase sería generada. Si nada consume el otro elemento de construcción, el paso no se incluiría en el proceso de construcción."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:954
#, fuzzy
msgid "In the example above, `GeneratedClassBuildItem` would only be produced if `ExecutorClassBuildItem` is consumed by some other build step."
msgstr "En el ejemplo anterior, `GeneratedClassBuildItem` sólo se produciría si `ExecutorClassBuildItem` es consumido por algún otro paso de construcción."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:957
#, fuzzy
msgid "Note that when using xref:bytecode-recording[bytecode recording], the implicitly generated class can be declared to be weak by using the `optional` attribute of the `@io.quarkus.deployment.annotations.Record` annotation."
msgstr "Tenga en cuenta que cuando se utiliza  link:#bytecode-recording[la grabación de código de bytes], la clase generada implícitamente puede declararse débil utilizando el atributo `optional` de la anotación `@io.quarkus.deployment.annotations.Record`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:958
#, fuzzy, no-wrap
msgid "Example of using a bytecode recorder where the generated class is weakly produced"
msgstr "Ejemplo de uso de un registrador de código de bytes donde la clase generada se produce débilmente"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:970
#, no-wrap
msgid ""
"/**\n"
" * This build step is only run if something consumes the ExecutorBuildItem.\n"
" */\n"
"@BuildStep\n"
"@Record(value = ExecutionTime.RUNTIME_INIT, optional = true) // <1>\n"
"ExecutorBuildItem createExecutor( // <2>\n"
"        ExecutorRecorder recorder,\n"
"        ThreadPoolConfig threadPoolConfig\n"
") {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:979
#, no-wrap
msgid ""
"    return new ExecutorBuildItem(\n"
"        recorder.setupRunTime(\n"
"            shutdownContextBuildItem,\n"
"            threadPoolConfig,\n"
"            launchModeBuildItem.getLaunchMode()\n"
"        )\n"
"    );\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:981
#, fuzzy
msgid "Note the `optional` attribute."
msgstr "Tenga en cuenta el atributo `optional`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:982
#, fuzzy
msgid "This example is using recorder proxies; see the section on xref:bytecode-recording[bytecode recording] for more information."
msgstr "Este ejemplo utiliza proxies grabadores; para más información, consulte la sección sobre la  link:#bytecode-recording[grabación de bytecode]."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:983
#, fuzzy, no-wrap
msgid "Application Archives"
msgstr "Archivos de aplicaciones"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:989
#, fuzzy
msgid "The `@BuildStep` annotation can also register marker files that determine which archives on the class path are considered to be 'Application Archives', and will therefore get indexed. This is done via the `applicationArchiveMarkers`. For example the ArC extension registers `META-INF/beans.xml`, which means that all archives on the class path with a `beans.xml` file will be indexed."
msgstr "La anotación `@BuildStep` también puede registrar archivos marcadores que determinan qué archivos de la ruta de la clase se consideran \"archivos de aplicación\" y, por tanto, se indexarán. Esto se hace a través de `applicationArchiveMarkers`. Por ejemplo, la extensión ArC registra `META-INF/beans.xml`, lo que significa que todos los archivos en la ruta de la clase con un archivo `beans.xml` serán indexados."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:990
#, fuzzy, no-wrap
msgid "Using Thread's Context Class Loader"
msgstr "Uso del cargador de clases de contexto de Thread"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:996
#, fuzzy
msgid "The build step will be run with a TCCL that can load user classes from the deployment in a transformer-safe way.  This class loader only lasts for the life of the augmentation, and is discarded afterwards.  The classes will be loaded again in a different class loader at runtime.  This means that loading a class during augmentation does not stop it from being transformed when running in the development/test mode."
msgstr "El paso de construcción se ejecutará con un TCCL que puede cargar las clases de usuario desde el despliegue de una manera segura para el transformador. Este cargador de clases sólo dura la vida de la ampliación, y se descarta después. Las clases se cargarán de nuevo en un cargador de clases diferente en tiempo de ejecución. Esto significa que cargar una clase durante el aumento no impide que se transforme cuando se ejecute en el modo de desarrollo/prueba."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:997
#, fuzzy, no-wrap
msgid "Adding external JARs to the indexer with IndexDependencyBuildItem"
msgstr "Añadir JARs externos al indexador con IndexDependencyBuildItem"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1001
#, fuzzy
msgid "The index of scanned classes will not automatically include your external class dependencies.  To add dependencies, create a `@BuildStep` that produces `IndexDependencyBuildItem` objects, for a `groupId` and `artifactId`."
msgstr "El índice de clases escaneadas no incluirá automáticamente sus dependencias de clases externas. Para añadir dependencias, cree un `@BuildStep` que produzca objetos `IndexDependencyBuildItem`, para un `groupId` y `artifactId`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1003
#, fuzzy
msgid "It is important to specify all the required artifacts to be added to the indexer. No artifacts are implicitly added transitively."
msgstr "Es importante especificar todos los artefactos requeridos para ser añadidos al indexador. Ningún artefacto se añade implícitamente de forma transitoria."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1005
#, fuzzy
msgid "The `Amazon Alexa` extension adds dependent libraries from the Alexa SDK that are used in Jackson JSON transformations, in order for the reflective classes to identified and included at `BUILD_TIME`."
msgstr "La extensión `Amazon Alexa` añade librerías dependientes del SDK de Alexa que se utilizan en las transformaciones JSON de Jackson, para que las clases reflexivas sean identificadas e incluidas en `BUILD_TIME`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1019
#, no-wrap
msgid ""
"   @BuildStep\n"
"    void addDependencies(BuildProducer<IndexDependencyBuildItem> indexDependency) {\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-runtime\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-model\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-lambda-support\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-servlet-support\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-dynamodb-persistence-adapter\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-apache-client\"));\n"
"        indexDependency.produce(new IndexDependencyBuildItem(\"com.amazon.alexa\", \"ask-sdk-model-runtime\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1022
#, fuzzy
msgid "With the artifacts added to the `Jandex` indexer, you can now search the index to identify classes implementing an interface, subclasses of a specific class, or classes with a target annotation."
msgstr "Con los artefactos añadidos al indexador de `Jandex`, ahora puede buscar en el índice para identificar las clases que implementan una interfaz, las subclases de una clase específica o las clases con una anotación de destino."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1025
#, fuzzy
msgid "For example, the `Jackson` extension uses code like below to search for annotations used in JSON deserialization, and add them to the reflective hierarchy for `BUILD_TIME` analysis."
msgstr "Por ejemplo, la extensión `Jackson` utiliza un código como el siguiente para buscar las anotaciones utilizadas en la deserialización de JSON, y añadirlas a la jerarquía reflexiva para el análisis de `BUILD_TIME`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1030
#, no-wrap
msgid "    DotName JSON_DESERIALIZE = DotName.createSimple(JsonDeserialize.class.getName());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1032
#, no-wrap
msgid "    IndexView index = combinedIndexBuildItem.getIndex();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1041
#, no-wrap
msgid ""
"    // handle the various @JsonDeserialize cases\n"
"    for (AnnotationInstance deserializeInstance : index.getAnnotations(JSON_DESERIALIZE)) {\n"
"        AnnotationTarget annotationTarget = deserializeInstance.target();\n"
"        if (CLASS.equals(annotationTarget.kind())) {\n"
"            DotName dotName = annotationTarget.asClass().name();\n"
"            Type jandexType = Type.create(dotName, Type.Kind.CLASS);\n"
"            reflectiveHierarchyClass.produce(new ReflectiveHierarchyBuildItem(jandexType));\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1043
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1046
#, fuzzy, no-wrap
msgid "Visualizing build step dependencies"
msgstr "Visualización de las dependencias de los pasos de compilación"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1050
#, fuzzy
msgid "It can occasionally be useful to see a visual representation of the interactions between the various build steps. For such cases, adding `-Dquarkus.builder.graph-output=build.dot` when building an application will result in the creation of the `build.dot` file in the project's root directory. See link:https://graphviz.org/resources/[this] for a list of software that can open the file and show the actual visual representation."
msgstr "En ocasiones puede ser útil ver una representación visual de las interacciones entre los distintos pasos de construcción. En estos casos, si se añade `-Djboss.builder.graph-output=build.dot` al construir una aplicación, se creará el archivo `build.dot` en el directorio raíz del proyecto. Vea  link:https://graphviz.org/resources/[esto] para una lista de software que puede abrir el archivo y mostrar la representación visual real."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1052
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "Configuración"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1056
#, fuzzy
msgid "Configuration in Quarkus is based on https://smallrye.io/smallrye-config/Main/[SmallRye Config]. All features provided by https://smallrye.io/smallrye-config/Main/[SmallRye Config] are also available in Quarkus."
msgstr "La configuración en Quarkus se basa en  link:https://smallrye.io/smallrye-config/Main/[SmallRye Config]. Todas las características proporcionadas por  link:https://smallrye.io/smallrye-config/Main/[SmallRye] Config también están disponibles en Quarkus."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1060
#, fuzzy
msgid "Extensions must use https://smallrye.io/smallrye-config/Main/config/mappings/[SmallRye Config @ConfigMapping] to map the configuration required by the Extension. This will allow Quarkus to automatically expose an instance of the mapping to each configuration phase and generate the configuration documentation."
msgstr "Las extensiones deben utilizar  link:https://smallrye.io/smallrye-config/Main/config/mappings/[SmallRye Config @ConfigMapping] para mapear la configuración requerida por la extensión. Esto permitirá a Quarkus exponer automáticamente una instancia del mapeo a cada fase de configuración y generar la documentación de configuración."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1062
#, fuzzy, no-wrap
msgid "Config Phases"
msgstr "Fases de la raíz de la configuración"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1068
#, fuzzy
msgid "Configuration mappings are strictly bound by configuration phase, and attempting to access a configuration mapping from outside its corresponding phase will result in an error. They dictate when its contained keys are read from the configuration, and when they are available to applications. The phases defined by `io.quarkus.runtime.annotations.ConfigPhase` are as follows:"
msgstr "Las raíces de configuración están estrictamente ligadas a la fase de configuración, y el intento de acceder a una raíz de configuración desde fuera de su fase correspondiente dará lugar a un error. Una raíz de configuración dicta cuándo sus claves contenidas son leídas desde la configuración, y cuándo están disponibles para las aplicaciones. Las fases definidas por `io.quarkus.runtime.annotations.ConfigPhase` son las siguientes:"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1072
#, fuzzy, no-wrap
msgid "Phase name"
msgstr "Nombre de la fase"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1073
#, fuzzy, no-wrap
msgid "Read & avail. at build time"
msgstr "Leer y disponer en el momento de la construcción"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1074
#, fuzzy, no-wrap
msgid "Avail. at run time"
msgstr "Disponible en tiempo de ejecución"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1075
#, fuzzy, no-wrap
msgid "Read during static init"
msgstr "Leído durante el init estático"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1076
#, fuzzy, no-wrap
msgid "Re-read during startup (native executable)"
msgstr "Releer durante el arranque (ejecutable nativo)"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1078
#, fuzzy, no-wrap
msgid "Notes"
msgstr "Notas"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1079
#, fuzzy, no-wrap
msgid "BUILD_TIME"
msgstr "BUILD_TIME"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1080
#: upstream/_guides/writing-extensions.adoc:1087
#: upstream/_guides/writing-extensions.adoc:1088
#: upstream/_guides/writing-extensions.adoc:1095
#: upstream/_guides/writing-extensions.adoc:1097
#: upstream/_guides/writing-extensions.adoc:1102
#: upstream/_guides/writing-extensions.adoc:1103
#: upstream/_guides/writing-extensions.adoc:1104
#, fuzzy, no-wrap
msgid "✓"
msgstr "✓"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1081
#: upstream/_guides/writing-extensions.adoc:1082
#: upstream/_guides/writing-extensions.adoc:1083
#: upstream/_guides/writing-extensions.adoc:1089
#: upstream/_guides/writing-extensions.adoc:1090
#: upstream/_guides/writing-extensions.adoc:1094
#: upstream/_guides/writing-extensions.adoc:1096
#: upstream/_guides/writing-extensions.adoc:1101
#, fuzzy, no-wrap
msgid "✗"
msgstr "✗"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1085
#, fuzzy, no-wrap
msgid "Appropriate for things which affect build."
msgstr "Apropiado para cosas que afectan a la construcción."

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1086
#, fuzzy, no-wrap
msgid "BUILD_AND_RUN_TIME_FIXED"
msgstr "BUILD_AND_RUN_TIME_FIXED"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1092
#, fuzzy, no-wrap
msgid "Appropriate for things which affect build and must be visible for run time code.  Not read from config at run time."
msgstr "Apropiado para cosas que afectan a la construcción y deben ser visibles para el código en tiempo de ejecución. No se lee de la configuración en tiempo de ejecución."

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1093
#, fuzzy, no-wrap
msgid "BOOTSTRAP"
msgstr "BOOTSTRAP"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1099
#, fuzzy, no-wrap
msgid "Used when runtime configuration needs to be obtained from an external system (like `Consul`), but details of that system need to be configurable (for example Consul's URL). The high level way this works is by using the standard Quarkus config sources (such as properties files, system properties, etc.) and producing `ConfigSourceProvider` objects which are subsequently taken into account by Quarkus when creating the final runtime `Config` object."
msgstr "Se utiliza cuando la configuración del tiempo de ejecución debe obtenerse de un sistema externo (como `Consul`), pero los detalles de ese sistema deben ser configurables (por ejemplo, la URL de Consul). La forma de alto nivel en que esto funciona es utilizando las fuentes de configuración estándar de Quarkus (como archivos de propiedades, propiedades del sistema, etc.) y produciendo objetos `ConfigSourceProvider` que posteriormente son tenidos en cuenta por Quarkus al crear el objeto final de tiempo de ejecución `Config`."

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1100
#, fuzzy, no-wrap
msgid "RUN_TIME"
msgstr "TIEMPO_DE_ORGANIZACIÓN"

#. type: Table
#: upstream/_guides/writing-extensions.adoc:1106
#, fuzzy, no-wrap
msgid "Not available at build, read at start in all modes."
msgstr "No está disponible en la construcción, se lee al inicio en todos los modos."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1109
#, fuzzy
msgid "For all cases other than the `BUILD_TIME` case, the configuration mapping interface and all the configuration groups and types contained therein must be located in, or reachable from, the extension's run time artifact. Configuration mappings of phase `BUILD_TIME` may be located in or reachable from either of the extension's run time or deployment artifacts."
msgstr "Para todos los casos que no sean el de `BUILD_TIME`, la clase raíz de configuración y todos los grupos y tipos de configuración contenidos en ella deben estar ubicados en el artefacto en tiempo de ejecución de la extensión o ser accesibles desde él. Las raíces de configuración de la fase `BUILD_TIME` pueden estar ubicadas o ser accesibles desde cualquiera de los artefactos en tiempo de ejecución o de despliegue de la extensión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1111
#, fuzzy
msgid "_Bootstrap_ configuration steps are executed during runtime-init *before* any of other runtime steps. This means that code executed as part of this step cannot access anything that gets initialized in runtime init steps (runtime synthetic CDI beans being one such example)."
msgstr "Los pasos de configuración _del Bootstrap_ se ejecutan durante el runtime-init *antes de* cualquier otro paso del runtime. Esto significa que el código ejecutado como parte de este paso no puede acceder a nada que se inicialice en los pasos de init en tiempo de ejecución (los beans sintéticos CDI en tiempo de ejecución son un ejemplo de ello)."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1112
#, fuzzy, no-wrap
msgid "Configuration Example"
msgstr "Ejemplo de configuración"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1120
#, no-wrap
msgid ""
"import io.quarkus.runtime.annotations.ConfigPhase;\n"
"import io.quarkus.runtime.annotations.ConfigRoot;\n"
"import io.smallrye.config.ConfigMapping;\n"
"import io.smallrye.config.WithDefault;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1123
#, no-wrap
msgid ""
"import java.io.File;\n"
"import java.util.logging.Level;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1131
#, no-wrap
msgid ""
"/**\n"
" * Logging configuration.\n"
" */\n"
"@ConfigMapping(prefix = \"quarkus.log\")      // <1>\n"
"@ConfigRoot(phase = ConfigPhase.RUN_TIME)   // <2>\n"
"public interface LogConfiguration {\n"
"    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1136
#, no-wrap
msgid ""
"    /**\n"
"     * Configuration properties for the logging file handler.\n"
"     */\n"
"    FileConfig file();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1143
#, no-wrap
msgid ""
"    interface FileConfig {\n"
"        /**\n"
"         * Enable logging to a file.\n"
"         */\n"
"        @WithDefault(\"true\")\n"
"        boolean enable();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1149
#, no-wrap
msgid ""
"        /**\n"
"         * The log format.\n"
"         */\n"
"        @WithDefault(\"%d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%c{1.}] (%t) %s%e%n\")\n"
"        String format();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1155
#, no-wrap
msgid ""
"        /**\n"
"         * The level of logs to be written into the file.\n"
"         */\n"
"        @WithDefault(\"ALL\")\n"
"        Level level();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1163
#, no-wrap
msgid ""
"        /**\n"
"         * The name of the file in which logs will be written.\n"
"         */\n"
"        @WithDefault(\"application.log\")\n"
"        File path();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1169
#, no-wrap
msgid ""
"public class LoggingProcessor {\n"
"    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1175
#, no-wrap
msgid ""
"    /*\n"
"     * Logging configuration.\n"
"     */\n"
"    LogConfiguration config; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1179
#, fuzzy
msgid "A configuration property name can be split into segments. For example, a property name like `quarkus.log.file.enable` can be split into the following segments:"
msgstr "Un nombre de propiedad de configuración puede dividirse en segmentos. Por ejemplo, un nombre de propiedad como `quarkus.log.file.enable` puede dividirse en los siguientes segmentos:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1181
#, fuzzy
msgid "`quarkus` - a namespace claimed by Quarkus which is a prefix for `@ConfigMapping` interfaces,"
msgstr "`quarkus` - un espacio de nombres reclamado por Quarkus que es un prefijo para todas las clases de `@ConfigRoot`,"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1182
#, fuzzy
msgid "`log` - a name segment which corresponds to the prefix set in the interface annotated with `@ConfigMapping`,"
msgstr "`log` - un segmento de nombre que corresponde a la clase `LogConfiguration` anotada con `@ConfigRoot`,"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1183
#, fuzzy
msgid "`file` - a name segment which corresponds to the `file` field in this class,"
msgstr "`file` - un segmento de nombre que corresponde al campo `file` de esta clase,"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1184
#, fuzzy
msgid "`enable` - a name segment which corresponds to `enable` field in `FileConfig`."
msgstr "`enabled` - un segmento de nombre que corresponde al campo `enable` de la clase `FileConfig` anotado con `@ConfigGroup`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1187
#, fuzzy
msgid "The `@ConfigMapping` annotation indicates that the interface is a configuration mapping, in this case one which corresponds to a `quarkus.log` segment."
msgstr "La anotación `@ConfigMapping` indica que la interfaz es un mapeo de configuración, en este caso uno que corresponde a un segmento `quarkus.log`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1188
#, fuzzy
msgid "The `@ConfigRoot` annotation indicated to which Config phase, the configuration applies to."
msgstr "La anotación `@ConfigRoot` indica a qué fase de la configuración se aplica."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1190
#, fuzzy
msgid "Here the `LoggingProcessor` injects a `LogConfiguration` instance automatically by detecting the `@ConfigRoot` annotation."
msgstr "Aquí el `LoggingProcessor` inyecta una instancia de `LogConfiguration` automáticamente al detectar la anotación `@ConfigRoot`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1192
#, fuzzy
msgid "A corresponding `application.properties` for the above example could be:"
msgstr "Un `application.properties` correspondiente al ejemplo anterior podría ser:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1198
#, no-wrap
msgid ""
"quarkus.log.file.enable=true\n"
"quarkus.log.file.level=DEBUG\n"
"quarkus.log.file.path=/tmp/debug.log\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1201
#, fuzzy
msgid "Since `format` is not defined in these properties, the default value from `@WithDefault` will be used instead."
msgstr "Como `format` no está definido en estas propiedades, se utilizará el valor por defecto de `@ConfigItem`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1207
#, fuzzy
msgid "A configuration mapping name can contain an extra suffix segment for the case where there are configuration mappings for multiple xref:config-phases[Config Phases]. Classes which correspond to the `BUILD_TIME` and `BUILD_AND_RUN_TIME_FIXED` may end with `BuildTimeConfig` or `BuildTimeConfiguration`, classes which correspond to the `RUN_TIME` phase may end with `RuntimeConfig`, `RunTimeConfig`, `RuntimeConfiguration` or `RunTimeConfiguration` while classes which correspond to the `BOOTSTRAP` configuration may end with `BootstrapConfig` or `BootstrapConfiguration`."
msgstr "El nombre de clase de una raíz de configuración puede contener un segmento de sufijo adicional para el caso de que existan raíces de configuración para múltiples  link:#Configuration Root Phases[[Fases de la raíz de configuración]]. Las clases que corresponden a las fases `BUILD_TIME` y `BUILD_AND_RUN_TIME_FIXED` pueden terminar con `BuildTimeConfig` o `BuildTimeConfiguration`, las clases que corresponden a la fase `RUN_TIME` pueden terminar con `RuntimeConfig`, `RunTimeConfig`, `RuntimeConfiguration` o `RunTimeConfiguration` mientras que las clases que corresponden a la configuración `BOOTSTRAP` pueden terminar con `BootstrapConfig` o `BootstrapConfiguration`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1208
#, fuzzy, no-wrap
msgid "Configuration Reference Documentation"
msgstr "Documentación de referencia de la configuración"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1212
#, fuzzy
msgid "The configuration is an important part of each extension and therefore needs to be properly documented. Each configuration property should have a proper Javadoc comment."
msgstr "La configuración es una parte importante de cada extensión y, por lo tanto, debe estar debidamente documentada. Cada propiedad de configuración debe tener un comentario Javadoc adecuado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1216
#, fuzzy
msgid "While it is handy to have the documentation available when coding, the configuration documentation must also be available in the extension guides. The Quarkus build automatically generates the configuration documentation based on the Javadoc comments, but it needs to be explicitly included in each guide."
msgstr "Si bien es útil tener la documentación disponible cuando se codifica, esta documentación de configuración también debe estar disponible en las guías de la extensión. La compilación de Quarkus genera automáticamente la documentación de configuración para ti, basándose en los comentarios de Javadoc, pero tienes que incluirla explícitamente en tu guía."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1217
#, fuzzy, no-wrap
msgid "Writing the documentation"
msgstr "Escribir la documentación"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1220
#, fuzzy
msgid "Each configuration property, requires a Javadoc explaining its purpose."
msgstr "Para cada propiedad de configuración, es necesario escribir un Javadoc que explique su propósito."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1224
#, fuzzy
msgid "The first sentence should be meaningful and self-contained as it is included in the summary table."
msgstr "La primera frase debe tener siempre sentido y ser autocontenida, ya que se incluye en el cuadro resumen."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1228
#, fuzzy
msgid "While standard Javadoc comments are perfectly fine for simple documentation (recommended even), AsciiDoc is more suitable for tips, source code extracts, lists and more:"
msgstr "Asumimos que estás familiarizado con la escritura de comentarios Javadoc, así que vamos a centrarnos en nuestro soporte Asciidoc. Mientras que los comentarios estándar de Javadoc están perfectamente bien para la documentación simple (incluso se recomiendan), si quieres incluir consejos, extractos de código fuente, listas... Asciidoc es muy útil."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1244
#, no-wrap
msgid ""
"/**\n"
" * Class name of the Hibernate ORM dialect. The complete list of bundled dialects is available in the\n"
" * https://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/dialect/package-summary.html[Hibernate ORM JavaDoc].\n"
" *\n"
" * [NOTE]\n"
" * ====\n"
" * Not all the dialects are supported in GraalVM native executables: we currently provide driver extensions for\n"
" * PostgreSQL, MariaDB, Microsoft SQL Server and H2.\n"
" * ====\n"
" *\n"
" * @asciidoclet\n"
" */\n"
"Optional<String> dialect();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1248
#, fuzzy
msgid "To use AsciiDoc, the Javadoc comment must be annotated with `@asciidoclet` tag. This tag serves two purposes: it is used as a marker for Quarkus generation tool, but it is also used by the `javadoc` process for the Javadoc generation."
msgstr "Este es el caso sencillo: basta con escribir Asciidoc y marcar el comentario con la etiqueta `@asciidoclet`. Esta etiqueta tiene dos propósitos: se utiliza como marcador para nuestra herramienta de generación, pero también es utilizada por el proceso `javadoc` para la correcta generación de Javadoc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1250
#, fuzzy
msgid "A more detailed example:"
msgstr "Un ejemplo más detallado:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1287
#, no-wrap
msgid ""
"// @formatter:off\n"
"/**\n"
" * Name of the file containing the SQL statements to execute when Hibernate ORM starts.\n"
" * Its default value differs depending on the Quarkus launch mode:\n"
" *\n"
" * * In dev and test modes, it defaults to `import.sql`.\n"
" *   Simply add an `import.sql` file in the root of your resources directory\n"
" *   and it will be picked up without having to set this property.\n"
" *   Pass `no-file` to force Hibernate ORM to ignore the SQL import file.\n"
" * * In production mode, it defaults to `no-file`.\n"
" *   It means Hibernate ORM won't try to execute any SQL import file by default.\n"
" *   Pass an explicit value to force Hibernate ORM to execute the SQL import file.\n"
" *\n"
" * If you need different SQL statements between dev mode, test (`@QuarkusTest`) and in production, use Quarkus\n"
" * https://quarkus.io/guides/config#configuration-profiles[configuration profiles facility].\n"
" *\n"
" * [source,property]\n"
" * .application.properties\n"
" * ----\n"
" * %dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql\n"
" * %test.quarkus.hibernate-orm.sql-load-script = import-test.sql\n"
" * %prod.quarkus.hibernate-orm.sql-load-script = no-file\n"
" * ----\n"
" *\n"
" * [NOTE]\n"
" * ====\n"
" * Quarkus supports `.sql` file with SQL statements or comments spread over multiple lines.\n"
" * Each SQL statement must be terminated by a semicolon.\n"
" * ====\n"
" *\n"
" * @asciidoclet\n"
" */\n"
"// @formatter:on\n"
"Optional<String> sqlLoadScript();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1293
#, fuzzy
msgid "For indentation to be respected in the Javadoc comment (list items spread on multiple lines or indented source code), the automatic Eclipse formatter must be disabled (the formatter is automatically included in the build), with the markers `// @formatter:off`/`// @formatter:on`. These require separate comments and a mandatory space after the `//` marker."
msgstr "Cada vez que necesites que se respete la indentación en el comentario de Javadoc (piensa en elementos de la lista repartidos en varias líneas o en código fuente indentado), tendrás que desactivar temporalmente el formateador automático de Eclipse (esto, incluso si no usas Eclipse ya que el formateador está incluido en nuestra construcción). Para ello, utilice los marcadores `// @formatter:off`/ `// @formatter:on`. Tenga en cuenta que son comentarios separados y que hay un espacio después del marcador `//`. Esto es necesario."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1298
#, fuzzy
msgid "Open blocks (`--`) are not supported in the AsciiDoc documentation. All the other types of blocks (source, admonitions...) are supported."
msgstr "No puede utilizar bloques abiertos ( `--`) en su documentación de Asciidoctor. Todos los demás tipos de bloques (fuente, admoniciones...) son compatibles."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1304
#, fuzzy
msgid "By default, the documentation generator will use the hyphenated field name as the key of a `java.util.Map`. Use the `io.quarkus.runtime.annotations.ConfigDocMapKey` annotation to override the behaviour."
msgstr "Por defecto, el generador de documentos utilizará el nombre del campo con guión como clave de un elemento de configuración de `java.util.Map`. Para anular este valor predeterminado y tener una clave fácil de usar (independiente de los detalles de implementación), puede utilizar la anotación `io.quarkus.runtime.annotations.ConfigDocMapKey`. Vea el siguiente ejemplo,"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1317
#, no-wrap
msgid ""
"@ConfigMapping(prefix = \"quarkus.some\")\n"
"@ConfigRoot\n"
"public interface SomeConfig {\n"
"    /**\n"
"     * Namespace configuration.\n"
"     */\n"
"    @WithParentName\n"
"    @ConfigDocMapKey(\"cache-name\") // <1>\n"
"    Map<String, Name> namespace();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1319
#, fuzzy
msgid "This will generate a configuration map key named `quarkus.some.\"cache-name\"` instead of `quarkus.some.\"namespace\"`."
msgstr "Esto generará una clave de mapa de configuración llamada `quarkus.some.\"cache-name\"` en lugar de `quarkus.some.\"namespace\"`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1321
msgid "It is possible to write a textual explanation for the documentation default value, this is useful when it is generated: `@ConfigDocDefault(\"explain how this is generated\")`."
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1323
msgid "`@ConfigDocEnumValue` gives a way to explicitly customize the string displayed in the documentation when listing accepted values for an enum."
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1326
#, fuzzy, no-wrap
msgid "Writing section documentation"
msgstr "Redacción de la documentación de la sección"

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1329
#, fuzzy
msgid "To generate a configuration section of a given group, use the `@ConfigDocSection` annotation:"
msgstr "Si desea generar la sección de configuración de un determinado `@ConfigGroup`, Quarkus lo tiene cubierto con la anotación `@ConfigDocSection`. Vea el ejemplo de código a continuación:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1338
#, no-wrap
msgid ""
"/**\n"
"* Config group related configuration.\n"
"* Amazing introduction here\n"
"*/\n"
"@ConfigDocSection // <1>\n"
"ConfigGroupConfig configGroup();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1342
#, fuzzy
msgid "This will add a section documentation for the `configGroup` config item in the generated documentation. The section title and introduction will be derived from the javadoc of the configuration item. The first sentence from the javadoc is considered as the section title and the remaining sentences used as section introduction."
msgstr "Esto añadirá una sección de documentación para el elemento de configuración `configGroup` en la documentación generada. El título y la introducción de la sección se derivarán del javadoc del elemento de configuración. La primera frase del javadoc se considera el título de la sección y las demás frases se utilizan como introducción de la sección. También puede utilizar la etiqueta `@asciidoclet` como se muestra arriba."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1343
#, fuzzy, no-wrap
msgid "Generating the documentation"
msgstr "Generación de la documentación"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1346
#, fuzzy
msgid "To generate the documentation:"
msgstr "Generación de la documentación"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1348
#, fuzzy
msgid "Execute `./mvnw -DquicklyDocs`"
msgstr "Ejecutar `./mvnw -DquicklyDocs`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1349
#, fuzzy
msgid "Can be executed globally or in a specific extension directory (e.g. `extensions/mailer`)."
msgstr "Puede hacerlo de forma global o en un directorio de extensión específico (por ejemplo, `extensions/mailer`)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1351
#, fuzzy
msgid "The documentation is generated in the global `target/asciidoc/generated/config/` located at the root of the project."
msgstr "La documentación se genera en la página global `target/asciidoc/generated/config/` situada en la raíz del proyecto."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1352
#, fuzzy, no-wrap
msgid "Including the documentation in the extension guide"
msgstr "Incluir la documentación en la guía de ampliación"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1355
#, fuzzy
msgid "To include the generated configuration reference documentation in a guide, use:"
msgstr "Esto es sencillo, incluya la documentación generada en su guía:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1359
#, no-wrap
msgid "\\include::{generated-dir}/config/quarkus-your-extension.adoc[opts=optional, leveloffset=+1]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1362
#, fuzzy
msgid "To include only a specific config group:"
msgstr "Para incluir sólo un grupo de configuración específico:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1365
#, no-wrap
msgid "\\include::{generated-dir}/config/hyphenated-config-group-class-name-with-runtime-or-deployment-namespace-replaced-by-config-group-namespace.adoc[opts=optional, leveloffset=+1]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1369
#, fuzzy
msgid "For example, the `io.quarkus.vertx.http.runtime.FormAuthConfig` configuration group will be generated in a file named `quarkus-vertx-http-config-group-form-auth-config.adoc`."
msgstr "Por ejemplo, el grupo de configuración `io.quarkus.vertx.http.runtime.FormAuthConfig` se generará en un archivo llamado `quarkus-vertx-http-config-group-form-auth-config.adoc`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1371
#, fuzzy
msgid "A few recommendations:"
msgstr "Algunas recomendaciones:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1373
#, fuzzy
msgid "`opts=optional` is mandatory to not fail the build if only part of the configuration documentation has been generated."
msgstr "`opts=optional` es obligatorio ya que no queremos que la construcción falle si sólo se ha generado una parte de la documentación de configuración"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1374
#, fuzzy
msgid "The documentation is generated with a title level of 2 (i.e. `==`). It may need an adjustment with `leveloffset=+N`."
msgstr "La documentación se genera con un nivel de título 2 (es decir, `==`). Normalmente es necesario ajustarlo. Se puede hacer con `leveloffset=+N`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1375
#, fuzzy
msgid "The whole configuration documentation should not be included in the middle of the guide."
msgstr "La documentación completa de la configuración no debe incluirse en medio de la guía."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1377
#, fuzzy
msgid "If the guide includes an `application.properties` example, a tip must be included just below the code snippet:"
msgstr "Si la guía incluye un ejemplo de `application.properties`, debe incluirse un consejo justo debajo del fragmento de código:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1382
#, no-wrap
msgid ""
"[TIP]\n"
"For more information about the extension configuration please refer to the <<configuration-reference,Configuration Reference>>.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1385
#, fuzzy
msgid "And at the end of the guide, the extensive configuration documentation:"
msgstr "Luego, al final de su documentación, incluya la documentación extensa:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1389
#, no-wrap
msgid "[[configuration-reference]]\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:1389
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1392
msgid "\\include::{generated-dir}/config/quarkus-your-extension.adoc[opts=optional, leveloffset=+1]"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1397
#, fuzzy
msgid "All documentation should be generated and validated before being committed."
msgstr "Toda la documentación debe ser generada y validada antes de ser comprometida."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1399
#, fuzzy, no-wrap
msgid "Conditional Step Inclusion"
msgstr "Inclusión condicional de pasos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1405
#, fuzzy
msgid "It is possible to only include a given `@BuildStep` under certain conditions.  The `@BuildStep` annotation has two optional parameters: `onlyIf` and `onlyIfNot`.  These parameters can be set to one or more classes which implement `BooleanSupplier`.  The build step will only be included when the method returns `true` (for `onlyIf`) or `false` (for `onlyIfNot`)."
msgstr "Es posible incluir un determinado `@BuildStep` sólo bajo ciertas condiciones. La anotación `@BuildStep` tiene dos parámetros opcionales: `onlyIf` y `onlyIfNot`. Estos parámetros pueden establecerse en una o más clases que implementen `BooleanSupplier`. El paso de construcción sólo se incluirá cuando el método devuelva `true` (para `onlyIf`) o `false` (para `onlyIfNot`)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1408
#, fuzzy
msgid "The condition class can inject xref:configuration[configuration mappings] as long as they belong to a build-time phase.  Run time configuration is not available for condition classes."
msgstr "La clase de condición puede inyectar  link:#configuration-roots[raíces de configuración] siempre que pertenezcan a una fase de construcción. La configuración en tiempo de ejecución no está disponible para las clases de condición."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1411
#, fuzzy
msgid "The condition class may also inject a value of type `io.quarkus.runtime.LaunchMode`.  Constructor parameter and field injection is supported."
msgstr "La clase de condición también puede inyectar un valor del tipo `io.quarkus.runtime.LaunchMode`. Se admite la inyección de parámetros y campos del constructor."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:1412
#, fuzzy, no-wrap
msgid "An example of a conditional build step"
msgstr "Un ejemplo de paso de construcción condicional"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1419
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevMode.class)\n"
"LogCategoryBuildItem enableDebugLogging() {\n"
"    return new LogCategoryBuildItem(\"org.your.quarkus.extension\", Level.DEBUG);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1422
#, no-wrap
msgid ""
"static class IsDevMode implements BooleanSupplier {\n"
"    LaunchMode launchMode;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1427
#, no-wrap
msgid ""
"    public boolean getAsBoolean() {\n"
"        return launchMode == LaunchMode.DEVELOPMENT;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1431
#, fuzzy
msgid "If you need to make your build step conditional on the presence or absence of another extension, you can use xref:capabilities[Capabilities] for that."
msgstr "Si necesita condicionar su paso de construcción a la presencia o ausencia de otra extensión, puede utilizar  link:#capabilities[[capabilities]] para ello."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1433
#, fuzzy
msgid "You can also apply a set of conditions to all build steps in a given class with `@BuildSteps`:"
msgstr "También puede aplicar un conjunto de condiciones a todos los pasos de construcción de una clase determinada con `@BuildSteps`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:1434
#, fuzzy, no-wrap
msgid "Class-wide condition for build step with @BuildSteps"
msgstr "Condición a nivel de clase para el paso de construcción con @BuildSteps"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1439
#, no-wrap
msgid ""
"@BuildSteps(onlyIf = MyDevModeProcessor.IsDevMode.class) // <1>\n"
"class MyDevModeProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1444
#, no-wrap
msgid ""
"    @BuildStep\n"
"    SomeOutputBuildItem mainBuildStep(SomeOtherBuildItem input) { // <2>\n"
"        return new SomeOutputBuildItem(input.getValue());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1449
#, no-wrap
msgid ""
"    @BuildStep\n"
"    SomeOtherOutputBuildItem otherBuildStep(SomeOtherInputBuildItem input) { // <3>\n"
"        return new SomeOtherOutputBuildItem(input.getValue());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1452
#, no-wrap
msgid ""
"    static class IsDevMode implements BooleanSupplier {\n"
"        LaunchMode launchMode;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1458
#, no-wrap
msgid ""
"        public boolean getAsBoolean() {\n"
"            return launchMode == LaunchMode.DEVELOPMENT;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1460
#, fuzzy
msgid "This condition will apply to all methods defined in `MyDevModeProcessor`"
msgstr "Esta condición se aplicará a todos los métodos definidos en `MyDevModeProcessor`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1461
#, fuzzy
msgid "The main build step will only be executed in dev mode."
msgstr "El paso principal de construcción sólo se ejecutará en modo dev."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1462
#, fuzzy
msgid "The other build step will only be executed in dev mode."
msgstr "El otro paso de construcción sólo se ejecutará en el modo de desarrollo."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1464
#, fuzzy, no-wrap
msgid "Bytecode Recording"
msgstr "Grabación de bytecodes"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1468
#, fuzzy
msgid "One of the main outputs of the build process is recorded bytecode. This bytecode actually sets up the runtime environment. For example, in order to start Undertow, the resulting application will have some bytecode that directly registers all Servlet instances and then starts Undertow."
msgstr "Una de las principales salidas del proceso de construcción es el código de bytes grabado. Este bytecode realmente configura el entorno de ejecución. Por ejemplo, para iniciar Undertow, la aplicación resultante tendrá un bytecode que registra directamente todas las instancias de Servlet y luego inicia Undertow."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1474
#, fuzzy
msgid "As writing bytecode directly is complex, this is instead done via bytecode recorders. At deployment time, invocations are made on recorder objects that contain the actual runtime logic, but instead of these invocations proceeding as normal they are intercepted and recorded (hence the name). This recording is then used to generate bytecode that performs the same sequence of invocations at runtime. This is essentially a form of deferred execution where invocations made at deployment time get deferred until runtime."
msgstr "Como escribir código de bytes directamente es complejo, esto se hace a través de grabadores de código de bytes. En el momento del despliegue, se realizan invocaciones a los objetos registradores que contienen la lógica real de ejecución, pero en lugar de que estas invocaciones procedan de forma normal, son interceptadas y grabadas (de ahí el nombre). Esta grabación se utiliza entonces para generar código de bytes que realiza la misma secuencia de invocaciones en tiempo de ejecución. Esto es esencialmente una forma de ejecución diferida en la que las invocaciones realizadas en tiempo de despliegue se aplazan hasta el tiempo de ejecución."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1476
#, fuzzy
msgid "Let's look at the classic 'Hello World' type example. To do this the Quarkus way we would create a recorder as follows:"
msgstr "Veamos el clásico ejemplo del tipo 'Hola Mundo'. Para hacer esto a la manera de Quarkus crearíamos una grabadora de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1481
#, no-wrap
msgid ""
"@Recorder\n"
"class HelloRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1485
#, no-wrap
msgid ""
"  public void sayHello(String name) {\n"
"    System.out.println(\"Hello\" + name);\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1487
#: upstream/_guides/writing-extensions.adoc:2089
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1490
#, fuzzy
msgid "And then create a build step that uses this recorder:"
msgstr "Y luego crear un paso de construcción que utiliza esta grabadora:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1498
#, no-wrap
msgid ""
"@Record(RUNTIME_INIT)\n"
"@BuildStep\n"
"public void helloBuildStep(HelloRecorder recorder) {\n"
"    recorder.sayHello(\"World\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1503
#, fuzzy
msgid "When this build step is run nothing is printed to the console. This is because the `HelloRecorder` that is injected is actually a proxy that records all invocations. Instead, if we run the resulting Quarkus program we will see 'Hello World' printed to the console."
msgstr "Cuando se ejecuta este paso de construcción no se imprime nada en la consola. Esto se debe a que el `HelloRecorder` que se inyecta es en realidad un proxy que registra todas las invocaciones. En cambio, si ejecutamos el programa Quarkus resultante, veremos \"Hola Mundo\" impreso en la consola."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1508
#, fuzzy
msgid "Methods on a recorder can return a value, which must be proxiable (if you want to return a non-proxiable item wrap it in `io.quarkus.runtime.RuntimeValue`). These proxies may not be invoked directly, however they can be passed into other recorder methods. This can be any recorder method, including from other `@BuildStep` methods, so a common pattern is to produce `BuildItem` instances that wrap the results of these recorder invocations."
msgstr "Los métodos de una grabadora pueden devolver un valor, que debe ser proxiable (si quieres devolver un elemento no proxiable envuélvelo en `io.quarkus.runtime.RuntimeValue`). Estos proxies no pueden ser invocados directamente, sin embargo pueden ser pasados a otros métodos de la grabadora. Este puede ser cualquier método del registrador, incluso desde otros métodos de `@BuildStep`, por lo que un patrón común es producir instancias de `BuildItem` que envuelven los resultados de estas invocaciones del registrador."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1512
#, fuzzy
msgid "For instance, in order to make arbitrary changes to a Servlet deployment Undertow has a `ServletExtensionBuildItem`, which is a `MultiBuildItem` that wraps a `ServletExtension` instance. I can return a `ServletExtension` from a recorder in another module, and Undertow will consume it and pass it into the recorder method that starts Undertow."
msgstr "Por ejemplo, para hacer cambios arbitrarios en la implementación de un Servlet, Undertow tiene un `ServletExtensionBuildItem`, que es un `MultiBuildItem` que envuelve una instancia de `ServletExtension`. Puedo devolver un `ServletExtension` desde un grabador en otro módulo, y Undertow lo consumirá y lo pasará al método del grabador que inicia Undertow."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1516
#, fuzzy
msgid "At runtime the bytecode will be invoked in the order it is generated. This means that build step dependencies implicitly control the order that generated bytecode is run. In the example above we know that the bytecode that produces a `ServletExtensionBuildItem` will be run before the bytecode that consumes it."
msgstr "En tiempo de ejecución el bytecode será invocado en el orden en que se genera. Esto significa que las dependencias de los pasos de construcción controlan implícitamente el orden en que se ejecuta el bytecode generado. En el ejemplo anterior sabemos que el bytecode que produce un `ServletExtensionBuildItem` se ejecutará antes que el bytecode que lo consume."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1518
#, fuzzy
msgid "The following objects can be passed to recorders:"
msgstr "Los siguientes objetos pueden ser pasados a los grabadores:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1520
#, fuzzy
msgid "Primitives"
msgstr "Primitivas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1521
#, fuzzy
msgid "String"
msgstr "Cadena"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1522
#, fuzzy
msgid "Class<?> objects"
msgstr "Objetos de la clase&lt;&lt;...&gt;"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1523
#, fuzzy
msgid "Objects returned from a previous recorder invocation"
msgstr "Objetos devueltos por una invocación anterior de la grabadora"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1524
#, fuzzy
msgid "Objects with a no-arg constructor and getter/setters for all properties (or public fields)"
msgstr "Objetos con un constructor sin carga y getter/setters para todas las propiedades (o campos públicos)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1525
#, fuzzy
msgid "Objects with a constructor annotated with `@RecordableConstructor` with parameter names that match field names"
msgstr "Objetos con un constructor anotado con `@RecordableConstructor` con nombres de parámetros que coinciden con los nombres de los campos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1526
#, fuzzy
msgid "Any arbitrary object via the `io.quarkus.deployment.recording.RecorderContext#registerSubstitution(Class, Class, Class)` mechanism"
msgstr "Cualquier objeto arbitrario a través del mecanismo `io.quarkus.deployment.recording.RecorderContext#registerSubstitution(Class, Class, Class)`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1527
#, fuzzy
msgid "Arrays, Lists and Maps of the above"
msgstr "Matrices, listas y mapas de lo anterior"

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1531
#, fuzzy
msgid "In cases where some fields of an object to be recorded should be ignored (i.e. the value that being at build time should not be reflected at runtime), the `@IgnoreProperty` can be placed on the field."
msgstr "En los casos en que algunos campos de un objeto a registrar deben ser ignorados (es decir, el valor que siendo en tiempo de construcción no debe reflejarse en tiempo de ejecución), el `@IgnoreProperty` se puede colocar en el campo."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1533
#, fuzzy
msgid "If the class cannot depend on Quarkus, then Quarkus can use any custom annotation, as long as the extension implements the `io.quarkus.deployment.recording.RecordingAnnotationsProvider` SPI."
msgstr "Si la clase no puede depender de Quarkus, entonces Quarkus puede utilizar cualquier anotación personalizada, siempre que la extensión implemente el SPI `io.quarkus.deployment.recording.RecordingAnnotationsProvider`."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:1535
#, fuzzy
msgid "This same SPI can also be used to provide a custom annotation that will substitute for `@RecordableConstructor`."
msgstr "Este mismo SPI también puede utilizarse para proporcionar una anotación personalizada que sustituirá a `@RecordableConstructor`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1537
#, fuzzy, no-wrap
msgid "Injecting Configuration into Recorders"
msgstr "Inyección de la configuración en las grabadoras"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1544
#, fuzzy
msgid "Configuration objects with phase `RUNTIME` or `BUILD_AND_RUNTIME_FIXED` can be injected into recorders via constructor injection. Just create a constructor that takes the configuration objects the recorder needs. If the recorder has multiple constructors you can annotate the one you want Quarkus to use with `@Inject`. If the recorder wants to inject runtime config but is also used at static init time then it needs to inject a `RuntimeValue<ConfigObject>`, this value will only be set when the runtime methods are being invoked."
msgstr "Los objetos de configuración con fase `RUNTIME` o `BUILD_AND_RUNTIME_FIXED` pueden ser inyectados en los registradores a través de la inyección de constructores. Sólo hay que crear un constructor que tome los objetos de configuración que el grabador necesita. Si la grabadora tiene varios constructores, puedes anotar el que quieres que Quarkus utilice con `@Inject`. Si la grabadora quiere inyectar la configuración en tiempo de ejecución pero también se utiliza en tiempo de init estático, entonces necesita inyectar un `RuntimeValue&amp;lt;ConfigObject&amp;gt;`, este valor sólo se establecerá cuando se invoquen los métodos en tiempo de ejecución."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1545
#, fuzzy, no-wrap
msgid "RecorderContext"
msgstr "RecorderContext"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1551
#, fuzzy
msgid "`io.quarkus.deployment.recording.RecorderContext` provides some convenience methods to enhance bytecode recording, this includes the ability to register creation functions for classes without no-arg constructors, to register an object substitution (basically a transformer from a non-serializable object to a serializable one and vice versa), and to create a class proxy. This interface can be directly injected as a method parameter into any `@Record` method."
msgstr "`io.quarkus.deployment.recording.RecorderContext` proporciona algunos métodos de conveniencia para mejorar el registro de código de bytes, esto incluye la capacidad de registrar funciones de creación para clases sin constructores sin carga, para registrar una sustitución de objetos (básicamente un transformador de un objeto no serializable a uno serializable y viceversa), y para crear un proxy de clase. Esta interfaz puede inyectarse directamente como parámetro de un método en cualquier método de `@Record`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1557
#, fuzzy
msgid "Calling `classProxy` with a given fully-qualified class name will create a `Class` instance that can be passed into a recorder method, and at runtime will be substituted with the class whose name was passed in to `classProxy()`.  However, this method should not be needed in most use cases because directly loading deployment/application classes at processing time in build steps is safe.  Therefore, this method is deprecated.  Nonetheless, there are some use cases where this method comes in handy, such as referring to classes that were generated in previous build steps using `GeneratedClassBuildItem`."
msgstr "Si se llama a `classProxy` con un nombre de clase determinado, se creará un `Class` que puede pasarse a los métodos del registrador, y en tiempo de ejecución se sustituirá por la clase cuyo nombre se pasó a `classProxy`. Esto es básicamente una comodidad para evitar la necesidad de cargar explícitamente las clases en los registradores."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1558
#, no-wrap
msgid "Runtime Classpath check"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1562
msgid "Extensions often need a way to determine whether a given class is part of the application's runtime classpath.  The proper way for an extension to perform this check is to use `io.quarkus.bootstrap.classloading.QuarkusClassLoader.isClassPresentAtRuntime`."
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1563
#, fuzzy, no-wrap
msgid "Printing step execution time"
msgstr "Tiempo de ejecución de la etapa de impresión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1568
#, fuzzy
msgid "At times, it can be useful to know how the exact time each startup task (which is the result of each bytecode recording) takes when the application is run.  The simplest way to determine this information is to launch the Quarkus application with the `-Dquarkus.debug.print-startup-times=true` system property.  The output will look something like:"
msgstr "A veces, puede ser útil saber el tiempo exacto que tarda cada tarea de inicio (que es el resultado de cada grabación de bytecode) cuando se ejecuta la aplicación. La forma más sencilla de determinar esta información es lanzar la aplicación Quarkus con la propiedad del sistema `-Dquarkus.debug.print-startup-times=true`. La salida será algo así:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1581
#, no-wrap
msgid ""
"Build step LoggingResourceProcessor.setupLoggingRuntimeInit completed in: 42ms\n"
"Build step ConfigGenerationBuildStep.checkForBuildTimeConfigChange completed in: 4ms\n"
"Build step SyntheticBeansProcessor.initRuntime completed in: 0ms\n"
"Build step ConfigBuildStep.validateConfigProperties completed in: 1ms\n"
"Build step ResteasyStandaloneBuildStep.boot completed in: 95ms\n"
"Build step VertxHttpProcessor.initializeRouter completed in: 1ms\n"
"Build step VertxHttpProcessor.finalizeRouter completed in: 4ms\n"
"Build step LifecycleEventsBuildStep.startupEvent completed in: 1ms\n"
"Build step VertxHttpProcessor.openSocket completed in: 93ms\n"
"Build step ShutdownListenerBuildStep.setupShutdown completed in: 1ms\n"
msgstr ""

#. TODO: config integration
#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1586
#, fuzzy, no-wrap
msgid "Contexts and Dependency Injection"
msgstr "Contextos e inyección de dependencia"

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1588
#, fuzzy, no-wrap
msgid "Extension Points"
msgstr "Puntos de extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1593
#, fuzzy
msgid "As a CDI based runtime, Quarkus extensions often make CDI beans available as part of the extension behavior.  However, Quarkus DI solution does not support CDI Portable Extensions.  Instead, Quarkus extensions can make use of various xref:cdi-reference.adoc[Build Time Extension Points]."
msgstr "Como tiempo de ejecución basado en CDI, las extensiones de Quarkus a menudo hacen que los beans CDI estén disponibles como parte del comportamiento de la extensión. Sin embargo, la solución Quarkus DI no soporta las extensiones portátiles CDI. En su lugar, las extensiones de Quarkus pueden hacer uso de varios  link:cdi-reference.html[puntos de extensión en tiempo de compilación]."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1594
#, fuzzy, no-wrap
msgid "Quarkus Dev UI"
msgstr "Quarkus Dev UI"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1597
#, fuzzy
msgid "You can make your extension support the xref:dev-ui-v2.adoc[Quarkus Dev UI] for a greater developer experience."
msgstr "Puedes hacer que tu extensión sea compatible con el  link:dev-ui.html[Quarkus Dev UI] para una mayor experiencia de desarrollo."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1598
#, fuzzy, no-wrap
msgid "Extension-defined endpoints"
msgstr "Puntos finales definidos por la extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1602
#, fuzzy
msgid "Your extension can add additional, non-application endpoints to be served alongside endpoints for Health, Metrics, OpenAPI, Swagger UI, etc."
msgstr "Su extensión puede añadir puntos finales adicionales, no relacionados con la aplicación, que se servirán junto a los puntos finales de Salud, Métricas, OpenAPI, Swagger UI, etc."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1604
#, fuzzy
msgid "Use a `NonApplicationRootPathBuildItem` to define an endpoint:"
msgstr "Utilice un `NonApplicationRootPathBuildItem` para definir un punto final:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1615
#, no-wrap
msgid ""
"@BuildStep\n"
"RouteBuildItem myExtensionRoute(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
"    return nonApplicationRootPathBuildItem.routeBuilder()\n"
"                .route(\"custom-endpoint\")\n"
"                .handler(new MyCustomHandler())\n"
"                .displayOnNotFoundPage()\n"
"                .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1620
#, fuzzy
msgid "Note that the path above does not start with a '/', indicating it is a relative path. The above endpoint will be served relative to the configured non-application endpoint root. The non-application endpoint root is `/q` by default, which means the resulting endpoint will be found at `/q/custom-endpoint`."
msgstr "Tenga en cuenta que la ruta de arriba no comienza con un '/', lo que indica que es una ruta relativa. El punto final anterior se servirá de forma relativa a la raíz del punto final sin aplicación configurado. La raíz del punto final sin aplicación es `/q` por defecto, lo que significa que el punto final resultante se encontrará en `/q/custom-endpoint`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1623
#, fuzzy
msgid "Absolute paths are handled differently. If the above called `route(\"/custom-endpoint\")`, the resulting endpoint will be found at `/custom-endpoint`."
msgstr "Las rutas absolutas se manejan de manera diferente. Si lo anterior llamó a `route(\"/custom-endpoint\")`, el punto final resultante se encontrará en `/custom-endpoint`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1625
#, fuzzy
msgid "If an extension needs nested non-application endpoints:"
msgstr "Si una extensión necesita puntos finales anidados no relacionados con la aplicación:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1636
#, no-wrap
msgid ""
"@BuildStep\n"
"RouteBuildItem myNestedExtensionRoute(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
"    return nonApplicationRootPathBuildItem.routeBuilder()\n"
"                .nestedRoute(\"custom-endpoint\", \"deep\")\n"
"                .handler(new MyCustomHandler())\n"
"                .displayOnNotFoundPage()\n"
"                .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1639
#, fuzzy
msgid "Given a default non-application endpoint root of `/q`, this will create an endpoint at `/q/custom-endpoint/deep`."
msgstr "Dada una raíz de punto final sin aplicación por defecto de `/q`, esto creará un punto final en `/q/custom-endpoint/deep`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1642
#, fuzzy
msgid "Absolute paths also have an impact on nested endpoints. If the above called `nestedRoute(\"custom-endpoint\", \"/deep\")`, the resulting endpoint will be found at `/deep`."
msgstr "Las rutas absolutas también tienen un impacto en los endpoints anidados. Si el anterior llamó a `nestedRoute(\"custom-endpoint\", \"/deep\")`, el punto final resultante se encontrará en `/deep`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1645
#, fuzzy
msgid "Refer to the xref:all-config.adoc#quarkus-vertx-http_quarkus.http.non-application-root-path[Quarkus Vertx HTTP configuration reference] for details on how the non-application root path is configured."
msgstr "Consulte la  link:all-config.html#quarkus-vertx-http_quarkus.http.non-application-root-path[referencia de configuración HTTP de Quarkus Vertx] para obtener detalles sobre cómo se configura la ruta raíz no relacionada con la aplicación."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1646
#, fuzzy, no-wrap
msgid "Extension Health Check"
msgstr "Control de la salud de la extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1649
#, fuzzy
msgid "Health checks are provided via the `quarkus-smallrye-health` extension. It provides both liveness and readiness checks capabilities."
msgstr "Las comprobaciones de salud se proporcionan a través de la extensión `quarkus-smallrye-health`. Proporciona capacidades de comprobación de la capacidad y de la disponibilidad."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1651
#, fuzzy
msgid "When writing an extension, it's beneficial to provide health checks for the extension, that can be automatically included without the developer needing to write their own."
msgstr "Al escribir una extensión, es beneficioso proporcionar comprobaciones de salud para la extensión, que pueden incluirse automáticamente sin que el desarrollador tenga que escribir las suyas propias."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1653
#, fuzzy
msgid "In order to provide a health check, you should do the following:"
msgstr "Para realizar un chequeo de salud, debe hacer lo siguiente:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1656
#, fuzzy
msgid "Import the `quarkus-smallrye-health` extension as an **optional** dependency in your runtime module so it will not impact the size of the application if health check is not included."
msgstr "Importe la extensión `quarkus-smallrye-health` como una dependencia *opcional* en su módulo de ejecución para que no afecte al tamaño de la aplicación si no se incluye la comprobación de la salud."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1658
#, fuzzy
msgid "Create your health check following the xref:smallrye-health.adoc[SmallRye Health] guide. We advise providing only readiness check for an extension (liveness check is designed to express the fact that an application is up and needs to be lightweight)."
msgstr "Cree su comprobación de salud siguiendo la guía de  link:smallrye-health.html[salud de SmallRye]. Aconsejamos proporcionar sólo la comprobación de disponibilidad para una extensión (la comprobación de disponibilidad está diseñada para expresar el hecho de que una aplicación está en marcha y necesita ser ligera)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1659
#, fuzzy
msgid "Import the `quarkus-smallrye-health-spi` library in your deployment module."
msgstr "Importe la biblioteca `quarkus-smallrye-health-spi` en su módulo de despliegue."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1660
#, fuzzy
msgid "Add a build step in your deployment module that produces a `HealthBuildItem`."
msgstr "Añada un paso de compilación en su módulo de despliegue que produzca un archivo `HealthBuildItem`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1661
#, fuzzy
msgid "Add a way to disable the extension health check via a config item `quarkus.<extension>.health.enabled` that should be enabled by default."
msgstr "Añade una forma de desactivar la comprobación de la salud de la extensión a través de un elemento de configuración `quarkus.&amp;lt;extension&amp;gt;.health.enabled` que debería estar activado por defecto."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1663
#, fuzzy
msgid "Following is an example from the Agroal extension that provides a `DataSourceHealthCheck` to validate the readiness of a datasource."
msgstr "A continuación se muestra un ejemplo de la extensión Agroal que proporciona un `DataSourceHealthCheck` para validar la disponibilidad de una fuente de datos."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1671
#, no-wrap
msgid ""
"@BuildStep\n"
"HealthBuildItem addHealthCheck(AgroalBuildTimeConfig agroalBuildTimeConfig) {\n"
"    return new HealthBuildItem(\"io.quarkus.agroal.runtime.health.DataSourceHealthCheck\",\n"
"            agroalBuildTimeConfig.healthEnabled);\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1673
#, fuzzy, no-wrap
msgid "Extension Metrics"
msgstr "Métricas de extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1678
#, fuzzy
msgid "The `quarkus-micrometer` extension and the `quarkus-smallrye-metrics` extension provide support for collecting metrics.  As a compatibility note, the `quarkus-micrometer` extension adapts the MP Metrics API to Micrometer library primitives, so the `quarkus-micrometer` extension can be enabled without breaking code that relies on the MP Metrics API.  Note that the metrics emitted by Micrometer are different, see the `quarkus-micrometer` extension documentation for more information."
msgstr "La extensión `quarkus-micrometer` y la extensión `quarkus-smallrye-metrics` proporcionan soporte para la recogida de métricas. Como nota de compatibilidad, la extensión `quarkus-micrometer` adapta la API de métricas de MP a las primitivas de la biblioteca de Micrometer, por lo que la extensión `quarkus-micrometer` puede activarse sin romper el código que depende de la API de métricas de MP. Tenga en cuenta que las métricas emitidas por Micrometer son diferentes, consulte la documentación de la extensión `quarkus-micrometer` para obtener más información."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1680
#, fuzzy
msgid "The compatibility layer for MP Metrics APIs will move to a different extension in the future."
msgstr "La capa de compatibilidad para las APIs de MP Metrics se trasladará a una extensión diferente en el futuro."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1682
#, fuzzy
msgid "There are two broad patterns that extensions can use to interact with an optional metrics extension to add their own metrics:"
msgstr "Hay dos patrones generales que las extensiones pueden utilizar para interactuar con una extensión de métricas opcional para añadir sus propias métricas:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1684
#, fuzzy
msgid "Consumer pattern: An extension declares a `MetricsFactoryConsumerBuildItem` and uses that to provide a bytecode recorder to the metrics extension. When the metrics extension has initialized, it will iterate over registered consumers to initialize them with a `MetricsFactory`. This factory can be used to declare API-agnostic metrics, which can be a good fit for extensions that provide an instrumentable object for gathering statistics (e.g. Hibernate's `Statistics` class)."
msgstr "Patrón del consumidor: Una extensión declara un `MetricsFactoryConsumerBuildItem` y lo utiliza para proporcionar un registrador de bytecode a la extensión de métricas. Cuando la extensión de métricas se haya inicializado, iterará sobre los consumidores registrados para inicializarlos con un `MetricsFactory`. Esta fábrica puede utilizarse para declarar métricas agnósticas a la API, lo que puede ser un buen ajuste para las extensiones que proporcionan un objeto instrumentable para recopilar estadísticas (por ejemplo, la clase `Statistics` de Hibernate)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1686
#, fuzzy
msgid "Binder pattern: An extension can opt to use completely different gathering implementations depending on the metrics system. An `Optional<MetricsCapabilityBuildItem> metricsCapability` build step parameter can be used to declare or otherwise initialize API-specific metrics based on the active metrics extension (e.g. \"smallrye-metrics\" or \"micrometer\"). This pattern can be combined with the consumer pattern by using `MetricsFactory::metricsSystemSupported()` to test the active metrics extension within the recorder."
msgstr "Patrón Binder: Una extensión puede optar por utilizar implementaciones de recopilación completamente diferentes en función del sistema de métricas. Se puede utilizar un parámetro de paso de construcción `Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` para declarar o inicializar de otro modo métricas específicas de la API basadas en la extensión de métricas activa (por ejemplo, \"smallrye-metrics\" o \"micrometer\"). Este patrón puede combinarse con el patrón de consumo utilizando `MetricsFactory::metricsSystemSupported()` para probar la extensión de métrica activa dentro del registrador."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1688
#, fuzzy
msgid "Remember that support for metrics is optional. Extensions can use an `Optional<MetricsCapabilityBuildItem> metricsCapability` parameter in their build step to test for the presence of an enabled metrics extension. Consider using additional configuration to control behavior of metrics. Datasource metrics can be expensive, for example, so additional configuration flags are used enable metrics collection on individual datasources."
msgstr "Recuerde que la compatibilidad con las métricas es opcional. Las extensiones pueden utilizar un parámetro `Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` en su paso de construcción para comprobar la presencia de una extensión de métricas habilitada. Considere el uso de una configuración adicional para controlar el comportamiento de las métricas. Las métricas de fuentes de datos pueden ser costosas, por ejemplo, por lo que se utilizan banderas de configuración adicionales que permiten la recolección de métricas en fuentes de datos individuales."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1690
#, fuzzy
msgid "When adding metrics for your extension, you may find yourself in one of the following situations:"
msgstr "Al añadir métricas para su extensión, puede encontrarse en una de las siguientes situaciones:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1692
#, fuzzy
msgid "An underlying library used by the extension is using a specific Metrics API directly (either MP Metrics, Micrometer, or some other)."
msgstr "Una biblioteca subyacente utilizada por la extensión está utilizando una API de métrica específica directamente (ya sea MP Metrics, Micrometer, o alguna otra)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1693
#, fuzzy
msgid "An underlying library uses its own mechanism for collecting metrics and makes them available at runtime using its own API, e.g. Hibernate's `Statistics` class, or Vert.x `MetricsOptions`."
msgstr "Una biblioteca subyacente utiliza su propio mecanismo para recopilar métricas y las pone a disposición en tiempo de ejecución utilizando su propia API, por ejemplo, la clase `Statistics` de Hibernate, o Vert.x `MetricsOptions`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1694
#, fuzzy
msgid "An underlying library does not provide metrics (or there is no library at all) and you want to add instrumentation."
msgstr "Una biblioteca subyacente no proporciona métricas (o no hay ninguna biblioteca) y usted quiere añadir instrumentación."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1695
#, fuzzy, no-wrap
msgid "Case 1: The library uses a metrics library directly"
msgstr "Caso 1: La biblioteca utiliza directamente una biblioteca de métricas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1698
#, fuzzy
msgid "If the library directly uses a metrics API, there are two options:"
msgstr "Si la biblioteca utiliza directamente una API de métricas, hay dos opciones:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1700
#, fuzzy
msgid "Use an `Optional<MetricsCapabilityBuildItem> metricsCapability` parameter to test which metrics API is supported (e.g. \"smallrye-metrics\" or \"micrometer\") in your build step, and use that to selectively declare or initialize API-specific beans or build items."
msgstr "Utiliza un parámetro `Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` para comprobar qué API de métricas es compatible (por ejemplo, \"smallrye-metrics\" o \"micrometer\") en tu paso de compilación, y utilízalo para declarar o inicializar selectivamente beans o elementos de compilación específicos de la API."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1702
#, fuzzy
msgid "Create a separate build step that consumes a `MetricsFactory`, and use the `MetricsFactory::metricsSystemSupported()` method within the bytecode recorder to initialize required resources if the desired metrics API is supported (e.g. \"smallrye-metrics\" or \"micrometer\")."
msgstr "Cree un paso de construcción separado que consuma un `MetricsFactory`, y utilice el método `MetricsFactory::metricsSystemSupported()` dentro del registrador de bytecode para inicializar los recursos necesarios si la API de métricas deseada es compatible (por ejemplo, \"smallrye-metrics\" o \"micrometer\")."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1704
#, fuzzy
msgid "Extensions may need to provide a fallback if there is no active metrics extension or the extension doesn't support the API required by the library."
msgstr "Es posible que las extensiones deban proporcionar un recurso si no hay una extensión de métricas activa o si la extensión no es compatible con la API requerida por la biblioteca."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1705
#, fuzzy, no-wrap
msgid "Case 2: The library provides its own metric API"
msgstr "Caso 2: La biblioteca proporciona su propia API de métricas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1708
#, fuzzy
msgid "There are two examples of a library providing its own metrics API:"
msgstr "Hay dos ejemplos de una biblioteca que proporciona su propia API de métricas:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1710
#, fuzzy
msgid "The extension defines an instrumentable object as Agroal does with `io.agroal.api.AgroalDataSourceMetrics`, or"
msgstr "La extensión define un objeto instrumentable como lo hace Agroal con `io.agroal.api.AgroalDataSourceMetrics`, o"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1711
#, fuzzy
msgid "The extension provides its own abstraction of metrics, as Jaeger does with `io.jaegertracing.spi.MetricsFactory`."
msgstr "La extensión proporciona su propia abstracción de las métricas, como hace Jaeger con `io.jaegertracing.spi.MetricsFactory`."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1712
#, fuzzy, no-wrap
msgid "Observing instrumentable objects"
msgstr "Observación de objetos instrumentables"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1715
#, fuzzy
msgid "Let's take the instrumentable object (`io.agroal.api.AgroalDataSourceMetrics`) case first. In this case, you can do the following:"
msgstr "Tomemos primero el caso del objeto instrumentable ( `io.agroal.api.AgroalDataSourceMetrics`). En este caso, puedes hacer lo siguiente:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1717
#, fuzzy
msgid "Define a `BuildStep` that produces a `MetricsFactoryConsumerBuildItem` that uses a `RUNTIME_INIT` or `STATIC_INIT` Recorder to define a `MetricsFactory` consumer. For example, the following creates a `MetricsFactoryConsumerBuildItem` if and only if metrics are enabled both for Agroal generally, and for a datasource specifically:"
msgstr "Defina un `BuildStep` que produzca un `MetricsFactoryConsumerBuildItem` que utilice un grabador `RUNTIME_INIT` o `STATIC_INIT` para definir un consumidor `MetricsFactory`. Por ejemplo, lo siguiente crea un `MetricsFactoryConsumerBuildItem` si y sólo si las métricas están habilitadas tanto para Agroal en general, como para una fuente de datos en particular:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1726
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(ExecutionTime.RUNTIME_INIT)\n"
"void registerMetrics(AgroalMetricsRecorder recorder,\n"
"        DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig,\n"
"        BuildProducer<MetricsFactoryConsumerBuildItem> datasourceMetrics,\n"
"        List<AggregatedDataSourceBuildTimeConfigBuildItem> aggregatedDataSourceBuildTimeConfigs) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1738
#, no-wrap
msgid ""
"    for (AggregatedDataSourceBuildTimeConfigBuildItem aggregatedDataSourceBuildTimeConfig : aggregatedDataSourceBuildTimeConfigs) {\n"
"        // Create a MetricsFactory consumer to register metrics for a data source\n"
"        // IFF metrics are enabled globally and for the data source\n"
"        // (they are enabled for each data source by default if they are also enabled globally)\n"
"        if (dataSourcesBuildTimeConfig.metricsEnabled &&\n"
"                aggregatedDataSourceBuildTimeConfig.getJdbcConfig().enableMetrics.orElse(true)) {\n"
"            datasourceMetrics.produce(new MetricsFactoryConsumerBuildItem(\n"
"                    recorder.registerDataSourceMetrics(aggregatedDataSourceBuildTimeConfig.getName())));\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1741
#, fuzzy
msgid "The associated recorder should use the provided `MetricsFactory` to register metrics. For Agroal, this means using the `MetricFactory` API to observe `io.agroal.api.AgroalDataSourceMetrics` methods. For example:"
msgstr "El registrador asociado debe utilizar el `MetricsFactory` proporcionado para registrar las métricas. En el caso de Agroal, esto significa utilizar la API `MetricFactory` para observar los métodos de `io.agroal.api.AgroalDataSourceMetrics`. Por ejemplo:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1751
#, no-wrap
msgid ""
"/* RUNTIME_INIT */\n"
"public Consumer<MetricsFactory> registerDataSourceMetrics(String dataSourceName) {\n"
"    return new Consumer<MetricsFactory>() {\n"
"        @Override\n"
"        public void accept(MetricsFactory metricsFactory) {\n"
"            String tagValue = DataSourceUtil.isDefault(dataSourceName) ? \"default\" : dataSourceName;\n"
"            AgroalDataSourceMetrics metrics = getDataSource(dataSourceName).getMetrics();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1759
#, no-wrap
msgid ""
"            // When using MP Metrics, the builder uses the VENDOR registry by default.\n"
"            metricsFactory.builder(\"agroal.active.count\")\n"
"                    .description(\n"
"                            \"Number of active connections. These connections are in use and not available to be acquired.\")\n"
"                    .tag(\"datasource\", tagValue)\n"
"                    .buildGauge(metrics::activeCount);\n"
"            ....\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1762
#, fuzzy
msgid "The `MetricsFactory` provides a fluid builder for registration of metrics, with the final step constructing gauges or counters based on a `Supplier` or `ToDoubleFunction`. Timers can either wrap `Callable`, `Runnable`, or `Supplier` implementations, or can use a `TimeRecorder` to accumulate chunks of time. The underlying metrics extension will create appropriate artifacts to observe or measure the defined functions."
msgstr "El `MetricsFactory` proporciona un constructor fluido para el registro de métricas, con el paso final de construcción de medidores o contadores basados en un `Supplier` o `ToDoubleFunction`. Los temporizadores pueden envolver implementaciones de `Callable`, `Runnable`, o `Supplier`, o pueden utilizar un `TimeRecorder` para acumular trozos de tiempo. La extensión de métricas subyacente creará los artefactos adecuados para observar o medir las funciones definidas."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:1763
#, fuzzy, no-wrap
msgid "Using a Metrics API-specific implementation"
msgstr "Uso de una implementación específica de la API de métricas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1766
#, fuzzy
msgid "Using metrics-API specific implementations may be preferred in some cases. Jaeger, for example, defines its own metrics interface, `io.jaegertracing.spi.MetricsFactory`, that it uses to define counters and gauges. A direct mapping from that interface to the metrics system will be the most efficient. In this case, it is important to isolate these specialized implementations and to avoid eager classloading to ensure the metrics API remains an optional, compile-time dependency."
msgstr "En algunos casos puede ser preferible utilizar implementaciones específicas de la API de métricas. Jaeger, por ejemplo, define su propia interfaz de métricas, `io.jaegertracing.spi.MetricsFactory`, que utiliza para definir contadores y medidores. Un mapeo directo de esa interfaz al sistema de métricas será lo más eficiente. En este caso, es importante aislar estas implementaciones especializadas y evitar el eager classloading para garantizar que la API de métricas siga siendo una dependencia opcional en tiempo de compilación."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1768
#, fuzzy
msgid "`Optional<MetricsCapabilityBuildItem> metricsCapability` can be used in the build step to selectively control initialization of beans or the production of other build items. The Jaeger extension, for example, can use the following to control initialization of specialized Metrics API adapters:"
msgstr "`Optional&amp;lt;MetricsCapabilityBuildItem&amp;gt; metricsCapability` puede utilizarse en el paso de construcción para controlar selectivamente la inicialización de los beans o la producción de otros elementos de construcción. La extensión Jaeger, por ejemplo, puede utilizar lo siguiente para controlar la inicialización de adaptadores especializados de la API de métricas:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1776
#, no-wrap
msgid ""
"/* RUNTIME_INIT */\n"
"@BuildStep\n"
"@Record(ExecutionTime.RUNTIME_INIT)\n"
"void setupTracer(JaegerDeploymentRecorder jdr, JaegerBuildTimeConfig buildTimeConfig, JaegerConfig jaeger,\n"
"        ApplicationConfig appConfig, Optional<MetricsCapabilityBuildItem> metricsCapability) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1779
#, no-wrap
msgid ""
"    // Indicates that this extension would like the SSL support to be enabled\n"
"    extensionSslNativeSupport.produce(new ExtensionSslNativeSupportBuildItem(Feature.JAEGER.getName()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1793
#, no-wrap
msgid ""
"    if (buildTimeConfig.enabled) {\n"
"        // To avoid dependency creep, use two separate recorder methods for the two metrics systems\n"
"        if (buildTimeConfig.metricsEnabled && metricsCapability.isPresent()) {\n"
"            if (metricsCapability.get().metricsSupported(MetricsFactory.MICROMETER)) {\n"
"                jdr.registerTracerWithMicrometerMetrics(jaeger, appConfig);\n"
"            } else {\n"
"                jdr.registerTracerWithMpMetrics(jaeger, appConfig);\n"
"            }\n"
"        } else {\n"
"            jdr.registerTracerWithoutMetrics(jaeger, appConfig);\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1796
#, fuzzy
msgid "A recorder consuming a `MetricsFactory` can use `MetricsFactory::metricsSystemSupported()` can be used to control initialization of metrics objects during bytecode recording in a similar way."
msgstr "Un grabador que consuma un `MetricsFactory` puede utilizar `MetricsFactory::metricsSystemSupported()` puede utilizarse para controlar la inicialización de los objetos métricos durante la grabación de bytecode de forma similar."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1797
#, fuzzy, no-wrap
msgid "Case 3: It is necessary to collect metrics within the extension code"
msgstr "Caso 3: Es necesario recoger métricas dentro del código de extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1800
#, fuzzy
msgid "To define your own metrics from scratch, you have two basic options: Use the generic `MetricFactory` builders, or follow the binder pattern, and create instrumentation specific to the enabled metrics extension."
msgstr "Para definir tus propias métricas desde cero, tienes dos opciones básicas: Utilizar los constructores genéricos de `MetricFactory`, o seguir el patrón de binder, y crear instrumentación específica para la extensión de métricas habilitada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1802
#, fuzzy
msgid "To use the extension-agnostic `MetricFactory` API, your processor can define a `BuildStep` that produces a `MetricsFactoryConsumerBuildItem` that uses a `RUNTIME_INIT` or `STATIC_INIT` Recorder to define a `MetricsFactory` consumer."
msgstr "Para utilizar la API `MetricFactory` agnóstica a las extensiones, su procesador puede definir un `BuildStep` que produce un `MetricsFactoryConsumerBuildItem` que utiliza un `RUNTIME_INIT` o `STATIC_INIT` Recorder para definir un `MetricsFactory` consumidor."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1810
#, no-wrap
msgid ""
"@BuildStep\n"
"@Record(ExecutionTime.RUNTIME_INIT)\n"
"MetricsFactoryConsumerBuildItem registerMetrics(MyExtensionRecorder recorder) {\n"
"    return new MetricsFactoryConsumerBuildItem(recorder.registerMetrics());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1813
#, fuzzy
msgid "The associated recorder should use the provided `MetricsFactory` to register metrics, for example"
msgstr "El registrador asociado debe utilizar el `MetricsFactory` proporcionado para registrar las métricas, por ejemplo"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1817
#, no-wrap
msgid "final LongAdder extensionCounter = new LongAdder();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1826
#, no-wrap
msgid ""
"/* RUNTIME_INIT */\n"
"public Consumer<MetricsFactory> registerMetrics() {\n"
"    return new Consumer<MetricsFactory>() {\n"
"        @Override\n"
"        public void accept(MetricsFactory metricsFactory) {\n"
"            metricsFactory.builder(\"my.extension.counter\")\n"
"                    .buildGauge(extensionCounter::longValue);\n"
"            ....\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1829
#, fuzzy
msgid "Remember that metrics extensions are optional. Keep metrics-related initialization isolated from other setup for your extension, and structure your code to avoid eager imports of metrics APIs. Gathering metrics can also be expensive. Consider using additional extension-specific configuration to control behavior of metrics if the presence/absence of metrics support isn't sufficient."
msgstr "Recuerda que las extensiones de métricas son opcionales. Mantenga la inicialización relacionada con las métricas aislada del resto de la configuración de su extensión, y estructure su código para evitar importaciones ansiosas de las APIs de métricas. La recopilación de métricas también puede ser costosa. Considera el uso de una configuración adicional específica de la extensión para controlar el comportamiento de las métricas si la presencia/ausencia de soporte de métricas no es suficiente."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1830
#, fuzzy, no-wrap
msgid "Customizing JSON handling from an extension"
msgstr "Personalización del manejo de JSON desde una extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1833
#, fuzzy
msgid "Extensions often need to register serializers and/or deserializers for types the extension provides."
msgstr "Las extensiones a menudo necesitan registrar serializadores y/o deserializadores para los tipos que la extensión proporciona."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1836
#, fuzzy
msgid "For this, both Jackson and JSON-B extensions provide a way to register serializer/deserializer from within an extension deployment module."
msgstr "Para ello, tanto las extensiones Jackson como JSON-B proporcionan una forma de registrar el serializador/deserializador desde un módulo de despliegue de la extensión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1838
#, fuzzy
msgid "Keep in mind that not everybody will need JSON, so you need to make it optional."
msgstr "Ten en cuenta que no todo el mundo necesitará JSON, así que debes hacerlo opcional."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1841
#, fuzzy
msgid "If an extension intends to provide JSON related customization, it is strongly advised to provide customization for both Jackson and JSON-B."
msgstr "Si una extensión tiene la intención de proporcionar personalización relacionada con JSON, se recomienda encarecidamente proporcionar personalización tanto para Jackson como para JSON-B."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1842
#, fuzzy, no-wrap
msgid "Customizing Jackson"
msgstr "Personalización de Jackson"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1845
#, fuzzy
msgid "First, add an *optional* dependency to `quarkus-jackson` on your extension's runtime module."
msgstr "En primer lugar, añada una dependencia *opcional* a `quarkus-jackson` en el módulo de ejecución de su extensión."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1853
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jackson</artifactId>\n"
"  <optional>true</optional>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1856
#, fuzzy
msgid "Then create a serializer or a deserializer (or both) for Jackson, an example of which can be seen in the `mongodb-panache` extension."
msgstr "A continuación, cree un serializador o un deserializador (o ambos) para Jackson, un ejemplo del cual puede verse en la extensión `mongodb-panache`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1871
#, no-wrap
msgid ""
"public class ObjectIdSerializer extends StdSerializer<ObjectId> {\n"
"    public ObjectIdSerializer() {\n"
"        super(ObjectId.class);\n"
"    }\n"
"    @Override\n"
"    public void serialize(ObjectId objectId, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)\n"
"            throws IOException {\n"
"        if (objectId != null) {\n"
"            jsonGenerator.writeString(objectId.toString());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1874
#, fuzzy
msgid "Add a dependency to `quarkus-jackson-spi` on your extension's deployment module."
msgstr "Añada una dependencia a `quarkus-jackson-spi` del módulo de despliegue de su extensión."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1881
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jackson-spi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1885
#, fuzzy
msgid "Add a build step to your processor to register a Jackson module via the `JacksonModuleBuildItem`.  You need to name your module in a unique way across all Jackson modules."
msgstr "Añade un paso de construcción a tu procesador para registrar un módulo Jackson a través de la página web `JacksonModuleBuildItem`. Necesitas nombrar tu módulo de una manera única en todos los módulos Jackson."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1896
#, no-wrap
msgid ""
"@BuildStep\n"
"JacksonModuleBuildItem registerJacksonSerDeser() {\n"
"    return new JacksonModuleBuildItem.Builder(\"ObjectIdModule\")\n"
"                    .add(io.quarkus.mongodb.panache.jackson.ObjectIdSerializer.class.getName(),\n"
"                            io.quarkus.mongodb.panache.jackson.ObjectIdDeserializer.class.getName(),\n"
"                            ObjectId.class.getName())\n"
"                    .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1899
#, fuzzy
msgid "The Jackson extension will then use the produced build item to register a module within Jackson automatically."
msgstr "La extensión de Jackson utilizará entonces el elemento de construcción producido para registrar un módulo dentro de Jackson automáticamente."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1903
#, fuzzy
msgid "If you need more customization capabilities than registering a module, you can produce a CDI bean that implements `io.quarkus.jackson.ObjectMapperCustomizer` via an `AdditionalBeanBuildItem`.  More info about customizing Jackson can be found on the JSON guide xref:rest-json.adoc#json[Configuring JSON support]"
msgstr "Si necesitas más capacidades de personalización que registrar un módulo, puedes producir un bean CDI que implemente `io.quarkus.jackson.ObjectMapperCustomizer` a través de un `AdditionalBeanBuildItem`. Puedes encontrar más información sobre la personalización de Jackson en la guía de JSON  link:rest-json.html#configuring-json-support[Configuring JSON]support"

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1904
#, fuzzy, no-wrap
msgid "Customizing JSON-B"
msgstr "Personalización de JSON-B"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1906
#, fuzzy
msgid "First, add an *optional* dependency to `quarkus-jsonb` on your extension's runtime module."
msgstr "En primer lugar, añada una dependencia *opcional* a `quarkus-jsonb` en el módulo de ejecución de su extensión."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1914
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jsonb</artifactId>\n"
"  <optional>true</optional>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1917
#, fuzzy
msgid "Then create a serializer and/or a deserializer for JSON-B, an example of which can be seen in the `mongodb-panache` extension."
msgstr "A continuación, cree un serializador y/o un deserializador para JSON-B, cuyo ejemplo puede verse en la extensión `mongodb-panache`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1928
#, no-wrap
msgid ""
"public class ObjectIdSerializer implements JsonbSerializer<ObjectId> {\n"
"    @Override\n"
"    public void serialize(ObjectId obj, JsonGenerator generator, SerializationContext ctx) {\n"
"        if (obj != null) {\n"
"            generator.write(obj.toString());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1931
#, fuzzy
msgid "Add a dependency to `quarkus-jsonb-spi` on your extension's deployment module."
msgstr "Añada una dependencia a `quarkus-jsonb-spi` del módulo de despliegue de su extensión."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1938
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-jsonb-spi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1941
#, fuzzy
msgid "Add a build step to your processor to register the serializer via the `JsonbSerializerBuildItem`."
msgstr "Añade un paso de construcción a tu procesador para registrar el serializador a través de `JsonbSerializerBuildItem`."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1948
#, no-wrap
msgid ""
"@BuildStep\n"
"JsonbSerializerBuildItem registerJsonbSerializer() {\n"
"    return new JsonbSerializerBuildItem(io.quarkus.mongodb.panache.jsonb.ObjectIdSerializer.class.getName()));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1951
#, fuzzy
msgid "The JSON-B extension will then use the produced build item to register your serializer/deserializer automatically."
msgstr "La extensión JSON-B utilizará entonces el elemento de construcción producido para registrar su serializador/deserializador automáticamente."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1955
#, fuzzy
msgid "If you need more customization capabilities than registering a serializer or a deserializer, you can produce a CDI bean that implements `io.quarkus.jsonb.JsonbConfigCustomizer` via an `AdditionalBeanBuildItem`.  More info about customizing JSON-B can be found on the JSON guide xref:rest-json.adoc#configuring-json-support[Configuring JSON support]"
msgstr "Si necesitas más capacidades de personalización que registrar un serializador o un deserializador, puedes producir un bean CDI que implemente `io.quarkus.jsonb.JsonbConfigCustomizer` a través de un `AdditionalBeanBuildItem`. Puedes encontrar más información sobre la personalización de JSON-B en la guía de JSON  link:rest-json.html#configuring-json-support[Configuring JSON]support"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1956
#, fuzzy, no-wrap
msgid "Integrating with Development Mode"
msgstr "Integración con el modo de desarrollo"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1959
#, fuzzy
msgid "There are various APIS that you can use to integrate with development mode, and to get information about the current state."
msgstr "Hay varias APIS que puede utilizar para integrarse con el modo de desarrollo, y para obtener información sobre el estado actual."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1960
#, fuzzy, no-wrap
msgid "Handling restarts"
msgstr "Gestión de los reinicios"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1964
#, fuzzy
msgid "When Quarkus is starting the `io.quarkus.deployment.builditem.LiveReloadBuildItem` is guaranteed to be present that gives information about this start, in particular:"
msgstr "Cuando Quarkus está arrancando se garantiza la presencia de `io.quarkus.deployment.builditem.LiveReloadBuildItem` que da información sobre este arranque, en particular:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1966
#, fuzzy
msgid "Is this a clean start or a live reload"
msgstr "¿Esto es un comienzo limpio o una recarga en vivo"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1967
#, fuzzy
msgid "If this is a live reload which changed files / classes triggered the reload"
msgstr "Si se trata de una recarga en vivo que cambió archivos / clases desencadenó la recarga"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1970
#, fuzzy
msgid "It also provides a global context map you can use to store information between restarts, without needing to resort to static fields."
msgstr "También proporciona un mapa de contexto global que puede utilizar para almacenar información entre reinicios, sin necesidad de recurrir a campos estáticos."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:1971
#, fuzzy, no-wrap
msgid "Triggering Live Reload"
msgstr "Activación de la recarga en vivo"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1976
#, fuzzy
msgid "Live reload is generally triggered by an HTTP request, however not all applications are HTTP applications and some extensions may want to trigger live reload based on other events. To do this you need to implement `io.quarkus.dev.spi.HotReplacementSetup` in your runtime module, and add a `META-INF/services/io.quarkus.dev.spi.HotReplacementSetup` that lists your implementation."
msgstr "La recarga en vivo es generalmente activada por una petición HTTP, sin embargo no todas las aplicaciones son aplicaciones HTTP y algunas extensiones pueden querer activar la recarga en vivo basada en otros eventos. Para hacer esto necesitas implementar `io.quarkus.dev.spi.HotReplacementSetup` en tu módulo de tiempo de ejecución, y añadir un `META-INF/services/io.quarkus.dev.spi.HotReplacementSetup` que liste tu implementación."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1979
#, fuzzy
msgid "On startup the `setupHotDeployment` method will be called, and you can use the provided `io.quarkus.dev.spi.HotReplacementContext` to initiate a scan for changed files."
msgstr "Al iniciarse, se llamará al método `setupHotDeployment`, y se puede utilizar el `io.quarkus.dev.spi.HotReplacementContext` proporcionado para iniciar un escaneo de archivos modificados."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:1980
#, fuzzy, no-wrap
msgid "Testing Extensions"
msgstr "Probar las extensiones"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1987
#, fuzzy
msgid "Testing of Quarkus extensions should be done with the `io.quarkus.test.QuarkusUnitTest` JUnit 5 extension.  This extension allows for Arquillian-style tests that test specific functionalities.  It is not intended for testing user applications, as this should be done via `io.quarkus.test.junit.QuarkusTest`.  The main difference is that `QuarkusTest` simply boots the application once at the start of the run, while `QuarkusUnitTest` deploys a custom Quarkus application for each test class."
msgstr "Las pruebas de las extensiones de Quarkus deben realizarse con la extensión JUnit 5 de `io.quarkus.test.QuarkusUnitTest`. Esta extensión permite realizar pruebas al estilo de Arquillian que prueban funcionalidades específicas. No está pensada para probar aplicaciones de usuario, ya que esto debe hacerse a través de `io.quarkus.test.junit.QuarkusTest`. La principal diferencia es que `QuarkusTest` simplemente arranca la aplicación una vez al inicio de la ejecución, mientras que `QuarkusUnitTest` despliega una aplicación Quarkus personalizada para cada clase de prueba."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1990
#, fuzzy
msgid "These tests should be placed in the deployment module, if additional Quarkus modules are required for testing their deployment modules should also be added as test scoped dependencies."
msgstr "Estas pruebas deben colocarse en el módulo de despliegue, si se requieren módulos adicionales de Quarkus para las pruebas, sus módulos de despliegue también deben añadirse como dependencias de alcance de prueba."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1992
#, fuzzy
msgid "Note that `QuarkusUnitTest` is in the `quarkus-junit5-internal` module."
msgstr "Tenga en cuenta que `QuarkusUnitTest` está en el módulo `quarkus-junit5-internal`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:1994
#, fuzzy
msgid "An example test class may look like:"
msgstr "Un ejemplo de clase de prueba puede ser así:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:1998
#, no-wrap
msgid "package io.quarkus.health.test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2000
#, no-wrap
msgid "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2003
#, no-wrap
msgid ""
"import java.util.ArrayList;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2006
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Instance;\n"
"import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2016
#, no-wrap
msgid ""
"import org.eclipse.microprofile.health.Liveness;\n"
"import org.eclipse.microprofile.health.HealthCheck;\n"
"import org.eclipse.microprofile.health.HealthCheckResponse;\n"
"import io.quarkus.test.QuarkusUnitTest;\n"
"import org.jboss.shrinkwrap.api.ShrinkWrap;\n"
"import org.jboss.shrinkwrap.api.asset.EmptyAsset;\n"
"import org.jboss.shrinkwrap.api.spec.JavaArchive;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.extension.RegisterExtension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2018
#, no-wrap
msgid "import io.restassured.RestAssured;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2020
#, no-wrap
msgid "public class FailingUnitTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2028
#, no-wrap
msgid ""
"    @RegisterExtension                                                                  // <1>\n"
"    static final QuarkusUnitTest config = new QuarkusUnitTest()\n"
"            .setArchiveProducer(() ->\n"
"                    ShrinkWrap.create(JavaArchive.class)                                // <2>\n"
"                            .addClasses(FailingHealthCheck.class)\n"
"                            .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\")\n"
"            );\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2032
#, no-wrap
msgid ""
"    @Inject                                                                             // <3>\n"
"    @Liveness\n"
"    Instance<HealthCheck> checks;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2037
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHealthServlet() {\n"
"        RestAssured.when().get(\"/q/health\").then().statusCode(503);                       // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2048
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHealthBeans() {\n"
"        List<HealthCheck> check = new ArrayList<>();                                    // <5>\n"
"        for (HealthCheck i : checks) {\n"
"            check.add(i);\n"
"        }\n"
"        assertEquals(1, check.size());\n"
"        assertEquals(HealthCheckResponse.State.DOWN, check.get(0).call().getState());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2051
#, fuzzy
msgid "The `QuarkusUnitTest` extension must be used with a static field. If used with a non-static field, the test application is not started."
msgstr "La extensión `QuarkusUnitTest` debe utilizarse con un campo estático. Si se utiliza con un campo no estático, la aplicación de prueba no se inicia."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2052
#, fuzzy
msgid "This producer is used to build the application to be tested. It uses Shrinkwrap to create a JavaArchive to test"
msgstr "Este productor se utiliza para construir la aplicación que se va a probar. Utiliza Shrinkwrap para crear un JavaArchive para probar"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2053
#, fuzzy
msgid "It is possible to inject beans from our test deployment directly into the test case"
msgstr "Es posible inyectar beans de nuestro despliegue de pruebas directamente en el caso de prueba"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2054
#, fuzzy
msgid "This method directly invokes the health check Servlet and verifies the response"
msgstr "Este método invoca directamente el Servlet de comprobación de salud y verifica la respuesta"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2055
#, fuzzy
msgid "This method uses the injected health check bean to verify it is returning the expected result"
msgstr "Este método utiliza el bean de comprobación de salud inyectado para verificar que devuelve el resultado esperado"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2057
#, fuzzy
msgid "If you want to test that an extension properly fails at build time, use the `setExpectedException` method:"
msgstr "Si desea comprobar que una extensión falla correctamente en el momento de la compilación, utilice el método `setExpectedException`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2062
#, no-wrap
msgid "package io.quarkus.hibernate.orm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2070
#, no-wrap
msgid ""
"import io.quarkus.runtime.configuration.ConfigurationException;\n"
"import io.quarkus.test.QuarkusUnitTest;\n"
"import org.jboss.shrinkwrap.api.ShrinkWrap;\n"
"import org.jboss.shrinkwrap.api.spec.JavaArchive;\n"
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.extension.RegisterExtension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2072
#, no-wrap
msgid "public class PersistenceAndQuarkusConfigTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2079
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    static QuarkusUnitTest runner = new QuarkusUnitTest()\n"
"            .setExpectedException(ConfigurationException.class)                     <1>\n"
"            .withApplicationRoot((jar) -> jar\n"
"                    .addAsManifestResource(\"META-INF/some-persistence.xml\", \"persistence.xml\")\n"
"                    .addAsResource(\"application.properties\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2087
#, no-wrap
msgid ""
"    @Test\n"
"    public void testPersistenceAndConfigTest() {\n"
"        // should not be called, deployment exception should happen first:\n"
"        // it's illegal to have Hibernate configuration properties in both the\n"
"        // application.properties and in the persistence.xml\n"
"        Assertions.fail();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2092
#, fuzzy
msgid "This tells JUnit that the Quarkus deployment should fail with a specific exception"
msgstr "Esto indica a JUnit que el despliegue de Quarkus debe fallar con una excepción específica"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2094
#, fuzzy, no-wrap
msgid "Testing hot reload"
msgstr "Probando la recarga en caliente"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2098
#, fuzzy
msgid "It is also possible to write tests that verify an extension works correctly in development mode and can correctly handle updates."
msgstr "También es posible escribir pruebas que verifiquen que una extensión funciona correctamente en modo de desarrollo y que puede manejar correctamente las actualizaciones."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2101
#, fuzzy
msgid "For most extensions this will just work 'out of the box', however it is still a good idea to have a smoke test to verify that this functionality is working as expected. To test this we use `QuarkusDevModeTest`:"
msgstr "Para la mayoría de las extensiones esto funcionará 'out of the box', sin embargo es una buena idea tener una prueba de humo para verificar que esta funcionalidad está trabajando como se espera. Para probar esto, utilizamos `QuarkusDevModeTest`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2106
#, no-wrap
msgid "public class ServletChangeTestCase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2117
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    final static QuarkusDevModeTest test = new QuarkusDevModeTest()\n"
"            .setArchiveProducer(new Supplier<>() {\n"
"                @Override\n"
"                public JavaArchive get() {\n"
"                    return ShrinkWrap.create(JavaArchive.class)   <1>\n"
"                            .addClass(DevServlet.class)\n"
"                            .addAsManifestResource(new StringAsset(\"Hello Resource\"), \"resources/file.txt\");\n"
"                }\n"
"            });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2123
#, no-wrap
msgid ""
"    @Test\n"
"    public void testServletChange() throws InterruptedException {\n"
"        RestAssured.when().get(\"/dev\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"Hello World\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2125
#, no-wrap
msgid "        test.modifySourceFile(\"DevServlet.java\", new Function<String, String>() {  <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2131
#, no-wrap
msgid ""
"            @Override\n"
"            public String apply(String s) {\n"
"                return s.replace(\"Hello World\", \"Hello Quarkus\");\n"
"            }\n"
"        });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2136
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/dev\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"Hello Quarkus\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2141
#, no-wrap
msgid ""
"    @Test\n"
"    public void testAddServlet() throws InterruptedException {\n"
"        RestAssured.when().get(\"/new\").then()\n"
"                .statusCode(404);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2143
#, no-wrap
msgid "        test.addSourceFile(NewServlet.class);                                       <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2148
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/new\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"A new Servlet\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2154
#, no-wrap
msgid ""
"    @Test\n"
"    public void testResourceChange() throws InterruptedException {\n"
"        RestAssured.when().get(\"/file.txt\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"Hello Resource\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2156
#, no-wrap
msgid "        test.modifyResourceFile(\"META-INF/resources/file.txt\", new Function<String, String>() { <4>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2162
#, no-wrap
msgid ""
"            @Override\n"
"            public String apply(String s) {\n"
"                return \"A new resource\";\n"
"            }\n"
"        });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2167
#, no-wrap
msgid ""
"        RestAssured.when().get(\"file.txt\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"A new resource\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2170
#, no-wrap
msgid ""
"    @Test\n"
"    public void testAddResource() throws InterruptedException {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2173
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/new.txt\").then()\n"
"                .statusCode(404);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2175
#, no-wrap
msgid "        test.addResourceFile(\"META-INF/resources/new.txt\", \"New File\");  <5>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2179
#, no-wrap
msgid ""
"        RestAssured.when().get(\"/new.txt\").then()\n"
"                .statusCode(200)\n"
"                .body(is(\"New File\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2182
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2186
#, fuzzy
msgid "This starts the deployment, your test can modify it as part of the test suite. Quarkus will be restarted between each test method so every method starts with a clean deployment."
msgstr "Esto inicia el despliegue, su prueba puede modificarlo como parte del conjunto de pruebas. Quarkus se reiniciará entre cada método de prueba para que cada método comience con un despliegue limpio."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2189
#, fuzzy
msgid "This method allows you to modify the source of a class file. The old source is passed into the function, and the updated source is returned."
msgstr "Este método permite modificar el código fuente de un archivo de clase. La fuente antigua se pasa a la función y se devuelve la fuente actualizada."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2192
#, fuzzy
msgid "This method adds a new class file to the deployment. The source that is used will be the original source that is part of the current project."
msgstr "Este método añade un nuevo archivo de clase al despliegue. La fuente que se utiliza será la fuente original que forma parte del proyecto actual."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2194
#, fuzzy
msgid "This method modifies a static resource"
msgstr "Este método modifica un recurso estático"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2196
#, fuzzy
msgid "This method adds a new static resource"
msgstr "Este método añade un nuevo recurso estático"

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2197
#, fuzzy, no-wrap
msgid "Native Executable Support"
msgstr "Soporte de ejecutables nativos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2202
#, fuzzy
msgid "There Quarkus provides a lot of build items that control aspects of the native executable build. This allows for extensions to programmatically perform tasks such as registering classes for reflection or adding static resources to the native executable. Some of these build items are listed below:"
msgstr "Allí Quarkus proporciona un montón de elementos de construcción que controlan aspectos de la construcción del ejecutable nativo. Esto permite que las extensiones realicen tareas mediante programación, como el registro de clases para la reflexión o la adición de recursos estáticos al ejecutable nativo. Algunos de estos elementos de construcción se enumeran a continuación:"

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2203
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2205
#, fuzzy
msgid "Includes static resources into the native executable."
msgstr "Incluye recursos estáticos en el ejecutable nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2206
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceDirectoryBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceDirectoryBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2208
#, fuzzy
msgid "Includes directory's static resources into the native executable."
msgstr "Incluye los recursos estáticos del directorio en el ejecutable nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2209
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.RuntimeReinitializedClassBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.RuntimeReinitializedClassBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2211
#, fuzzy
msgid "A class that will be reinitialized at runtime by Substrate. This will result in the static initializer running twice."
msgstr "Una clase que será reiniciada en tiempo de ejecución por Substrate. Esto hará que el inicializador estático se ejecute dos veces."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2212
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageSystemPropertyBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageSystemPropertyBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2214
#, fuzzy
msgid "A system property that will be set at native executable build time."
msgstr "Una propiedad del sistema que se establecerá en el momento de la construcción del ejecutable nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2215
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2217
#, fuzzy
msgid "Includes a resource bundle in the native executable."
msgstr "Incluye un paquete de recursos en el ejecutable nativo."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2218
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2220
#, fuzzy
msgid "Registers a class for reflection in Substrate. Constructors are always registered, while methods and fields are optional."
msgstr "Registra una clase para su reflexión en Substrate. Los constructores siempre se registran, mientras que los métodos y los campos son opcionales."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2221
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2223
#, fuzzy
msgid "A class that will be initialized at runtime rather than build time. This will cause the build to fail if the class is initialized as part of the native executable build process, so care must be taken."
msgstr "Una clase que será inicializada en tiempo de ejecución y no en tiempo de construcción. Esto hará que la construcción falle si la clase se inicializa como parte del proceso de construcción del ejecutable nativo, por lo que hay que tener cuidado."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2224
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.nativeimage.NativeImageConfigBuildItem`"
msgstr "`io.quarkus.deployment.builditem.nativeimage.NativeImageConfigBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2226
#, fuzzy
msgid "A convenience feature that allows you to control most of the above features from a single build item."
msgstr "Una función práctica que le permite controlar la mayoría de las funciones anteriores desde un único elemento de construcción."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2227
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.NativeImageEnableAllCharsetsBuildItem`"
msgstr "`io.quarkus.deployment.builditem.NativeImageEnableAllCharsetsBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2229
#, fuzzy
msgid "Indicates that all charsets should be enabled in native image."
msgstr "Indica que todos los conjuntos de caracteres deben estar habilitados en la imagen nativa."

#. type: Labeled list
#: upstream/_guides/writing-extensions.adoc:2230
#, fuzzy, no-wrap
msgid "`io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem`"
msgstr "`io.quarkus.deployment.builditem.ExtensionSslNativeSupportBuildItem`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2233
#, fuzzy
msgid "A convenient way to tell Quarkus that the extension requires SSL, and it should be enabled during native image build.  When using this feature, remember to add your extension to the list of extensions that offer SSL support automatically on the https://github.com/quarkusio/quarkus/blob/main/docs/src/main/asciidoc/native-and-ssl.adoc[native and ssl guide]."
msgstr "Una forma conveniente de decirle a Quarkus que la extensión requiere SSL y que debe ser habilitada durante la construcción de la imagen nativa. Cuando utilice esta característica, recuerde añadir su extensión a la lista de extensiones que ofrecen soporte SSL automáticamente en la  link:https://github.com/quarkusio/quarkus/blob/main/docs/src/main/asciidoc/native-and-ssl.adoc[guía nativa y ssl]."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2234
#, fuzzy, no-wrap
msgid "IDE support tips"
msgstr "Consejos de apoyo al IDE"

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2236
#, fuzzy, no-wrap
msgid "Writing Quarkus extensions in Eclipse"
msgstr "Escribir extensiones de Quarkus en Eclipse"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2239
#, fuzzy
msgid "The only particular aspect of writing Quarkus extensions in Eclipse is that APT (Annotation Processing Tool) is required as part of extension builds, which means you need to:"
msgstr "El único aspecto particular de escribir extensiones de Quarkus en Eclipse es que se requiere APT (Annotation Processing Tool) como parte de las construcciones de las extensiones, lo que significa que necesitas:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2241
#, fuzzy
msgid "Install `m2e-apt` from https://marketplace.eclipse.org/content/m2e-apt"
msgstr "Instale `m2e-apt` desde  https://marketplace.eclipse.org/content/m2e-apt"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2242
#, fuzzy
msgid "Define this property in your `pom.xml`: `<m2e.apt.activation>jdt_apt</m2e.apt.activation>`, although if you rely on `io.quarkus:quarkus-build-parent` you will get it for free."
msgstr "Defina esta propiedad en su `pom.xml`: `&amp;lt;m2e.apt.activation&amp;gt;jdt_apt&amp;lt;/m2e.apt.activation&amp;gt;`, aunque si se apoya en `io.quarkus:quarkus-build-parent` la obtendrá gratuitamente."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2243
#, fuzzy
msgid "If you have the `io.quarkus:quarkus-extension-processor` project open at the same time in your IDE (for example, if you have the Quarkus sources checked out and open in your IDE) you will need to close that project. Otherwise, Eclipse will not invoke the APT plugin that it contains."
msgstr "Si tiene el proyecto `io.quarkus:quarkus-extension-processor` abierto al mismo tiempo en su IDE (por ejemplo, si tiene las fuentes de Quarkus comprobadas y abiertas en su IDE) tendrá que cerrar ese proyecto. De lo contrario, Eclipse no invocará el plugin de APT que contiene."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2244
#, fuzzy
msgid "If you just closed the extension processor project, be sure to do `Maven > Update Project` on the other projects in order for Eclipse to pick up the extension processor from the Maven repository."
msgstr "Si acabas de cerrar el proyecto del procesador de extensiones, asegúrate de hacer `Maven &amp;gt; Update Project` en los otros proyectos para que Eclipse recoja el procesador de extensiones del repositorio de Maven."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2245
#, fuzzy, no-wrap
msgid "Troubleshooting / Debugging Tips"
msgstr "Solución de problemas / Consejos de depuración"

#.  This id was previously used for the "Dump the Generated Classes to the File System" section
#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2249
#, fuzzy, no-wrap
msgid "Inspecting the Generated/Transformed Classes"
msgstr "Inspección de las clases generadas/transformadas"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2253
#, fuzzy
msgid "Quarkus generates a lot of classes during the build phase and in many cases also transforms existing classes.  It is often extremely useful to see the generated bytecode and transformed classes during the development of an extension."
msgstr "Quarkus genera muchas clases durante la fase de construcción y en muchos casos también transforma las clases existentes. A menudo es extremadamente útil ver el código de bytes generado y las clases transformadas durante el desarrollo de una extensión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2255
#, fuzzy
msgid "If you set the `quarkus.package.quiltflower.enabled` property to `true` then Quarkus will download and invoke the https://github.com/QuiltMC/quiltflower[Quiltflower decompiler] and dump the result in the `decompiled` directory of the build tool output (`target/decompiled` for Maven for example)."
msgstr "Si estableces la propiedad `quarkus.package.fernflower.enabled` a `true` entonces Quarkus descargará e invocará el  link:https://github.com/JetBrains/intellij-community/tree/master/plugins/java-decompiler/engine[descompilador Fernflower] y volcará el resultado en el directorio `decompiled` de la salida de la herramienta de construcción ( `target/decompiled` para Maven por ejemplo)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2257
#, fuzzy
msgid "This property only works during a normal production build (i.e. not for dev mode/tests) and when `fast-jar` packaging type is used (the default behavior)."
msgstr "Esta propiedad sólo funciona durante una compilación de producción normal (es decir, no para el modo dev/prueba) y cuando se utiliza el tipo de empaquetado `fast-jar` (el comportamiento por defecto)."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2259
#, fuzzy
msgid "There are also three system properties that allow you to dump the generated/transformed classes to the filesystem and inspect them later, for example via a decompiler in your IDE."
msgstr "También hay tres propiedades del sistema que le permiten volcar las clases generadas/transformadas al sistema de archivos e inspeccionarlas más tarde, por ejemplo mediante un descompilador en su IDE."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2261
#, fuzzy
msgid "`quarkus.debug.generated-classes-dir` - to dump the generated classes, such as bean metadata"
msgstr "`quarkus.debug.generated-classes-dir` - para volcar las clases generadas, como los metadatos de los frijoles"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2262
#, fuzzy
msgid "`quarkus.debug.transformed-classes-dir` - to dump the transformed classes, e.g. Panache entities"
msgstr "`quarkus.debug.transformed-classes-dir` - para volcar las clases transformadas, por ejemplo, las entidades Panache"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2263
#, fuzzy
msgid "`quarkus.debug.generated-sources-dir` - to dump the ZIG files; ZIG file is a textual representation of the generated code that is referenced in the stack traces"
msgstr "`quarkus.debug.generated-sources-dir` - para volcar los archivos ZIG; el archivo ZIG es una representación textual del código generado al que se hace referencia en las trazas de pila"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2265
#, fuzzy
msgid "These properties are especially useful in the development mode or when running the tests where the generated/transformed classes are only held in memory in a class loader."
msgstr "Estas propiedades son especialmente útiles en el modo de desarrollo o cuando se ejecutan las pruebas en las que las clases generadas/transformadas sólo se mantienen en memoria en un cargador de clases."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2267
#, fuzzy
msgid "For example, you can specify the `quarkus.debug.generated-classes-dir` system property to have these classes written out to disk for inspection in the development mode:"
msgstr "Por ejemplo, puede especificar la propiedad del sistema `quarkus.debug.generated-classes-dir` para que estas clases se escriban en el disco para su inspección en el modo de desarrollo:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2271
#, no-wrap
msgid "./mvnw quarkus:dev -Dquarkus.debug.generated-classes-dir=dump-classes\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2274
#, fuzzy
msgid "The property value could be either an absolute path, such as `/home/foo/dump` on a Linux machine, or a path relative to the user working directory, i.e. `dump` corresponds to the `{user.dir}/target/dump` in the dev mode and `{user.dir}/dump` when running the tests."
msgstr "El valor de la propiedad puede ser una ruta absoluta, como `/home/foo/dump` en una máquina Linux, o una ruta relativa al directorio de trabajo del usuario, es decir, `dump` corresponde a `{user.dir}/target/dump` en el modo dev y `{user.dir}/dump` al ejecutar las pruebas."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2276
#, fuzzy
msgid "You should see a line in the log for each class written to the directory:"
msgstr "Debería ver una línea en el registro por cada clase escrita en el directorio:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2280
#, no-wrap
msgid "INFO  [io.qua.run.boo.StartupActionImpl] (main) Wrote /path/to/my/app/target/dump-classes/io/quarkus/arc/impl/ActivateRequestContextInterceptor_Bean.class\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2283
#, fuzzy
msgid "The property is also honored when running tests:"
msgstr "La propiedad también se respeta al ejecutar las pruebas:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2287
#, no-wrap
msgid "./mvnw clean test -Dquarkus.debug.generated-classes-dir=target/dump-generated-classes\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2290
#, fuzzy
msgid "Analogously, you can use the `quarkus.debug.transformed-classes-dir` and `quarkus.debug.generated-sources-dir` properties to dump the relevant output."
msgstr "Análogamente, puede utilizar las propiedades `quarkus.debug.transformed-classes-dir` y `quarkus.debug.transformed-classes-dir` para volcar la salida correspondiente."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2291
#, fuzzy, no-wrap
msgid "Multi-module Maven Projects and the Development Mode"
msgstr "Proyectos Maven multimódulo y el modo de desarrollo"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2296
#, fuzzy
msgid "It's not uncommon to develop an extension in a multi-module Maven project that also contains an \"example\" module.  However, if you want to run the example in the development mode then the `-DnoDeps` system property must be used in order to exclude the local project dependencies.  Otherwise, Quarkus attempts to monitor the extension classes and this may result in weird class loading issues."
msgstr "No es raro desarrollar una extensión en un proyecto Maven multimódulo que también contiene un módulo \"ejemplo\". Sin embargo, si se quiere ejecutar el ejemplo en el modo de desarrollo, se debe utilizar la propiedad del sistema `-DnoDeps` para excluir las dependencias locales del proyecto. De lo contrario, Quarkus intenta controlar las clases de la extensión y esto puede dar lugar a problemas de carga de clases extrañas."

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2300
#, no-wrap
msgid "./mvnw compile quarkus:dev -DnoDeps\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2302
#, fuzzy, no-wrap
msgid "Indexer does not include your external dependency"
msgstr "El indexador no incluye su dependencia externa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2305
#, fuzzy
msgid "Remember to add `IndexDependencyBuildItem` artifacts to your `@BuildStep`."
msgstr "Recuerda añadir los artefactos de `IndexDependencyBuildItem` a tu `@BuildStep`."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:2306
#, fuzzy, no-wrap
msgid "Sample Test Extension"
msgstr "Muestra de la extensión de la prueba"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2309
#, fuzzy
msgid "We have an extension that is used to test for regressions in the extension processing. It is located in {quarkus-tree-url}/integration-tests/test-extension/extension directory. In this section we touch on some tasks an extension author will typically need to perform using the test-extension code to illustrate how the task could be done."
msgstr "Tenemos una extensión que se utiliza para probar las regresiones en el procesamiento de la extensión. Se encuentra en el directorio {quarkus-tree-url}/core/test-extension. En esta sección tocamos algunas de las tareas que un autor de extensiones necesitará realizar típicamente usando el código de la extensión de prueba para ilustrar cómo podría hacerse la tarea."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2310
#, fuzzy, no-wrap
msgid "Features and Capabilities"
msgstr "Características y capacidades"

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:2312
#, fuzzy, no-wrap
msgid "Features"
msgstr "Características"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2316
#, fuzzy
msgid "A _feature_ represents a functionality provided by an extension.  The name of the feature gets displayed in the log during application bootstrap."
msgstr "Una _característica_ representa una funcionalidad proporcionada por una extensión. El nombre de la función se muestra en el registro durante el arranque de la aplicación."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2317
#, fuzzy, no-wrap
msgid "Example Startup Lines"
msgstr "Ejemplo de líneas de arranque"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2322
#, no-wrap
msgid ""
"2019-03-22 14:02:37,884 INFO  [io.quarkus] (main) Quarkus 999-SNAPSHOT started in 0.061s.\n"
"2019-03-22 14:02:37,884 INFO  [io.quarkus] (main) Installed features: [cdi, test-extension] <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2324
#, fuzzy
msgid "A list of features installed in the runtime image"
msgstr "Una lista de funciones instaladas en la imagen de ejecución"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2326
#, fuzzy
msgid "A feature can be registered in a xref:build-step-processors[Build Step Processors] method that produces a `FeatureBuildItem`:"
msgstr "Una característica puede ser registrada en un método  link:#Build Step Processors[[Build Step Processors]] que produce un `FeatureBuildItem`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2327
#, fuzzy, no-wrap
msgid "TestProcessor#feature()"
msgstr "TestProcessor#feature()"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2334
#, no-wrap
msgid ""
"    @BuildStep\n"
"    FeatureBuildItem feature() {\n"
"        return new FeatureBuildItem(\"test-extension\");\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2339
#, fuzzy
msgid "The name of the feature should only contain lowercase characters, words are separated by dash; e.g. `security-jpa`.  An extension should provide at most one feature and the name must be unique.  If multiple extensions register a feature of the same name the build fails."
msgstr "El nombre de la característica sólo debe contener caracteres en minúscula, las palabras se separan con un guión; por ejemplo, `security-jpa`. Una extensión debe proporcionar como máximo una característica y el nombre debe ser único. Si varias extensiones registran una característica con el mismo nombre, la construcción falla."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2343
#, fuzzy
msgid "The feature name should also map to a label in the extension's `devtools/common/src/main/filtered/extensions.json` entry so that the feature name displayed by the startup line matches a label that one can use to select the extension when creating a project using the Quarkus maven plugin as shown in this example taken from the xref:rest-json.adoc[Writing JSON REST Services] guide where the `resteasy-reactive-jackson` feature is referenced:"
msgstr "El nombre de la característica también debe asignarse a una etiqueta en la entrada de la extensión `devtools/common/src/main/filtered/extensions.json` para que el nombre de la característica mostrada por la línea de inicio coincida con una etiqueta que uno puede utilizar para seleccionar la extensión al crear un proyecto utilizando el plugin de Quarkus maven como se muestra en este ejemplo tomado de la guía  link:rest-json.html[Writing JSON REST Services] donde se hace referencia a la característica `resteasy-reactive-jackson`:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2353
#, no-wrap
msgid ""
"mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=rest-json \\\n"
"    -DclassName=\"org.acme.rest.json.FruitResource\" \\\n"
"    -Dpath=\"/fruits\" \\\n"
"    -Dextensions=\"resteasy-reactive,resteasy-reactive-jackson\"\n"
"cd rest-json\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:2355
#, fuzzy, no-wrap
msgid "Capabilities"
msgstr "Capacidades"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2361
#, fuzzy
msgid "A _capability_ represents a technical capability that can be queried by other extensions.  An extension may provide multiple capabilities and multiple extensions can provide the same capability.  By default, capabilities are not displayed to users.  Capabilities should be used when checking for the presence of an extension rather than class path based checks."
msgstr "Una _capacidad_ representa una capacidad técnica que puede ser consultada por otras extensiones. Una extensión puede proporcionar varias capacidades y varias extensiones pueden proporcionar la misma capacidad. Por defecto, las capacidades no se muestran a los usuarios. Las capacidades deben utilizarse cuando se comprueba la presencia de una extensión en lugar de las comprobaciones basadas en la ruta de clases."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2363
#, fuzzy
msgid "Capabilities can be registered in a xref:build-step-processors[Build Step Processors] method that produces a `CapabilityBuildItem`:"
msgstr "Las capacidades se pueden registrar en un método  link:#Build Step Processors[[Build Step Processors]] que produce un `CapabilityBuildItem`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2364
#, fuzzy, no-wrap
msgid "TestProcessor#capability()"
msgstr "TestProcessor#capability()"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2372
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void capabilities(BuildProducer<CapabilityBuildItem> capabilityProducer) {\n"
"        capabilityProducer.produce(new CapabilityBuildItem(\"org.acme.test-transactions\"));\n"
"        capabilityProducer.produce(new CapabilityBuildItem(\"org.acme.test-metrics\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2375
#, fuzzy
msgid "Extensions can consume registered capabilities using the `Capabilities` build item:"
msgstr "Las extensiones pueden consumir las capacidades registradas utilizando el elemento de construcción `Capabilities`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2376
#, fuzzy, no-wrap
msgid "TestProcessor#doSomeCoolStuff()"
msgstr "TestProcessor#doSomeCoolStuff()"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2385
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void doSomeCoolStuff(Capabilities capabilities) {\n"
"        if (capabilities.isPresent(Capability.TRANSACTIONS)) {\n"
"          // do something only if JTA transactions are in...\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2389
#, fuzzy
msgid "Capabilities should follow the naming conventions of Java packages; e.g. `io.quarkus.security.jpa`.  Capabilities provided by core extensions should be listed in the `io.quarkus.deployment.Capability` enum and their name should always start with the `io.quarkus` prefix."
msgstr "Las capacidades deben seguir las convenciones de nomenclatura de los paquetes Java; por ejemplo, `io.quarkus.security.jpa`. Las capacidades proporcionadas por las extensiones del núcleo deben figurar en el enum `io.quarkus.deployment.Capability` y su nombre debe comenzar siempre con el prefijo `io.quarkus`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2390
#, fuzzy, no-wrap
msgid "Bean Defining Annotations"
msgstr "Anotaciones de definición de frijoles"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2392
#, fuzzy
msgid "The CDI layer processes CDI beans that are either explicitly registered or that it discovers based on bean defining annotations as defined in https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[2.5.1. Bean defining annotations]. You can expand this set of annotations to include annotations your extension processes using a `BeanDefiningAnnotationBuildItem` as shown in this `TestProcessor#registerBeanDefinningAnnotations` example:"
msgstr "La capa CDI procesa los beans CDI que se registran explícitamente o que descubre basándose en las anotaciones de definición de beans definidas en  link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[2.5.1. Anotaciones] de definición de beans. Puedes ampliar este conjunto de anotaciones para incluir anotaciones que tu extensión procesa utilizando un `BeanDefiningAnnotationBuildItem` como se muestra en este ejemplo de `TestProcessor#registerBeanDefinningAnnotations`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2393
#, fuzzy, no-wrap
msgid "Register a Bean Defining Annotation"
msgstr "Registrar una anotación de definición de frijoles"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2399
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import org.jboss.jandex.DotName;\n"
"import io.quarkus.extest.runtime.TestAnnotation;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2403
#, no-wrap
msgid ""
"public final class TestProcessor {\n"
"    static DotName TEST_ANNOTATION = DotName.createSimple(TestAnnotation.class.getName());\n"
"    static DotName TEST_ANNOTATION_SCOPE = DotName.createSimple(ApplicationScoped.class.getName());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2405
#: upstream/_guides/writing-extensions.adoc:2431
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2413
#, no-wrap
msgid ""
"    @BuildStep\n"
"    BeanDefiningAnnotationBuildItem registerX() {\n"
"        <1>\n"
"        return new BeanDefiningAnnotationBuildItem(TEST_ANNOTATION, TEST_ANNOTATION_SCOPE);\n"
"    }\n"
"...\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2423
#, no-wrap
msgid ""
"/**\n"
" * Marker annotation for test configuration target beans\n"
" */\n"
"@Target({ TYPE })\n"
"@Retention(RUNTIME)\n"
"@Documented\n"
"@Inherited\n"
"public @interface TestAnnotation {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2429
#, no-wrap
msgid ""
"/**\n"
" * A sample bean\n"
" */\n"
"@TestAnnotation <2>\n"
"public class ConfiguredBean implements IConfigConsumer {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2433
#, fuzzy
msgid "Register the annotation class and CDI default scope using the Jandex `DotName` class."
msgstr "Registre la clase de anotación y el ámbito por defecto de CDI utilizando la clase Jandex `DotName`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2434
#, fuzzy
msgid "`ConfiguredBean` will be processed by the CDI layer the same as a bean annotated with the CDI standard @ApplicationScoped."
msgstr "`ConfiguredBean` será procesado por la capa CDI igual que un bean anotado con el estándar CDI @ApplicationScoped."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2436
#, fuzzy, no-wrap
msgid "Parsing Config to Objects"
msgstr "Parsing Config to Objects"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2439
#, fuzzy
msgid "One of the main things an extension is likely to do is completely separate the configuration phase of behavior from the runtime phase.  Frameworks often do parsing/load of configuration on startup that can be done during build time to both reduce the runtime dependencies on frameworks like xml parsers as well as reducing the startup time the parsing incurs."
msgstr "Una de las principales cosas que puede hacer una extensión es separar completamente la fase de configuración del comportamiento de la fase de ejecución. Los frameworks a menudo hacen el análisis/carga de la configuración en el inicio que se puede hacer durante el tiempo de construcción tanto para reducir las dependencias en tiempo de ejecución de los frameworks como los analizadores xml, así como para reducir el tiempo de inicio en el que incurre el análisis."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2441
#, fuzzy
msgid "An example of parsing an XML config file using JAXB is shown in the `TestProcessor#parseServiceXmlConfig` method:"
msgstr "Un ejemplo de análisis de un archivo de configuración XML utilizando JAXB se muestra en el método `TestProcessor#parseServiceXmlConfig`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2441
#, fuzzy, no-wrap
msgid "Parsing an XML Configuration into Runtime XmlConfig Instance"
msgstr "Análisis de una configuración XML en una instancia XmlConfig en tiempo de ejecución"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2458
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    RuntimeServiceBuildItem parseServiceXmlConfig(TestRecorder recorder) throws JAXBException {\n"
"        RuntimeServiceBuildItem serviceBuildItem = null;\n"
"        JAXBContext context = JAXBContext.newInstance(XmlConfig.class);\n"
"        Unmarshaller unmarshaller = context.createUnmarshaller();\n"
"        InputStream is = getClass().getResourceAsStream(\"/config.xml\"); <1>\n"
"        if (is != null) {\n"
"            log.info(\"Have XmlConfig, loading\");\n"
"            XmlConfig config = (XmlConfig) unmarshaller.unmarshal(is); <2>\n"
"...\n"
"        }\n"
"        return serviceBuildItem;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2461
#, fuzzy
msgid "Look for a config.xml classpath resource"
msgstr "Busca un recurso config.xml classpath"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2462
#, fuzzy
msgid "If found, parse using JAXB context for `XmlConfig.class`"
msgstr "Si se encuentra, se analiza utilizando el contexto JAXB para `XmlConfig.class`"

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:2466
#, fuzzy
msgid "If there was no /config.xml resource available in the build environment, then a null `RuntimeServiceBuildItem` would be returned and no subsequent logic based on a `RuntimeServiceBuildItem` being produced would execute."
msgstr "Si no hubiera ningún recurso /config.xml disponible en el entorno de compilación, se devolvería un `RuntimeServiceBuildItem` nulo y no se ejecutaría ninguna lógica posterior basada en la producción de un `RuntimeServiceBuildItem`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2469
#, fuzzy
msgid "Typically, one is loading a configuration to create some runtime component/service as `parseServiceXmlConfig` is doing. We will come back to the rest of the behavior in `parseServiceXmlConfig` in the following xref:manage-non-cdi-service[Manage Non-CDI Service] section."
msgstr "Típicamente uno está cargando una configuración para crear algún componente/servicio en tiempo de ejecución como lo está haciendo `parseServiceXmlConfig`. Volveremos al resto del comportamiento en `parseServiceXmlConfig` en la siguiente sección  link:#Manage Non-CDI Service[[Manage Non-CDI Service]]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2471
#, fuzzy
msgid "If for some reason you need to parse the config and use it in other build steps in an extension processor, you would need to create an `XmlConfigBuildItem` to pass the parsed XmlConfig instance around."
msgstr "Si por alguna razón necesitas analizar la configuración y usarla en otros pasos de construcción en un procesador de extensión, necesitarás crear un `XmlConfigBuildItem` para pasar la instancia XmlConfig analizada."

#. type: delimited block =
#: upstream/_guides/writing-extensions.adoc:2476
#, fuzzy
msgid "If you look at the XmlConfig code you will see that it does carry around the JAXB annotations. If you don't want these in the runtime image, you could clone the XmlConfig instance into some POJO object graph and then replace XmlConfig with the POJO class.  We will do this in xref:replacing-classes-in-native-image[Replacing Classes in the Native Image]."
msgstr "Si miras el código de XmlConfig verás que sí lleva las anotaciones JAXB. Si no quieres estas en la imagen en tiempo de ejecución, podrías clonar la instancia de XmlConfig en algún gráfico de objetos POJO y luego reemplazar XmlConfig con la clase POJO. Haremos esto en  link:#Replacing Classes in the Native Image[[Reemplazar clases en la imagen nativa]]."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2478
#, fuzzy, no-wrap
msgid "Scanning Deployments Using Jandex"
msgstr "Escaneo de los despliegues con Jandex"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2480
#, fuzzy
msgid "If your extension defines annotations or interfaces that mark beans needing to be processed, you can locate these beans using the Jandex API, a Java annotation indexer and offline reflection library. The following `TestProcessor#scanForBeans` method shows how to find the beans annotated with our `@TestAnnotation` that also implement the `IConfigConsumer` interface:"
msgstr "Si tu extensión define anotaciones o interfaces que marcan beans que necesitan ser procesados, puedes localizar estos beans usando la API Jandex, un indexador de anotaciones Java y una librería de reflexión offline. El siguiente método `TestProcessor#scanForBeans` muestra cómo encontrar los beans anotados con nuestro `@TestAnnotation` que también implementan la interfaz `IConfigConsumer`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2481
#, fuzzy, no-wrap
msgid "Example Jandex Usage"
msgstr "Ejemplo de uso de Jandex"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2486
#, no-wrap
msgid ""
"    static DotName TEST_ANNOTATION = DotName.createSimple(TestAnnotation.class.getName());\n"
"...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2509
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    void scanForBeans(TestRecorder recorder, BeanArchiveIndexBuildItem beanArchiveIndex, <1>\n"
"            BuildProducer<TestBeanBuildItem> testBeanProducer) {\n"
"        IndexView indexView = beanArchiveIndex.getIndex(); <2>\n"
"        Collection<AnnotationInstance> testBeans = indexView.getAnnotations(TEST_ANNOTATION); <3>\n"
"        for (AnnotationInstance ann : testBeans) {\n"
"            ClassInfo beanClassInfo = ann.target().asClass();\n"
"            try {\n"
"                boolean isConfigConsumer = beanClassInfo.interfaceNames()\n"
"                        .stream()\n"
"                        .anyMatch(dotName -> dotName.equals(DotName.createSimple(IConfigConsumer.class.getName()))); <4>\n"
"                if (isConfigConsumer) {\n"
"                    Class<IConfigConsumer> beanClass = (Class<IConfigConsumer>) Class.forName(beanClassInfo.name().toString(), false, Thread.currentThread().getContextClassLoader());\n"
"                    testBeanProducer.produce(new TestBeanBuildItem(beanClass)); <5>\n"
"                    log.infof(\"Configured bean: %s\", beanClass);\n"
"                }\n"
"            } catch (ClassNotFoundException e) {\n"
"                log.warn(\"Failed to load bean class\", e);\n"
"            }\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2511
#, fuzzy
msgid "Depend on a `BeanArchiveIndexBuildItem` to have the build step be run after the deployment has been indexed."
msgstr "Depende de un `BeanArchiveIndexBuildItem` para que el paso de construcción se ejecute después de que el despliegue haya sido indexado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2512
#, fuzzy
msgid "Retrieve the index."
msgstr "Recuperar el índice."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2513
#, fuzzy
msgid "Find all beans annotated with `@TestAnnotation`."
msgstr "Encuentre todas las judías anotadas con `@TestAnnotation`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2514
#, fuzzy
msgid "Determine which of these beans also has the `IConfigConsumer` interface."
msgstr "Determine cuál de estos frijoles tiene también la interfaz `IConfigConsumer`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2515
#, fuzzy
msgid "Save the bean class in a `TestBeanBuildItem` for use in a latter RUNTIME_INIT build step that will interact with the bean instances."
msgstr "Guarda la clase bean en un `TestBeanBuildItem` para utilizarla en un paso de construcción posterior RUNTIME_INIT que interactuará con las instancias del bean."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2516
#, fuzzy, no-wrap
msgid "Interacting With Extension Beans"
msgstr "Interacción con las extensiones"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2518
#, fuzzy
msgid "You can use the `io.quarkus.arc.runtime.BeanContainer` interface to interact with your extension beans. The following `configureBeans` methods illustrate interacting with the beans scanned for in the previous section:"
msgstr "Puedes utilizar la interfaz `io.quarkus.arc.runtime.BeanContainer` para interactuar con tus beans de extensión. Los siguientes métodos de `configureBeans` ilustran la interacción con los beans explorados en la sección anterior:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2519
#, fuzzy, no-wrap
msgid "Using CDI BeanContainer Interface"
msgstr "Uso de la interfaz CDI BeanContainer"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2528
#, no-wrap
msgid ""
"// TestProcessor#configureBeans\n"
"    @BuildStep\n"
"    @Record(RUNTIME_INIT)\n"
"    void configureBeans(TestRecorder recorder, List<TestBeanBuildItem> testBeans, <1>\n"
"            BeanContainerBuildItem beanContainer, <2>\n"
"            TestRunTimeConfig runTimeConfig) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2534
#, no-wrap
msgid ""
"        for (TestBeanBuildItem testBeanBuildItem : testBeans) {\n"
"            Class<IConfigConsumer> beanClass = testBeanBuildItem.getConfigConsumer();\n"
"            recorder.configureBeans(beanContainer.getValue(), beanClass, buildAndRunTimeConfig, runTimeConfig); <3>\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2544
#, no-wrap
msgid ""
"// TestRecorder#configureBeans\n"
"    public void configureBeans(BeanContainer beanContainer, Class<IConfigConsumer> beanClass,\n"
"            TestBuildAndRunTimeConfig buildTimeConfig,\n"
"            TestRunTimeConfig runTimeConfig) {\n"
"        log.info(\"Begin BeanContainerListener callback\\n\");\n"
"        IConfigConsumer instance = beanContainer.beanInstance(beanClass); <4>\n"
"        instance.loadConfig(buildTimeConfig, runTimeConfig); <5>\n"
"        log.infof(\"configureBeans, instance=%s\\n\", instance);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2546
#, fuzzy
msgid "Consume the `TestBeanBuildItem`s produced from the scanning build step."
msgstr "Consume el `TestBeanBuildItem` producido desde el paso de construcción de escaneo."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2547
#, fuzzy
msgid "Consume the `BeanContainerBuildItem` to order this build step to run after the CDI bean container has been created."
msgstr "Consume el `BeanContainerBuildItem` para ordenar que este paso de construcción se ejecute después de que se haya creado el contenedor de frijoles CDI."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2548
#, fuzzy
msgid "Call the runtime recorder to record the bean interactions."
msgstr "Llama al grabador de tiempo de ejecución para registrar las interacciones de los frijoles."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2549
#, fuzzy
msgid "Runtime recorder retrieves the bean using its type."
msgstr "El registrador de tiempo de ejecución recupera el frijol utilizando su tipo."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2550
#, fuzzy
msgid "Runtime recorder invokes the `IConfigConsumer#loadConfig(...)` method passing in the configuration objects with runtime information."
msgstr "El grabador de tiempo de ejecución invoca el método `IConfigConsumer#loadConfig(…​)` pasando los objetos de configuración con información de tiempo de ejecución."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2552
#, fuzzy, no-wrap
msgid "Manage Non-CDI Service"
msgstr "Gestionar el servicio no CDI"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2557
#, fuzzy
msgid "A common purpose for an extension is to integrate a non-CDI aware service into the CDI based Quarkus runtime.  Step 1 of this task is to load any configuration needed in a STATIC_INIT build step as we did in xref:parsing-config-to-objects[Parsing Config to Objects].  Now we need to create an instance of the service using the configuration.  Let's return to the `TestProcessor#parseServiceXmlConfig` method to see how this can be done."
msgstr "Un propósito común para una extensión es integrar un servicio no consciente de CDI en el tiempo de ejecución de Quarkus basado en CDI. El paso 1 de esta tarea es cargar cualquier configuración necesaria en un paso de construcción STATIC_INIT como hicimos en  link:#Parsing Config to Objects[[Parsing Config to Objects]]. Ahora tenemos que crear una instancia del servicio utilizando la configuración. Volvamos al método `TestProcessor#parseServiceXmlConfig` para ver cómo se puede hacer esto."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2558
#, fuzzy, no-wrap
msgid "Creating a Non-CDI Service"
msgstr "Creación de un servicio no CDI"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2578
#, no-wrap
msgid ""
"// TestProcessor#parseServiceXmlConfig\n"
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    RuntimeServiceBuildItem parseServiceXmlConfig(TestRecorder recorder) throws JAXBException {\n"
"        RuntimeServiceBuildItem serviceBuildItem = null;\n"
"        JAXBContext context = JAXBContext.newInstance(XmlConfig.class);\n"
"        Unmarshaller unmarshaller = context.createUnmarshaller();\n"
"        InputStream is = getClass().getResourceAsStream(\"/config.xml\");\n"
"        if (is != null) {\n"
"            log.info(\"Have XmlConfig, loading\");\n"
"            XmlConfig config = (XmlConfig) unmarshaller.unmarshal(is);\n"
"            log.info(\"Loaded XmlConfig, creating service\");\n"
"            RuntimeValue<RuntimeXmlConfigService> service = recorder.initRuntimeService(config); //<1>\n"
"            serviceBuildItem = new RuntimeServiceBuildItem(service); //<3>\n"
"        }\n"
"        return serviceBuildItem;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2584
#, no-wrap
msgid ""
"// TestRecorder#initRuntimeService\n"
"    public RuntimeValue<RuntimeXmlConfigService> initRuntimeService(XmlConfig config) {\n"
"        RuntimeXmlConfigService service = new RuntimeXmlConfigService(config); //<2>\n"
"        return new RuntimeValue<>(service);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2588
#, no-wrap
msgid ""
"// RuntimeServiceBuildItem\n"
"    final public class RuntimeServiceBuildItem extends SimpleBuildItem {\n"
"    private RuntimeValue<RuntimeXmlConfigService> service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2592
#, no-wrap
msgid ""
"    public RuntimeServiceBuildItem(RuntimeValue<RuntimeXmlConfigService> service) {\n"
"        this.service = service;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2597
#, no-wrap
msgid ""
"    public RuntimeValue<RuntimeXmlConfigService> getService() {\n"
"        return service;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2599
#, fuzzy
msgid "Call into the runtime recorder to record the creation of the service."
msgstr "Llama a la grabadora de tiempo de ejecución para registrar la creación del servicio."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2600
#, fuzzy
msgid "Using the parsed `XmlConfig` instance, create an instance of `RuntimeXmlConfigService` and wrap it in a `RuntimeValue`. Use a `RuntimeValue` wrapper for non-interface objects that are non-proxiable."
msgstr "Utilizando la instancia de `XmlConfig` analizada, cree una instancia de `RuntimeXmlConfigService` y envuélvala en una `RuntimeValue`. Utilice una envoltura de `RuntimeValue` para los objetos que no son de interfaz y que no son proxibles."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2601
#, fuzzy
msgid "Wrap the return service value in a `RuntimeServiceBuildItem` for use in a RUNTIME_INIT build step that will start the service."
msgstr "Envuelva el valor del servicio de retorno en un `RuntimeServiceBuildItem` para su uso en un paso de construcción RUNTIME_INIT que iniciará el servicio."

#. type: Title =====
#: upstream/_guides/writing-extensions.adoc:2603
#, fuzzy, no-wrap
msgid "Starting a Service"
msgstr "Iniciar un servicio"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2606
#, fuzzy
msgid "Now that you have recorded the creation of a service during the build phase, you need to record how to start the service at runtime during booting.  You do this with a RUNTIME_INIT build step as shown in the `TestProcessor#startRuntimeService` method."
msgstr "Ahora que has registrado la creación de un servicio durante la fase de construcción, necesitas registrar cómo iniciar el servicio en tiempo de ejecución durante el arranque. Esto se hace con un paso de construcción RUNTIME_INIT como se muestra en el método `TestProcessor#startRuntimeService`."

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2607
#, fuzzy, no-wrap
msgid "Starting/Stopping a Non-CDI Service"
msgstr "Inicio/parada de un servicio no CDI"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2623
#, no-wrap
msgid ""
"// TestProcessor#startRuntimeService\n"
"    @BuildStep\n"
"    @Record(RUNTIME_INIT)\n"
"    ServiceStartBuildItem startRuntimeService(TestRecorder recorder, ShutdownContextBuildItem shutdownContextBuildItem , // <1>\n"
"            RuntimeServiceBuildItem serviceBuildItem) throws IOException { // <2>\n"
"        if (serviceBuildItem != null) {\n"
"            log.info(\"Registering service start\");\n"
"            recorder.startRuntimeService(shutdownContextBuildItem, serviceBuildItem.getService()); // <3>\n"
"        } else {\n"
"            log.info(\"No RuntimeServiceBuildItem seen, check config.xml\");\n"
"        }\n"
"        return new ServiceStartBuildItem(\"RuntimeXmlConfigService\"); //<4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2631
#, no-wrap
msgid ""
"// TestRecorder#startRuntimeService\n"
"    public void startRuntimeService(ShutdownContext shutdownContext, RuntimeValue<RuntimeXmlConfigService> runtimeValue)\n"
"            throws IOException {\n"
"        RuntimeXmlConfigService service = runtimeValue.getValue();\n"
"        service.startService(); //<5>\n"
"        shutdownContext.addShutdownTask(service::stopService); //<6>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2633
#, fuzzy
msgid "We consume a ShutdownContextBuildItem to register the service shutdown."
msgstr "Consumimos un ShutdownContextBuildItem para registrar el cierre del servicio."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2634
#, fuzzy
msgid "We consume the previously initialized service captured in `RuntimeServiceBuildItem`."
msgstr "Consumimos el servicio previamente inicializado capturado en `RuntimeServiceBuildItem`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2635
#, fuzzy
msgid "Call the runtime recorder to record the service start invocation."
msgstr "Llama a la grabadora de tiempo de ejecución para grabar la invocación del inicio del servicio."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2636
#, fuzzy
msgid "Produce a `ServiceStartBuildItem` to indicate the startup of a service. See xref:startup-shutdown-events[Startup and Shutdown Events] for details."
msgstr "Produce un `ServiceStartBuildItem` para indicar el inicio de un servicio. Consulte  link:#Startup and Shutdown Events[[Eventos de inicio y cierre]] para obtener más detalles."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2637
#, fuzzy
msgid "Runtime recorder retrieves the service instance reference and calls its `startService` method."
msgstr "El registrador de tiempo de ejecución recupera la referencia de la instancia del servicio y llama a su método `startService`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2638
#, fuzzy
msgid "Runtime recorder registers an invocation of the service instance `stopService` method with the Quarkus `ShutdownContext`."
msgstr "El registrador de tiempo de ejecución registra una invocación del método de la instancia de servicio `stopService` con el Quarkus `ShutdownContext`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2641
#, fuzzy
msgid "The code for the `RuntimeXmlConfigService` can be viewed here: {quarkus-blob-url}/integration-tests/test-extension/extension/runtime/src/main/java/io/quarkus/extest/runtime/RuntimeXmlConfigService.java[RuntimeXmlConfigService.java]"
msgstr "El código de `RuntimeXmlConfigService` puede verse aquí: {quarkus-blob-url}/core/test-extension/runtime/src/main/java/io/quarkus/extest/runtime/RuntimeXmlConfigService.java[RuntimeXmlConfigService.java]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2643
#, fuzzy
msgid "The testcase for validating that the `RuntimeXmlConfigService` has started can be found in the `testRuntimeXmlConfigService` test of `ConfiguredBeanTest` and `NativeImageIT`."
msgstr "El caso de prueba para validar que el `RuntimeXmlConfigService` se ha iniciado se encuentra en la prueba `testRuntimeXmlConfigService` de `ConfiguredBeanTest` y `NativeImageIT`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2645
#, fuzzy, no-wrap
msgid "Startup and Shutdown Events"
msgstr "Eventos de arranque y apagado"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2648
#, fuzzy
msgid "The Quarkus container supports startup and shutdown lifecycle events to notify components of the container startup and shutdown. There are CDI events fired that components can observe are illustrated in this example:"
msgstr "El contenedor Quarkus soporta eventos del ciclo de vida de inicio y cierre para notificar a los componentes del inicio y cierre del contenedor. Hay eventos CDI disparados que los componentes pueden observar se ilustran en este ejemplo:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2649
#, fuzzy, no-wrap
msgid "Observing Container Startup"
msgstr "Observación de la puesta en marcha del contenedor"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2654
#, no-wrap
msgid ""
"import io.quarkus.runtime.ShutdownEvent;\n"
"import io.quarkus.runtime.StartupEvent;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2663
#, no-wrap
msgid ""
"public class SomeBean {\n"
"    /**\n"
"     * Called when the runtime has started\n"
"     * @param event\n"
"     */\n"
"    void onStart(@Observes StartupEvent event) { // <1>\n"
"        System.out.printf(\"onStart, event=%s%n\", event);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2672
#, no-wrap
msgid ""
"    /**\n"
"     * Called when the runtime is shutting down\n"
"     * @param event\n"
"    */\n"
"    void onStop(@Observes ShutdownEvent event) { // <2>\n"
"        System.out.printf(\"onStop, event=%s%n\", event);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2674
#, fuzzy
msgid "Observe a `StartupEvent` to be notified the runtime has started."
msgstr "Observe un `StartupEvent` para ser notificado de que el tiempo de ejecución ha comenzado."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2675
#, fuzzy
msgid "Observe a `ShutdownEvent` to be notified when the runtime is going to shut down."
msgstr "Observe un `ShutdownEvent` para ser notificado cuando el tiempo de ejecución se va a apagar."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2680
#, fuzzy
msgid "What is the relevance of startup and shutdown events for extension authors? We have already seen the use of a `ShutdownContext` to register a callback to perform shutdown tasks in the xref:starting-service[Starting a Service] section.  These shutdown tasks would be called after a `ShutdownEvent` had been sent."
msgstr "¿Qué importancia tienen los eventos de inicio y cierre para los autores de extensiones? Ya hemos visto el uso de un `ShutdownContext` para registrar una devolución de llamada para realizar tareas de apagado en la sección  link:#Starting a Service[[Iniciar un servicio]]. Estas tareas de apagado se llamarían después de enviar un `ShutdownEvent`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2686
#, fuzzy
msgid "A `StartupEvent` is fired after all `io.quarkus.deployment.builditem.ServiceStartBuildItem` producers have been consumed.  The implication of this is that if an extension has services that application components would expect to have been started when they observe a `StartupEvent`, the build steps that invoke the runtime code to start those services needs to produce a `ServiceStartBuildItem` to ensure that the runtime code is run before the `StartupEvent` is sent. Recall that we saw the production of a `ServiceStartBuildItem` in the previous section, and it is repeated here for clarity:"
msgstr "Un `StartupEvent` se dispara después de que se hayan consumido todos los productores de `io.quarkus.deployment.builditem.ServiceStartBuildItem`. La implicación de esto es que si una extensión tiene servicios que los componentes de la aplicación esperarían haber iniciado cuando observan un `StartupEvent`, los pasos de construcción que invocan el código de tiempo de ejecución para iniciar esos servicios necesita producir un `ServiceStartBuildItem` para asegurar que el código de tiempo de ejecución se ejecuta antes de que se envíe el `StartupEvent`. Recordemos que vimos la producción de un `ServiceStartBuildItem` en la sección anterior, y se repite aquí para mayor claridad:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2687
#, fuzzy, no-wrap
msgid "Example of Producing a ServiceStartBuildItem"
msgstr "Ejemplo de producción de un ServiceStartBuildItem"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2698
#, no-wrap
msgid ""
"// TestProcessor#startRuntimeService\n"
"    @BuildStep\n"
"    @Record(RUNTIME_INIT)\n"
"    ServiceStartBuildItem startRuntimeService(TestRecorder recorder, ShutdownContextBuildItem shutdownContextBuildItem,\n"
"            RuntimeServiceBuildItem serviceBuildItem) throws IOException {\n"
"...\n"
"        return new ServiceStartBuildItem(\"RuntimeXmlConfigService\"); //<1>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2700
#, fuzzy
msgid "Produce a `ServiceStartBuildItem` to indicate that this is a service starting step that needs to run before the `StartupEvent` is sent."
msgstr "Produce un `ServiceStartBuildItem` para indicar que se trata de un paso de inicio de servicio que debe ejecutarse antes de enviar el `StartupEvent`."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2701
#, fuzzy, no-wrap
msgid "Register Resources for Use in Native Image"
msgstr "Registrar recursos para su uso en la imagen nativa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2703
#, fuzzy
msgid "Not all configuration or resources can be consumed at build time. If you have classpath resources that the runtime needs to access, you need to inform the build phase that these resources need to be copied into the native image. This is done by producing one or more `NativeImageResourceBuildItem` or `NativeImageResourceBundleBuildItem` in the case of resource bundles. Examples of this are shown in this sample `registerNativeImageResources` build step:"
msgstr "No toda la configuración o los recursos pueden ser consumidos en tiempo de construcción. Si tienes recursos de classpath a los que el tiempo de ejecución necesita acceder, necesitas informar a la fase de compilación que estos recursos necesitan ser copiados en la imagen nativa. Esto se hace produciendo uno o más `NativeImageResourceBuildItem` o `NativeImageResourceBundleBuildItem` en el caso de los paquetes de recursos. Ejemplos de esto se muestran en este paso de construcción de ejemplo `registerNativeImageResources`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2704
#, fuzzy, no-wrap
msgid "Registering Resources and ResourceBundles"
msgstr "Registro de recursos y ResourceBundles"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2708
#: upstream/_guides/writing-extensions.adoc:2732
#: upstream/_guides/writing-extensions.adoc:2762
#: upstream/_guides/writing-extensions.adoc:2791
#, no-wrap
msgid "public final class MyExtProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2712
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void registerNativeImageResources(BuildProducer<NativeImageResourceBuildItem> resource, BuildProducer<NativeImageResourceBundleBuildItem> resourceBundle) {\n"
"        resource.produce(new NativeImageResourceBuildItem(\"/security/runtime.keys\")); //<1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2715
#, no-wrap
msgid ""
"        resource.produce(new NativeImageResourceBuildItem(\n"
"                \"META-INF/my-descriptor.xml\")); //<2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2719
#, no-wrap
msgid ""
"        resourceBundle.produce(new NativeImageResourceBuildItem(\"jakarta.xml.bind.Messages\")); //<3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2721
#, fuzzy
msgid "Indicate that the /security/runtime.keys classpath resource should be copied into native image."
msgstr "Indicar que el recurso classpath /security/runtime.keys debe ser copiado en la imagen nativa."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2722
#, fuzzy
msgid "Indicate that the `META-INF/my-descriptor.xml` resource should be copied into native image"
msgstr "Indicar que el recurso `META-INF/my-descriptor.xml` debe ser copiado en la imagen nativa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2723
#, fuzzy
msgid "Indicate that the \"jakarta.xml.bind.Messages\" resource bundle should be copied into native image."
msgstr "Indicar que el paquete de recursos \"javax.xml.bind.Messages\" debe ser copiado en la imagen nativa."

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2724
#, fuzzy, no-wrap
msgid "Service files"
msgstr "Archivos de servicio"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2728
#, fuzzy
msgid "If you are using `META-INF/services` files you need to register the files as resources so that your native image can find them, but you also need to register each listed class for reflection so they can be instantiated or inspected at run-time:"
msgstr "Si está utilizando archivos `META-INF/services` necesita registrar los archivos como recursos para que su imagen nativa pueda encontrarlos, pero también necesita registrar cada clase listada para la reflexión para que puedan ser instanciados o inspeccionados en tiempo de ejecución:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2736
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void registerNativeImageResources(BuildProducer<ServiceProviderBuildItem> services) {\n"
"        String service = \"META-INF/services/\" + io.quarkus.SomeService.class.getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2741
#, no-wrap
msgid ""
"        // find out all the implementation classes listed in the service files\n"
"        Set<String> implementations =\n"
"            ServiceUtil.classNamesNamedIn(Thread.currentThread().getContextClassLoader(),\n"
"                                          service);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2749
#, no-wrap
msgid ""
"        // register every listed implementation class so they can be instantiated\n"
"        // in native-image at run-time\n"
"        services.produce(\n"
"            new ServiceProviderBuildItem(io.quarkus.SomeService.class.getName(),\n"
"                                         implementations.toArray(new String[0])));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2755
#, fuzzy
msgid "`ServiceProviderBuildItem` takes a list of service implementation classes as parameters: if you are not reading them from the service file, make sure that they correspond to the service file contents because the service file will still be read and used at run-time. This is not a substitute for writing a service file."
msgstr "`ServiceProviderBuildItem` toma una lista de clases de implementación de servicios como parámetros: si no los está leyendo desde el archivo de servicio, asegúrese de que se corresponden con el contenido del archivo de servicio porque el archivo de servicio seguirá siendo leído y utilizado en tiempo de ejecución. Esto no sustituye a la escritura de un archivo de servicio."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2758
#, fuzzy
msgid "This only registers the implementation classes for instantiation via reflection (you will not be able to inspect its fields and methods). If you need to do that, you can do it this way:"
msgstr "Esto sólo registra las clases de implementación para la instanciación a través de la reflexión (no podrás inspeccionar sus campos y métodos). Si necesitas hacerlo, puedes hacerlo de esta manera:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2767
#, no-wrap
msgid ""
"    @BuildStep\n"
"    void registerNativeImageResources(BuildProducer<NativeImageResourceBuildItem> resource,\n"
"                                     BuildProducer<ReflectiveClassBuildItem> reflectionClasses) {\n"
"        String service = \"META-INF/services/\" + io.quarkus.SomeService.class.getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2770
#, no-wrap
msgid ""
"        // register the service file so it is visible in native-image\n"
"        resource.produce(new NativeImageResourceBuildItem(service));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2780
#, no-wrap
msgid ""
"        // register every listed implementation class so they can be inspected/instantiated\n"
"        // in native-image at run-time\n"
"        Set<String> implementations =\n"
"            ServiceUtil.classNamesNamedIn(Thread.currentThread().getContextClassLoader(),\n"
"                                          service);\n"
"        reflectionClasses.produce(\n"
"            new ReflectiveClassBuildItem(true, true, implementations.toArray(new String[0])));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2784
#, fuzzy
msgid "While this is the easiest way to get your services running natively, it's less efficient than scanning the implementation classes at build time and generating code that registers them at static-init time instead of relying on reflection."
msgstr "Aunque esta es la forma más fácil de hacer que tus servicios se ejecuten de forma nativa, es menos eficiente que escanear las clases de implementación en tiempo de compilación y generar código que las registre en tiempo de inicio estático en lugar de depender de la reflexión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2787
#, fuzzy
msgid "You can achieve that by adapting the previous build step to use a static-init recorder instead of registering classes for reflection:"
msgstr "Puedes conseguirlo adaptando el paso de compilación anterior para utilizar un registrador static-init en lugar de registrar las clases para la reflexión:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2797
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(ExecutionTime.STATIC_INIT)\n"
"    void registerNativeImageResources(RecorderContext recorderContext,\n"
"                                     SomeServiceRecorder recorder) {\n"
"        String service = \"META-INF/services/\" + io.quarkus.SomeService.class.getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2806
#, no-wrap
msgid ""
"        // read the implementation classes\n"
"        Collection<Class<? extends io.quarkus.SomeService>> implementationClasses = new LinkedHashSet<>();\n"
"        Set<String> implementations = ServiceUtil.classNamesNamedIn(Thread.currentThread().getContextClassLoader(),\n"
"                                                                    service);\n"
"        for(String implementation : implementations) {\n"
"            implementationClasses.add((Class<? extends io.quarkus.SomeService>)\n"
"                recorderContext.classProxy(implementation));\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2811
#, no-wrap
msgid ""
"        // produce a static-initializer with those classes\n"
"        recorder.configure(implementationClasses);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2814
#, no-wrap
msgid ""
"@Recorder\n"
"public class SomeServiceRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2819
#, no-wrap
msgid ""
"    public void configure(List<Class<? extends io.quarkus.SomeService>> implementations) {\n"
"        // configure our service statically\n"
"        SomeServiceProvider serviceProvider = SomeServiceProvider.instance();\n"
"        SomeServiceBuilder builder = serviceProvider.getSomeServiceBuilder();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2829
#, no-wrap
msgid ""
"        List<io.quarkus.SomeService> services = new ArrayList<>(implementations.size());\n"
"        // instantiate the service implementations\n"
"        for (Class<? extends io.quarkus.SomeService> implementationClass : implementations) {\n"
"            try {\n"
"                services.add(implementationClass.getConstructor().newInstance());\n"
"            } catch (Exception e) {\n"
"                throw new IllegalArgumentException(\"Unable to instantiate service \" + implementationClass, e);\n"
"            }\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2833
#, no-wrap
msgid ""
"        // build our service\n"
"        builder.withSomeServices(implementations.toArray(new io.quarkus.SomeService[0]));\n"
"        ServiceManager serviceManager = builder.build();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2838
#, no-wrap
msgid ""
"        // register it\n"
"        serviceProvider.registerServiceManager(serviceManager, Thread.currentThread().getContextClassLoader());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2841
#, fuzzy, no-wrap
msgid "Object Substitution"
msgstr "Sustitución de objetos"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2843
#, fuzzy
msgid "Objects created during the build phase that are passed into the runtime need to have a default constructor in order for them to be created and configured at startup of the runtime from the build time state. If an object does not have a default constructor you will see an error similar to the following during generation of the augmented artifacts:"
msgstr "Los objetos creados durante la fase de construcción que se pasan al tiempo de ejecución deben tener un constructor por defecto para que se creen y configuren al iniciar el tiempo de ejecución desde el estado del tiempo de construcción. Si un objeto no tiene un constructor por defecto, verá un error similar al siguiente durante la generación de los artefactos aumentados:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2844
#, fuzzy, no-wrap
msgid "DSAPublicKey Serialization Error"
msgstr "Error de serialización de DSAPublicKey"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2853
#, no-wrap
msgid ""
"\t[error]: Build step io.quarkus.deployment.steps.MainClassBuildStep#build threw an exception: java.lang.RuntimeException: Unable to serialize objects of type class sun.security.provider.DSAPublicKeyImpl to bytecode as it has no default constructor\n"
"\tat io.quarkus.builder.Execution.run(Execution.java:123)\n"
"\tat io.quarkus.builder.BuildExecutionBuilder.execute(BuildExecutionBuilder.java:136)\n"
"\tat io.quarkus.deployment.QuarkusAugmentor.run(QuarkusAugmentor.java:110)\n"
"\tat io.quarkus.runner.RuntimeRunner.run(RuntimeRunner.java:99)\n"
"\t... 36 more\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2856
#, fuzzy
msgid "There is a `io.quarkus.runtime.ObjectSubstitution` interface that can be implemented to tell Quarkus how to handle such classes. An example implementation for the `DSAPublicKey` is shown here:"
msgstr "Hay una interfaz `io.quarkus.runtime.ObjectSubstitution` que puede ser implementada para decirle a Quarkus cómo manejar tales clases. Aquí se muestra un ejemplo de implementación para el `DSAPublicKey`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2857
#, fuzzy, no-wrap
msgid "DSAPublicKeyObjectSubstitution Example"
msgstr "Ejemplo de DSAPublicKeyObjectSubstitution"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2861
#, no-wrap
msgid "package io.quarkus.extest.runtime.subst;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2868
#, no-wrap
msgid ""
"import java.security.KeyFactory;\n"
"import java.security.NoSuchAlgorithmException;\n"
"import java.security.interfaces.DSAPublicKey;\n"
"import java.security.spec.InvalidKeySpecException;\n"
"import java.security.spec.X509EncodedKeySpec;\n"
"import java.util.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2870
#, no-wrap
msgid "import io.quarkus.runtime.ObjectSubstitution;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2881
#, no-wrap
msgid ""
"public class DSAPublicKeyObjectSubstitution implements ObjectSubstitution<DSAPublicKey, KeyProxy> {\n"
"    private static final Logger log = Logger.getLogger(\"DSAPublicKeyObjectSubstitution\");\n"
"    @Override\n"
"    public KeyProxy serialize(DSAPublicKey obj) { //<1>\n"
"        log.info(\"DSAPublicKeyObjectSubstitution.serialize\");\n"
"        byte[] encoded = obj.getEncoded();\n"
"        KeyProxy proxy = new KeyProxy();\n"
"        proxy.setContent(encoded);\n"
"        return proxy;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2891
#, no-wrap
msgid ""
"    @Override\n"
"    public DSAPublicKey deserialize(KeyProxy obj) { //<2>\n"
"        log.info(\"DSAPublicKeyObjectSubstitution.deserialize\");\n"
"        byte[] encoded = obj.getContent();\n"
"        X509EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(encoded);\n"
"        DSAPublicKey dsaPublicKey = null;\n"
"        try {\n"
"            KeyFactory kf = KeyFactory.getInstance(\"DSA\");\n"
"            dsaPublicKey = (DSAPublicKey) kf.generatePublic(publicKeySpec);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2898
#, no-wrap
msgid ""
"        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {\n"
"            e.printStackTrace();\n"
"        }\n"
"        return dsaPublicKey;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2900
#, fuzzy
msgid "The serialize method takes the object without a default constructor and creates a `KeyProxy` that contains the information necessary to recreate the `DSAPublicKey`."
msgstr "El método de serialización toma el objeto sin un constructor por defecto y crea un `KeyProxy` que contiene la información necesaria para recrear el `DSAPublicKey`."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2901
#, fuzzy
msgid "The deserialize method uses the `KeyProxy` to recreate the `DSAPublicKey` from its encoded form using the key factory."
msgstr "El método de deserialización utiliza el `KeyProxy` para recrear el `DSAPublicKey` desde su forma codificada utilizando la fábrica de claves."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2903
#, fuzzy
msgid "An extension registers this substitution by producing an `ObjectSubstitutionBuildItem` as shown in this `TestProcessor#loadDSAPublicKey` fragment:"
msgstr "Una extensión registra esta sustitución produciendo un `ObjectSubstitutionBuildItem` como se muestra en este fragmento de `TestProcessor#loadDSAPublicKey`:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2904
#, fuzzy, no-wrap
msgid "Registering an Object Substitution"
msgstr "Registro de una sustitución de objeto"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2917
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(STATIC_INIT)\n"
"    PublicKeyBuildItem loadDSAPublicKey(TestRecorder recorder,\n"
"            BuildProducer<ObjectSubstitutionBuildItem> substitutions) throws IOException, GeneralSecurityException {\n"
"...\n"
"        // Register how to serialize DSAPublicKey\n"
"        ObjectSubstitutionBuildItem.Holder<DSAPublicKey, KeyProxy> holder = new ObjectSubstitutionBuildItem.Holder(\n"
"                DSAPublicKey.class, KeyProxy.class, DSAPublicKeyObjectSubstitution.class);\n"
"        ObjectSubstitutionBuildItem keysub = new ObjectSubstitutionBuildItem(holder);\n"
"        substitutions.produce(keysub);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2921
#, no-wrap
msgid ""
"        log.info(\"loadDSAPublicKey run\");\n"
"        return new PublicKeyBuildItem(publicKey);\n"
"    }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-extensions.adoc:2924
#, fuzzy, no-wrap
msgid "Replacing Classes in the Native Image"
msgstr "Sustitución de clases en la imagen nativa"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:2927
#, fuzzy
msgid "The Graal SDK supports substitutions of classes in the native image.  An example of how one could replace the `XmlConfig/XmlData` classes with versions that have no JAXB annotation dependencies is shown in these example classes:"
msgstr "El SDK de Graal soporta sustituciones de clases en la imagen nativa. Un ejemplo de cómo se podrían sustituir las clases de `XmlConfig/XmlData` por versiones que no tengan dependencias de anotaciones JAXB se muestra en estas clases de ejemplo:"

#. type: Block title
#: upstream/_guides/writing-extensions.adoc:2928
#, fuzzy, no-wrap
msgid "Substitution of XmlConfig/XmlData Classes Example"
msgstr "Ejemplo de sustitución de las clases XmlConfig/XmlData"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2936
#, no-wrap
msgid ""
"package io.quarkus.extest.runtime.graal;\n"
"import java.util.Date;\n"
"import com.oracle.svm.core.annotate.Substitute;\n"
"import com.oracle.svm.core.annotate.TargetClass;\n"
"import io.quarkus.extest.runtime.config.XmlData;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2940
#, no-wrap
msgid ""
"@TargetClass(XmlConfig.class)\n"
"@Substitute\n"
"public final class Target_XmlConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2947
#, no-wrap
msgid ""
"    @Substitute\n"
"    private String address;\n"
"    @Substitute\n"
"    private int port;\n"
"    @Substitute\n"
"    private ArrayList<XData> dataList;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2952
#, no-wrap
msgid ""
"    @Substitute\n"
"    public String getAddress() {\n"
"        return address;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2957
#, no-wrap
msgid ""
"    @Substitute\n"
"    public int getPort() {\n"
"        return port;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2962
#, no-wrap
msgid ""
"    @Substitute\n"
"    public ArrayList<XData> getDataList() {\n"
"        return dataList;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2973
#, no-wrap
msgid ""
"    @Substitute\n"
"    @Override\n"
"    public String toString() {\n"
"        return \"Target_XmlConfig{\" +\n"
"                \"address='\" + address + '\\'' +\n"
"                \", port=\" + port +\n"
"                \", dataList=\" + dataList +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2977
#, no-wrap
msgid ""
"@TargetClass(XmlData.class)\n"
"@Substitute\n"
"public final class Target_XmlData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2984
#, no-wrap
msgid ""
"    @Substitute\n"
"    private String name;\n"
"    @Substitute\n"
"    private String model;\n"
"    @Substitute\n"
"    private Date date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2989
#, no-wrap
msgid ""
"    @Substitute\n"
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2994
#, no-wrap
msgid ""
"    @Substitute\n"
"    public String getModel() {\n"
"        return model;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:2999
#, no-wrap
msgid ""
"    @Substitute\n"
"    public Date getDate() {\n"
"        return date;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:3010
#, no-wrap
msgid ""
"    @Substitute\n"
"    @Override\n"
"    public String toString() {\n"
"        return \"Target_XmlData{\" +\n"
"                \"name='\" + name + '\\'' +\n"
"                \", model='\" + model + '\\'' +\n"
"                \", date='\" + date + '\\'' +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/writing-extensions.adoc:3013
#, fuzzy, no-wrap
msgid "Ecosystem integration"
msgstr "Integración del ecosistema"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3021
#, fuzzy
msgid "Some extensions may be private, and some may wish to be part of the broader Quarkus ecosystem, and available for community re-use.  Inclusion in the Quarkiverse Hub is a convenient mechanism for handling continuous testing and publication.  The link:https://github.com/quarkiverse/quarkiverse/wiki#getting-an-extension-onboarded[Quarkiverse Hub wiki] has instructions for on-boarding your extension."
msgstr "Algunas extensiones pueden ser privadas, y otras pueden desear formar parte del ecosistema más amplio de Quarkus, y estar disponibles para la reutilización por parte de la comunidad. La inclusión en el Quarkiverse Hub es un mecanismo conveniente para manejar las pruebas y la publicación continuas. El  link:https://github.com/quarkiverse/quarkiverse/wiki#getting-an-extension-onboarded[wiki] de Quarkiverse Hub tiene instrucciones para incluir su extensión."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3023
#, fuzzy
msgid "Alternatively, continuous testing and publication can be handled manually."
msgstr "Como alternativa, las pruebas continuas y la publicación pueden realizarse manualmente."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:3025
#, fuzzy, no-wrap
msgid "Continuous testing of your extension"
msgstr "Pruebas continuas de su extensión"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3031
#, fuzzy
msgid "In order to make it easy for extension authors to test their extensions daily against the latest snapshot of Quarkus, Quarkus has introduced the notion of Ecosystem CI. The Ecosystem CI link:https://github.com/quarkusio/quarkus-ecosystem-ci/blob/main/README.adoc[README] has all the details on how to set up a GitHub Actions job to take advantage of this capability, while this link:https://www.youtube.com/watch?v=VpbRA1n0hHQ[video] provides an overview of what the process looks like."
msgstr "Con el fin de facilitar a los autores de extensiones la prueba diaria de sus extensiones contra la última instantánea de Quarkus, Quarkus ha introducido la noción de Ecosystem CI. El  link:https://github.com/quarkusio/quarkus-ecosystem-ci/blob/main/README.adoc[LÉEME de] Ecosystem CI tiene todos los detalles sobre cómo configurar un trabajo de GitHub Actions para aprovechar esta capacidad, mientras que este  link:https://www.youtube.com/watch?v=VpbRA1n0hHQ[vídeo] proporciona una visión general de cómo es el proceso."

#. type: Title ===
#: upstream/_guides/writing-extensions.adoc:3032
#, fuzzy, no-wrap
msgid "Publish your extension in registry.quarkus.io"
msgstr "Publica tu extensión en registry.quarkus.io"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3035
#, fuzzy
msgid "Before publishing your extension to the xref:tooling.adoc[Quarkus tooling], make sure that the following requirements are met:"
msgstr "Antes de publicar su extensión en la  link:tooling.html[herramienta Quarkus], asegúrese de que se cumplen los siguientes requisitos:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3037
#, fuzzy
msgid "The xref:extension-metadata.adoc#quarkus-extension-yaml[quarkus-extension.yaml] file (in the extension's `runtime/` module) has the minimum metadata set:"
msgstr "El archivo `quarkus-extension.yaml` (en el módulo `runtime/` de la extensión) tiene el conjunto mínimo de metadatos:"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3038
#, fuzzy
msgid "`name`"
msgstr "`name`"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3039
#, fuzzy
msgid "`description` (unless you have it already set in the ``runtime/pom.xml``'s `<description>` element, which is the recommended approach)"
msgstr "`description` (a no ser que ya lo tenga configurado en el elemento `runtime/pom.xml’s `&amp;lt;description&amp;gt;`, que es lo que se recomienda)"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3041
#, fuzzy
msgid "Your extension is published in Maven Central"
msgstr "Su extensión se publica en Maven Central"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3043
#, fuzzy
msgid "Your extension repository is configured to use the xref:ecosystem-ci[Ecosystem CI]."
msgstr "Su repositorio de extensiones está configurado para utilizar el  link:#ecosystem-ci[CI del Ecosistema]."

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3045
#, fuzzy
msgid "Then you must create a pull request adding a `your-extension.yaml` file in the `extensions/` directory in the link:https://github.com/quarkusio/quarkus-extension-catalog[Quarkus Extension Catalog]. The YAML must have the following structure:"
msgstr "A continuación, debe crear una solicitud de extracción añadiendo un archivo `your-extension.yaml` en el directorio `extensions/` en el  link:https://github.com/quarkusio/quarkus-extension-catalog[Catálogo de Extensiones de Quarkus]. El YAML debe tener la siguiente estructura:"

#. type: delimited block -
#: upstream/_guides/writing-extensions.adoc:3050
#, fuzzy, no-wrap
msgid ""
"group-id: <YOUR_EXTENSION_RUNTIME_GROUP_ID>\n"
"artifact-id: <YOUR_EXTENSION_RUNTIME_ARTIFACT_ID>\n"
msgstr "<pre class=\"highlight\"> ``</pre>"

#. type: Plain text
#: upstream/_guides/writing-extensions.adoc:3053
#, fuzzy
msgid "That's all. Once the pull request is merged, a scheduled job will check Maven Central for new versions and update the xref:extension-registry-user.adoc[Quarkus Extension Registry]."
msgstr "Eso es todo. Una vez que el pull request se fusiona, un trabajo programado comprobará Maven Central para las nuevas versiones y actualizará el  link:extension-registry-user.html[Registro de Extensiones de Quarkus]."

#, fuzzy
#~ msgid "The `FileConfig` class is annotated with `@ConfigGroup` to indicate that this is an aggregate configuration object containing a collection of configurable properties, rather than being a simple configuration key type."
#~ msgstr "La clase `FileConfig` está anotada con `@ConfigGroup` para indicar que se trata de un objeto de configuración agregado que contiene una colección de propiedades configurables, en lugar de ser un simple tipo de clave de configuración."

#, fuzzy
#~ msgid "In this section, we will explain everything you need to know about the configuration reference documentation."
#~ msgstr "En esta sección, le explicaremos todo lo que necesita saber sobre la documentación de referencia de la configuración."

#, fuzzy
#~ msgid "You can either use standard Javadoc comments or Asciidoc directly as a Javadoc comment."
#~ msgstr "Puede utilizar los comentarios estándar de Javadoc o Asciidoc directamente como comentario de Javadoc."

#, fuzzy
#~ msgid "Here is a typical configuration property commented with Asciidoc:"
#~ msgstr "Aquí se muestra una típica propiedad de configuración comentada con Asciidoc:"

#, fuzzy
#~ msgid "Now let's consider a more complicated example:"
#~ msgstr "Consideremos ahora un ejemplo más complicado:"

#, fuzzy
#~ msgid "A few comments on this one:"
#~ msgstr "Algunos comentarios sobre este tema:"

#, fuzzy
#~ msgid "As you can see, you can use the full power of Asciidoctor (except for the limitation below)"
#~ msgstr "Como puede ver, puede utilizar toda la potencia de Asciidoctor (salvo la limitación que se indica a continuación)"

#, fuzzy
#~ msgid "Generating the documentation is easy:"
#~ msgstr "Generar la documentación es fácil:"

#, fuzzy
#~ msgid "Running `./mvnw clean install -DskipTests -DskipITs` will do."
#~ msgstr "Con la página web `./mvnw clean install -DskipTests -DskipITs` es suficiente."

#, fuzzy
#~ msgid "Now that you have generated the configuration reference documentation for your extension, you need to include it in your guide (and review it)."
#~ msgstr "Ahora que ha generado la documentación de referencia de configuración para su extensión, debe incluirla en su guía (y revisarla)."

#, fuzzy
#~ msgid "If you are interested in including the generated documentation for the config group, you can use the include statement below"
#~ msgstr "Si está interesado en incluir la documentación generada para el grupo de configuración, puede utilizar la siguiente sentencia include"

#, fuzzy
#~ msgid "It is not recommended to include the whole configuration documentation in the middle of your guide as it's heavy.  If you have an `application.properties` extract with your configuration, just do as follows."
#~ msgstr "No se recomienda incluir toda la documentación de la configuración en medio de su guía, ya que es pesada. Si tiene un extracto de `application.properties` con su configuración, simplemente haga lo siguiente."

#, fuzzy
#~ msgid "First, include a tip just below your `application.properties` extract:"
#~ msgstr "En primer lugar, incluya una punta justo debajo de su extracto `application.properties`:"

#, fuzzy
#~ msgid "Finally, generate the documentation and check it out."
#~ msgstr "Por último, genere la documentación y compruébela."

#, fuzzy
#~ msgid "Configuration in Quarkus is based on SmallRye Config, an implementation of the MicroProfile Config specification.  All the standard features of MP-Config are supported; in addition, there are several extensions which are made available by the SmallRye Config project as well as by Quarkus itself."
#~ msgstr "La configuración en Quarkus se basa en SmallRye Config, una implementación de la especificación MicroProfile Config. Todas las características estándar de MP-Config son compatibles; además, hay varias extensiones que están disponibles por el proyecto SmallRye Config, así como por el propio Quarkus."

#, fuzzy
#~ msgid "The value of these properties is configured in a `application.properties` file that follows the MicroProfile config format."
#~ msgstr "El valor de estas propiedades se configura en un archivo `application.properties` que sigue el formato de configuración de MicroProfile."

#, fuzzy
#~ msgid "Configuration of Quarkus extensions is injection-based, using annotations."
#~ msgstr "La configuración de las extensiones de Quarkus se basa en la inyección, utilizando anotaciones."

#, fuzzy
#~ msgid "Configuration Keys"
#~ msgstr "Claves de configuración"

#, fuzzy
#~ msgid "Leaf configuration keys are mapped to non-`private` fields via the `@io.quarkus.runtime.annotations.ConfigItem` annotation."
#~ msgstr "Las claves de configuración de las hojas se asignan a campos que no son de `private` a través de la anotación `@io.quarkus.runtime.annotations.ConfigItem`."

#, fuzzy
#~ msgid "Though the SmallRye Config project is used for implementation, the standard `@ConfigProperty` annotation does not have the same semantics that are needed to support configuration within extensions."
#~ msgstr "Aunque el proyecto SmallRye Config se utiliza para la implementación, la anotación estándar `@ConfigProperty` no tiene la misma semántica que se necesita para soportar la configuración dentro de las extensiones."

#, fuzzy
#~ msgid "Configuration keys are normally derived from the field names that they are tied to.  This is done by de-camel-casing the name and then joining the segments with hyphens (`-`).  Some examples:"
#~ msgstr "Las claves de configuración suelen derivarse de los nombres de los campos a los que están vinculadas. Para ello, se desmarca el nombre y se unen los segmentos con guiones ( `-`). Algunos ejemplos:"

#, fuzzy
#~ msgid "`bindAddress` becomes `bind-address`"
#~ msgstr "`bindAddress` se convierte en `bind-address`"

#, fuzzy
#~ msgid "`keepAliveTime` becomes `keep-alive-time`"
#~ msgstr "`keepAliveTime` se convierte en `keep-alive-time`"

#, fuzzy
#~ msgid "`requestDNSTimeout` becomes `request-dns-timeout`"
#~ msgstr "`requestDNSTimeout` se convierte en `request-dns-timeout`"

#, fuzzy
#~ msgid "The name can also be explicitly specified by giving a `name` attribute to the `@ConfigItem` annotation."
#~ msgstr "El nombre también puede especificarse explícitamente dando un atributo `name` a la anotación `@ConfigItem`."

#, fuzzy
#~ msgid "Though it is possible to override the configuration key name using the `name` attribute of `@ConfigItem`, normally this should only be done in cases where (for example) the configuration key name is the same as a Java keyword."
#~ msgstr "Aunque es posible anular el nombre de la clave de configuración utilizando el atributo `name` de `@ConfigItem`, normalmente esto sólo debería hacerse en los casos en que (por ejemplo) el nombre de la clave de configuración es el mismo que una palabra clave de Java."

#, fuzzy
#~ msgid "Configuration Value types"
#~ msgstr "Configuración Tipos de valores"

#, fuzzy
#~ msgid "The type of the field with the `@ConfigItem` annotation determines the conversion that is applied to it.  Quarkus extensions may use the full range of configuration types made available by SmallRye Config, which includes:"
#~ msgstr "El tipo de campo con la anotación `@ConfigItem` determina la conversión que se le aplica. Las extensiones de Quarkus pueden utilizar toda la gama de tipos de configuración disponibles en SmallRye Config, que incluye:"

#, fuzzy
#~ msgid "All primitive types and primitive wrapper types"
#~ msgstr "Todos los tipos primitivos y tipos envolventes primitivos"

#, fuzzy
#~ msgid "`String`"
#~ msgstr "`String`"

#, fuzzy
#~ msgid "Any type which has a constructor accepting a single argument of type `String` or `CharSequence`"
#~ msgstr "Cualquier tipo que tenga un constructor que acepte un único argumento de tipo `String` o `CharSequence`"

#, fuzzy
#~ msgid "Any type which has a static method named `of` which accepts a single argument of type `String`"
#~ msgstr "Cualquier tipo que tenga un método estático llamado `of` que acepte un único argumento de tipo `String`"

#, fuzzy
#~ msgid "Any type which has a static method named `valueOf` or `parse` which accepts a single argument of type `CharSequence` or `String`"
#~ msgstr "Cualquier tipo que tenga un método estático llamado `valueOf` o `parse` que acepte un único argumento de tipo `CharSequence` o `String`"

#, fuzzy
#~ msgid "`java.time.Duration`"
#~ msgstr "`java.time.Duration`"

#, fuzzy
#~ msgid "`java.util.regex.Pattern`"
#~ msgstr "`java.util.regex.Pattern`"

#, fuzzy
#~ msgid "`java.nio.file.Path`"
#~ msgstr "`java.nio.file.Path`"

#, fuzzy
#~ msgid "`io.quarkus.runtime.configuration.MemorySize` to represent data sizes"
#~ msgstr "`io.quarkus.runtime.configuration.MemorySize` para representar tamaños de datos"

#, fuzzy
#~ msgid "`java.net.InetSocketAddress`, `java.net.InetAddress` and `org.wildfly.common.net.CidrAddress`"
#~ msgstr "`java.net.InetSocketAddress`, `java.net.InetAddress` y `org.wildfly.common.net.CidrAddress`"

#, fuzzy
#~ msgid "`java.util.Locale` where the string value is an IETF BCP 47 language tag"
#~ msgstr "`java.util.Locale` donde el valor de la cadena es una etiqueta de lenguaje IETF BCP 47"

#, fuzzy
#~ msgid "`java.nio.charset.Charset` where the string value is a canonical name or an alias"
#~ msgstr "`java.nio.charset.Charset` donde el valor de la cadena es un nombre canónico o un alias"

#, fuzzy
#~ msgid "`java.time.ZoneId` where the string value is parsed via `java.time.ZoneId.of(String)`"
#~ msgstr "`java.time.ZoneId` donde el valor de la cadena se analiza mediante `java.time.ZoneId.of(String)`"

#, fuzzy
#~ msgid "A `List` or `Optional` of any of the above types"
#~ msgstr "Un `List` o `Optional` de cualquiera de los tipos anteriores"

#, fuzzy
#~ msgid "`OptionalInt`, `OptionalLong`, `OptionalDouble`"
#~ msgstr "`OptionalInt`, `OptionalLong`, `OptionalDouble`"

#, fuzzy
#~ msgid "In addition, custom converters may be registered by adding their fully qualified class name in file `META-INF/services/org.eclipse.microprofile.config.spi.Converter`."
#~ msgstr "Además, los convertidores personalizados pueden registrarse añadiendo su nombre de clase completo en el archivo `META-INF/services/org.eclipse.microprofile.config.spi.Converter`."

#, fuzzy
#~ msgid "Though these implicit converters use reflection, Quarkus will automatically ensure that they are loaded at the appropriate time."
#~ msgstr "Aunque estos convertidores implícitos utilizan la reflexión, Quarkus se asegurará automáticamente de que se carguen en el momento adecuado."

#, fuzzy
#~ msgid "Optional Values"
#~ msgstr "Valores opcionales"

#, fuzzy
#~ msgid "If the configuration type is one of the optional types, then empty values are allowed for the configuration key; otherwise, specification of an empty value will result in a configuration error which prevents the application from starting.  This is especially relevant to configuration properties of inherently emptiable values such as `List`, `Set`, and `String`.  Such value types will never be empty; in the event of an empty value, an empty `Optional` is always used."
#~ msgstr "Si el tipo de configuración es uno de los tipos opcionales, se permiten valores vacíos para la clave de configuración; de lo contrario, la especificación de un valor vacío dará lugar a un error de configuración que impedirá el inicio de la aplicación. Esto es especialmente relevante para las propiedades de configuración de valores inherentemente vacíos como `List`, `Set`, y `String`. Tales tipos de valores nunca estarán vacíos; en caso de un valor vacío, siempre se utiliza un `Optional` vacío."

#, fuzzy
#~ msgid "Configuration Default Values"
#~ msgstr "Valores de configuración por defecto"

#, fuzzy
#~ msgid "A configuration item can be marked to have a default value.  The default value is used when no matching configuration key is specified in the configuration."
#~ msgstr "Un elemento de configuración puede ser marcado para tener un valor por defecto. El valor por defecto se utiliza cuando no se especifica ninguna clave de configuración coincidente en la configuración."

#, fuzzy
#~ msgid "Configuration items with a primitive type (such as `int` or `boolean`) implicitly use a default value of `0` or `false`.  The sole exception to this rule is the `char` type which does not have an implicit default value."
#~ msgstr "Los elementos de configuración con un tipo primitivo (como `int` o `boolean`) utilizan implícitamente un valor por defecto de `0` o `false`. La única excepción a esta regla es el tipo `char` que no tiene un valor por defecto implícito."

#, fuzzy
#~ msgid "A property with a default value is not implicitly optional.  If a non-optional configuration item with a default value is explicitly specified to have an empty value, the application will report a configuration error and will not start.  If it is desired for a property to have a default value and also be optional, it must have an `Optional` type as described above."
#~ msgstr "Una propiedad con un valor por defecto no es implícitamente opcional. Si se especifica explícitamente que un elemento de configuración no opcional con valor por defecto tiene un valor vacío, la aplicación informará de un error de configuración y no se iniciará. Si se desea que una propiedad tenga un valor por defecto y también sea opcional, debe tener un tipo `Optional` como se ha descrito anteriormente."

#, fuzzy
#~ msgid "Configuration Groups"
#~ msgstr "Grupos de configuración"

#, fuzzy
#~ msgid "Configuration values are always collected into grouping classes which are marked with the `@io.quarkus.runtime.annotations.ConfigGroup` annotation.  These classes contain a field for each key within its group.  In addition, configuration groups can be nested."
#~ msgstr "Los valores de configuración siempre se recogen en clases de agrupación que se marcan con la anotación `@io.quarkus.runtime.annotations.ConfigGroup`. Estas clases contienen un campo para cada clave dentro de su grupo. Además, los grupos de configuración pueden estar anidados."

#, fuzzy
#~ msgid "Optional Configuration Groups"
#~ msgstr "Grupos de configuración opcionales"

#, fuzzy
#~ msgid "A nested configuration group may be wrapped with an `Optional` type.  In this case, the group is not populated unless one or more properties within that group are specified in the configuration.  If the group is populated, then any required properties in the group must also be specified otherwise a configuration error will be reported and the application will not start."
#~ msgstr "Un grupo de configuración anidado puede estar envuelto con un tipo `Optional`. En este caso, el grupo no se rellena a menos que una o más propiedades dentro de ese grupo se especifiquen en la configuración. Si el grupo se rellena, entonces cualquier propiedad requerida en el grupo también debe ser especificada, de lo contrario se reportará un error de configuración y la aplicación no se iniciará."

#, fuzzy
#~ msgid "Configuration Maps"
#~ msgstr "Mapas de configuración"

#, fuzzy
#~ msgid "A `Map` can be used for configuration at any position where a configuration group would be allowed.  The key type of such a map *must* be `String`, and its value may be either a configuration group class or a valid leaf type.  The configuration key segment following the map's key segment will be used as the key for map values."
#~ msgstr "Un `Map` puede utilizarse para la configuración en cualquier posición en la que se permita un grupo de configuración. El tipo de clave de dicho mapa *debe* ser `String`, y su valor puede ser una clase de grupo de configuración o un tipo de hoja válido. El segmento de clave de configuración que sigue al segmento de clave del mapa se utilizará como clave para los valores del mapa."

#, fuzzy
#~ msgid "Configuration Roots"
#~ msgstr "Raíces de configuración"

#, fuzzy
#~ msgid "Configuration roots are configuration groups that appear in the root of the configuration tree.  A configuration property's full name is determined by joining the string `quarkus.` with the hyphenated name of the fields that form the path from the root to the leaf field.  For example, if I define a configuration root group called `ThreadPool`, with a nested group in a field named `sizing` that in turn contains a field called `minSize`, the final configuration property will be called `quarkus.thread-pool.sizing.min-size`."
#~ msgstr "Las raíces de configuración son grupos de configuración que aparecen en la raíz del árbol de configuración. El nombre completo de una propiedad de configuración se determina uniendo la cadena `quarkus.` con el nombre guionizado de los campos que forman la ruta desde la raíz hasta el campo hoja. Por ejemplo, si defino un grupo raíz de configuración llamado `ThreadPool`, con un grupo anidado en un campo llamado `sizing` que a su vez contiene un campo llamado `minSize`, la propiedad de configuración final se llamará `quarkus.thread-pool.sizing.min-size`."

#, fuzzy
#~ msgid "A configuration root's name can be given with the `name` property, or it can be inferred from the class name.  If the latter, then the configuration key will be the class name, minus any `Config` or `Configuration` suffix, broken up by camel-case, lowercased, and re-joined using hyphens (`-`)."
#~ msgstr "El nombre de la raíz de una configuración puede darse con la propiedad `name`, o puede inferirse del nombre de la clase. En este último caso, la clave de configuración será el nombre de la clase, menos cualquier sufijo `Config` o `Configuration`, dividido por mayúsculas, minúsculas, y vuelto a unir con guiones ( `-`)."

#, fuzzy
#~ msgid "Note: The current implementation is still using injection site to determine the root set, so to avoid migration problems, it is recommended that the injection site (field or parameter) have the same name as the configuration root class until this change is complete."
#~ msgstr "Nota: La implementación actual sigue utilizando el sitio de inyección para determinar el conjunto raíz, por lo que para evitar problemas de migración, se recomienda que el sitio de inyección (campo o parámetro) tenga el mismo nombre que la clase raíz de la configuración hasta que se complete este cambio."

#, fuzzy
#~ msgid "The `@ConfigRoot` annotation indicates that this object is a configuration root group, in this case one which corresponds to a `log` segment. A class name is used to link configuration root group with the segment from a property name. The `Configuration` part is stripped off from a `LogConfiguration` class name and the remaining `Log` is lowercased to become a `log`. Since all `@ConfigRoot` annotated classes uses `quarkus` as a prefix, this finally becomes `quarkus.log` and represents the properties which names begin with `quarkus.log.*`."
#~ msgstr "La anotación `@ConfigRoot` indica que este objeto es un grupo raíz de configuración, en este caso uno que corresponde a un segmento `log`. Se utiliza un nombre de clase para vincular el grupo raíz de configuración con el segmento a partir de un nombre de propiedad. La parte `Configuration` se elimina del nombre de una clase `LogConfiguration` y el resto `Log` se escribe en minúsculas para convertirse en `log`. Como todas las clases anotadas con `@ConfigRoot` utilizan `quarkus` como prefijo, esto finalmente se convierte en `quarkus.log` y representa las propiedades cuyos nombres comienzan con `quarkus.log.*`."

#, fuzzy
#~ msgid "Enhanced conversion"
#~ msgstr "Conversión mejorada"

#, fuzzy
#~ msgid "You can use enhanced conversion of a config item by using the `@ConvertWith` annotation which accepts a `Converter` class object.  If the annotation is present on a config item, the implicit or custom-built in converter in use will be overridden by the value provided.  To do, see the example below which converts `YES` or `NO` values to `boolean`."
#~ msgstr "Puede utilizar la conversión mejorada de un elemento de configuración utilizando la anotación `@ConvertWith` que acepta un objeto de clase `Converter`. Si la anotación está presente en un elemento de configuración, el convertidor implícito o personalizado en uso será anulado por el valor proporcionado. Para ello, véase el siguiente ejemplo que convierte los valores de `YES` o `NO` en `boolean`."

#, fuzzy
#~ msgid "Override the default `Boolean` converter and use the provided converter which accepts a `YES` or `NO` config values."
#~ msgstr "Anule el convertidor predeterminado `Boolean` y utilice el convertidor proporcionado que acepta los valores de configuración `YES` o `NO`."

#, fuzzy
#~ msgid "The corresponding `application.properties` will look like."
#~ msgstr "El correspondiente `application.properties` tendrá el siguiente aspecto."

#, fuzzy
#~ msgid "Enum values (config items) are translated to skewed-case (hyphenated) by default. The table below illustrates an enum name and their canonical equivalence:"
#~ msgstr "Los valores de enum (elementos de configuración) se traducen a mayúsculas y minúsculas por defecto. La siguiente tabla ilustra un nombre de enum y su equivalencia canónica:"

#, fuzzy
#~ msgid "Java enu"
#~ msgstr "Enu de Java"

#, fuzzy
#~ msgid "Canonical equivalent"
#~ msgstr "Equivalente canónico"

#, fuzzy
#~ msgid "DISCARD"
#~ msgstr "DESCARTAR"

#, fuzzy
#~ msgid "discard"
#~ msgstr "descartar"

#, fuzzy
#~ msgid "READ_UNCOMMITTED"
#~ msgstr "READ_UNCOMMITTED"

#, fuzzy
#~ msgid "read-uncommitted"
#~ msgstr "lectura-no-comprometida"

#, fuzzy
#~ msgid "SIGUSR1"
#~ msgstr "SIGUSR1"

#, fuzzy
#~ msgid "sigusr1"
#~ msgstr "sigusr1"

#, fuzzy
#~ msgid "JavaEnum"
#~ msgstr "JavaEnum"

#, fuzzy
#~ msgid "java-enum"
#~ msgstr "java-enum"

#, fuzzy
#~ msgid "MAKING_LifeDifficult"
#~ msgstr "Hacer que la vida sea difícil"

#, fuzzy
#~ msgid "making-life-difficult"
#~ msgstr "making-life-difficult"

#, fuzzy
#~ msgid "YeOldeJBoss"
#~ msgstr "YeOldeJBoss"

#, fuzzy
#~ msgid "ye-olde-jboss"
#~ msgstr "ye-olde-jboss"

#, fuzzy
#~ msgid "camelCaseEnum"
#~ msgstr "camelCaseEnum"

#, fuzzy
#~ msgid "camel-case-enum"
#~ msgstr "camel-case-enum"

#, fuzzy
#~ msgid "To use the default behaviour which is based on implicit converter or a custom defined one add `@DefaultConverter` annotation to the configuration item"
#~ msgstr "Para utilizar el comportamiento por defecto, que se basa en el convertidor implícito, o uno personalizado, añada la anotación `@DefaultConverter` al elemento de configuración"

#, fuzzy
#~ msgid "Use the default converter (built in or a custom converter) to convert `Level.class` enum."
#~ msgstr "Utilice el convertidor por defecto (incorporado o un convertidor personalizado) para convertir `Level.class` enum."

#, fuzzy
#~ msgid "You will need to include the `io.quarkus:quarkus-extension-maven-plugin` to generate the Quarkus extension descriptor included into the runtime artifact, if you are using the Quarkus parent pom it will automatically inherit the correct configuration.  Furthermore, you'll need to configure the `maven-compiler-plugin` to detect the `quarkus-extension-processor` annotation processor."
#~ msgstr "Necesitarás incluir el `io.quarkus:quarkus-bootstrap-maven-plugin` para generar el descriptor de extensión de Quarkus incluido en el artefacto de tiempo de ejecución, si estás usando el pom padre de Quarkus heredará automáticamente la configuración correcta. Además, tendrá que configurar el `maven-compiler-plugin` para detectar el procesador de anotaciones `quarkus-extension-processor`."
