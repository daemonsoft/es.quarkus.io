# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/centralized-log-management.adoc:6
#, fuzzy, no-wrap
msgid "Centralized log management (Graylog, Logstash, Fluentd)"
msgstr "Gestión centralizada de registros (Graylog, Logstash, Fluentd)"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:15
#, fuzzy
msgid "This guide explains how you can send your logs to a centralized log management system like Graylog, Logstash (inside the Elastic Stack or ELK - Elasticsearch, Logstash, Kibana) or Fluentd (inside EFK - Elasticsearch, Fluentd, Kibana)."
msgstr "Esta guía explica cómo puede enviar sus registros a un sistema de gestión de registros centralizado como Graylog, Logstash (dentro de Elastic Stack o ELK - Elasticsearch, Logstash, Kibana) o Fluentd (dentro de EFK - Elasticsearch, Fluentd, Kibana)."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:18
#, fuzzy
msgid "There are a lot of different ways to centralize your logs (if you are using Kubernetes, the simplest way is to log to the console and ask you cluster administrator to integrate a central log manager inside your cluster).  In this guide, we will expose how to send them to an external tool using the `quarkus-logging-gelf` extension that can use TCP or UDP to send logs in the Graylog Extended Log Format (GELF)."
msgstr "Hay muchas formas diferentes de centralizar tus logs (si estás usando Kubernetes, la forma más sencilla es registrarte en la consola y pedir al administrador de tu cluster que integre un gestor de logs central dentro de tu cluster). En esta guía, expondremos cómo enviarlos a una herramienta externa usando la extensión `quarkus-logging-gelf` que puede usar TCP o UDP para enviar los logs en el Formato de Log Extendido Graylog (GELF)."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:21
#, fuzzy
msgid "The `quarkus-logging-gelf` extension will add a GELF log handler to the underlying logging backend that Quarkus uses (jboss-logmanager).  By default, it is disabled, if you enable it but still use another handler (by default the console handler is enabled), your logs will be sent to both handlers."
msgstr "La extensión `quarkus-logging-gelf` añadirá un gestor de registros GELF al backend de registro subyacente que utiliza Quarkus (jboss-logmanager). Por defecto, está deshabilitado, si lo habilitas pero sigues usando otro manejador (por defecto el manejador de la consola está habilitado), tus registros serán enviados a ambos manejadores."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:22
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:27
#, fuzzy, no-wrap
msgid "Example application"
msgstr "Ejemplo de aplicación"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:30
#, fuzzy
msgid "The following examples will all be based on the same example application that you can create with the following steps."
msgstr "Los siguientes ejemplos se basarán todos en la misma aplicación de ejemplo que puede crear con los siguientes pasos."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:32
#, fuzzy
msgid "Create an application with the `quarkus-logging-gelf` extension. You can use the following command to create it:"
msgstr "Cree una aplicación con la extensión `quarkus-logging-gelf`. Puede utilizar el siguiente comando para crearla:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:39
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `logging-gelf` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `logging-gelf` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:44
#, fuzzy
msgid "This will add the following dependency to your build file:"
msgstr "Esto añadirá la siguiente dependencia a su archivo de construcción:"

#. type: Block title
#: upstream/_guides/centralized-log-management.adoc:46
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:52
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-logging-gelf</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/centralized-log-management.adoc:55
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:58
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-logging-gelf\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:61
#, fuzzy
msgid "For demonstration purposes, we create an endpoint that does nothing but log a sentence. You don't need to do this inside your application."
msgstr "Para fines de demostración, creamos un endpoint que no hace nada más que registrar una sentencia. No es necesario que hagas esto dentro de tu aplicación."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:67
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:69
#, no-wrap
msgid "import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:74
#, no-wrap
msgid ""
"@Path(\"/gelf-logging\")\n"
"@ApplicationScoped\n"
"public class GelfLoggingResource {\n"
"    private static final Logger LOG = Logger.getLogger(GelfLoggingResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:79
#, no-wrap
msgid ""
"    @GET\n"
"    public void log() {\n"
"        LOG.info(\"Some useful log message\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:81
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:84
#, fuzzy
msgid "Configure the GELF log handler to send logs to an external UDP endpoint on the port 12201:"
msgstr "Configure el gestor de registros de GELF para que envíe los registros a un punto final UDP externo en el puerto 12201:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:90
#, no-wrap
msgid ""
"quarkus.log.handler.gelf.enabled=true\n"
"quarkus.log.handler.gelf.host=localhost\n"
"quarkus.log.handler.gelf.port=12201\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:92
#, fuzzy, no-wrap
msgid "Send logs to Graylog"
msgstr "Enviar registros a Graylog"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:95
#, fuzzy
msgid "To send logs to Graylog, you first need to launch the components that compose the Graylog stack:"
msgstr "Para enviar los registros a Graylog, primero hay que lanzar los componentes que componen la pila de Graylog:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:97
#, fuzzy
msgid "MongoDB"
msgstr "MongoDB"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:98
#: upstream/_guides/centralized-log-management.adoc:184
#: upstream/_guides/centralized-log-management.adoc:275
#: upstream/_guides/centralized-log-management.adoc:363
#, fuzzy
msgid "Elasticsearch"
msgstr "Elasticsearch"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:99
#, fuzzy
msgid "Graylog"
msgstr "Graylog"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:101
#: upstream/_guides/centralized-log-management.adoc:188
#: upstream/_guides/centralized-log-management.adoc:279
#: upstream/_guides/centralized-log-management.adoc:367
#, fuzzy
msgid "You can do this via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "Puede hacerlo a través del siguiente archivo `docker-compose.yml` que puede lanzar a través de `docker-compose up -d`:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:105
#: upstream/_guides/centralized-log-management.adoc:283
#: upstream/_guides/centralized-log-management.adoc:371
#, no-wrap
msgid "version: '3.2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:117
#, no-wrap
msgid ""
"services:\n"
"  elasticsearch:\n"
"    image: {elasticsearch-image}\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"      discovery.type: \"single-node\"\n"
"      cluster.routing.allocation.disk.threshold_enabled: false\n"
"    networks:\n"
"      - graylog\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:122
#, no-wrap
msgid ""
"  mongo:\n"
"    image: mongo:4.0\n"
"    networks:\n"
"      - graylog\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:140
#, no-wrap
msgid ""
"  graylog:\n"
"    image: graylog/graylog:4.3.0\n"
"    ports:\n"
"      - \"9000:9000\"\n"
"      - \"12201:12201/udp\"\n"
"      - \"1514:1514\"\n"
"    environment:\n"
"      GRAYLOG_HTTP_EXTERNAL_URI: \"http://127.0.0.1:9000/\"\n"
"      # CHANGE ME (must be at least 16 characters)!\n"
"      GRAYLOG_PASSWORD_SECRET: \"forpasswordencryption\"\n"
"      # Password: admin\n"
"      GRAYLOG_ROOT_PASSWORD_SHA2: \"8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918\"\n"
"    networks:\n"
"      - graylog\n"
"    depends_on:\n"
"      - elasticsearch\n"
"      - mongo\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:144
#, no-wrap
msgid ""
"networks:\n"
"  graylog:\n"
"    driver: bridge\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:148
#, fuzzy
msgid "Then, you need to create a UDP input in Graylog.  You can do it from the Graylog web console (System -> Input -> Select GELF UDP) available at http://localhost:9000 or via the API."
msgstr "A continuación, tienes que crear una entrada UDP en Graylog. Puede hacerlo desde la consola web de Graylog (Sistema → Entrada → Seleccionar GELF UDP) disponible en  http://localhost:9000  o a través de la API."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:150
#, fuzzy
msgid "This curl example will create a new Input of type GELF UDP, it uses the default login from Graylog (admin/admin)."
msgstr "Este ejemplo de curl creará una nueva entrada de tipo GELF UDP, utiliza el login por defecto de Graylog (admin/admin)."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:156
#, no-wrap
msgid ""
"curl -H \"Content-Type: application/json\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"X-Requested-By: curl\" -X POST -v -d \\\n"
"'{\"title\":\"udp input\",\"configuration\":{\"recv_buffer_size\":262144,\"bind_address\":\"0.0.0.0\",\"port\":12201,\"decompress_size_limit\":8388608},\"type\":\"org.graylog2.inputs.gelf.udp.GELFUDPInput\",\"global\":true}' \\\n"
"http://localhost:9000/api/system/inputs\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:159
#, fuzzy
msgid "Launch your application, you should see your logs arriving inside Graylog."
msgstr "Inicie su aplicación, debería ver sus registros llegando dentro de Graylog."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:160
#, fuzzy, no-wrap
msgid "Send logs to Logstash / the Elastic Stack (ELK)"
msgstr "Envío de registros a Logstash / Elastic Stack (ELK)"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:163
#, fuzzy
msgid "Logstash comes by default with an Input plugin that can understand the GELF format, we will first create a pipeline that enables this plugin."
msgstr "Logstash viene por defecto con un plugin de entrada que puede entender el formato GELF, primero crearemos un pipeline que habilite este plugin."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:165
#, fuzzy
msgid "Create the following file in `$HOME/pipelines/gelf.conf`:"
msgstr "Cree el siguiente archivo en `$HOME/pipelines/gelf.conf`:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:179
#, no-wrap
msgid ""
"input {\n"
"  gelf {\n"
"    port => 12201\n"
"  }\n"
"}\n"
"output {\n"
"  stdout {}\n"
"  elasticsearch {\n"
"    hosts => [\"http://elasticsearch:9200\"]\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:182
#, fuzzy
msgid "Finally, launch the components that compose the Elastic Stack:"
msgstr "Por último, lance los componentes que componen el Elastic Stack:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:185
#, fuzzy
msgid "Logstash"
msgstr "Logstash"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:186
#: upstream/_guides/centralized-log-management.adoc:277
#: upstream/_guides/centralized-log-management.adoc:365
#, fuzzy
msgid "Kibana"
msgstr "Kibana"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:193
#, no-wrap
msgid ""
"# Launch Elasticsearch\n"
"version: '3.2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:206
#, no-wrap
msgid ""
"services:\n"
"  elasticsearch:\n"
"    image: {elasticsearch-image}\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"      - \"9300:9300\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"      discovery.type: \"single-node\"\n"
"      cluster.routing.allocation.disk.threshold_enabled: false\n"
"    networks:\n"
"      - elk\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:221
#, no-wrap
msgid ""
"  logstash:\n"
"    image: {logstash-image}\n"
"    volumes:\n"
"      - source: $HOME/pipelines\n"
"        target: /usr/share/logstash/pipeline\n"
"        type: bind\n"
"    ports:\n"
"      - \"12201:12201/udp\"\n"
"      - \"5000:5000\"\n"
"      - \"9600:9600\"\n"
"    networks:\n"
"      - elk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:230
#, no-wrap
msgid ""
"  kibana:\n"
"    image: {kibana-image}\n"
"    ports:\n"
"      - \"5601:5601\"\n"
"    networks:\n"
"      - elk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:234
#, no-wrap
msgid ""
"networks:\n"
"  elk:\n"
"    driver: bridge\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:238
#, fuzzy
msgid "Launch your application, you should see your logs arriving inside the Elastic Stack; you can use Kibana available at http://localhost:5601/ to access them."
msgstr "Lanza tu aplicación, deberías ver tus registros llegando dentro de Elastic Stack; puedes usar Kibana disponible en  http://localhost:5601/  para acceder a ellos."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:239
#, fuzzy, no-wrap
msgid "Send logs to Fluentd (EFK)"
msgstr "Enviar registros a Fluentd (EFK)"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:243
#, fuzzy
msgid "First, you need to create a Fluentd image with the needed plugins: elasticsearch and input-gelf.  You can use the following Dockerfile that should be created inside a `fluentd` directory."
msgstr "En primer lugar, es necesario crear una imagen de Fluentd con los plugins necesarios: elasticsearch y input-gelf. Puede utilizar el siguiente Dockerfile que debe ser creado dentro de un directorio `fluentd`."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:249
#, no-wrap
msgid ""
"FROM fluent/fluentd:v1.3-debian\n"
"RUN [\"gem\", \"install\", \"fluent-plugin-elasticsearch\", \"--version\", \"3.7.0\"]\n"
"RUN [\"gem\", \"install\", \"fluent-plugin-input-gelf\", \"--version\", \"0.3.1\"]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:252
#, fuzzy
msgid "You can build the image or let docker-compose build it for you."
msgstr "Puedes construir la imagen o dejar que docker-compose la construya por ti."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:254
#, fuzzy
msgid "Then you need to create a fluentd configuration file inside `$HOME/fluentd/fluent.conf`"
msgstr "A continuación, es necesario crear un archivo de configuración de fluentd dentro de `$HOME/fluentd/fluent.conf`"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:263
#, no-wrap
msgid ""
"<source>\n"
"  type gelf\n"
"  tag example.gelf\n"
"  bind 0.0.0.0\n"
"  port 12201\n"
"</source>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:270
#, no-wrap
msgid ""
"<match example.gelf>\n"
"  @type elasticsearch\n"
"  host elasticsearch\n"
"  port 9200\n"
"  logstash_format true\n"
"</match>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:273
#, fuzzy
msgid "Finally, launch the components that compose the EFK Stack:"
msgstr "Por último, lance los componentes que componen la pila EFK:"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:276
#: upstream/_guides/centralized-log-management.adoc:364
#, fuzzy
msgid "Fluentd"
msgstr "Fluentd"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:296
#: upstream/_guides/centralized-log-management.adoc:384
#, no-wrap
msgid ""
"services:\n"
"  elasticsearch:\n"
"    image: {elasticsearch-image}\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"      - \"9300:9300\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"      discovery.type: \"single-node\"\n"
"      cluster.routing.allocation.disk.threshold_enabled: false\n"
"    networks:\n"
"      - efk\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:309
#, no-wrap
msgid ""
"  fluentd:\n"
"    build: fluentd\n"
"    ports:\n"
"      - \"12201:12201/udp\"\n"
"    volumes:\n"
"      - source: $HOME/fluentd\n"
"        target: /fluentd/etc\n"
"        type: bind\n"
"    networks:\n"
"      - efk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:318
#: upstream/_guides/centralized-log-management.adoc:406
#, no-wrap
msgid ""
"  kibana:\n"
"    image: {kibana-image}\n"
"    ports:\n"
"      - \"5601:5601\"\n"
"    networks:\n"
"      - efk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:322
#: upstream/_guides/centralized-log-management.adoc:410
#, no-wrap
msgid ""
"networks:\n"
"  efk:\n"
"    driver: bridge\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:325
#: upstream/_guides/centralized-log-management.adoc:424
#, fuzzy
msgid "Launch your application, you should see your logs arriving inside EFK: you can use Kibana available at http://localhost:5601/ to access them."
msgstr "Inicie su aplicación, debería ver sus registros llegando dentro de EFK: puede utilizar Kibana disponible en  http://localhost:5601/  para acceder a ellos."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:326
#, fuzzy, no-wrap
msgid "GELF alternative: use Syslog"
msgstr "Alternativa a GELF: utilizar Syslog"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:330
#, fuzzy
msgid "You can also send your logs to Fluentd using a Syslog input.  As opposed to the GELF input, the Syslog input will not render multiline logs in one event, that's why we advise to use the GELF input that we implement in Quarkus."
msgstr "También puede enviar sus registros a Fluentd utilizando una entrada Syslog. A diferencia de la entrada GELF, la entrada Syslog no mostrará los registros de varias líneas en un solo evento, por lo que aconsejamos utilizar la entrada GELF que implementamos en Quarkus."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:333
#, fuzzy
msgid "First, you need to create a Fluentd image with the elasticsearch plugin.  You can use the following Dockerfile that should be created inside a `fluentd` directory."
msgstr "En primer lugar, necesita crear una imagen de Fluentd con el plugin de elasticsearch. Puede utilizar el siguiente Dockerfile que debe ser creado dentro de un directorio `fluentd`."

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:338
#, no-wrap
msgid ""
"FROM fluent/fluentd:v1.3-debian\n"
"RUN [\"gem\", \"install\", \"fluent-plugin-elasticsearch\", \"--version\", \"3.7.0\"]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:341
#, fuzzy
msgid "Then, you need to create a fluentd configuration file inside `$HOME/fluentd/fluent.conf`"
msgstr "A continuación, es necesario crear un archivo de configuración de fluentd dentro de `$HOME/fluentd/fluent.conf`"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:351
#, no-wrap
msgid ""
"<source>\n"
"  @type syslog\n"
"  port 5140\n"
"  bind 0.0.0.0\n"
"  message_format rfc5424\n"
"  tag system\n"
"</source>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:358
#, no-wrap
msgid ""
"<match **>\n"
"  @type elasticsearch\n"
"  host elasticsearch\n"
"  port 9200\n"
"  logstash_format true\n"
"</match>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:361
#, fuzzy
msgid "Then, launch the components that compose the EFK Stack:"
msgstr "A continuación, inicie los componentes que componen la pila EFK:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:397
#, no-wrap
msgid ""
"  fluentd:\n"
"    build: fluentd\n"
"    ports:\n"
"      - \"5140:5140/udp\"\n"
"    volumes:\n"
"      - source: $HOME/fluentd\n"
"        target: /fluentd/etc\n"
"        type: bind\n"
"    networks:\n"
"      - efk\n"
"    depends_on:\n"
"      - elasticsearch\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:413
#, fuzzy
msgid "Finally, configure your application to send logs to EFK using Syslog:"
msgstr "Por último, configure su aplicación para que envíe los registros a EFK mediante Syslog:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:421
#, no-wrap
msgid ""
"quarkus.log.syslog.enable=true\n"
"quarkus.log.syslog.endpoint=localhost:5140\n"
"quarkus.log.syslog.protocol=udp\n"
"quarkus.log.syslog.app-name=quarkus\n"
"quarkus.log.syslog.hostname=quarkus-test\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:425
#, fuzzy, no-wrap
msgid "Elasticsearch indexing consideration"
msgstr "Consideración de la indexación de Elasticsearch"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:430
#, fuzzy
msgid "Be careful that, by default, Elasticsearch will automatically map unknown fields (if not disabled in the index settings) by detecting their type.  This can become tricky if you use log parameters (which are included by default), or if you enable MDC inclusion (disabled by default), as the first log will define the type of the message parameter (or MDC parameter) field inside the index."
msgstr "Tenga cuidado de que, por defecto, Elasticsearch mapeará automáticamente los campos desconocidos (si no se desactiva en la configuración del índice) detectando su tipo. Esto puede llegar a ser complicado si se utilizan parámetros de registro (que se incluyen por defecto), o si se habilita la inclusión de MDC (deshabilitada por defecto), ya que el primer registro definirá el tipo del campo de parámetro de mensaje (o parámetro MDC) dentro del índice."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:432
#, fuzzy
msgid "Imagine the following case:"
msgstr "Imagina el siguiente caso:"

#. type: delimited block -
#: upstream/_guides/centralized-log-management.adoc:437
#, no-wrap
msgid ""
"LOG.info(\"some {} message {} with {} param\", 1, 2, 3);\n"
"LOG.info(\"other {} message {} with {} param\", true, true, true);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:442
#, fuzzy
msgid "With log message parameters enabled, the first log message sent to Elasticsearch will have a `MessageParam0` parameter with an `int` type; this will configure the index with a field of type `integer`.  When the second message will arrive to Elasticsearch, it will have a `MessageParam0` parameter with the boolean value `true`, and this will generate an indexing error."
msgstr "Con los parámetros de mensajes de registro habilitados, el primer mensaje de registro enviado a Elasticsearch tendrá un parámetro `MessageParam0` con un tipo `int`; esto configurará el índice con un campo de tipo `integer`. Cuando el segundo mensaje llegue a Elasticsearch, tendrá un parámetro `MessageParam0` con el valor booleano `true`, y esto generará un error de indexación."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:445
#, fuzzy
msgid "To work around this limitation, you can disable sending log message parameters via `logging-gelf` by configuring `quarkus.log.handler.gelf.include-log-message-parameters=false`, or you can configure your Elasticsearch index to store those fields as text or keyword, Elasticsearch will then automatically make the translation from int/boolean to a String."
msgstr "Para evitar esta limitación, puede deshabilitar el envío de parámetros de mensajes de registro a través de `logging-gelf` configurando `quarkus.log.handler.gelf.include-log-message-parameters=false`, o puede configurar su índice de Elasticsearch para almacenar esos campos como texto o palabra clave, Elasticsearch entonces hará automáticamente la traducción de int/boolean a una Cadena."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:447
#, fuzzy
msgid "See the following documentation for Graylog (but the same issue exists for the other central logging stacks): link:https://docs.graylog.org/en/3.2/pages/configuration/elasticsearch.html#custom-index-mappings[Custom Index Mappings]."
msgstr "Consulte la siguiente documentación para Graylog (pero el mismo problema existe para las otras pilas de registro central):  link:https://docs.graylog.org/en/3.2/pages/configuration/elasticsearch.html#custom-index-mappings[Asignaciones de índice personalizadas]."

#. type: Title ==
#: upstream/_guides/centralized-log-management.adoc:449
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:452
#, fuzzy
msgid "Configuration is done through the usual `application.properties` file."
msgstr "La configuración se realiza a través del archivo habitual `application.properties`."

#. type: Plain text
#: upstream/_guides/centralized-log-management.adoc:456
#, fuzzy
msgid "This extension uses the `logstash-gelf` library that allow more configuration options via system properties, you can access its documentation here: https://logging.paluch.biz/ ."
msgstr "Esta extensión utiliza la biblioteca `logstash-gelf` que permite más opciones de configuración a través de las propiedades del sistema, puede acceder a su documentación aquí:  https://logging.paluch.biz/ ."
