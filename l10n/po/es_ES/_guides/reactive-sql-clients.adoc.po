# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/reactive-sql-clients.adoc:6
#, fuzzy, no-wrap
msgid "Reactive SQL Clients"
msgstr "Clientes SQL reactivos"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:16
#, fuzzy
msgid "The Reactive SQL Clients have a straightforward API focusing on scalability and low-overhead.  Currently, the following database servers are supported:"
msgstr "Los Clientes SQL Reactivos tienen una API sencilla que se centra en la escalabilidad y la baja sobrecarga. Actualmente, los siguientes servidores de bases de datos son compatibles:"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:18
#: upstream/_guides/reactive-sql-clients.adoc:478
#: upstream/_guides/reactive-sql-clients.adoc:756
#: upstream/_guides/reactive-sql-clients.adoc:857
#, fuzzy, no-wrap
msgid "IBM Db2"
msgstr "IBM Db2"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:19
#: upstream/_guides/reactive-sql-clients.adoc:498
#: upstream/_guides/reactive-sql-clients.adoc:662
#: upstream/_guides/reactive-sql-clients.adoc:768
#: upstream/_guides/reactive-sql-clients.adoc:873
#, fuzzy, no-wrap
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:20
#: upstream/_guides/reactive-sql-clients.adoc:483
#: upstream/_guides/reactive-sql-clients.adoc:680
#: upstream/_guides/reactive-sql-clients.adoc:759
#: upstream/_guides/reactive-sql-clients.adoc:861
#, fuzzy, no-wrap
msgid "MariaDB/MySQL"
msgstr "MariaDB/MySQL"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:21
#: upstream/_guides/reactive-sql-clients.adoc:488
#: upstream/_guides/reactive-sql-clients.adoc:762
#: upstream/_guides/reactive-sql-clients.adoc:865
#, fuzzy, no-wrap
msgid "Microsoft SQL Server"
msgstr "Microsoft SQL Server"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:22
#: upstream/_guides/reactive-sql-clients.adoc:493
#: upstream/_guides/reactive-sql-clients.adoc:765
#: upstream/_guides/reactive-sql-clients.adoc:869
#, fuzzy, no-wrap
msgid "Oracle"
msgstr "Oracle"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:26
#, fuzzy
msgid "The Reactive SQL Client for Oracle is considered _tech preview_."
msgstr "El Cliente SQL Reactivo para Oracle se considera _un avance técnico_."

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:30
#, fuzzy
msgid "In _tech preview_ mode, early feedback is requested to mature the idea.  There is no guarantee of stability in the platform until the solution matures.  Feedback is welcome on our https://groups.google.com/d/forum/quarkus-dev[mailing list] or as issues in our https://github.com/quarkusio/quarkus/issues[GitHub issue tracker]."
msgstr "En el modo de _previsiones técnicas_, se solicitan los primeros comentarios para madurar la idea. No hay garantía de estabilidad en la plataforma hasta que la solución madure. Los comentarios son bienvenidos en nuestra  link:https://groups.google.com/d/forum/quarkus-dev[lista de correo] o como problemas en nuestro  link:https://github.com/quarkusio/quarkus/issues[rastreador de problemas de GitHub]."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:33
#, fuzzy
msgid "In this guide, you will learn how to implement a simple CRUD application exposing data stored in *PostgreSQL* over a RESTful API."
msgstr "En esta guía, aprenderá a implementar una aplicación CRUD sencilla que exponga datos almacenados en *PostgreSQL* a través de una API RESTful."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:35
#, fuzzy
msgid "Extension and connection pool class names for each client can be found at the bottom of this document."
msgstr "Los nombres de las clases de extensión y del pool de conexiones para cada cliente se encuentran al final de este documento."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:37
#, fuzzy
msgid "If you are not familiar with the Quarkus Vert.x extension, consider reading the xref:vertx.adoc[Using Eclipse Vert.x] guide first."
msgstr "Si no está familiarizado con la extensión Quarkus Vert.x, considere leer primero la guía  link:vertx.html[Using Eclipse Vert.x]."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:39
#, fuzzy
msgid "The application shall manage fruit entities:"
msgstr "La aplicación gestionará las entidades de la fruta:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:43
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:45
#, no-wrap
msgid "    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:47
#, no-wrap
msgid "    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:50
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:54
#, no-wrap
msgid ""
"    public Fruit(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:60
#, no-wrap
msgid ""
"    public Fruit(Long id, String name) {\n"
"        this.id = id;\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:65
#, fuzzy
msgid "Do you need a ready-to-use PostgreSQL server to try out the examples?"
msgstr "¿Necesita un servidor PostgreSQL listo para usar para probar los ejemplos?"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:69
#, no-wrap
msgid "docker run -it --rm=true --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:72
#, fuzzy, no-wrap
msgid "Installing"
msgstr "Instalación de"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:74
#, fuzzy, no-wrap
msgid "Reactive PostgreSQL Client extension"
msgstr "Extensión de cliente PostgreSQL reactivo"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:78
#, fuzzy
msgid "First, make sure your project has the `quarkus-reactive-pg-client` extension enabled.  If you are creating a new project, use the following command:"
msgstr "En primer lugar, asegúrese de que su proyecto tiene activada la extensión `quarkus-reactive-pg-client`. Si está creando un nuevo proyecto, utilice el siguiente comando:"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:84
#, fuzzy
msgid "If you have an already created project, the `reactive-pg-client` extension can be added to an existing Quarkus project with the `add-extension` command:"
msgstr "Si tiene un proyecto ya creado, la extensión `reactive-pg-client` puede añadirse a un proyecto existente de Quarkus con el comando `add-extension`:"

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:89
#, fuzzy
msgid "Otherwise, you can manually add the dependency to your build file:"
msgstr "De lo contrario, puede añadir manualmente la dependencia a su archivo de compilación:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:91
#: upstream/_guides/reactive-sql-clients.adoc:126
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:97
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-reactive-pg-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:100
#: upstream/_guides/reactive-sql-clients.adoc:135
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:103
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-reactive-pg-client\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:105
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motín"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:108
#, fuzzy
msgid "RESTEasy Reactive includes supports for Mutiny types (e.g. `Uni` and `Multi`) out of the box."
msgstr "RESTEasy Reactive incluye soporte para los tipos de motín (por ejemplo, `Uni` y `Multi`) fuera de la caja."

#. type: delimited block =
#: upstream/_guides/reactive-sql-clients.adoc:113
#, fuzzy
msgid "In this guide, we will use the Mutiny API of the Reactive PostgreSQL Client.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "En esta guía, utilizaremos la API Mutiny del Cliente Reactivo de PostgreSQL. Si no está familiarizado con Mutiny, consulte  link:mutiny-primer.html[Mutiny - una biblioteca de programación reactiva intuitiva]."

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:115
#, fuzzy, no-wrap
msgid "JSON Binding"
msgstr "Enlace JSON"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:119
#, fuzzy
msgid "We will expose `Fruit` instances over HTTP in the JSON format.  Consequently, you also need to add the `quarkus-resteasy-reactive-jackson` extension:"
msgstr "Expondremos las instancias de `Fruit` a través de HTTP en formato JSON. En consecuencia, también es necesario añadir la extensión `quarkus-resteasy-reactive-jackson`:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:124
#, fuzzy
msgid "If you prefer not to use the command line, manually add the dependency to your build file:"
msgstr "Si prefiere no utilizar la línea de comandos, añada manualmente la dependencia a su archivo de compilación:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:132
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:138
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:141
#, fuzzy
msgid "Of course, this is only a requirement for this guide, not any application using the Reactive PostgreSQL Client."
msgstr "Por supuesto, esto es sólo un requisito para esta guía, no para cualquier aplicación que utilice el Cliente Reactivo PostgreSQL."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:142
#, fuzzy, no-wrap
msgid "Configuring"
msgstr "Configuración de"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:145
#, fuzzy
msgid "The Reactive PostgreSQL Client can be configured with standard Quarkus datasource properties and a reactive URL:"
msgstr "El Cliente Reactivo PostgreSQL puede configurarse con las propiedades estándar de las fuentes de datos de Quarkus y una URL reactiva:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:147
#, fuzzy, no-wrap
msgid "src/main/resources/application.properties"
msgstr "src/main/resources/application.properties"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:153
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.reactive.url=postgresql://localhost:5432/quarkus_test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:156
#, fuzzy
msgid "With that you may create your `FruitResource` skeleton and `@Inject` a `io.vertx.mutiny.pgclient.PgPool` instance:"
msgstr "Con esto puede crear su esqueleto `FruitResource` y `@Inject` una instancia de `io.vertx.mutiny.pgclient.PgPool`:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:158
#: upstream/_guides/reactive-sql-clients.adoc:177
#: upstream/_guides/reactive-sql-clients.adoc:266
#: upstream/_guides/reactive-sql-clients.adoc:316
#: upstream/_guides/reactive-sql-clients.adoc:343
#: upstream/_guides/reactive-sql-clients.adoc:375
#, fuzzy, no-wrap
msgid "src/main/java/org/acme/vertx/FruitResource.java"
msgstr "src/main/java/org/acme/vertx/FruitResource.java"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:162
#, no-wrap
msgid ""
"@Path(\"fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:166
#, no-wrap
msgid ""
"    @Inject\n"
"    io.vertx.mutiny.pgclient.PgPool client;\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:168
#, fuzzy, no-wrap
msgid "Database schema and seed data"
msgstr "Esquema de la base de datos y datos iniciales"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:172
#, fuzzy
msgid "Before we implement the REST endpoint and data management code, we need to set up the database schema.  It would also be convenient to have some data inserted up-front."
msgstr "Antes de implementar el endpoint REST y el código de gestión de datos, necesitamos configurar el esquema de la base de datos. También sería conveniente tener algunos datos insertados por adelantado."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:175
#, fuzzy
msgid "For production, we would recommend to use something like the xref:flyway.adoc[Flyway database migration tool].  But for development we can simply drop and create the tables on startup, and then insert a few fruits."
msgstr "Para la producción recomendaríamos usar algo como la  link:flyway.html[herramienta de migración de bases de datos Flyway]. Pero para el desarrollo podemos simplemente soltar y crear las tablas al inicio, y luego insertar algunas frutas."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:182
#, no-wrap
msgid ""
"@Inject\n"
"@ConfigProperty(name = \"myapp.schema.create\", defaultValue = \"true\") // <1>\n"
"boolean schemaCreate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:188
#, no-wrap
msgid ""
"void config(@Observes StartupEvent ev) {\n"
"    if (schemaCreate) {\n"
"        initdb();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:192
#, no-wrap
msgid ""
"private void initdb() {\n"
"    // TODO\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:195
#, fuzzy
msgid "You may override the default value of the `myapp.schema.create` property in the `application.properties` file."
msgstr "Puede anular el valor por defecto de la propiedad `myapp.schema.create` en el archivo `application.properties`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:199
#, fuzzy
msgid "Almost ready! To initialize the DB in development mode, we will use the client simple `query` method.  It returns a `Uni` and thus can be composed to execute queries sequentially:"
msgstr "¡Casi listo! Para inicializar la BD en modo de desarrollo, utilizaremos el método simple del cliente `query`. Devuelve un `Uni` y así se puede componer para ejecutar consultas de forma secuencial:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:208
#, no-wrap
msgid ""
"client.query(\"DROP TABLE IF EXISTS fruits\").execute()\n"
"    .flatMap(r -> client.query(\"CREATE TABLE fruits (id SERIAL PRIMARY KEY, name TEXT NOT NULL)\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Orange')\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Pear')\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Apple')\").execute())\n"
"    .await().indefinitely();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:213
#, fuzzy
msgid "Wondering why we need block until the latest query is completed? This code is part of a `@PostConstruct` method and Quarkus invokes it synchronously.  As a consequence, returning prematurely could lead to serving requests while the database is not ready yet."
msgstr "¿Te preguntas por qué necesitamos bloquear hasta que se complete la última consulta? Este código forma parte de un método `@PostConstruct` y Quarkus lo invoca de forma sincrónica. Como consecuencia, devolver prematuramente podría llevar a servir peticiones mientras la base de datos no está lista todavía."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:217
#, fuzzy
msgid "That's it! So far we have seen how to configure a pooled client and execute simple queries.  We are now ready to develop the data management code and implement our RESTful endpoint."
msgstr "Ya está. Hasta ahora hemos visto cómo configurar un cliente agrupado y ejecutar consultas simples. Ahora estamos listos para desarrollar el código de gestión de datos e implementar nuestro endpoint RESTful."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:218
#, fuzzy, no-wrap
msgid "Using"
msgstr "Utilizando"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:220
#, fuzzy, no-wrap
msgid "Query results traversal"
msgstr "Recorrido de los resultados de la consulta"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:224
#, fuzzy
msgid "In development mode, the database is set up with a few rows in the `fruits` table.  To retrieve all the data, we will use the `query` method again:"
msgstr "En el modo de desarrollo, la base de datos está configurada con unas pocas filas en la tabla `fruits`. Para recuperar todos los datos, volveremos a utilizar el método `query`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:228
#, no-wrap
msgid "Uni<RowSet<Row>> rowSet = client.query(\"SELECT id, name FROM fruits ORDER BY name ASC\").execute();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:232
#, fuzzy
msgid "When the operation completes, we will get a `RowSet` that has all the rows buffered in memory.  A `RowSet` is an `java.lang.Iterable<Row>` and thus can be converted to a `Multi`:"
msgstr "Cuando la operación se complete, obtendremos un `RowSet` que tiene todas las filas almacenadas en memoria. Un `RowSet` es un `java.lang.Iterable&amp;lt;Row&amp;gt;` y, por tanto, puede convertirse en un `Multi`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:238
#, no-wrap
msgid ""
"Multi<Fruit> fruits = rowSet\n"
"  .onItem().transformToMulti(set -> Multi.createFrom().iterable(set))\n"
"  .onItem().transform(Fruit::from);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:242
#, fuzzy
msgid "The `Fruit#from` method converts a `Row` instance to a `Fruit` instance.  It is extracted as a convenience for the implementation of the other data management methods:"
msgstr "El método `Fruit#from` convierte una instancia `Row` en una instancia `Fruit`. Se extrae como una conveniencia para la implementación de los otros métodos de gestión de datos:"

#. type: Block title
#: upstream/_guides/reactive-sql-clients.adoc:244
#: upstream/_guides/reactive-sql-clients.adoc:254
#: upstream/_guides/reactive-sql-clients.adoc:301
#: upstream/_guides/reactive-sql-clients.adoc:332
#: upstream/_guides/reactive-sql-clients.adoc:363
#, fuzzy, no-wrap
msgid "src/main/java/org/acme/vertx/Fruit.java"
msgstr "src/main/java/org/acme/vertx/Fruit.java"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:249
#, no-wrap
msgid ""
"private static Fruit from(Row row) {\n"
"    return new Fruit(row.getLong(\"id\"), row.getString(\"name\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:252
#, fuzzy
msgid "Putting it all together, the `Fruit.findAll` method looks like:"
msgstr "Poniendo todo junto, el método `Fruit.findAll` parece:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:261
#, no-wrap
msgid ""
"public static Multi<Fruit> findAll(PgPool client) {\n"
"    return client.query(\"SELECT id, name FROM fruits ORDER BY name ASC\").execute()\n"
"            .onItem().transformToMulti(set -> Multi.createFrom().iterable(set))\n"
"            .onItem().transform(Fruit::from);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:264
#, fuzzy
msgid "And the endpoint to get all fruits from the backend:"
msgstr "Y el punto final para obtener todos los frutos del backend:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:272
#, no-wrap
msgid ""
"@GET\n"
"public Multi<Fruit> get() {\n"
"    return Fruit.findAll(client);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:275
#, fuzzy
msgid "Now start Quarkus in dev mode with:"
msgstr "Ahora inicie Quarkus en modo dev con:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:279
#, fuzzy
msgid "Lastly, open your browser and navigate to http://localhost:8080/fruits, you should see:"
msgstr "Por último, abra su navegador y navegue hasta  http://localhost:8080/fruits  debería ver:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:283
#, no-wrap
msgid "[{\"id\":3,\"name\":\"Apple\"},{\"id\":1,\"name\":\"Orange\"},{\"id\":2,\"name\":\"Pear\"}]\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:285
#, fuzzy, no-wrap
msgid "Prepared queries"
msgstr "Consultas preparadas"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:288
#, fuzzy
msgid "The Reactive PostgreSQL Client can also prepare queries and take parameters that are replaced in the SQL statement at execution time:"
msgstr "El Cliente Reactivo PostgreSQL también puede preparar consultas y tomar parámetros que son reemplazados en la sentencia SQL en tiempo de ejecución:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:292
#, no-wrap
msgid "client.preparedQuery(\"SELECT id, name FROM fruits WHERE id = $1\").execute(Tuple.of(id))\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:296
#, fuzzy
msgid "For PostgreSQL, the SQL string can refer to parameters by position, using `$1`, `$2`, ...etc.  Please refer to the xref:reactive-sql-clients-details[Database Clients details] section for other databases."
msgstr "En el caso de PostgreSQL, la cadena SQL puede referirse a los parámetros por posición, utilizando `$1`, `$2`, ...etc. Consulte la sección  link:#Database Clients details[[Detalles de los clientes de la base de datos]] para otras bases de datos."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:299
#, fuzzy
msgid "Similar to the simple `query` method, `preparedQuery` returns an instance of `PreparedQuery<RowSet<Row>>`.  Equipped with this tooling, we are able to safely use an `id` provided by the user to get the details of a particular fruit:"
msgstr "Al igual que el método simple `query`, `preparedQuery` devuelve una instancia de `PreparedQuery&amp;lt;RowSet&amp;lt;Row&amp;gt;&amp;gt;`. Equipados con esta herramienta, podemos utilizar con seguridad un `id` proporcionado por el usuario para obtener los detalles de una fruta en particular:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:308
#, no-wrap
msgid ""
"public static Uni<Fruit> findById(PgPool client, Long id) {\n"
"    return client.preparedQuery(\"SELECT id, name FROM fruits WHERE id = $1\").execute(Tuple.of(id)) // <1>\n"
"            .onItem().transform(RowSet::iterator) // <2>\n"
"            .onItem().transform(iterator -> iterator.hasNext() ? from(iterator.next()) : null); // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:310
#, fuzzy
msgid "Create a `Tuple` to hold the prepared query parameters."
msgstr "Cree un `Tuple` para contener los parámetros de la consulta preparada."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:311
#, fuzzy
msgid "Get an `Iterator` for the `RowSet` result."
msgstr "Obtenga un `Iterator` para el resultado de `RowSet`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:312
#, fuzzy
msgid "Create a `Fruit` instance from the `Row` if an entity was found."
msgstr "Crea una instancia de `Fruit` a partir de `Row` si se encuentra una entidad."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:314
#, fuzzy
msgid "And in the Jakarta REST resource:"
msgstr "Y en el recurso JAX-RS:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:325
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"{id}\")\n"
"public Uni<Response> getSingle(Long id) {\n"
"    return Fruit.findById(client, id)\n"
"            .onItem().transform(fruit -> fruit != null ? Response.ok(fruit) : Response.status(Status.NOT_FOUND)) // <1>\n"
"            .onItem().transform(ResponseBuilder::build); // <2>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:327
#, fuzzy
msgid "Prepare a Jakarta REST response with either the `Fruit` instance if found or the `404` status code."
msgstr "Prepara una respuesta JAX-RS con la instancia `Fruit` si se encuentra o el código de estado `404`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:328
#, fuzzy
msgid "Build and send the response."
msgstr "Construye y envía la respuesta."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:330
#, fuzzy
msgid "The same logic applies when saving a `Fruit`:"
msgstr "La misma lógica se aplica al guardar un `Fruit`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:338
#, no-wrap
msgid ""
"public Uni<Long> save(PgPool client) {\n"
"    return client.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\").execute(Tuple.of(name))\n"
"            .onItem().transform(pgRowSet -> pgRowSet.iterator().next().getLong(\"id\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:341
#, fuzzy
msgid "And in the web resource we handle the `POST` request:"
msgstr "Y en el recurso web gestionamos la solicitud `POST`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:351
#, no-wrap
msgid ""
"@POST\n"
"public Uni<Response> create(Fruit fruit) {\n"
"    return fruit.save(client)\n"
"            .onItem().transform(id -> URI.create(\"/fruits/\" + id))\n"
"            .onItem().transform(uri -> Response.created(uri).build());\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:353
#, fuzzy, no-wrap
msgid "Result metadata"
msgstr "Metadatos de resultados"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:356
#, fuzzy
msgid "A `RowSet` does not only hold your data in memory, it also gives you some information about the data itself, such as:"
msgstr "Un `RowSet` no sólo mantiene sus datos en la memoria, sino que también le da alguna información sobre los propios datos, como por ejemplo:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:358
#, fuzzy
msgid "the number of rows affected by the query (inserted/deleted/updated/retrieved depending on the query type),"
msgstr "el número de filas afectadas por la consulta (insertadas/borradas/actualizadas/recuperadas según el tipo de consulta),"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:359
#, fuzzy
msgid "the column names."
msgstr "los nombres de las columnas."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:361
#, fuzzy
msgid "Let's use this to support removal of fruits in the database:"
msgstr "Utilicemos esto para apoyar la eliminación de frutas en la base de datos:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:369
#, no-wrap
msgid ""
"public static Uni<Boolean> delete(PgPool client, Long id) {\n"
"    return client.preparedQuery(\"DELETE FROM fruits WHERE id = $1\").execute(Tuple.of(id))\n"
"            .onItem().transform(pgRowSet -> pgRowSet.rowCount() == 1); // <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:371
#, fuzzy
msgid "Inspect metadata to determine if a fruit has been actually deleted."
msgstr "Inspeccionar los metadatos para determinar si una fruta ha sido realmente eliminada."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:373
#, fuzzy
msgid "And to handle the HTTP `DELETE` method in the web resource:"
msgstr "Y para manejar el método HTTP `DELETE` en el recurso web:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:384
#, no-wrap
msgid ""
"@DELETE\n"
"@Path(\"{id}\")\n"
"public Uni<Response> delete(Long id) {\n"
"    return Fruit.delete(client, id)\n"
"            .onItem().transform(deleted -> deleted ? Status.NO_CONTENT : Status.NOT_FOUND)\n"
"            .onItem().transform(status -> Response.status(status).build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:388
#, fuzzy
msgid "With `GET`, `POST` and `DELETE` methods implemented, we may now create a minimal web page to try the RESTful application out.  We will use https://jquery.com/[jQuery] to simplify interactions with the backend:"
msgstr "Con los métodos `GET`, `POST` y `DELETE` implementados, ahora podemos crear una página web mínima para probar la aplicación RESTful. Utilizaremos  link:https://jquery.com/[jQuery] para simplificar las interacciones con el backend:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:401
#, no-wrap
msgid ""
"<!doctype html>\n"
"<html>\n"
"<head>\n"
"    <meta charset=\"utf-8\"/>\n"
"    <title>Reactive PostgreSQL Client - Quarkus</title>\n"
"    <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n"
"            integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\" crossorigin=\"anonymous\"></script>\n"
"    <script type=\"application/javascript\" src=\"fruits.js\"></script>\n"
"</head>\n"
"<body>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:403
#, no-wrap
msgid "<h1>Fruits API Testing</h1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:406
#, no-wrap
msgid ""
"<h2>All fruits</h2>\n"
"<div id=\"all-fruits\"></div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:411
#, no-wrap
msgid ""
"<h2>Create Fruit</h2>\n"
"<input id=\"fruit-name\" type=\"text\">\n"
"<button id=\"create-fruit-button\" type=\"button\">Create</button>\n"
"<div id=\"create-fruit\"></div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:414
#, no-wrap
msgid ""
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:417
#, fuzzy
msgid "In the Javascript code, we need a function to refresh the list of fruits when:"
msgstr "En el código Javascript, necesitamos una función que refresque la lista de frutas cuando:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:419
#, fuzzy
msgid "the page is loaded, or"
msgstr "la página está cargada, o"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:420
#, fuzzy
msgid "a fruit is added, or"
msgstr "se añade una fruta, o"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:421
#, fuzzy
msgid "a fruit is deleted."
msgstr "se elimina una fruta."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:446
#, no-wrap
msgid ""
"function refresh() {\n"
"    $.get('/fruits', function (fruits) {\n"
"        var list = '';\n"
"        (fruits || []).forEach(function (fruit) { // <1>\n"
"            list = list\n"
"                + '<tr>'\n"
"                + '<td>' + fruit.id + '</td>'\n"
"                + '<td>' + fruit.name + '</td>'\n"
"                + '<td><a href=\"#\" onclick=\"deleteFruit(' + fruit.id + ')\">Delete</a></td>'\n"
"                + '</tr>'\n"
"        });\n"
"        if (list.length > 0) {\n"
"            list = ''\n"
"                + '<table><thead><th>Id</th><th>Name</th><th></th></thead>'\n"
"                + list\n"
"                + '</table>';\n"
"        } else {\n"
"            list = \"No fruits in database\"\n"
"        }\n"
"        $('#all-fruits').html(list);\n"
"    });\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:450
#, no-wrap
msgid ""
"function deleteFruit(id) {\n"
"    $.ajax('/fruits/' + id, {method: 'DELETE'}).then(refresh);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:452
#, no-wrap
msgid "$(document).ready(function () {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:461
#, no-wrap
msgid ""
"    $('#create-fruit-button').click(function () {\n"
"        var fruitName = $('#fruit-name').val();\n"
"        $.post({\n"
"            url: '/fruits',\n"
"            contentType: 'application/json',\n"
"            data: JSON.stringify({name: fruitName})\n"
"        }).then(refresh);\n"
"    });\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:464
#, no-wrap
msgid ""
"    refresh();\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:466
#, fuzzy
msgid "The `fruits` parameter is not defined when the database is empty."
msgstr "El parámetro `fruits` no está definido cuando la base de datos está vacía."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:469
#, fuzzy
msgid "All done! Navigate to http://localhost:8080/fruits.html and read/create/delete some fruits."
msgstr "Ya está todo hecho. Navega a  http://localhost:8080/fruits.html  y lee/crea/borra algunas frutas."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:471
#, fuzzy, no-wrap
msgid "Database Clients details"
msgstr "Detalles de los clientes de la base de datos"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:475
#: upstream/_guides/reactive-sql-clients.adoc:753
#, fuzzy, no-wrap
msgid "Database"
msgstr "Base de datos"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:475
#, fuzzy, no-wrap
msgid "Extension name"
msgstr "Nombre de la extensión"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:475
#, fuzzy, no-wrap
msgid "Pool class name"
msgstr "Nombre de la clase de piscina"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:477
#, fuzzy, no-wrap
msgid "Placeholders"
msgstr "Marcadores de posición"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:479
#, fuzzy, no-wrap
msgid "`quarkus-reactive-db2-client`"
msgstr "`quarkus-reactive-db2-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:480
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.db2client.DB2Pool`"
msgstr "`io.vertx.mutiny.db2client.DB2Pool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:482
#: upstream/_guides/reactive-sql-clients.adoc:487
#: upstream/_guides/reactive-sql-clients.adoc:497
#, fuzzy, no-wrap
msgid "`?`"
msgstr "`?`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:484
#, fuzzy, no-wrap
msgid "`quarkus-reactive-mysql-client`"
msgstr "`quarkus-reactive-mysql-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:485
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.mysqlclient.MySQLPool`"
msgstr "`io.vertx.mutiny.mysqlclient.MySQLPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:489
#, fuzzy, no-wrap
msgid "`quarkus-reactive-mssql-client`"
msgstr "`quarkus-reactive-mssql-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:490
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.mssqlclient.MSSQLPool`"
msgstr "`io.vertx.mutiny.mssqlclient.MSSQLPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:492
#, fuzzy, no-wrap
msgid "`@p1`, `@p2`, etc."
msgstr "`@p1`, `@p2`, etc."

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:494
#, fuzzy, no-wrap
msgid "`quarkus-reactive-oracle-client`"
msgstr "`quarkus-reactive-oracle-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:495
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.oracleclient.OraclePool`"
msgstr "`io.vertx.mutiny.oracleclient.OraclePool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:499
#, fuzzy, no-wrap
msgid "`quarkus-reactive-pg-client`"
msgstr "`quarkus-reactive-pg-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:500
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.pgclient.PgPool`"
msgstr "`io.vertx.mutiny.pgclient.PgPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:501
#, fuzzy, no-wrap
msgid "`$1`, `$2`, etc."
msgstr "`$1`, `$2`, etc."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:503
#, fuzzy, no-wrap
msgid "Transactions"
msgstr "Transacciones"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:508
#, fuzzy
msgid "The reactive SQL clients support transactions.  A transaction is started with `io.vertx.mutiny.sqlclient.SqlConnection#begin` and terminated with either `io.vertx.mutiny.sqlclient.Transaction#commit` or `io.vertx.mutiny.sqlclient.Transaction#rollback`.  All these operations are asynchronous:"
msgstr "Los clientes SQL reactivos admiten transacciones. Una transacción se inicia con `io.vertx.mutiny.sqlclient.SqlConnection#begin` y termina con `io.vertx.mutiny.sqlclient.Transaction#commit` o `io.vertx.mutiny.sqlclient.Transaction#rollback`. Todas estas operaciones son asíncronas:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:510
#, fuzzy
msgid "`connection.begin()` returns a `Uni<Transaction>`"
msgstr "`connection.begin()` devuelve un `Uni&amp;lt;Transaction&amp;gt;`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:511
#, fuzzy
msgid "`transaction.commit()` and `transaction.rollback()` return `Uni<Void>`"
msgstr "`transaction.commit()` y `transaction.rollback()` vuelven `Uni&amp;lt;Void&amp;gt;`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:514
#, fuzzy
msgid "Managing transactions in the reactive programming world can be cumbersome.  Instead of writing repetitive and complex (thus error-prone!) code, you can use the `io.vertx.mutiny.sqlclient.Pool#withTransaction` helper method."
msgstr "La gestión de las transacciones en el mundo de la programación reactiva puede ser engorrosa. En lugar de escribir código repetitivo y complejo (¡por tanto, propenso a errores!), puedes utilizar el método de ayuda `io.vertx.mutiny.sqlclient.Pool#withTransaction`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:516
#, fuzzy
msgid "The following snippet shows how to run 2 insertions in the same transaction:"
msgstr "El siguiente fragmento muestra cómo ejecutar 2 inserciones en la misma transacción:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:525
#, no-wrap
msgid ""
"public static Uni<Void> insertTwoFruits(PgPool client, Fruit fruit1, Fruit fruit2) {\n"
"    return client.withTransaction(conn -> {\n"
"        Uni<RowSet<Row>> insertOne = conn.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\")\n"
"                .execute(Tuple.of(fruit1.name));\n"
"        Uni<RowSet<Row>> insertTwo = conn.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\")\n"
"                .execute(Tuple.of(fruit2.name));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:531
#, no-wrap
msgid ""
"        return Uni.combine().all().unis(insertOne, insertTwo)\n"
"                // Ignore the results (the two ids)\n"
"                .discardItems();\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:534
#, fuzzy
msgid "In this example, the transaction is automatically committed on success or rolled back on failure."
msgstr "En este ejemplo, la transacción se consigna automáticamente en caso de éxito o se revierte en caso de fracaso."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:536
#, fuzzy
msgid "You can also create dependent actions as follows:"
msgstr "También puede crear acciones dependientes de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:540
#, no-wrap
msgid "return client.withTransaction(conn -> conn\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:543
#, no-wrap
msgid ""
"        .preparedQuery(\"INSERT INTO person (firstname,lastname) VALUES ($1,$2) RETURNING id\")\n"
"        .execute(Tuple.of(person.getFirstName(), person.getLastName()))\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:546
#, no-wrap
msgid ""
"        .onItem().transformToUni(id -> conn.preparedQuery(\"INSERT INTO addr (person_id,addrline1) VALUES ($1,$2)\")\n"
"                .execute(Tuple.of(id.iterator().next().getLong(\"id\"), person.getLastName())))\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:548
#, no-wrap
msgid "        .onItem().ignore().andContinueWithNull());\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:550
#, fuzzy, no-wrap
msgid "Working with batch query results"
msgstr "Trabajar con los resultados de las consultas por lotes"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:554
#, fuzzy
msgid "When executing batch queries, reactive SQL clients return a `RowSet` that corresponds to the results of the first element in the batch.  To get the results of the following batch elements, you must invoke the `RowSet#next` method until it returns `null`."
msgstr "Cuando se ejecutan consultas por lotes, los clientes SQL reactivos devuelven un `RowSet` que corresponde a los resultados del primer elemento del lote. Para obtener los resultados de los siguientes elementos del lote, se debe invocar el método `RowSet#next` hasta que devuelva `null`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:557
#, fuzzy
msgid "Let's say you want to update some rows and compute the total number of affected rows.  You must inspect each `RowSet`:"
msgstr "Supongamos que quiere actualizar algunas filas y calcular el número total de filas afectadas. Debe inspeccionar cada `RowSet`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:561
#, no-wrap
msgid "PreparedQuery<RowSet<Row>> preparedQuery = client.preparedQuery(\"UPDATE fruits SET name = $1 WHERE id = $2\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:566
#, no-wrap
msgid ""
"Uni<RowSet<Row>> rowSet = preparedQuery.executeBatch(Arrays.asList(\n"
"        Tuple.of(\"Orange\", 1),\n"
"        Tuple.of(\"Pear\", 2),\n"
"        Tuple.of(\"Apple\", 3)));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:574
#, no-wrap
msgid ""
"Uni<Integer> totalAffected = rowSet.onItem().transform(res -> {\n"
"    int total = 0;\n"
"    do {\n"
"        total += res.rowCount(); // <1>\n"
"    } while ((res = res.next()) != null); // <2>\n"
"    return total;\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:576
#, fuzzy
msgid "Compute the sum of `RowSet#rowCount`."
msgstr "Calcula la suma de `RowSet#rowCount`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:577
#, fuzzy
msgid "Invoke `RowSet#next` until it returns `null`."
msgstr "Invoca `RowSet#next` hasta que devuelva `null`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:579
#, fuzzy
msgid "As another example, if you want to load all the rows you just inserted, you must concatenate the contents of each `RowSet`:"
msgstr "Como otro ejemplo, si quiere cargar todas las filas que acaba de insertar, debe concatenar el contenido de cada `RowSet`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:583
#, no-wrap
msgid "PreparedQuery<RowSet<Row>> preparedQuery = client.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING *\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:588
#, no-wrap
msgid ""
"Uni<RowSet<Row>> rowSet = preparedQuery.executeBatch(Arrays.asList(\n"
"        Tuple.of(\"Orange\"),\n"
"        Tuple.of(\"Pear\"),\n"
"        Tuple.of(\"Apple\")));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:603
#, no-wrap
msgid ""
"// Generate a Multi of RowSet items\n"
"Multi<RowSet<Row>> rowSets = rowSet.onItem().transformToMulti(res -> {\n"
"    return Multi.createFrom().generator(() -> res, (rs, emitter) -> {\n"
"        RowSet<Row> next = null;\n"
"        if (rs != null) {\n"
"            emitter.emit(rs);\n"
"            next = rs.next();\n"
"        }\n"
"        if (next == null) {\n"
"            emitter.complete();\n"
"        }\n"
"        return next;\n"
"    });\n"
"});\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:606
#, no-wrap
msgid ""
"// Transform each RowSet into Multi of Row items and Concatenate\n"
"Multi<Row> rows = rowSets.onItem().transformToMultiAndConcatenate(Multi.createFrom()::iterable);\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:608
#, fuzzy, no-wrap
msgid "Multiple Datasources"
msgstr "Múltiples fuentes de datos"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:611
#, fuzzy
msgid "The reactive SQL clients support defining several datasources."
msgstr "Los clientes SQL reactivos admiten la definición de varias fuentes de datos."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:613
#, fuzzy
msgid "A typical configuration with several datasources would look like:"
msgstr "Una configuración típica con varias fuentes de datos tendría el siguiente aspecto:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:620
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql <1>\n"
"quarkus.datasource.username=user-default\n"
"quarkus.datasource.password=password-default\n"
"quarkus.datasource.reactive.url=postgresql://localhost:5432/default\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:625
#, no-wrap
msgid ""
"quarkus.datasource.\"additional1\".db-kind=postgresql <2>\n"
"quarkus.datasource.\"additional1\".username=user-additional1\n"
"quarkus.datasource.\"additional1\".password=password-additional1\n"
"quarkus.datasource.\"additional1\".reactive.url=postgresql://localhost:5432/additional1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:630
#, no-wrap
msgid ""
"quarkus.datasource.\"additional2\".db-kind=mysql <3>\n"
"quarkus.datasource.\"additional2\".username=user-additional2\n"
"quarkus.datasource.\"additional2\".password=password-additional2\n"
"quarkus.datasource.\"additional2\".reactive.url=mysql://localhost:3306/additional2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:632
#, fuzzy
msgid "The default datasource - using PostgreSQL."
msgstr "La fuente de datos por defecto - usando PostgreSQL."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:633
#, fuzzy
msgid "A named datasource called `additional1` - using PostgreSQL."
msgstr "Una fuente de datos con nombre llamada `additional1` - usando PostgreSQL."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:634
#, fuzzy
msgid "A named datasource called `additional2` - using MySQL."
msgstr "Una fuente de datos con nombre llamada `additional2` - usando MySQL."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:636
#, fuzzy
msgid "You can then inject the clients as follows:"
msgstr "A continuación, puede inyectar los clientes de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:641
#, no-wrap
msgid ""
"@Inject <1>\n"
"PgPool defaultClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:645
#, no-wrap
msgid ""
"@Inject\n"
"@ReactiveDataSource(\"additional1\") <2>\n"
"PgPool additional1Client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:649
#, no-wrap
msgid ""
"@Inject\n"
"@ReactiveDataSource(\"additional2\")\n"
"MySQLPool additional2Client;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:651
#, fuzzy
msgid "Injecting the client for the default datasource does not require anything special."
msgstr "Inyectar el cliente para la fuente de datos por defecto no requiere nada especial."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:652
#, fuzzy
msgid "For a named datasource, you use the `@ReactiveDataSource` CDI qualifier with the datasource name as its value."
msgstr "Para una fuente de datos con nombre, se utiliza el calificador CDI `@ReactiveDataSource` con el nombre de la fuente de datos como valor."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:653
#, fuzzy, no-wrap
msgid "UNIX Domain Socket connections"
msgstr "Conexiones de socket de dominio UNIX"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:656
#, fuzzy
msgid "The PostgreSQL and MariaDB/MySQL clients can be configured to connect to the server through a UNIX domain socket."
msgstr "Los clientes PostgreSQL y MariaDB/MySQL pueden ser configurados para conectarse al servidor a través de un socket de dominio UNIX."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:658
#, fuzzy
msgid "First make sure that xref:vertx-reference.adoc#native-transport[native transport support] is enabled."
msgstr "En primer lugar, asegúrese de que el  link:vertx-reference.html#native-transport[soporte de transporte nativo] está activado."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:661
#, fuzzy
msgid "Then configure the database connection url.  This step depends on the database type."
msgstr "A continuación, configure la url de conexión a la base de datos. Este paso depende del tipo de base de datos."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:665
#, fuzzy
msgid "PostgreSQL domain socket paths have the following form: `<directory>/.s.PGSQL.<port>`"
msgstr "Las rutas de los sockets del dominio PostgresSQL tienen la siguiente forma: `&amp;lt;directory&amp;gt;/.s.PGSQL.&amp;lt;port&amp;gt;`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:667
#, fuzzy
msgid "The database connection url must be configured so that:"
msgstr "La url de conexión a la base de datos debe estar configurada de forma que:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:669
#, fuzzy
msgid "the `host` is the `directory` in the socket path"
msgstr "el `host` es el `directory` en la ruta de entrada"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:670
#, fuzzy
msgid "the `port` is the `port` in the socket path"
msgstr "el `port` es el `port` en la ruta de entrada"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:672
#, fuzzy
msgid "Consider the following socket path: `/var/run/postgresql/.s.PGSQL.5432`."
msgstr "Considere la siguiente ruta de socket: `/var/run/postgresql/.s.PGSQL.5432`."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:674
#: upstream/_guides/reactive-sql-clients.adoc:687
#, fuzzy
msgid "In `application.properties` add:"
msgstr "En `application.properties` añadir:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:678
#, no-wrap
msgid "quarkus.datasource.reactive.url=postgresql://:5432/quarkus_test?host=/var/run/postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:683
#, fuzzy
msgid "The database connection url must be configured so that the `host` is the socket path."
msgstr "La url de conexión a la base de datos debe configurarse de manera que la `host` sea la ruta del socket."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:685
#, fuzzy
msgid "Consider the following socket path: `/var/run/mysqld/mysqld.sock`."
msgstr "Considere la siguiente ruta de socket: `/var/run/mysqld/mysqld.sock`."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:691
#, no-wrap
msgid "quarkus.datasource.reactive.url=mysql:///quarkus_test?host=/var/run/mysqld/mysqld.sock\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:693
#, fuzzy, no-wrap
msgid "Load-balancing connections"
msgstr "Conexiones con equilibrio de carga"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:696
#, fuzzy
msgid "The reactive PostgreSQL and MariaDB/MySQL clients support defining several connections."
msgstr "Los clientes SQL reactivos admiten la definición de varias fuentes de datos."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:698
#, fuzzy
msgid "A typical configuration with several connections would look like:"
msgstr "Una configuración típica con varias fuentes de datos tendría el siguiente aspecto:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:702
#, no-wrap
msgid "quarkus.datasource.reactive.url=postgresql://host1:5432/default,postgresql://host2:5432/default,postgresql://host3:5432/default\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:705
#, fuzzy
msgid "This can also be written with indexed property syntax:"
msgstr "Esto también se puede escribir con la sintaxis de propiedades indexadas:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:711
#, no-wrap
msgid ""
"quarkus.datasource.reactive.url[0]=postgresql://host1:5432/default\n"
"quarkus.datasource.reactive.url[1]=postgresql://host2:5432/default\n"
"quarkus.datasource.reactive.url[2]=postgresql://host3:5432/default\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:713
#, fuzzy, no-wrap
msgid "Pooled connection `idle-timeout`"
msgstr "Conexión en común `idle-timeout`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:717
#, fuzzy
msgid "Reactive datasources can be configured with an `idle-timeout`.  It is the maximum time a connection remains unused in the pool before it is closed."
msgstr "Los recursos de datos reactivos pueden configurarse con un `idle-timeout` (en milisegundos). Es el tiempo máximo que una conexión permanece sin usar en el pool antes de que se cierre."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:719
#, fuzzy
msgid "The `idle-timeout` is disabled by default."
msgstr "La página `idle-timeout` está desactivada por defecto."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:721
#, fuzzy
msgid "For example, you could expire idle connections after 60 minutes:"
msgstr "Por ejemplo, puede hacer expirar las conexiones inactivas después de 60 minutos:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:725
#, no-wrap
msgid "quarkus.datasource.reactive.idle-timeout=PT60M\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:727
#, fuzzy, no-wrap
msgid "Pooled Connection `max-lifetime`"
msgstr "Conexión en común `idle-timeout`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:732
#, fuzzy
msgid "In addition to `idle-timeout`, reactive datasources can also be configured with a `max-lifetime`.  It is the maximum time a connection remains in the pool before it is closed and replaced as needed.  The `max-lifetime` allows ensuring the pool has fresh connections with up-to-date configuration."
msgstr "Además de `idle-timeout`, los recursos de datos reactivos también pueden configurarse con un `max-lifetime`. Es el tiempo máximo que una conexión permanece en el pool antes de que se cierre y se sustituya según sea necesario. `max-lifetime` permite garantizar que el pool dispone de conexiones frescas con una configuración actualizada."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:735
#, fuzzy
msgid "The `max-lifetime` is disabled by default but is an important configuration when using a credentials provider that provides time limited credentials, like the link:credentials-provider.adoc[Vault credentials provider]."
msgstr "`max-lifetime` está desactivado de forma predeterminada, pero es una configuración importante cuando se utiliza un proveedor de credenciales que proporciona credenciales de tiempo limitado, como el  link:credentials-provider.adoc[proveedor de credenciales Vault]."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:737
#, fuzzy
msgid "For example, you could ensure connections are recycled after 60 minutes:"
msgstr "Por ejemplo, puede hacer expirar las conexiones inactivas después de 60 minutos:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:741
#, no-wrap
msgid "quarkus.datasource.reactive.max-lifetime=PT60M\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:743
#, fuzzy, no-wrap
msgid "Customizing pool creation"
msgstr "Personalizar la creación de piscinas"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:746
#, fuzzy
msgid "Sometimes, the database connection pool cannot be configured only by declaration."
msgstr "La url de conexión a la base de datos debe estar configurada de forma que:"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:748
#, fuzzy
msgid "You may need to read a specific file only present in production, or retrieve configuration data from a proprietary configuration server."
msgstr "Puede que necesite leer un archivo específico sólo presente en producción, o recuperar datos de configuración de un servidor de configuración propietario."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:750
#, fuzzy
msgid "In this case, you can customize pool creation by creating a class implementing an interface which depends on the target database:"
msgstr "En este caso, puede personalizar la creación del pool creando una clase que implemente una interfaz que dependa de la base de datos de destino:"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:755
#, fuzzy, no-wrap
msgid "Pool creator class name"
msgstr "Nombre de la clase de piscina"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:758
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.db2.client.DB2PoolCreator`"
msgstr "`quarkus-reactive-db2-client`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:761
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.mysql.client.MySQLPoolCreator`"
msgstr "`io.vertx.mutiny.mysqlclient.MySQLPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:764
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.mssql.client.MSSQLPoolCreator`"
msgstr "`io.vertx.mutiny.mssqlclient.MSSQLPool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:767
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.oracle.client.OraclePoolCreator`"
msgstr "`io.vertx.mutiny.oracleclient.OraclePool`"

#. type: Table
#: upstream/_guides/reactive-sql-clients.adoc:769
#, fuzzy, no-wrap
msgid "`io.quarkus.reactive.pg.client.PgPoolCreator`"
msgstr "`quarkus-reactive-pg-client`"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:772
#: upstream/_guides/reactive-sql-clients.adoc:803
#, fuzzy
msgid "Here's an example for PostgreSQL:"
msgstr "He aquí un ejemplo para PostgreSQL:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:776
#, no-wrap
msgid "import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:781
#, no-wrap
msgid ""
"import io.quarkus.reactive.pg.client.PgPoolCreator;\n"
"import io.vertx.pgclient.PgConnectOptions;\n"
"import io.vertx.pgclient.PgPool;\n"
"import io.vertx.sqlclient.PoolOptions;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:784
#, no-wrap
msgid ""
"@Singleton\n"
"public class CustomPgPoolCreator implements PgPoolCreator {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:793
#, no-wrap
msgid ""
"    @Override\n"
"    public PgPool create(Input input) {\n"
"        PgConnectOptions connectOptions = input.pgConnectOptions();\n"
"        PoolOptions poolOptions = input.poolOptions();\n"
"        // Customize connectOptions, poolOptions or both, as required\n"
"        return PgPool.pool(input.vertx(), connectOptions, poolOptions);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:795
#, fuzzy, no-wrap
msgid "Pipelining"
msgstr "Pipelining"

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:799
#, fuzzy
msgid "The PostgreSQL and MariaDB/MySQL clients support pipelining of queries at the connection level.  The feature consists in sending multiple queries on the same database connection without waiting for the corresponding responses."
msgstr "Los clientes PostgreSQL y MariaDB/MySQL soportan el pipelining de consultas a nivel de conexión. La función consiste en enviar varias consultas en la misma conexión de base de datos sin esperar las respuestas correspondientes."

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:801
#, fuzzy
msgid "In some use cases, query pipelining can improve database access performance."
msgstr "En algunos casos, la canalización de consultas puede mejorar el rendimiento del acceso a la base de datos."

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:807
#, no-wrap
msgid "import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:810
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import io.vertx.mutiny.pgclient.PgPool;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:812
#, no-wrap
msgid "public class PipeliningExample {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:815
#, no-wrap
msgid ""
"    @Inject\n"
"    PgPool client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:828
#, no-wrap
msgid ""
"    public Uni<String> favoriteFruitAndVegetable() {\n"
"        // Explicitely acquire a connection\n"
"        return client.withConnection(conn -> {\n"
"            Uni<String> favoriteFruit = conn.query(\"SELECT name FROM fruits WHERE preferred IS TRUE\").execute()\n"
"                    .onItem().transform(rows -> rows.iterator().next().getString(\"name\"));\n"
"            Uni<String> favoriteVegetable = conn.query(\"SELECT name FROM vegetables WHERE preferred IS TRUE\").execute()\n"
"                    .onItem().transform(rows -> rows.iterator().next().getString(\"name\"));\n"
"            // favoriteFruit and favoriteVegetable unis will be subscribed at the same time\n"
"            return Uni.combine().all().unis(favoriteFruit, favoriteVegetable)\n"
"                    .combinedWith(PipeliningExample::formatMessage);\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:833
#, no-wrap
msgid ""
"    private static String formatMessage(String fruit, String vegetable) {\n"
"        return String.format(\"The favorite fruit is %s and the favorite vegetable is %s\", fruit, vegetable);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:836
#, fuzzy
msgid "The maximum number of pipelined queries is configured with the `pipelining-limit` property:"
msgstr "El número máximo de consultas en cadena se configura con la propiedad `pipelining-limit`:"

#. type: delimited block -
#: upstream/_guides/reactive-sql-clients.adoc:843
#, no-wrap
msgid ""
"# For PostgreSQL\n"
"quarkus.datasource.reactive.postgresql.pipelining-limit=256\n"
"# For MariaDB/MySQL\n"
"quarkus.datasource.reactive.mysql.pipelining-limit=256\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-sql-clients.adoc:846
#, fuzzy
msgid "By default, `pipelining-limit` is set to 256."
msgstr "Por defecto, `pipelining-limit` está configurado a 256."

#. type: Title ==
#: upstream/_guides/reactive-sql-clients.adoc:847
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:849
#, fuzzy, no-wrap
msgid "Common Datasource"
msgstr "Fuente de datos común"

#. type: Title ===
#: upstream/_guides/reactive-sql-clients.adoc:853
#, fuzzy, no-wrap
msgid "Reactive Datasource"
msgstr "Fuente de datos reactiva"
