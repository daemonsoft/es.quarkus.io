# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 08:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/writing-native-applications-tips.adoc:6
#, fuzzy, no-wrap
msgid "Tips for writing native applications"
msgstr "Consejos para escribir aplicaciones nativas"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:13
#, fuzzy
msgid "This guide contains various tips and tricks for getting around problems that might arise when attempting to run Java applications as native executables."
msgstr "Esta guía contiene varios consejos y trucos para evitar los problemas que pueden surgir al intentar ejecutar aplicaciones Java como ejecutables nativos."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:15
#, fuzzy
msgid "Note that we differentiate two contexts where the solution applied might be different:"
msgstr "Nótese que diferenciamos dos contextos en los que la solución aplicada puede ser diferente:"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:17
#, fuzzy
msgid "in the context of an application, you will rely on configuring the `native-image` configuration by tweaking your `pom.xml`;"
msgstr "en el contexto de una aplicación, dependerá de la configuración de `native-image` ajustando su `pom.xml`;"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:18
#, fuzzy
msgid "in the context of an extension, Quarkus offers a lot of infrastructure to simplify all of this."
msgstr "en el contexto de una extensión, Quarkus ofrece mucha infraestructura para simplificar todo esto."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:20
#, fuzzy
msgid "Please refer to the appropriate section depending on your context."
msgstr "Consulte la sección correspondiente en función de su contexto."

#. type: Title ==
#: upstream/_guides/writing-native-applications-tips.adoc:21
#, fuzzy, no-wrap
msgid "Supporting native in your application"
msgstr "Apoyar a los nativos en su aplicación"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:24
#, fuzzy
msgid "GraalVM imposes a number of constraints and making your application a native executable might require a few tweaks."
msgstr "GraalVM impone una serie de restricciones y hacer que su aplicación sea un ejecutable nativo puede requerir algunos ajustes."

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:25
#: upstream/_guides/writing-native-applications-tips.adoc:664
#, fuzzy, no-wrap
msgid "Including resources"
msgstr "Incluidos los recursos"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:29
#, fuzzy
msgid "By default, when building a native executable, GraalVM will not include any of the resources that are on the classpath into the native executable it creates.  Resources that are meant to be part of the native executable need to be configured explicitly."
msgstr "Por defecto, al construir un ejecutable nativo, GraalVM no incluirá ninguno de los recursos que están en el classpath en el ejecutable nativo que crea. Los recursos que deben formar parte del ejecutable nativo deben ser configurados explícitamente."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:31
#, fuzzy
msgid "Quarkus automatically includes the resources present in `META-INF/resources` (the web resources) but, outside this directory, you are on your own."
msgstr "Quarkus incluye automáticamente los recursos presentes en `META-INF/resources` (los recursos de la web) pero, fuera de este directorio, estás por tu cuenta."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:36
#, fuzzy
msgid "Note that you need to be extremely careful here as anything in `META-INF/resources` will be exposed as static web resources.  So this directory is not a shortcut for \"let's automatically include these resources in the native executable\" and should only be used for static web resources."
msgstr "Tenga en cuenta que debe ser extremadamente cuidadoso aquí ya que cualquier cosa en `META-INF/resources` será expuesta como recursos web estáticos. Así que este directorio no es un atajo para \"incluir automáticamente estos recursos en el ejecutable nativo\" y sólo debe ser utilizado para los recursos web estáticos."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:38
#, fuzzy
msgid "Other resources should be declared explicitly."
msgstr "Los demás recursos deben declararse explícitamente."

#. type: Title ====
#: upstream/_guides/writing-native-applications-tips.adoc:40
#, no-wrap
msgid "Using the `quarkus.native.resources.includes` configuration property"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:44
#, fuzzy
msgid "To include more resources in the native executable, the easiest way is to use the `quarkus.native.resources.includes` configuration property, and its counterpart to exclude resources `quarkus.native.resources.excludes`."
msgstr "Para incluir más recursos en el ejecutable nativo, lo más sencillo es utilizar la propiedad de configuración `quarkus.native.resources.includes`, y su contrapartida para excluir recursos `quarkus.native.resources.excludes`."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:46
#, fuzzy
msgid "Both configuration properties support glob patterns."
msgstr "Ambas propiedades de configuración admiten patrones glob."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:48
#, fuzzy
msgid "For instance, having the following properties in your `application.properties`:"
msgstr "Por ejemplo, tener las siguientes propiedades en su `application.properties`:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:53
#, no-wrap
msgid ""
"quarkus.native.resources.includes=foo/**,bar/**/*.txt\n"
"quarkus.native.resources.excludes=foo/private/**\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:56
#, fuzzy
msgid "will include:"
msgstr "incluirá:"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:58
#, fuzzy
msgid "all files in the `foo/` directory and its subdirectories except for files in `foo/private/` and its subdirectories,"
msgstr "todos los archivos del directorio `foo/` y sus subdirectorios, excepto los archivos de `foo/private/` y sus subdirectorios,"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:59
#, fuzzy
msgid "all text files in the `bar/` directory and its subdirectories."
msgstr "todos los archivos de texto del directorio `bar/` y sus subdirectorios."

#. type: Title ====
#: upstream/_guides/writing-native-applications-tips.adoc:60
#: upstream/_guides/writing-native-applications-tips.adoc:252
#, fuzzy, no-wrap
msgid "Using a configuration file"
msgstr "Uso de un archivo de configuración"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:64
#, fuzzy
msgid "If globs are not sufficiently precise for your use case and you need to rely on regular expressions, or if you prefer relying on the GraalVM infrastructure, you can also create a `resources-config.json` (the most common location is within `src/main/resources`) JSON file defining which resources should be included."
msgstr "Si los globos no son lo suficientemente precisos para su caso de uso y necesita confiar en expresiones regulares o si prefiere confiar en la infraestructura de GraalVM, también puede crear un archivo JSON `resources-config.json` (la ubicación más común es dentro de `src/main/resources`) que defina qué recursos deben incluirse:"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:68
#: upstream/_guides/writing-native-applications-tips.adoc:259
msgid "Relying on the GraalVM infrastructure means that you are responsible for keeping the configuration file up to date as new Mandrel and GraalVM versions are released."
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:70
msgid "Please also note that the `resources-config.json` file will be overwritten by Quarkus if placed directly under `src/main/resources/META-INF/native-image/` as Quarkus generates its own configuration file in this directory."
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:73
msgid "An example of such a file is the following:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:86
#, no-wrap
msgid ""
"{\n"
"  \"resources\": [\n"
"    {\n"
"      \"pattern\": \".*\\\\.xml$\"\n"
"    },\n"
"    {\n"
"      \"pattern\": \".*\\\\.json$\"\n"
"    }\n"
"  ]\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:90
#, fuzzy
msgid "The patterns are valid Java regexps.  Here we include all the XML files and JSON files into the native executable."
msgstr "Los patrones son regexps Java válidos. Aquí incluimos todos los archivos XML y JSON en el ejecutable nativo."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:94
#, fuzzy
msgid "For more information about this topic, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/dynamic-features/Resources/[GraalVM Accessing Resources in Native Image] guide."
msgstr "Puedes encontrar más información sobre este tema en  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[la documentación de GraalVM]."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:97
#: upstream/_guides/writing-native-applications-tips.adoc:284
#, fuzzy
msgid "The final order of business is to make the configuration file known to the `native-image` executable by adding the proper configuration to `application.properties`:"
msgstr "El último paso es dar a conocer el archivo de configuración al ejecutable `native-image` añadiendo la configuración adecuada a `application.properties`:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:104
#, no-wrap
msgid ""
"quarkus.native.additional-build-args =\\\n"
"    -H:+UnlockExperimentalVMOptions,\\\n"
"    -H:ResourceConfigurationFiles=resources-config.json,\\\n"
"    -H:-UnlockExperimentalVMOptions\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:110
#: upstream/_guides/writing-native-applications-tips.adoc:297
msgid "Starting with Mandrel 23.1 and GraalVM for JDK 21, `-H:ResourceConfigurationFiles=resources-config.json` results in a warning being shown unless wrapped in `-H:+UnlockExperimentalVMOptions` and `-H:-UnlockExperimentalVMOptions`.  The absence of these options will result in build failures in the future."
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:114
#, fuzzy
msgid "In the previous snippet we were able to simply use `resources-config.json` instead of specifying the entire path of the file simply because it was added to `src/main/resources`.  If the file had been added to another directory, the proper file path would have had to be specified manually."
msgstr "En el fragmento anterior pudimos utilizar simplemente `resources-config.json` en lugar de especificar la ruta completa del archivo simplemente porque se añadió a `src/main/resources`. Si el archivo se hubiera añadido a otro directorio, habría sido necesario especificar manualmente la ruta de archivo adecuada."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:118
#: upstream/_guides/writing-native-applications-tips.adoc:305
#, fuzzy
msgid "Multiple options may be separated by a comma. For example, one could use:"
msgstr "Se pueden separar varias opciones con una coma. Por ejemplo, se puede utilizar:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:126
#: upstream/_guides/writing-native-applications-tips.adoc:313
#, no-wrap
msgid ""
"quarkus.native.additional-build-args =\\\n"
"    -H:+UnlockExperimentalVMOptions,\\\n"
"    -H:ResourceConfigurationFiles=resources-config.json,\\\n"
"    -H:ReflectionConfigurationFiles=reflection-config.json,\\\n"
"    -H:-UnlockExperimentalVMOptions\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:129
#: upstream/_guides/writing-native-applications-tips.adoc:316
#, fuzzy
msgid "in order to ensure that various resources are included and additional reflection is registered."
msgstr "para garantizar que se incluyan varios recursos y se registre una reflexión adicional."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:132
#: upstream/_guides/writing-native-applications-tips.adoc:319
#, fuzzy
msgid "If for some reason adding the aforementioned configuration to `application.properties` is not desirable, it is possible to configure the build tool to effectively perform the same operation."
msgstr "Si por alguna razón no se desea añadir la configuración mencionada a `application.properties`, es posible configurar la herramienta de compilación para que realice efectivamente la misma operación."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:134
#: upstream/_guides/writing-native-applications-tips.adoc:321
#, fuzzy
msgid "When using Maven, we could use the following configuration:"
msgstr "Si utilizamos Maven, podríamos utilizar la siguiente configuración:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:148
#, no-wrap
msgid ""
"<profiles>\n"
"    <profile>\n"
"        <id>native</id>\n"
"        <properties>\n"
"            <quarkus.package.type>native</quarkus.package.type>\n"
"            <quarkus.native.additional-build-args>\n"
"                -H:+UnlockExperimentalVMOptions,-H:ResourceConfigurationFiles=resources-config.json,-H:-UnlockExperimentalVMOptions\n"
"            </quarkus.native.additional-build-args>\n"
"        </properties>\n"
"    </profile>\n"
"</profiles>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:150
#, fuzzy, no-wrap
msgid "Registering for reflection"
msgstr "Registro de la reflexión"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:154
#, fuzzy
msgid "When building a native executable, GraalVM operates with a closed world assumption.  It analyzes the call tree and removes all the classes/methods/fields that are not used directly."
msgstr "Cuando se construye un ejecutable nativo, GraalVM opera con una suposición de mundo cerrado. Analiza el árbol de llamadas y elimina todas las clases/métodos/campos que no se utilizan directamente."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:157
#, fuzzy
msgid "The elements used via reflection are not part of the call tree so they are dead code eliminated (if not called directly in other cases).  To include these elements in your native executable, you need to register them for reflection explicitly."
msgstr "Los elementos utilizados mediante reflexión no forman parte del árbol de llamadas, por lo que se elimina el código muerto (si no se llama directamente en otros casos). Para incluir estos elementos en su ejecutable nativo, debe registrarlos para la reflexión explícitamente."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:159
#, fuzzy
msgid "This is a very common case as JSON libraries typically use reflection to serialize the objects to JSON:"
msgstr "Este es un caso muy común, ya que las bibliotecas JSON suelen utilizar la reflexión para serializar los objetos a JSON:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:165
#, no-wrap
msgid ""
"    public class Person {\n"
"        private String first;\n"
"        private String last;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:169
#, no-wrap
msgid ""
"        public String getFirst() {\n"
"            return first;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:173
#, no-wrap
msgid ""
"        public void setFirst(String first) {\n"
"            this.first = first;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:177
#, no-wrap
msgid ""
"        public String getLast() {\n"
"            return last;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:182
#, no-wrap
msgid ""
"        public void setValue(String last) {\n"
"            this.last = last;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:187
#, no-wrap
msgid ""
"    @Path(\"/person\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    public class PersonResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:189
#, no-wrap
msgid "        private final Jsonb jsonb;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:193
#, no-wrap
msgid ""
"        public PersonResource() {\n"
"            jsonb = JsonbBuilder.create(new JsonbConfig());\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:199
#, no-wrap
msgid ""
"        @GET\n"
"        public Response list() {\n"
"            return Response.ok(jsonb.fromJson(\"{\\\"first\\\":  \\\"foo\\\", \\\"last\\\":  \\\"bar\\\"}\", Person.class)).build();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:202
#, fuzzy
msgid "If we were to use the code above, we would get an exception like the following when using the native executable:"
msgstr "Si utilizáramos el código anterior, obtendríamos una excepción como la siguiente al utilizar el ejecutable nativo:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:206
#, no-wrap
msgid "Exception handling request to /person: org.jboss.resteasy.spi.UnhandledException: jakarta.json.bind.JsonbException: Can't create instance of a class: class org.acme.jsonb.Person, No default constructor found\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:209
#, fuzzy
msgid "or if you are using Jackson:"
msgstr "o si estás usando Jackson:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:213
#, no-wrap
msgid "com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.acme.jsonb.Person and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:216
#, fuzzy
msgid "An even nastier possible outcome could be for no exception to be thrown, but instead the JSON result would be completely empty."
msgstr "Un resultado aún más desagradable podría ser que no se lanzara ninguna excepción, sino que el resultado JSON estuviera completamente vacío."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:218
#, fuzzy
msgid "There are two different ways to fix this type of issues."
msgstr "Hay dos formas diferentes de solucionar este tipo de problemas."

#. type: Title ====
#: upstream/_guides/writing-native-applications-tips.adoc:220
#, fuzzy, no-wrap
msgid "Using the @RegisterForReflection annotation"
msgstr "Uso de la anotación @RegisterForReflection"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:223
#, fuzzy
msgid "The easiest way to register a class for reflection is to use the `@RegisterForReflection` annotation:"
msgstr "La forma más sencilla de registrar una clase para la reflexión es utilizar la anotación `@RegisterForReflection`:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:229
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class MyClass {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:232
#, fuzzy
msgid "If your class is in a third-party jar, you can do it by using an empty class that will host the `@RegisterForReflection` for it."
msgstr "Si tu clase está en un jar de terceros, puedes hacerlo utilizando una clase vacía que alojará el `@RegisterForReflection` para ella."

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:238
#, no-wrap
msgid ""
"@RegisterForReflection(targets={ MyClassRequiringReflection.class, MySecondClassRequiringReflection.class})\n"
"public class MyReflectionConfiguration {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:241
#, fuzzy
msgid "Note that `MyClassRequiringReflection` and `MySecondClassRequiringReflection` will be registered for reflection but not `MyReflectionConfiguration`."
msgstr "Tenga en cuenta que `MyClassRequiringReflection` y `MySecondClassRequiringReflection` se registrarán para la reflexión pero no `MyReflectionConfiguration`."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:243
#, fuzzy
msgid "This feature is handy when using third-party libraries using object mapping features (such as Jackson or GSON):"
msgstr "Esta función es muy útil cuando se utilizan bibliotecas de terceros con funciones de mapeo de objetos (como Jackson o GSON):"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:248
#, no-wrap
msgid ""
"@RegisterForReflection(targets = {User.class, UserImpl.class})\n"
"public class MyReflectionConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:250
#: upstream/_guides/writing-native-applications-tips.adoc:657
#: upstream/_guides/writing-native-applications-tips.adoc:678
#: upstream/_guides/writing-native-applications-tips.adoc:700
#: upstream/_guides/writing-native-applications-tips.adoc:724
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:255
#, fuzzy
msgid "You can also use a configuration file to register classes for reflection, if you prefer relying on the GraalVM infrastructure."
msgstr "Puede utilizar un archivo de configuración para registrar las clases para la reflexión."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:262
#, fuzzy
msgid "As an example, in order to register all methods of class `com.acme.MyClass` for reflection, we create `reflection-config.json` (the most common location is within `src/main/resources`)"
msgstr "Como ejemplo, para registrar todos los métodos de la clase `com.acme.MyClass` para la reflexión, creamos `reflection-config.json` (la ubicación más común es dentro de `src/main/resources`)"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:276
#, no-wrap
msgid ""
"[\n"
"  {\n"
"    \"name\" : \"com.acme.MyClass\",\n"
"    \"allDeclaredConstructors\" : true,\n"
"    \"allPublicConstructors\" : true,\n"
"    \"allDeclaredMethods\" : true,\n"
"    \"allPublicMethods\" : true,\n"
"    \"allDeclaredFields\" : true,\n"
"    \"allPublicFields\" : true\n"
"  }\n"
"]\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:281
#, fuzzy
msgid "For more information about the format of this file, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/dynamic-features/Reflection/[GraalVM Reflection in Native Image] guide."
msgstr "Para más detalles sobre el formato de este archivo, consulte  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[la documentación de GraalVM]."

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:291
#, no-wrap
msgid ""
"quarkus.native.additional-build-args =\\\n"
"    -H:+UnlockExperimentalVMOptions,\\\n"
"    -H:ReflectionConfigurationFiles=reflection-config.json,\\\n"
"    -H:-UnlockExperimentalVMOptions\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:301
#, fuzzy
msgid "In the previous snippet we were able to simply use `reflection-config.json` instead of specifying the entire path of the file simply because it was added to `src/main/resources`.  If the file had been added to another directory, the proper file path would have had to be specified manually."
msgstr "En el fragmento anterior pudimos utilizar simplemente `reflection-config.json` en lugar de especificar la ruta completa del archivo simplemente porque se añadió a `src/main/resources`. Si el archivo se hubiera añadido a otro directorio, habría sido necesario especificar manualmente la ruta de archivo adecuada."

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:335
#, no-wrap
msgid ""
"<profiles>\n"
"    <profile>\n"
"        <id>native</id>\n"
"        <properties>\n"
"            <quarkus.package.type>native</quarkus.package.type>\n"
"            <quarkus.native.additional-build-args>\n"
"                -H:+UnlockExperimentalVMOptions,-H:ReflectionConfigurationFiles=reflection-config.json,-H:-UnlockExperimentalVMOptions\n"
"            </quarkus.native.additional-build-args>\n"
"        </properties>\n"
"    </profile>\n"
"</profiles>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:338
#, fuzzy, no-wrap
msgid "Delaying class initialization"
msgstr "Retraso en la inicialización de la clase"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:341
#, fuzzy
msgid "By default, Quarkus initializes all classes at build time."
msgstr "Por defecto, Quarkus inicializa todas las clases en tiempo de construcción."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:344
#, fuzzy
msgid "There are cases where the initialization of certain classes is done in a static block needs to be postponed to runtime.  Typically, omitting such configuration would result in a runtime exception like the following:"
msgstr "Hay casos en los que la inicialización de ciertas clases se realiza en un bloque estático y debe posponerse al tiempo de ejecución. Normalmente, la omisión de dicha configuración daría lugar a una excepción en tiempo de ejecución como la siguiente:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:351
#, no-wrap
msgid ""
"Error: No instances are allowed in the image heap for a class that is initialized or reinitialized at image runtime: sun.security.provider.NativePRNG\n"
"Trace: object java.security.SecureRandom\n"
"method com.amazonaws.services.s3.model.CryptoConfiguration.<init>(CryptoMode)\n"
"Call path from entry point to com.amazonaws.services.s3.model.CryptoConfiguration.<init>(CryptoMode):\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:354
#, fuzzy
msgid "Another common source of errors is when the image heap taken by GraalVM contains a `Random`/`SplittableRandom` instance:"
msgstr "Otra fuente común de errores es cuando el montón de imágenes tomado por GraalVM contiene una instancia de `Random`/ `SplittableRandom`:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:358
#, no-wrap
msgid "Error: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Detected an instance of Random/SplittableRandom class in the image heap. Instances created during image generation have cached seed values and don't behave as expected.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:362
#, fuzzy
msgid "Which is more often than not caused by Quarkus initializing at build time a class with a static `Random`/`SplittableRandom` field, causing this particular instance to be tentatively included in the image heap."
msgstr "Lo que es más a menudo causado por Quarkus inicializando en tiempo de construcción una clase con un campo estático `Random`/ `SplittableRandom`, causando que esta instancia particular sea incluida tentativamente en el montón de imágenes."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:366
#, fuzzy
msgid "You can find detailed information about this `Random`/`SplittableRandom` issue in https://foivos.zakkak.net/tutorials/working-with-randoms-native-images/[this blog post]."
msgstr "Puede encontrar información detallada sobre este tema en `Random`/ `SplittableRandom` en  link:https://foivos.zakkak.net/tutorials/working-with-randoms-native-images/[esta entrada del blog]."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:370
#, fuzzy
msgid "In these cases, delaying the infringing class initialization at runtime might be the solution and, to achieve that, you can use the `--initialize-at-run-time=<package or class>` configuration knob."
msgstr "Si necesita retrasar la inicialización de una clase, puede utilizar el mando de configuración `--initialize-at-run-time=&amp;lt;package or class&amp;gt;`."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:372
#, fuzzy
msgid "It should be added to the `native-image` configuration using the `quarkus.native.additional-build-args` configuration property as shown in the examples above."
msgstr "Debe añadirse a la configuración de `native-image` utilizando la propiedad de configuración `quarkus.native.additional-build-args` como se muestra en los ejemplos anteriores."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:376
#, fuzzy
msgid "For more information, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/optimizations-and-performance/ClassInitialization/[GraalVM Class Initialization in Native Image] guide."
msgstr "Puedes encontrar más información sobre todo esto en  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[la documentación de GraalVM]."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:382
#, fuzzy
msgid "When multiple classes or packages need to be specified via the `quarkus.native.additional-build-args` configuration property, the `,` symbol needs to be escaped.  An example of this is the following:"
msgstr "Cuando es necesario especificar varias clases o paquetes a través de la propiedad de configuración `quarkus.native.additional-build-args`, es necesario escapar el símbolo `,`. Un ejemplo de esto es lo siguiente:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:386
#, no-wrap
msgid "quarkus.native.additional-build-args=--initialize-at-run-time=com.example.SomeClass\\\\,org.acme.SomeOtherClass\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:389
#, fuzzy
msgid "and in the case of using the Maven configuration instead of `application.properties`:"
msgstr "y en el caso de utilizar la configuración de Maven en lugar de `application.properties`:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:393
#, no-wrap
msgid "<quarkus.native.additional-build-args>--initialize-at-run-time=com.example.SomeClass\\,org.acme.SomeOtherClass</quarkus.native.additional-build-args>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:396
#: upstream/_guides/writing-native-applications-tips.adoc:709
#, fuzzy, no-wrap
msgid "Managing Proxy Classes"
msgstr "Gestión de las clases de proxy"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:399
#, fuzzy
msgid "While writing native application you'll need to define proxy classes at image build time by specifying the list of interfaces that they implement."
msgstr "Al escribir una aplicación nativa tendrás que definir las clases proxy en el momento de la construcción de la imagen especificando la lista de interfaces que implementan."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:401
#, fuzzy
msgid "In such a situation, the error you might encounter is:"
msgstr "En tal situación, el error que puede encontrar es:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:405
#, no-wrap
msgid "com.oracle.svm.core.jdk.UnsupportedFeatureError: Proxy class defined by interfaces [interface org.apache.http.conn.HttpClientConnectionManager, interface org.apache.http.pool.ConnPoolControl, interface com.amazonaws.http.conn.Wrapped] not found. Generating proxy classes at runtime is not supported. Proxy classes need to be defined at image build time by specifying the list of interfaces that they implement. To define proxy classes use -H:DynamicProxyConfigurationFiles=<comma-separated-config-files> and -H:DynamicProxyConfigurationResources=<comma-separated-config-resources> options.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:408
#, fuzzy
msgid "Solving this issue requires adding the `-H:DynamicProxyConfigurationResources=<comma-separated-config-resources>` option and to provide a dynamic proxy configuration file."
msgstr "Para resolver este problema es necesario añadir la opción `-H:DynamicProxyConfigurationResources=&amp;lt;comma-separated-config-resources&amp;gt;` y proporcionar un archivo de configuración de proxy dinámico. Puedes encontrar toda la información sobre el formato de este archivo en  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md#manual-configuration[la documentación de GraalVM]."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:410
#, fuzzy
msgid "For more information about the format of this file, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/guides/configure-dynamic-proxies/[GraalVM Configure Dynamic Proxies Manually] guide."
msgstr "Para más información sobre las Clases Proxy puedes leer  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md[la documentación de GraalVM]."

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:412
#, fuzzy, no-wrap
msgid "Modularity Benefits"
msgstr "Ventajas de la modularidad"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:418
#, fuzzy
msgid "During native executable build time GraalVM analyses the application's call tree and generates a code-set that includes all the code it needs.  Having a modular codebase is key to avoiding problems with unused or optional parts of your application, while at the same time reducing both native executable build times and size.  In this section you will learn about the details behind the benefits of modularity for native applications."
msgstr "Durante el tiempo de construcción del ejecutable nativo, GraalVM analiza el árbol de llamadas de la aplicación y genera un conjunto de código que incluye todo el código que necesita. Tener una base de código modular es la clave para evitar problemas con las partes no utilizadas u opcionales de tu aplicación, mientras que al mismo tiempo se reducen los tiempos de construcción del ejecutable nativo y el tamaño. En esta sección aprenderás sobre los detalles detrás de los beneficios de la modularidad para las aplicaciones nativas."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:432
#, fuzzy
msgid "When code is not modular enough, generated native executables can end up with more code than what the user needs.  If a feature is not used and the code gets compiled into the native executable, this is a waste of native compilation time and memory usage, as well as native executable disk space and starting heap size.  Even more problems arise when third party libraries or specialized API subsystems are used which cause native compilation or runtime errors, and their use is not modularised enough.  A recent problem can be found in the JAXB library, which is capable of deserializing XML files containing images using Java’s AWT APIs.  The vast majority of Quarkus XML users don’t need to deserialize images, so there shouldn’t be a need for users applications to include Java AWT code, unless they specifically configure Quarkus to add the JAXB AWT code to the native executable.  However, because JAXB code that uses AWT is in the same jar as the rest of the XML parsing code, achieving this separation was rather complex and required the use of Java bytecode substitutions to get around it.  These substitutions are hard to maintain and can easily break, hence they should be one's last resort."
msgstr "Cuando el código no es lo suficientemente modular, los ejecutables nativos generados pueden terminar con más código del que el usuario necesita. Si no se utiliza una función y el código se compila en el ejecutable nativo, esto supone una pérdida de tiempo de compilación nativa y de uso de memoria, así como de espacio en el disco del ejecutable nativo y de tamaño de la pila inicial. Los problemas son aún mayores cuando se utilizan bibliotecas de terceros o subsistemas de API especializados que provocan errores de compilación nativa o de ejecución, y su uso no está suficientemente modularizado. Un problema reciente lo encontramos en la biblioteca JAXB, capaz de deserializar archivos XML que contienen imágenes utilizando las API AWT de Java. La gran mayoría de los usuarios de Quarkus XML no necesitan deserializar imágenes, por lo que no debería ser necesario que las aplicaciones de los usuarios incluyan código Java AWT, a menos que configuren específicamente Quarkus para añadir el código JAXB AWT al ejecutable nativo. Sin embargo, debido a que el código JAXB que utiliza AWT está en el mismo jar que el resto del código de análisis XML, lograr esta separación fue bastante complejo y requirió el uso de sustituciones de código de bytes de Java para evitarlo. Estas sustituciones son difíciles de mantener y pueden romperse fácilmente, por lo que deberían ser el último recurso."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:437
#, fuzzy
msgid "A modular codebase is the best way to avoid these kind of issues.  Taking the JAXB/AWT problem above, if the JAXB code that dealt with images was in a separate module or jar (e.g. `jaxb-images`), then Quarkus could choose not to include that module unless the user specifically requested the need to serialize/deserialize XML files containing images at build time."
msgstr "Una base de código modular es la mejor manera de evitar este tipo de problemas. Tomando el problema de JAXB/AWT anterior, si el código JAXB que se ocupa de las imágenes estuviera en un módulo o frasco separado (por ejemplo, `jaxb-images`), entonces Quarkus podría optar por no incluir ese módulo a menos que el usuario solicitara específicamente la necesidad de serializar/deserializar archivos XML que contienen imágenes en el momento de la construcción."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:440
#, fuzzy
msgid "Another benefit of modular applications is that they can reduce the code-set that will need to get into the native executable.  The smaller the code-set, the faster the native executable builds will be and the smaller the native executable produced."
msgstr "Otro beneficio de las aplicaciones modulares es que pueden reducir el conjunto de código que tendrá que entrar en el ejecutable nativo. Cuanto más pequeño sea el conjunto de código, más rápida será la construcción del ejecutable nativo y más pequeño será el ejecutable nativo producido."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:446
#, fuzzy
msgid "The key takeaway point here is the following: Keeping optional features, particularly those that depend on third party libraries or API subsystems with a big footprint, in separate modules is the best solution."
msgstr "El punto clave es el siguiente: Mantener las funciones opcionales, especialmente las que dependen de bibliotecas de terceros o subsistemas de API con una gran huella, en módulos separados es la mejor solución."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:455
#, fuzzy
msgid "How do I know if my application suffers from similar problems? Aside from a deep study of the application, finding usages of https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html[Maven optional dependencies] is a clear indicator that your application might suffer from similar problems.  These type of dependencies should be avoided, and instead code that interacts with optional dependencies should be moved into separate modules."
msgstr "¿Cómo puedo saber si mi aplicación sufre problemas similares? Aparte de un estudio profundo de la aplicación, encontrar usos de dependencias opcionales de  link:https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html[Maven] es un claro indicador de que tu aplicación puede sufrir problemas similares. Este tipo de dependencias deben ser evitadas, y en su lugar el código que interactúa con las dependencias opcionales debe ser movido a módulos separados."

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:457
#, fuzzy, no-wrap
msgid "Enforcing Singletons"
msgstr "Aplicación de los monotontos"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:464
#, fuzzy
msgid "As already explained in the xref:delay-class-init-in-your-app[delay class initialization] section, Quarkus marks all code to be initialized at build time by default.  This means that, unless marked otherwise, static variables will be assigned at build time, and static blocks will be executed at build time too."
msgstr "Como ya se ha explicado en la sección de  link:#delay-class-init-in-your-app[retraso en la inicialización de la clase], Quarkus marca todo el código para ser inicializado en tiempo de compilación por defecto. Esto significa que, a menos que se marque lo contrario, las variables estáticas se asignarán en tiempo de compilación, y los bloques estáticos se ejecutarán también en tiempo de compilación."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:469
#, fuzzy
msgid "This can cause values in Java programs that would normally vary from one run to another, to always return a constant value.  E.g. a static field that is assigned the value of `System.currentTimeMillis()` will always return the same value when executed as a Quarkus native executable."
msgstr "Esto puede hacer que valores en programas Java que normalmente variarían de una ejecución a otra, devuelvan siempre un valor constante. Por ejemplo, un campo estático al que se le asigna el valor de `System.currentTimeMillis()` siempre devolverá el mismo valor cuando se ejecute como un ejecutable nativo de Quarkus."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:472
#, fuzzy
msgid "Singletons that rely on static variable initialization will suffer similar problems.  For example, imagine you have a singleton based around static initialization along with a REST endpoint to query it:"
msgstr "Los singletons que se basan en la inicialización de variables estáticas sufrirán problemas similares. Por ejemplo, imagine que tiene un singleton basado en la inicialización estática junto con un punto final REST para consultarlo:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:477
#: upstream/_guides/writing-native-applications-tips.adoc:518
#: upstream/_guides/writing-native-applications-tips.adoc:565
#, no-wrap
msgid ""
"@Path(\"/singletons\")\n"
"public class Singletons {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:484
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/static\")\n"
"    public long withStatic() {\n"
"        return StaticSingleton.startTime();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:487
#, no-wrap
msgid ""
"class StaticSingleton {\n"
"    static final long START_TIME = System.currentTimeMillis();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:492
#, no-wrap
msgid ""
"    static long startTime() {\n"
"        return START_TIME;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:497
#, fuzzy
msgid "When the `singletons/static` endpoint is queried, it will always return the same value, even after the application is restarted:"
msgstr "Cuando se consulta el punto final `singletons/static`, siempre devolverá el mismo valor, incluso después de reiniciar la aplicación:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:502
#: upstream/_guides/writing-native-applications-tips.adoc:505
#: upstream/_guides/writing-native-applications-tips.adoc:510
#, no-wrap
msgid ""
"$ curl http://localhost:8080/singletons/static\n"
"1656509254532%\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:507
#: upstream/_guides/writing-native-applications-tips.adoc:554
#: upstream/_guides/writing-native-applications-tips.adoc:600
#, fuzzy, no-wrap
msgid "### Restart the native application ###\n"
msgstr "Consejos para escribir aplicaciones nativas"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:513
#, fuzzy
msgid "Singletons that rely on `enum` classes are also affected by the same issue:"
msgstr "Los singletons que dependen de las clases `enum` también se ven afectados por el mismo problema:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:525
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/enum\")\n"
"    public long withEnum() {\n"
"        return EnumSingleton.INSTANCE.startTime();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:528
#, no-wrap
msgid ""
"enum EnumSingleton {\n"
"    INSTANCE(System.currentTimeMillis());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:530
#, no-wrap
msgid "    private final long startTime;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:534
#, no-wrap
msgid ""
"    private EnumSingleton(long startTime) {\n"
"        this.startTime = startTime;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:539
#: upstream/_guides/writing-native-applications-tips.adoc:585
#, no-wrap
msgid ""
"    long startTime() {\n"
"        return startTime;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:544
#, fuzzy
msgid "When the `singletons/enum` endpoint is queried, it will always return the same value, even after the application is restarted:"
msgstr "Cuando se consulta el punto final `singletons/enum`, siempre devolverá el mismo valor, incluso después de reiniciar la aplicación:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:549
#: upstream/_guides/writing-native-applications-tips.adoc:552
#: upstream/_guides/writing-native-applications-tips.adoc:557
#, no-wrap
msgid ""
"$ curl http://localhost:8080/singletons/enum\n"
"1656509254601%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:560
#, fuzzy
msgid "One way to fix it is to build singletons using CDI's `@Singleton` annotation:"
msgstr "Una forma de solucionarlo es construir singletons utilizando la anotación `@Singleton` de CDI:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:568
#, no-wrap
msgid ""
"    @Inject\n"
"    CdiSingleton cdiSingleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:575
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/cdi\")\n"
"    public long withCdi() {\n"
"        return cdiSingleton.startTime();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:580
#, no-wrap
msgid ""
"@Singleton\n"
"class CdiSingleton {\n"
"    // Note that the field is not static\n"
"    final long startTime = System.currentTimeMillis();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:590
#, fuzzy
msgid "After each restart, querying `singletons/cdi` will return a different value, just like it would in JVM mode:"
msgstr "Después de cada reinicio, la consulta a `singletons/cdi` devolverá un valor diferente, al igual que lo haría en el modo JVM:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:595
#: upstream/_guides/writing-native-applications-tips.adoc:598
#, no-wrap
msgid ""
"$ curl http://localhost:8080/singletons/cdi\n"
"1656510218554%\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:603
#, no-wrap
msgid ""
"$ curl http://localhost:8080/singletons/cdi\n"
"1656510714689%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:610
#, fuzzy
msgid "An alternative way to enforce a singleton while relying static fields, or enums, is to xref:delay-class-init-in-your-app[delay its class initialization until run time].  The nice advantage of CDI-based singletons is that your class initialization is not constrained, so you can freely decide whether it should be build-time or run-time initialized, depending on your use case."
msgstr "Una forma alternativa de imponer un singleton mientras se confía en los campos estáticos, o enums, es  link:#delay-class-init-in-your-app[retrasar la inicialización de su clase hasta] el tiempo de ejecución. La ventaja de los singletons basados en CDI es que la inicialización de su clase no está restringida, por lo que puede decidir libremente si debe ser inicializada en tiempo de construcción o en tiempo de ejecución, dependiendo de su caso de uso."

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:611
#, fuzzy, no-wrap
msgid "Beware of common Java API overrides"
msgstr "Cuidado con las anulaciones comunes de la API de Java"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:621
#, fuzzy
msgid "Certain commonly used Java methods are overriden by user classes, e.g. `toString`, `equals`, `hashCode`...etc.  The majority of overrides do not cause problems, but if they use third party libraries (e.g. for additional formatting), or use dynamic language features (e.g. reflection or proxies), they can cause native image build to fail.  Some of those failures might be solvable via configuration, but others can be more tricky to handle."
msgstr "Algunos métodos Java de uso común son anulados por las clases de usuario, por ejemplo, `toString`, `equals`, `hashCode`...etc. La mayoría de los overrides no causan problemas, pero si utilizan librerías de terceros (por ejemplo, para dar formato adicional), o utilizan características dinámicas del lenguaje (por ejemplo, reflection o proxies), pueden hacer que la construcción de la imagen nativa falle. Algunos de estos fallos pueden solucionarse mediante la configuración, pero otros pueden ser más complicados de manejar."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:629
#, fuzzy
msgid "From a GraalVM points-to analysis perspective, what happens in these method overrides matters, even if the application does not explicitly call them.  This is because these methods are used throughout the JDK, and all it takes is for one of those calls to be done on an unconstrained type, e.g. `java.lang.Object`, for the analysis to have to pull all implementations of that particular method."
msgstr "Desde la perspectiva del análisis de puntos de GraalVM, lo que ocurre en estos métodos overrides importa, incluso si la aplicación no los llama explícitamente. Esto se debe a que estos métodos se utilizan en todo el JDK, y basta con que una de esas llamadas se realice en un tipo no restringido, por ejemplo, `java.lang.Object`, para que el análisis tenga que extraer todas las implementaciones de ese método concreto."

#. type: Title ==
#: upstream/_guides/writing-native-applications-tips.adoc:631
#, fuzzy, no-wrap
msgid "Supporting native in a Quarkus extension"
msgstr "Apoyo a los nativos en una extensión de Quarkus"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:634
#, fuzzy
msgid "Supporting native in a Quarkus extension is even easier as Quarkus provides a lot of tools to simplify all this."
msgstr "Apoyar a los nativos en una extensión de Quarkus es aún más fácil, ya que Quarkus proporciona un montón de herramientas para simplificar todo esto."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:638
#, fuzzy
msgid "Everything described here will only work in the context of Quarkus extensions, it won't work in an application."
msgstr "Todo lo descrito aquí sólo funcionará en el contexto de las extensiones de Quarkus, no funcionará en una aplicación."

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:640
#, fuzzy, no-wrap
msgid "Register reflection"
msgstr "Registro de reflexión"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:643
#, fuzzy
msgid "Quarkus makes registration of reflection in an extension a breeze by using `ReflectiveClassBuildItem`, thus eliminating the need for a JSON configuration file."
msgstr "Quarkus hace que el registro de la reflexión en una extensión sea una brisa usando `ReflectiveClassBuildItem`, eliminando así la necesidad de un archivo de configuración JSON."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:645
#, fuzzy
msgid "To register a class for reflection, one would need to create a Quarkus processor class and add a build step that registers reflection:"
msgstr "Para registrar una clase para la reflexión, habría que crear una clase de procesador Quarkus y añadir un paso de construcción que registre la reflexión:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:649
#, no-wrap
msgid "public class SaxParserProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:655
#, no-wrap
msgid ""
"    @BuildStep\n"
"    ReflectiveClassBuildItem reflection() {\n"
"        // since we only need reflection to the constructor of the class, we can specify `false` for both the methods and the fields arguments.\n"
"        return new ReflectiveClassBuildItem(false, false, \"com.sun.org.apache.xerces.internal.parsers.SAXParser\");\n"
"    }\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:662
#, fuzzy
msgid "For more information about reflection in GraalVM, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/dynamic-features/Reflection/[GraalVM Reflection in Native Image] guide."
msgstr "Puede encontrar más información sobre la reflexión en GraalVM  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[aquí]."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:667
#, fuzzy
msgid "In the context of an extension, Quarkus eliminates the need for a JSON configuration file by allowing extension authors to specify a `NativeImageResourceBuildItem`:"
msgstr "En el contexto de una extensión, Quarkus elimina la necesidad de un archivo de configuración JSON permitiendo a los autores de la extensión especificar un `NativeImageResourceBuildItem`:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:671
#, no-wrap
msgid "public class ResourcesProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:676
#, no-wrap
msgid ""
"    @BuildStep\n"
"    NativeImageResourceBuildItem nativeImageResourceBuildItem() {\n"
"        return new NativeImageResourceBuildItem(\"META-INF/extra.properties\");\n"
"    }\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:683
#, fuzzy
msgid "For more information about GraalVM resource handling in native executables, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/dynamic-features/Resources/[GraalVM Accessing Resources in Native Image] guide."
msgstr "Para más información sobre el manejo de los recursos de GraalVM en los ejecutables nativos, consulte  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[la documentación de GraalVM]."

#. type: Title ==
#: upstream/_guides/writing-native-applications-tips.adoc:686
#, fuzzy, no-wrap
msgid "Delay class initialization"
msgstr "Retrasar la inicialización de la clase"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:689
#, fuzzy
msgid "Quarkus simplifies things by allowing extensions authors to simply register a `RuntimeInitializedClassBuildItem`. A simple example of doing so could be:"
msgstr "Quarkus simplifica las cosas permitiendo a los autores de extensiones simplemente registrar un `RuntimeInitializedClassBuildItem`. Un ejemplo sencillo de hacerlo podría ser:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:693
#: upstream/_guides/writing-native-applications-tips.adoc:716
#, no-wrap
msgid "public class S3Processor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:698
#, no-wrap
msgid ""
"    @BuildStep\n"
"    RuntimeInitializedClassBuildItem cryptoConfiguration() {\n"
"        return new RuntimeInitializedClassBuildItem(CryptoConfiguration.class.getCanonicalName());\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:703
#, fuzzy
msgid "Using such a construct means that a `--initialize-at-run-time` option will automatically be added to the `native-image` command line."
msgstr "El uso de esta construcción significa que la opción `--initialize-at-run-time` se añadirá automáticamente a la línea de comandos `native-image`."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:707
#, fuzzy
msgid "For more information about the `--initialize-at-run-time` option, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/optimizations-and-performance/ClassInitialization/[GraalVM Class Initialization in Native Image] guide."
msgstr "Para más información sobre `--initialize-at-run-time`, lea  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[la documentación de GraalVM]."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:712
#, fuzzy
msgid "Very similarly, Quarkus allows extensions authors to register a `NativeImageProxyDefinitionBuildItem`. An example of doing so is:"
msgstr "De forma muy similar, Quarkus permite a los autores de extensiones registrar un `NativeImageProxyDefinitionBuildItem`. Un ejemplo de ello es:"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:722
#, no-wrap
msgid ""
"    @BuildStep\n"
"    NativeImageProxyDefinitionBuildItem httpProxies() {\n"
"        return new NativeImageProxyDefinitionBuildItem(\"org.apache.http.conn.HttpClientConnectionManager\",\n"
"                \"org.apache.http.pool.ConnPoolControl\", \"com.amazonaws.http.conn.Wrapped\");\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:727
#, fuzzy
msgid "Using such a construct means that a `-H:DynamicProxyConfigurationResources` option will automatically be added to the `native-image` command line."
msgstr "El uso de esta construcción significa que la opción `-H:DynamicProxyConfigurationResources` se añadirá automáticamente a la línea de comandos `native-image`."

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:731
#, fuzzy
msgid "For more information about Proxy Classes, see the link:https://www.graalvm.org/{graalvm-docs-version}/reference-manual/native-image/guides/configure-dynamic-proxies/[GraalVM Configure Dynamic Proxies Manually] guide."
msgstr "Para más información sobre las Clases Proxy puedes leer  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md[la documentación de GraalVM]."

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:733
#, fuzzy, no-wrap
msgid "Logging with Native Image"
msgstr "Registro con imagen nativa"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:736
#, fuzzy
msgid "If you are using dependencies that require logging components such as Apache Commons Logging or Log4j and are experiencing a `ClassNotFoundException` when building the native executable, you can resolve this by excluding the logging library and adding the corresponding JBoss Logging adapter."
msgstr "Si utiliza dependencias que requieren componentes de registro como Apache Commons Logging o Log4j y experimenta un `ClassNotFoundException` al construir el ejecutable nativo, puede resolverlo excluyendo la biblioteca de registro y añadiendo el adaptador de JBoss Logging correspondiente."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:737
#, fuzzy
msgid "For more details please refer to the xref:logging.adoc#logging-adapters[Logging guide]."
msgstr "Para más detalles, consulte la  link:logging.html#logging-adapters[guía de registro]."
