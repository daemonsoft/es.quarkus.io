# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-24 08:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-oauth2.adoc:6
#, fuzzy, no-wrap
msgid "Using OAuth2 RBAC"
msgstr "Uso de OAuth2 RBAC"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:13
#, fuzzy
msgid "This guide explains how your Quarkus application can utilize OAuth2 tokens to provide secured access to the Jakarta REST (formerly known as JAX-RS) endpoints."
msgstr "Esta guía explica cómo su aplicación Quarkus puede utilizar tokens OAuth2 para proporcionar acceso seguro a los puntos finales JAX-RS."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:16
#, fuzzy
msgid "OAuth2 is an authorization framework that enables applications to obtain access to an HTTP resource on behalf of a user.  It can be used to implement an application authentication mechanism based on tokens by delegating to an external server (the authentication server) the user authentication and providing a token for the authentication context."
msgstr "OAuth2 es un marco de autorización que permite a las aplicaciones obtener acceso a un recurso HTTP en nombre de un usuario. Puede utilizarse para implementar un mecanismo de autenticación de aplicaciones basado en tokens, delegando en un servidor externo (el servidor de autenticación) la autenticación del usuario y proporcionando un token para el contexto de autenticación."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:18
#, fuzzy
msgid "This extension provides a light-weight support for using the opaque Bearer Tokens and validating them by calling an introspection endpoint."
msgstr "Esta extensión proporciona un soporte ligero para utilizar los tokens de portador opacos y validarlos llamando a un punto final de introspección."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:21
#, fuzzy
msgid "If the OAuth2 Authentication server provides JWT Bearer Tokens, consider using either xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] or xref:security-jwt.adoc[SmallRye JWT] extensions instead.  OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow. For more information, see the xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications] guide."
msgstr "Si el servidor de autenticación OAuth2 proporciona tokens portadores JWT, entonces debería considerar el uso de las extensiones OpenID  link:security-openid-connect.html[Connect] o  link:security-jwt.html[SmallRye JWT] en su lugar. La extensión OpenID Connect debe usarse si la aplicación Quarkus necesita autenticar a los usuarios usando el flujo de código de autorización OIDC, por favor lea la guía  link:security-openid-connect-web-authentication.html[Using OpenID Connect to Protect Web] Applications para más información."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:24
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:28
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:30
#, fuzzy
msgid "Clone the Git repository: git clone https://github.com/quarkusio/quarkus-quickstarts.git, or download an archive."
msgstr "Clone el repositorio Git: git clone  https://github.com/quarkusio/quarkus-quickstarts.git  o descargue un archivo."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:33
#, fuzzy
msgid "The solution is located in the `security-oauth2-quickstart` link:{quickstarts-tree-url}/security-oauth2-quickstart[directory].  It contains a very simple UI to use the Jakarta REST resources created here, too."
msgstr "La solución se encuentra en el `security-oauth2-quickstart` {quickstarts-tree-url}/security-oauth2-quickstart[directorio]. Contiene una interfaz de usuario muy sencilla para utilizar los recursos JAX-RS creados aquí también."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:34
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:37
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:43
#, fuzzy
msgid "This command generates a project and imports the `elytron-security-oauth2` extension, which includes the OAuth2 opaque token support."
msgstr "Este comando genera un proyecto e importa la extensión `elytron-security-oauth2`, que incluye el soporte de token opaco OAuth2."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:45
#, fuzzy
msgid "If you don't want to use the Maven plugin, you can just include the dependency in your build file:"
msgstr "Si no quieres usar el plugin de Maven, puedes simplemente incluir la dependencia en tu archivo de construcción:"

#. type: Block title
#: upstream/_guides/security-oauth2.adoc:47
#: upstream/_guides/security-oauth2.adoc:332
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:53
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-oauth2</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oauth2.adoc:56
#: upstream/_guides/security-oauth2.adoc:344
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:59
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-elytron-security-oauth2\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:61
#, fuzzy, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "Examinar el recurso JAX-RS"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:64
#, fuzzy
msgid "Create the `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` file with the following content:"
msgstr "Cree el archivo `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:68
#: upstream/_guides/security-oauth2.adoc:92
#: upstream/_guides/security-oauth2.adoc:170
#, no-wrap
msgid "package org.acme.security.oauth2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:73
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:76
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"public class TokenSecuredResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:83
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:86
#, fuzzy
msgid "This is a basic REST endpoint that does not have any of the {extension-name} specific features, so let's add some."
msgstr "Este es un punto final REST básico que no tiene ninguna de las características específicas de {nombre-de-la-extensión}, así que vamos a añadir algunas."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:88
#, fuzzy
msgid "We will use the JSR 250 common security annotations, they are described in the xref:security-overview.adoc[Using Security] guide."
msgstr "Utilizaremos las anotaciones de seguridad comunes de la JSR 250, que se describen en la guía  link:security.html[Using Security]."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:94
#: upstream/_guides/security-oauth2.adoc:172
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:103
#, no-wrap
msgid ""
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:107
#: upstream/_guides/security-oauth2.adoc:186
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"@ApplicationScoped\n"
"public class TokenSecuredResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:120
#, no-wrap
msgid ""
"    @GET()\n"
"    @Path(\"permit-all\")\n"
"    @PermitAll // <1>\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@Context SecurityContext ctx) { // <2>\n"
"        Principal caller =  ctx.getUserPrincipal(); <3>\n"
"        String name = caller == null ? \"anonymous\" : caller.getName();\n"
"        String helloReply = String.format(\"hello + %s, isSecure: %s, authScheme: %s\", name, ctx.isSecure(), ctx.getAuthenticationScheme());\n"
"        return helloReply; // <4>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:122
#, fuzzy
msgid "`@PermitAll` indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr "`@PermitAll` indica que el punto final dado es accesible por cualquier persona que llame, autenticada o no."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:123
#, fuzzy
msgid "Here we inject the Jakarta REST `SecurityContext` to inspect the security state of the call."
msgstr "Aquí inyectamos el JAX-RS `SecurityContext` para inspeccionar el estado de seguridad de la llamada."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:124
#, fuzzy
msgid "Here we obtain the current request user/caller `Principal`. For an unsecured call this will be null, so we build the username by checking `caller` against null."
msgstr "Aquí obtenemos el usuario/llamada actual de la solicitud `Principal`. Para una llamada no segura esto será null, así que construimos el nombre de usuario comprobando `caller` contra null."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:125
#, fuzzy
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`."
msgstr "La respuesta que construimos hace uso del nombre de la persona que llama, los estados `isSecure()` y `getAuthenticationScheme()` de la solicitud `SecurityContext`."

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:127
#, fuzzy, no-wrap
msgid "Setting up application.properties"
msgstr "Configuración de application.properties"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:130
#, fuzzy
msgid "You need to configure your application with the following minimal properties:"
msgstr "Debe configurar su aplicación con las siguientes propiedades mínimas:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:136
#, no-wrap
msgid ""
"quarkus.oauth2.client-id=client_id\n"
"quarkus.oauth2.client-secret=secret\n"
"quarkus.oauth2.introspection-url=http://oauth-server/introspect\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:140
#, fuzzy
msgid "You need to specify the introspection URL of your authentication server and the `client-id` / `client-secret` that your application will use to authenticate itself to the authentication server. + The extension will then use this information to validate the token and recover the information associated with it."
msgstr "Necesitas especificar la URL de introspección de tu servidor de autenticación y el `client-id` / `client-secret` que tu aplicación utilizará para autenticarse en el servidor de autenticación. + La extensión utilizará entonces esta información para validar el token y recuperar la información asociada a él."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:142
#, fuzzy
msgid "For all configuration properties, see the xref:config-reference[Configuration Reference] section at the end of this guide."
msgstr "Para conocer todas las propiedades de configuración, consulte la sección de  link:#config-reference[referencia de la configuración] al final de esta guía."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:143
#, fuzzy, no-wrap
msgid "Run the application"
msgstr "Ejecutar la aplicación"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:146
#, fuzzy
msgid "Now we are ready to run our application. Use:"
msgstr "Ahora estamos listos para ejecutar nuestra aplicación. Usar:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:150
#, fuzzy
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "Ahora que el punto final REST se está ejecutando, podemos acceder a él utilizando una herramienta de línea de comandos como curl:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:155
#, no-wrap
msgid ""
"$ curl http://127.0.0.1:8080/secured/permit-all; echo\n"
"hello + anonymous, isSecure: false, authScheme: null\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:158
#, fuzzy
msgid "We have not provided any token in our request, so we would not expect that there is any security state seen by the endpoint, and the response is consistent with that:"
msgstr "No hemos proporcionado ningún token en nuestra solicitud, por lo que no esperamos que haya ningún estado de seguridad visto por el punto final, y la respuesta es consistente con eso:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:160
#, fuzzy
msgid "username is anonymous"
msgstr "el nombre de usuario es anónimo"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:161
#, fuzzy
msgid "`isSecure` is false as https is not used"
msgstr "`isSecure` es falso ya que no se utiliza https"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:162
#, fuzzy
msgid "`authScheme` is null"
msgstr "`authScheme` es nulo"

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:163
#, fuzzy, no-wrap
msgid "Securing the endpoint"
msgstr "Asegurar el punto final"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:166
#, fuzzy
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "Así que ahora vamos a asegurar algo. Echa un vistazo al nuevo método de punto final `helloRolesAllowed` en lo siguiente:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:182
#, no-wrap
msgid ""
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:197
#, no-wrap
msgid ""
"    @GET()\n"
"    @Path(\"permit-all\")\n"
"    @PermitAll\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@Context SecurityContext ctx) {\n"
"        Principal caller =  ctx.getUserPrincipal();\n"
"        String name = caller == null ? \"anonymous\" : caller.getName();\n"
"        String helloReply = String.format(\"hello + %s, isSecure: %s, authScheme: %s\", name, ctx.isSecure(), ctx.getAuthenticationScheme());\n"
"        return helloReply;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:209
#, no-wrap
msgid ""
"    @GET()\n"
"    @Path(\"roles-allowed\") // <1>\n"
"    @RolesAllowed({\"Echoer\", \"Subscriber\"}) // <2>\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String helloRolesAllowed(@Context SecurityContext ctx) {\n"
"        Principal caller =  ctx.getUserPrincipal();\n"
"        String name = caller == null ? \"anonymous\" : caller.getName();\n"
"        String helloReply = String.format(\"hello + %s, isSecure: %s, authScheme: %s\", name, ctx.isSecure(), ctx.getAuthenticationScheme());\n"
"        return helloReply;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:211
#, fuzzy
msgid "This new endpoint will be located at `/secured/roles-allowed`"
msgstr "Este nuevo punto final se ubicará en `/secured/roles-allowed`"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:212
#, fuzzy
msgid "`@RolesAllowed` indicates that the given endpoint is accessible by a caller if they have either an \"Echoer\" or a \"Subscriber\" role assigned."
msgstr "`@RolesAllowed` indica que el punto final dado es accesible por una persona que llama si tiene asignado el rol de \"Echoer\" o \"Subscriber\"."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:214
#, fuzzy
msgid "After you make this addition to your `TokenSecuredResource`, try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint. Your output should be:"
msgstr "Después de hacer esta adición a su `TokenSecuredResource`, intente `curl -v &lt;a href=\"http://127.0.0.1:8080/secured/roles-allowed\" class=\"bare\"&gt;http://127.0.0.1:8080/secured/roles-allowed&lt;/a&gt;; echo` intentar acceder al nuevo punto final. El resultado debería ser:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:234
#, no-wrap
msgid ""
"$ curl -v http://127.0.0.1:8080/secured/roles-allowed; echo\n"
"*   Trying 127.0.0.1...\n"
"* TCP_NODELAY set\n"
"* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n"
"> GET /secured/roles-allowed HTTP/1.1\n"
"> Host: 127.0.0.1:8080\n"
"> User-Agent: curl/7.54.0\n"
"> Accept: */*\n"
">\n"
"< HTTP/1.1 401 Unauthorized\n"
"< Connection: keep-alive\n"
"< Content-Type: text/html;charset=UTF-8\n"
"< Content-Length: 14\n"
"< Date: Sun, 03 Mar 2019 16:32:34 GMT\n"
"<\n"
"* Connection #0 to host 127.0.0.1 left intact\n"
"Not authorized\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:237
#, fuzzy
msgid "Excellent, we have not provided any OAuth2 token in the request, so we should not be able to access the endpoint, and we were not. Instead, we received an HTTP 401 Unauthorized error. We need to obtain and pass in a valid OAuth2 token to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate the token, and 2) generating a matching token with the appropriate claims."
msgstr "Excelente, no hemos proporcionado ningún token OAuth2 en la solicitud, por lo que no deberíamos ser capaces de acceder al endpoint, y no lo fuimos. En su lugar, recibimos un error HTTP 401 Unauthorized. Necesitamos obtener y pasar un token OAuth2 válido para acceder a ese endpoint. Hay dos pasos para esto, 1) configurar nuestra extensión {extension-name} con información sobre cómo validar el token, y 2) generar un token que coincida con las reclamaciones apropiadas."

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:238
#, fuzzy, no-wrap
msgid "Generating a token"
msgstr "Generar un token"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:241
#, fuzzy
msgid "You need to obtain the token from a standard OAuth2 authentication server (https://www.keycloak.org/[Keycloak] for example) using the token endpoint."
msgstr "Es necesario obtener el token de un servidor de autenticación OAuth2 estándar link:https://www.keycloak.org/[(Keycloak], por ejemplo) utilizando el punto final del token."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:243
#, fuzzy
msgid "You can find below a curl example of such call for a `client_credential` flow:"
msgstr "A continuación puede encontrar un ejemplo de llamada de este tipo para un flujo `client_credential`:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:248
#, no-wrap
msgid ""
"curl -X POST \"http://oauth-server/token?grant_type=client_credentials\" \\\n"
"-H  \"Accept: application/json\" -H  \"Authorization: Basic Y2xpZW50X2lkOmNsaWVudF9zZWNyZXQ=\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:251
#, fuzzy
msgid "It should respond something like that..."
msgstr "Debería responder algo así..."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:255
#, no-wrap
msgid "{\"access_token\":\"60acf56d-9daf-49ba-b3be-7a423d9c7288\",\"token_type\":\"bearer\",\"expires_in\":1799,\"scope\":\"READER\"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oauth2.adoc:258
#, fuzzy, no-wrap
msgid "Finally, make a secured request to /secured/roles-allowed"
msgstr "Por último, haga una petición segura a /secured/roles-allowed"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:260
#, fuzzy
msgid "Now let's use this to make a secured request to the `/secured/roles-allowed` endpoint"
msgstr "Ahora usemos esto para hacer una petición segura al punto final `/secured/roles-allowed`"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:265
#, no-wrap
msgid ""
"$ curl -H \"Authorization: Bearer 60acf56d-9daf-49ba-b3be-7a423d9c7288\" http://127.0.0.1:8080/secured/roles-allowed; echo\n"
"hello + client_id isSecure: false, authScheme: OAuth2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:268
#, fuzzy
msgid "Success! We now have:"
msgstr "¡Éxito! Ahora tenemos:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:270
#, fuzzy
msgid "a non-anonymous caller name of client_id"
msgstr "un nombre de llamada no anónimo de client_id"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:271
#, fuzzy
msgid "an authentication scheme of OAuth2"
msgstr "un esquema de autenticación de OAuth2"

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:272
#, fuzzy, no-wrap
msgid "Roles mapping"
msgstr "Asignación de funciones"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:275
#, fuzzy
msgid "Roles are mapped from one of the claims of the introspection endpoint response. By default, it's the `scope` claim. Roles are obtained by splitting the claim with a space separator. If the claim is an array, no splitting is done, the roles are obtained from the array."
msgstr "Las funciones se asignan a partir de una de las reivindicaciones de la respuesta del punto final de introspección. Por defecto, es el claim `scope`. Los roles se obtienen dividiendo la declaración con un separador de espacios. Si la declaración es una matriz, no se realiza ninguna división, los roles se obtienen de la matriz."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:277
#, fuzzy
msgid "You can customize the name of the claim to use for the roles with the `quarkus.oauth2.role-claim` property."
msgstr "Puede personalizar el nombre de la reivindicación a utilizar para los roles con la propiedad `quarkus.oauth2.role-claim`."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:278
#, fuzzy, no-wrap
msgid "Package and run the application"
msgstr "Empaquetar y ejecutar la aplicación"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:281
#, fuzzy
msgid "As usual, the application can be packaged using:"
msgstr "Como es habitual, la aplicación se puede empaquetar utilizando:"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:285
#, fuzzy
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "Y ejecutado mediante `java -jar target/quarkus-app/quarkus-run.jar`:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:293
#, no-wrap
msgid ""
"[INFO] Scanning for projects...\n"
"...\n"
"$ java -jar target/quarkus-app/quarkus-run.jar\n"
"2019-03-28 14:27:48,839 INFO  [io.quarkus] (main) Quarkus {quarkus-version} started in 0.796s. Listening on: http://[::]:8080\n"
"2019-03-28 14:27:48,841 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, resteasy-reactive-jackson, security, security-oauth2]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:296
#, fuzzy
msgid "You can also generate the native executable with:"
msgstr "También puedes generar el ejecutable nativo con:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:317
#, no-wrap
msgid ""
"[INFO] Scanning for projects...\n"
"...\n"
"[security-oauth2-quickstart-runner:25602]     universe:     493.17 ms\n"
"[security-oauth2-quickstart-runner:25602]      (parse):     660.41 ms\n"
"[security-oauth2-quickstart-runner:25602]     (inline):   1,431.10 ms\n"
"[security-oauth2-quickstart-runner:25602]    (compile):   7,301.78 ms\n"
"[security-oauth2-quickstart-runner:25602]      compile:  10,542.16 ms\n"
"[security-oauth2-quickstart-runner:25602]        image:   2,797.62 ms\n"
"[security-oauth2-quickstart-runner:25602]        write:     988.24 ms\n"
"[security-oauth2-quickstart-runner:25602]      [total]:  43,778.16 ms\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Total time:  51.500 s\n"
"[INFO] Finished at: 2019-06-28T14:30:56-07:00\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:321
#, no-wrap
msgid ""
"$ ./target/security-oauth2-quickstart-runner\n"
"2019-03-28 14:31:37,315 INFO  [io.quarkus] (main) Quarkus 0.20.0 started in 0.006s. Listening on: http://[::]:8080\n"
"2019-03-28 14:31:37,316 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, resteasy-reactive-jackson, security, security-oauth2]\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:324
#, fuzzy, no-wrap
msgid "Integration testing"
msgstr "Pruebas de integración"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:328
#, fuzzy
msgid "If you don't want to use a real OAuth2 authorization server for your integration tests, you can use the xref:security-properties.adoc[Properties based security] extension for your test, or mock an authorization server using Wiremock."
msgstr "Si no quieres usar un servidor de autorización OAuth2 real para tus pruebas de integración, puedes usar la extensión de  link:security-properties.html[seguridad basada en propiedades] para tu prueba, o simular un servidor de autorización usando Wiremock."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:330
#, fuzzy
msgid "First, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "En primer lugar, hay que añadir Wiremock como dependencia de prueba. Para un proyecto de Maven esto sucedería así:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:340
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.wiremock</groupId>\n"
"    <artifactId>wiremock</artifactId>\n"
"    <scope>test</scope>\n"
"    <version>${wiremock.version}</version> // <1>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:342
#: upstream/_guides/security-oauth2.adoc:349
#, fuzzy
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/org.wiremock/wiremock[here]."
msgstr "Utilice una versión adecuada de Wiremock. Todas las versiones disponibles se pueden encontrar  link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[aquí]."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:347
#, no-wrap
msgid "testImplementation(\"org.wiremock:wiremock:${wiremock.version}\") <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:353
#, fuzzy
msgid "In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource` annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration values that Quarkus will use."
msgstr "En las pruebas de Quarkus, cuando se necesita iniciar algún servicio antes de que se ejecuten las pruebas de Quarkus, utilizamos la anotación `@io.quarkus.test.common.QuarkusTestResource` para especificar un `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que pueda iniciar el servicio y suministrar los valores de configuración que utilizará Quarkus."

#. type: delimited block =
#: upstream/_guides/security-oauth2.adoc:357
#, fuzzy
msgid "For more details about `@QuarkusTestResource` refer to xref:getting-started-testing.adoc#quarkus-test-resource[this part of the documentation]."
msgstr "Para más detalles sobre `@QuarkusTestResource` consulte  link:getting-started-testing.html#quarkus-test-resource[esta parte de la documentación]."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:360
#, fuzzy
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `MockAuthorizationServerTestResource` like so:"
msgstr "Creemos una implementación de `QuarkusTestResourceLifecycleManager` llamada `MockAuthorizationServerTestResource` de esta manera:"

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:366
#, no-wrap
msgid ""
"import com.github.tomakehurst.wiremock.WireMockServer;\n"
"import com.github.tomakehurst.wiremock.client.WireMock;\n"
"import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:369
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:371
#, no-wrap
msgid "public class MockAuthorizationServerTestResource implements QuarkusTestResourceLifecycleManager {  // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:373
#, no-wrap
msgid "    private WireMockServer wireMockServer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:378
#, no-wrap
msgid ""
"    @Override\n"
"    public Map<String, String> start() {\n"
"        wireMockServer = new WireMockServer();\n"
"        wireMockServer.start(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:383
#, no-wrap
msgid ""
"        // define the mock for the introspect endpoint\n"
"        WireMock.stubFor(WireMock.post(\"/introspect\").willReturn(WireMock.aResponse() // <3>\n"
"                .withBody(\n"
"                        \"{\\\"active\\\":true,\\\"scope\\\":\\\"Echoer\\\",\\\"username\\\":null,\\\"iat\\\":1562315654,\\\"exp\\\":1562317454,\\\"expires_in\\\":1458,\\\"client_id\\\":\\\"my_client_id\\\"}\")));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:387
#, no-wrap
msgid ""
"        return Collections.singletonMap(\"quarkus.oauth2.introspection-url\", wireMockServer.baseUrl() + \"/introspect\"); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:395
#, no-wrap
msgid ""
"    @Override\n"
"    public void stop() {\n"
"        if (null != wireMockServer) {\n"
"            wireMockServer.stop();  // <5>\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:398
#, fuzzy
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr "El método `start` es invocado por Quarkus antes de ejecutar cualquier prueba y devuelve un `Map` de propiedades de configuración que se aplican durante la ejecución de la prueba."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:399
#, fuzzy
msgid "Launch Wiremock."
msgstr "Inicie Wiremock."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:400
#, fuzzy
msgid "Configure Wiremock to stub the calls to `/introspect` by returning an OAuth2 introspect response. You need to customize this line to return what's needed for your application (at least the scope property as roles are derived from the scope)."
msgstr "Configura Wiremock para que haga un stub de las llamadas a `/introspect` devolviendo una respuesta introspectiva de OAuth2. Tienes que personalizar esta línea para que devuelva lo que se necesita para tu aplicación (al menos la propiedad scope ya que los roles se derivan del scope)."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:401
#, fuzzy
msgid "As the `start` method returns configuration that applies for tests, we set the `quarkus.oauth2.introspection-url` property that controls the URL of the introspect endpoint used by the OAuth2 extension."
msgstr "Como el método `start` devuelve la configuración que se aplica a las pruebas, establecemos la propiedad `quarkus.oauth2.introspection-url` que controla la URL del endpoint de introspect utilizado por la extensión OAuth2."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:402
#, fuzzy
msgid "When all tests have finished, shutdown Wiremock."
msgstr "Cuando todas las pruebas hayan terminado, apague Wiremock."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:405
#, fuzzy
msgid "Your test class needs to be annotated like with `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` to use this `QuarkusTestResourceLifecycleManager`."
msgstr "Su clase de prueba necesita ser anotada como con `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` para usar este `QuarkusTestResourceLifecycleManager`."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:407
#, fuzzy
msgid "Below is an example of a test that uses the `MockAuthorizationServerTestResource`."
msgstr "A continuación se muestra un ejemplo de una prueba que utiliza el `MockAuthorizationServerTestResource`."

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:415
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(MockAuthorizationServerTestResource.class) // <1>\n"
"class TokenSecuredResourceTest {\n"
"    // use whatever token you want as the mock OAuth server will accept all tokens\n"
"    private static final String BEARER_TOKEN = \"337aab0f-b547-489b-9dbd-a54dc7bdf20d\"; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:426
#, no-wrap
msgid ""
"    @Test\n"
"    void testPermitAll() {\n"
"        RestAssured.given()\n"
"                .when()\n"
"                .header(\"Authorization\", \"Bearer: \" + BEARER_TOKEN) // <3>\n"
"                .get(\"/secured/permit-all\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oauth2.adoc:438
#, no-wrap
msgid ""
"    @Test\n"
"    void testRolesAllowed() {\n"
"        RestAssured.given()\n"
"                .when()\n"
"                .header(\"Authorization\", \"Bearer: \" + BEARER_TOKEN)\n"
"                .get(\"/secured/roles-allowed\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"hello\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:441
#, fuzzy
msgid "Use the previously created `MockAuthorizationServerTestResource` as a Quarkus test resource."
msgstr "Utilice el `MockAuthorizationServerTestResource` creado anteriormente como recurso de prueba de Quarkus."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:442
#, fuzzy
msgid "Define whatever token you want, it will not be validated by the OAuth2 mock authorization server."
msgstr "Defina el token que desee, no será validado por el servidor de autorización simulado OAuth2."

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:443
#, fuzzy
msgid "Use this token inside the `Authorization` header to trigger OAuth2 authentication."
msgstr "Utilice este token dentro de la cabecera `Authorization` para activar la autenticación OAuth2."

#. type: delimited block =
#: upstream/_guides/security-oauth2.adoc:448
#, fuzzy
msgid "`@QuarkusTestResource` applies to all tests, not just `TokenSecuredResourceTest`."
msgstr "`@QuarkusTestResource` se aplica a todas las pruebas, no sólo a `TokenSecuredResourceTest`."

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:451
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:454
#, fuzzy
msgid "https://tools.ietf.org/html/rfc6749[OAuth2]"
msgstr "link:https://tools.ietf.org/html/rfc6749[OAuth2]"

#. type: Plain text
#: upstream/_guides/security-oauth2.adoc:455
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "link:security.html[Seguridad Quarkus]"

#. type: Title ==
#: upstream/_guides/security-oauth2.adoc:457
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"
