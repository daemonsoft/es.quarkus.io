# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/rest-client-reactive.adoc:6
#, fuzzy, no-wrap
msgid "Using the REST Client"
msgstr "Utilización del cliente REST reactivo"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:15
#, fuzzy
msgid "This guide explains how to use the REST Client Reactive in order to interact with REST APIs.  REST Client Reactive is the REST Client implementation compatible with RESTEasy Reactive."
msgstr "Esta guía explica cómo utilizar el Cliente REST Reactive para interactuar con las APIs REST. REST Client Reactive es la implementación de REST Client compatible con RESTEasy Reactive."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:18
#, fuzzy
msgid "If your application uses a client and exposes REST endpoints, please use xref:resteasy-reactive.adoc[RESTEasy Reactive] for the server part."
msgstr "Si su aplicación utiliza un cliente y expone puntos finales REST, utilice  link:resteasy-reactive.html[RESTEasy Reactive] para la parte del servidor."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:19
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:23
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:27
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:29
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:31
#, fuzzy
msgid "The solution is located in the `rest-client-reactive-quickstart` link:{quickstarts-tree-url}/rest-client-reactive-quickstart[directory]."
msgstr "La solución se encuentra en el `rest-client-reactive-quickstart` {quickstarts-tree-url}/rest-client-reactive-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:32
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:35
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:41
#, fuzzy
msgid "This command generates the Maven project with a REST endpoint and imports:"
msgstr "Este comando genera el proyecto Maven con un endpoint REST y lo importa:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:43
#, fuzzy
msgid "the `resteasy-reactive-jackson` extension for the REST server support. Use `resteasy-reactive` instead if you do not wish to use Jackson;"
msgstr "la extensión `resteasy-reactive-jackson` para el soporte del servidor REST. Utilice `resteasy-reactive` en su lugar si no desea utilizar Jackson;"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:44
#, fuzzy
msgid "the `rest-client-reactive-jackson` extension for the REST client support. Use `rest-client-reactive` instead if you do not wish to use Jackson"
msgstr "la extensión `rest-client-reactive-jackson` para el soporte del cliente REST. Utilice `rest-client-reactive` en su lugar si no desea utilizar Jackson"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:47
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `rest-client-reactive-jackson` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `rest-client-reactive-jackson` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:52
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#. type: Block title
#: upstream/_guides/rest-client-reactive.adoc:54
#: upstream/_guides/rest-client-reactive.adoc:1508
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:60
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-rest-client-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/rest-client-reactive.adoc:63
#: upstream/_guides/rest-client-reactive.adoc:1518
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:66
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-rest-client-reactive-jackson\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:68
#, fuzzy, no-wrap
msgid "Setting up the model"
msgstr "Configuración del modelo"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:72
#, fuzzy
msgid "In this guide we will be demonstrating how to consume part of the REST API supplied by the link:https://stage.code.quarkus.io[stage.code.quarkus.io] service.  Our first order of business is to set up the model we will be using, in the form of a `Extension` POJO."
msgstr "En esta guía vamos a demostrar cómo consumir parte de la API REST suministrada por el servicio  link:https://stage.code.quarkus.io[stage.code.quarkus.io]. Nuestra primera orden de trabajo es configurar el modelo que vamos a utilizar, en forma de `Extension` POJO."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:74
#, fuzzy
msgid "Create a `src/main/java/org/acme/rest/client/Extension.java` file and set the following content:"
msgstr "Cree un archivo `src/main/java/org/acme/rest/client/Extension.java` y establezca el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:78
#: upstream/_guides/rest-client-reactive.adoc:100
#: upstream/_guides/rest-client-reactive.adoc:149
#: upstream/_guides/rest-client-reactive.adoc:233
#: upstream/_guides/rest-client-reactive.adoc:309
#: upstream/_guides/rest-client-reactive.adoc:405
#: upstream/_guides/rest-client-reactive.adoc:442
#: upstream/_guides/rest-client-reactive.adoc:460
#: upstream/_guides/rest-client-reactive.adoc:494
#: upstream/_guides/rest-client-reactive.adoc:535
#: upstream/_guides/rest-client-reactive.adoc:561
#: upstream/_guides/rest-client-reactive.adoc:688
#: upstream/_guides/rest-client-reactive.adoc:729
#: upstream/_guides/rest-client-reactive.adoc:755
#: upstream/_guides/rest-client-reactive.adoc:811
#: upstream/_guides/rest-client-reactive.adoc:836
#: upstream/_guides/rest-client-reactive.adoc:900
#: upstream/_guides/rest-client-reactive.adoc:944
#: upstream/_guides/rest-client-reactive.adoc:979
#, no-wrap
msgid "package org.acme.rest.client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:80
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:82
#, no-wrap
msgid "public class Extension {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:87
#, no-wrap
msgid ""
"    public String id;\n"
"    public String name;\n"
"    public String shortName;\n"
"    public List<String> keywords;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:89
#: upstream/_guides/rest-client-reactive.adoc:177
#: upstream/_guides/rest-client-reactive.adoc:266
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:92
#, fuzzy
msgid "The model above is only a subset of the fields provided by the service, but it suffices for the purposes of this guide."
msgstr "El modelo anterior es sólo un subconjunto de los campos proporcionados por el servicio, pero es suficiente para los fines de esta guía."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:93
#, fuzzy, no-wrap
msgid "Create the interface"
msgstr "Crear la interfaz"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:96
#, fuzzy
msgid "Using the REST Client Reactive is as simple as creating an interface using the proper Jakarta REST and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/ExtensionsService.java` and have the following content:"
msgstr "Utilizar el cliente REST Reactive es tan sencillo como crear una interfaz utilizando las anotaciones JAX-RS y MicroProfile adecuadas. En nuestro caso la interfaz debe ser creada en `src/main/java/org/acme/rest/client/ExtensionsService.java` y tener el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:102
#: upstream/_guides/rest-client-reactive.adoc:311
#: upstream/_guides/rest-client-reactive.adoc:731
#: upstream/_guides/rest-client-reactive.adoc:1491
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:107
#: upstream/_guides/rest-client-reactive.adoc:447
#: upstream/_guides/rest-client-reactive.adoc:819
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:111
#: upstream/_guides/rest-client-reactive.adoc:321
#: upstream/_guides/rest-client-reactive.adoc:1117
#: upstream/_guides/rest-client-reactive.adoc:1171
#, no-wrap
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient\n"
"public interface ExtensionsService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:115
#: upstream/_guides/rest-client-reactive.adoc:454
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getById(@QueryParam(\"id\") String id);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:118
#, fuzzy
msgid "The `getById` method gives our code the ability to get an extension by id from the Code Quarkus API. The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr "El método `getById` da a nuestro código la capacidad de obtener una extensión por id desde la API de Code Quarkus. El cliente se encargará de toda la red y el marshalling dejando nuestro código limpio de tales detalles técnicos."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:120
#, fuzzy
msgid "The purpose of the annotations in the code above is the following:"
msgstr "El propósito de las anotaciones en el código anterior es el siguiente:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:123
#, fuzzy
msgid "`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for CDI injection as a REST Client"
msgstr "`@RegisterRestClient` permite a Quarkus saber que esta interfaz está destinada a estar disponible para la inyección de CDI como cliente REST"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:124
#, fuzzy
msgid "`@Path`, `@GET` and `@QueryParam` are the standard Jakarta REST annotations used to define how to access the service"
msgstr "`@Path` `@GET` y son las anotaciones estándar de JAX-RS utilizadas para definir cómo acceder al servicio `@PathParam`"

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:129
#, fuzzy
msgid "When the `quarkus-rest-client-reactive-jackson` extension is installed, Quarkus will use the `application/json` media type by default for most return values, unless the media type is explicitly set via `@Produces` or `@Consumes` annotations."
msgstr "Cuando se instala la extensión `quarkus-rest-client-reactive-jackson`, Quarkus utilizará el tipo de medio `application/json` por defecto para la mayoría de los valores de retorno, a menos que el tipo de medio se establezca explícitamente a través de las anotaciones `@Produces` o `@Consumes`."

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:132
#, fuzzy
msgid "If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.  It will allow to narrow down the number of Jakarta REST providers (which can be seen as converters) included in the native executable."
msgstr "Si no confías en el JSON por defecto, es muy recomendable anotar tus endpoints con las anotaciones `@Produces` y `@Consumes` para definir con precisión los tipos de contenido esperados. Esto permitirá reducir el número de proveedores JAX-RS (que pueden verse como convertidores) incluidos en el ejecutable nativo."

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:138
#, fuzzy
msgid "The `getById` method above is a blocking call. It should not be invoked on the event loop.  The xref:async-support[Async Support] section describes how to make non-blocking calls."
msgstr "El método `getById` anterior es una llamada de bloqueo. No debe ser invocado en el bucle de eventos. La sección  link:#async-support[[async-support]] describe cómo hacer llamadas no bloqueantes."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:140
#, fuzzy, no-wrap
msgid "Query Parameters"
msgstr "Parámetros de la ruta"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:145
#, fuzzy
msgid "The easiest way to specify a query parameter is to annotate a client method parameter with the `@QueryParam` or the `@RestQuery`.  The `@RestQuery` is equivalent of the `@QueryParam`, but with optional name. Additionally, it can be also used to pass query parameters as a `Map`, which is convenient if parameters are not known in advance."
msgstr "La forma más sencilla de especificar un parámetro de consulta es anotar un parámetro de método de cliente con el `@QueryParam` o el `@RestQuery`. El `@RestQuery` es equivalente al `@QueryParam`, pero con nombre opcional. Además, también se puede utilizar para pasar parámetros de consulta como `Map`, lo que es conveniente si los parámetros no se conocen de antemano."

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:152
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:159
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.QueryParam;\n"
"import jakarta.ws.rs.core.MultivaluedMap;\n"
"import java.util.Map;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:163
#: upstream/_guides/rest-client-reactive.adoc:248
#: upstream/_guides/rest-client-reactive.adoc:741
#: upstream/_guides/rest-client-reactive.adoc:823
#, no-wrap
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient(configKey = \"extensions-api\")\n"
"public interface ExtensionsService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:166
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getById(@QueryParam(\"id\") Integer id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:169
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getByName(@RestQuery String name); <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:172
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getByFilter(@RestQuery Map<String, String> filter); <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:175
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getByFilters(@RestQuery MultivaluedMap<String, String> filters); <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:179
#, fuzzy
msgid "Request query will include parameter with key `name`"
msgstr "La consulta de la solicitud incluirá el parámetro con la clave `name`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:180
#, fuzzy
msgid "Each `Map` entry represents exactly one query parameter"
msgstr "Cada entrada de `Map` representa exactamente un parámetro de consulta"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:181
#, fuzzy
msgid "`MultivaluedMap` allows you to send array values"
msgstr "`MultivaluedMap` permite enviar valores de matrices"

#. type: Title ====
#: upstream/_guides/rest-client-reactive.adoc:182
#, fuzzy, no-wrap
msgid "Using @ClientQueryParam"
msgstr "Uso de @ClientExceptionMapper"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:186
#, fuzzy
msgid "Another way to add query parameters to a request is to use `@io.quarkus.rest.client.reactive.ClientQueryParam` on either the REST client interface or a specific method of the interface.  The annotation can specify the query parameter name while the value can either be a constant, a configuration property or it can be determined by invoking a method."
msgstr "Otra forma de añadir parámetros de consulta a una solicitud es utilizar `@io.quarkus.rest.client.reactive.ClientQueryParam` en la interfaz de cliente REST o en un método específico de la interfaz. La anotación puede especificar el nombre del parámetro de consulta, mientras que el valor puede ser una constante, una propiedad de configuración o puede determinarse invocando un método."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:188
#, fuzzy
msgid "The following example shows the various possible usages:"
msgstr "El siguiente ejemplo muestra los distintos usos posibles:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:195
#, no-wrap
msgid ""
"@ClientQueryParam(name = \"my-param\", value = \"${my.property-value}\") // <1>\n"
"public interface Client {\n"
"    @GET\n"
"    String getWithParam();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:199
#, no-wrap
msgid ""
"    @GET\n"
"    @ClientQueryParam(name = \"some-other-param\", value = \"other\") // <2>\n"
"    String getWithOtherParam();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:203
#, no-wrap
msgid ""
"    @GET\n"
"    @ClientQueryParam(name = \"param-from-method\", value = \"{with-param}\") // <3>\n"
"    String getFromMethod();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:211
#: upstream/_guides/rest-client-reactive.adoc:297
#, no-wrap
msgid ""
"    default String withParam(String name) {\n"
"        if (\"param-from-method\".equals(name)) {\n"
"            return \"test\";\n"
"        }\n"
"        throw new IllegalArgumentException();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:215
#, fuzzy
msgid "By placing `@ClientQueryParam` on the interface, we ensure that `my-param` will be added to all requests of the client.  Because we used the `${...}` syntax, the actual value of the parameter will be obtained using the `my.property-value` configuration property."
msgstr "Al colocar `@ClientQueryParam` en la interfaz, nos aseguramos de que `my-param` se añadirá a todas las peticiones del cliente. Como hemos utilizado la sintaxis `${…​}`, el valor real del parámetro se obtendrá utilizando la propiedad de configuración `my.property-value`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:216
#, fuzzy
msgid "When `getWithOtherParam` is called, in addition to the `my-param` query parameter, `some-other-param` with the value of `other` will also be added."
msgstr "Cuando se llame a `getWithOtherParam`, además del parámetro de consulta `my-param`, también se añadirá `some-other-param` con el valor de `other`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:217
#, fuzzy
msgid "when `getFromMethod` is called, in addition to the `my-param` query parameter, `param-from-method` with the value of `test` (because that's what the `withParam` method returns when invoked with `param-from-method`) will also be added."
msgstr "cuando se llame a `getFromMethod`, además del parámetro de consulta `my-param`, también se añadirá `param-from-method` con el valor de `test` (porque eso es lo que devuelve el método `withParam` cuando se invoca con `param-from-method`)."

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:222
#, fuzzy
msgid "Note that if an interface method contains an argument annotated with `@QueryParam`, that argument will take priority over anything specified in any `@ClientQueryParam` annotation."
msgstr "Tenga en cuenta que si un método de interfaz contiene un argumento anotado con `@QueryParam&lt;code&gt;&amp;lt;/code&amp;gt;&lt;/code&gt;, that argument will take priority over anything specified in any `@ClientQueryParam` anotación."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:225
#, fuzzy
msgid "More information about this annotation can be found on the javadoc of link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientQueryParam.html[`@ClientQueryParam`]."
msgstr "Puede encontrar más información sobre esta anotación en el javadoc de  link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientQueryParam.html[`@ClientQueryParam`]."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:226
#, fuzzy, no-wrap
msgid "Form Parameters"
msgstr "Parámetros de la ruta"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:229
#, fuzzy
msgid "Form parameters can be specified using `@RestForm` (or `@FormParam`) annotations:"
msgstr "Para enviar los datos como un formulario multiparte, puede utilizar las anotaciones normales de `@RestForm` (o `@FormParam`):"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:236
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:244
#, no-wrap
msgid ""
"import jakarta.ws.rs.PORT;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Consumes;\n"
"import jakarta.ws.rs.FormParam;\n"
"import jakarta.ws.rs.core.MultivaluedMap;\n"
"import java.util.Map;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:252
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    Set<Extension> postId(@FormParam(\"id\") Integer id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:256
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    Set<Extension> postName(@RestForm String name);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:260
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    Set<Extension> postFilter(@RestForm Map<String, String> filter);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:264
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    Set<Extension> postFilters(@RestForm MultivaluedMap<String, String> filters);\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/rest-client-reactive.adoc:268
#, fuzzy, no-wrap
msgid "Using @ClientFormParam"
msgstr "Uso de @ClientExceptionMapper"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:271
#, fuzzy
msgid "Form parameters can also be specified using `@ClientFormParam`, similar to `@ClientQueryParam`:"
msgstr "Los parámetros del formulario también pueden especificarse mediante `@ClientFormParam`, de forma similar a `@ClientQueryParam`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:279
#, no-wrap
msgid ""
"@ClientFormParam(name = \"my-param\", value = \"${my.property-value}\")\n"
"public interface Client {\n"
"    @POST\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    String postWithParam();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:284
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    @ClientFormParam(name = \"some-other-param\", value = \"other\")\n"
"    String postWithOtherParam();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:289
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    @ClientFormParam(name = \"param-from-method\", value = \"{with-param}\")\n"
"    String postFromMethod();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:300
#, fuzzy
msgid "More information about this annotation can be found on the javadoc of link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientFormParam.html[`@ClientFormParam`]."
msgstr "Puede encontrar más información sobre esta anotación en el javadoc de  link:https://javadoc.io/doc/io.quarkus/quarkus-rest-client-reactive/latest/io/quarkus/rest/client/reactive/ClientFormParam.html[`@ClientFormParam`]."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:301
#, fuzzy, no-wrap
msgid "Path Parameters"
msgstr "Parámetros de la ruta"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:305
#, fuzzy
msgid "If the GET request requires path parameters you can leverage the `@PathParam(\"parameter-name\")` annotation instead of (or in addition to) the `@QueryParam`. Path and query parameters can be combined, as required, as illustrated in the example below."
msgstr "Si la solicitud GET requiere parámetros de ruta, puede aprovechar la anotación `@PathParam(\"parameter-name\")` en lugar de (o además de) `@QueryParam`. Los parámetros de ruta y consulta pueden combinarse, según sea necesario, como se ilustra en el siguiente ejemplo."

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:317
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.PathParam;\n"
"import jakarta.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:326
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/stream/{stream}\")\n"
"    Set<Extension> getByStream(@PathParam(\"stream\") String stream, @QueryParam(\"id\") String id);\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:329
#, fuzzy, no-wrap
msgid "Create the configuration"
msgstr "Crear la configuración"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:333
#, fuzzy
msgid "In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.  The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr "Para determinar la URL base a la que se harán las llamadas REST, el cliente REST utiliza la configuración de `application.properties`. El nombre de la propiedad debe seguir una determinada convención que se muestra mejor en el siguiente código:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:338
#, no-wrap
msgid ""
"# Your configuration properties\n"
"quarkus.rest-client.\"org.acme.rest.client.ExtensionsService\".url=https://stage.code.quarkus.io/api # // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:342
#, fuzzy
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.ExtensionsService` will use `https://stage.code.quarkus.io/api` as the base URL.  Using the configuration above, calling the `getById` method of `ExtensionsService` with a value of `io.quarkus:quarkus-rest-client-reactive` would result in an HTTP GET request being made to `https://stage.code.quarkus.io/api/extensions?id=io.quarkus:quarkus-rest-client-reactive`."
msgstr "Tener esta configuración significa que todas las peticiones realizadas con `org.acme.rest.client.ExtensionsService` utilizarán `&lt;a href=\"https://stage.code.quarkus.io/api\" class=\"bare\"&gt;https://stage.code.quarkus.io/api&lt;/a&gt;` como URL base. Usando la configuración anterior, llamar al método `getById` de `ExtensionsService` con un valor de `io.quarkus:quarkus-rest-client-reactive` resultaría en una petición HTTP GET realizada a `&lt;a href=\"https://stage.code.quarkus.io/api/extensions?id=io.quarkus:quarkus-rest-client-reactive\" class=\"bare\"&gt;https://stage.code.quarkus.io/api/extensions?id=io.quarkus:quarkus-rest-client-reactive&lt;/a&gt;`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:344
#, fuzzy
msgid "Note that `org.acme.rest.client.ExtensionsService` _must_ match the fully qualified name of the `ExtensionsService` interface we created in the previous section."
msgstr "Tenga en cuenta que `org.acme.rest.client.ExtensionsService` _debe_ coincidir con el nombre completo de la interfaz `ExtensionsService` que creamos en la sección anterior."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:346
#, fuzzy
msgid "To facilitate the configuration, you can use the `@RegisterRestClient` `configKey` property that allows to use different configuration root than the fully qualified name of your interface."
msgstr "Para facilitar la configuración, puede utilizar la propiedad `@RegisterRestClient` `configKey` que permite utilizar una raíz de configuración diferente al nombre completo de su interfaz."

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:354
#, no-wrap
msgid ""
"@RegisterRestClient(configKey=\"extensions-api\")\n"
"public interface ExtensionsService {\n"
"    [...]\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:361
#, no-wrap
msgid ""
"# Your configuration properties\n"
"quarkus.rest-client.extensions-api.url=https://stage.code.quarkus.io/api\n"
"quarkus.rest-client.extensions-api.scope=jakarta.inject.Singleton\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:363
#, fuzzy, no-wrap
msgid "Disabling Hostname Verification"
msgstr "Desactivación de la verificación del nombre de host"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:366
#, fuzzy
msgid "To disable the SSL hostname verification for a specific REST client, add the following property to your configuration:"
msgstr "Para desactivar la verificación del nombre de host SSL para un cliente REST específico, añada la siguiente propiedad a su configuración:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:370
#, no-wrap
msgid "quarkus.rest-client.extensions-api.verify-host=false\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:374
#, fuzzy
msgid "This setting should not be used in production as it will disable the SSL hostname verification."
msgstr "Esta configuración no debe utilizarse en producción, ya que desactivará la verificación SSL del nombre de host."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:376
#, fuzzy, no-wrap
msgid "HTTP/2 Support"
msgstr "Compatibilidad con HTTP/2"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:379
#, fuzzy
msgid "HTTP/2 is disabled by default in REST Client. If you want to enable it, you can set:"
msgstr "HTTP/2 está desactivado por defecto en el cliente REST. Si desea activarlo, puede configurarlo:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:386
#, no-wrap
msgid ""
"// for all REST Clients:\n"
"quarkus.rest-client.http2=true\n"
"// or for a single REST Client:\n"
"quarkus.rest-client.extensions-api.http2=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:389
#, fuzzy
msgid "Alternatively, you can enable the Application-Layer Protocol Negotiation (alpn) TLS extension and the client will negotiate which HTTP version to use over the ones compatible by the server. By default, it will try to use HTTP/2 first and if it's not enabled, it will use HTTP/1.1. If you want to enable it, you can set:"
msgstr "Alternativamente, puede habilitar la extensión TLS Application-Layer Protocol Negotiation (alpn) y el cliente negociará qué versión HTTP utilizar sobre las compatibles por el servidor. Por defecto, intentará usar HTTP/2 primero y si no está habilitado, usará HTTP/1.1. Si desea habilitarlo, puede establecer:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:395
#, no-wrap
msgid ""
"quarkus.rest-client.alpn=true\n"
"// or for a single REST Client:\n"
"quarkus.rest-client.extensions-api.alpn=true\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:397
#, fuzzy, no-wrap
msgid "Create the Jakarta REST resource"
msgstr "Crear el recurso JAX-RS"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:400
#, fuzzy
msgid "Create the `src/main/java/org/acme/rest/client/ExtensionsResource.java` file with the following content:"
msgstr "Cree el archivo `src/main/java/org/acme/rest/client/ExtensionsResource.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:407
#: upstream/_guides/rest-client-reactive.adoc:757
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:411
#: upstream/_guides/rest-client-reactive.adoc:843
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:414
#: upstream/_guides/rest-client-reactive.adoc:470
#: upstream/_guides/rest-client-reactive.adoc:504
#: upstream/_guides/rest-client-reactive.adoc:573
#: upstream/_guides/rest-client-reactive.adoc:663
#: upstream/_guides/rest-client-reactive.adoc:765
#: upstream/_guides/rest-client-reactive.adoc:846
#, no-wrap
msgid ""
"@Path(\"/extension\")\n"
"public class ExtensionsResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:417
#, no-wrap
msgid ""
"    @RestClient // <1>\n"
"    ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:425
#: upstream/_guides/rest-client-reactive.adoc:485
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    public Set<Extension> id(String id) {\n"
"        return extensionsService.getById(id);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:428
#, fuzzy
msgid "There are two interesting parts in this listing:"
msgstr "Hay dos partes interesantes en este listado:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:430
#, fuzzy
msgid "the client stub is injected with the `@RestClient` annotation instead of the usual CDI `@Inject`"
msgstr "el stub del cliente se inyecta con la anotación `@RestClient` en lugar de la habitual CDI `@Inject`"

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:431
#, fuzzy, no-wrap
msgid "Programmatic client creation with QuarkusRestClientBuilder"
msgstr "Creación de clientes programáticos con RestClientBuilder"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:436
#, fuzzy
msgid "Instead of annotating the client with `@RegisterRestClient`, and injecting a client with `@RestClient`, you can also create REST Client programmatically.  You do that with the `QuarkusRestClientBuilder`."
msgstr "En lugar de anotar el cliente con `@RegisterRestClient`, e inyectar un cliente con `@RestClient`, también se puede crear un cliente REST mediante programación. Esto se hace con `RestClientBuilder`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:438
#, fuzzy
msgid "With this approach the client interface could look as follows:"
msgstr "Con este enfoque, la interfaz del cliente podría tener el siguiente aspecto:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:450
#, no-wrap
msgid ""
"@Path(\"/extensions\")\n"
"public interface ExtensionsService {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:457
#, fuzzy
msgid "And the service as follows:"
msgstr "Y el servicio como sigue:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:462
#: upstream/_guides/rest-client-reactive.adoc:563
#, no-wrap
msgid "import io.quarkus.rest.client.reactive.QuarkusRestClientBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:467
#: upstream/_guides/rest-client-reactive.adoc:501
#: upstream/_guides/rest-client-reactive.adoc:568
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import java.net.URI;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:472
#: upstream/_guides/rest-client-reactive.adoc:506
#: upstream/_guides/rest-client-reactive.adoc:575
#: upstream/_guides/rest-client-reactive.adoc:665
#, no-wrap
msgid "    private final ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:478
#, no-wrap
msgid ""
"    public ExtensionsResource() {\n"
"        extensionsService = QuarkusRestClientBuilder.newBuilder()\n"
"            .baseUri(URI.create(\"https://stage.code.quarkus.io/api\"))\n"
"            .build(ExtensionsService.class);\n"
"    }\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:490
#, fuzzy
msgid "The `QuarkusRestClientBuilder` interface is a Quarkus-specific API to programmatically create clients with additional configuration options. Otherwise, you can also use the `RestClientBuilder` interface from the Microprofile API:"
msgstr "La interfaz `QuarkusRestClientBuilder` es una API específica de Quarkus para crear mediante programación clientes con opciones de configuración adicionales. De lo contrario, también puede utilizar la interfaz `RestClientBuilder` de la API Microprofile:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:496
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.RestClientBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:512
#, no-wrap
msgid ""
"    public ExtensionsResource() {\n"
"        extensionsService = RestClientBuilder.newBuilder()\n"
"            .baseUri(URI.create(\"https://stage.code.quarkus.io/api\"))\n"
"            .build(ExtensionsService.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:515
#: upstream/_guides/rest-client-reactive.adoc:588
#: upstream/_guides/rest-client-reactive.adoc:675
#: upstream/_guides/rest-client-reactive.adoc:1061
#, no-wrap
msgid ""
"    // ...\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:519
#, fuzzy, no-wrap
msgid "Use Custom HTTP Options"
msgstr "Utilizar opciones HTTP personalizadas"

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:522
#, fuzzy
msgid "The REST Client Reactive internally uses https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClient.html[the Vert.x HTTP Client] to make the network connections. The REST Client Reactive extensions allows configuring some settings via properties, for example:"
msgstr "El Cliente REST Reactivo utiliza internamente  link:https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClient.html[el Cliente HTTP Vert.x] para realizar las conexiones de red. Las extensiones del Cliente REST Reactivo permiten configurar algunos ajustes mediante propiedades, por ejemplo:"

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:524
#, fuzzy
msgid "`quarkus.rest-client.client-prefix.connect-timeout` to configure the connect timeout in milliseconds."
msgstr "`quarkus.rest-client.client-prefix.connect-timeout` para configurar el tiempo de espera de la conexión en milisegundos."

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:525
#, fuzzy
msgid "`quarkus.rest-client.client-prefix.max-redirects` to limit the number of redirects."
msgstr "`quarkus.rest-client.client-prefix.max-redirects` para limitar el número de redirecciones."

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:527
#, fuzzy
msgid "However, there are many more options within the Vert.x HTTP Client to configure the connections. See all the options in the Vert.x HTTP Client Options API in https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClientOptions.html[this link]."
msgstr "Sin embargo, hay muchas más opciones dentro del Cliente Vert.x HTTP para configurar las conexiones. Vea todas las opciones en la API de opciones del cliente Vert.x HTTP en  link:https://vertx.io/docs/apidocs/io/vertx/core/http/HttpClientOptions.html[este enlace]."

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:529
#, fuzzy
msgid "To fully customize the Vert.x HTTP Client instance that the REST Client Reactive is internally using, you can provide your custom HTTP Client Options instance via CDI or when programmatically creating your client."
msgstr "Para personalizar completamente la instancia del cliente HTTP de Vert.x que el cliente REST reactivo utiliza internamente, puede proporcionar su instancia personalizada de opciones de cliente HTTP a través de CDI o al crear su cliente mediante programación."

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:531
#, fuzzy
msgid "Let's see an example about how to provide the HTTP Client Options via CDI:"
msgstr "Veamos un ejemplo sobre cómo proporcionar las opciones de cliente HTTP a través de CDI:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:538
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Produces;\n"
"import jakarta.ws.rs.ext.ContextResolver;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:541
#, no-wrap
msgid ""
"import io.vertx.core.http.HttpClientOptions;\n"
"import io.quarkus.arc.Unremovable;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:544
#, no-wrap
msgid ""
"@Provider\n"
"public class CustomHttpClientOptions implements ContextResolver<HttpClientOptions> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:552
#, no-wrap
msgid ""
"    @Override\n"
"    public HttpClientOptions getContext(Class<?> aClass) {\n"
"        HttpClientOptions options = new HttpClientOptions();\n"
"        // ...\n"
"        return options;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:555
#, fuzzy
msgid "Now, all the REST Clients will be using your custom HTTP Client Options."
msgstr "Ahora, todos los clientes REST utilizarán sus opciones de cliente HTTP personalizadas."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:557
#, fuzzy
msgid "Another approach is to provide the custom HTTP Client options when creating the client programmatically:"
msgstr "Otro enfoque es proporcionar las opciones del Cliente HTTP personalizado cuando se crea el cliente mediante programación:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:570
#, no-wrap
msgid "import io.vertx.core.http.HttpClientOptions;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:579
#, no-wrap
msgid ""
"    public ExtensionsResource() {\n"
"        HttpClientOptions options = new HttpClientOptions();\n"
"        // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:585
#, no-wrap
msgid ""
"        extensionsService = QuarkusRestClientBuilder.newBuilder()\n"
"            .baseUri(URI.create(\"https://stage.code.quarkus.io/api\"))\n"
"            .httpClientOptions(options) <1>\n"
"            .build(ExtensionsService.class);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:591
#, fuzzy
msgid "the client will use the registered HTTP Client options over the HTTP Client options provided via CDI if any."
msgstr "el cliente utilizará las opciones del cliente HTTP registradas sobre las opciones del cliente HTTP proporcionadas a través de CDI, si las hubiera."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:593
#, fuzzy, no-wrap
msgid "Redirection"
msgstr "Redirección"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:596
#, fuzzy
msgid "A HTTP server can redirect a response to another location by sending a response with a status code that starts with \"3\" and a HTTP header \"Location\" holding the URL to be redirected to. When the REST Client receives a redirection response from a HTTP server, it won't automatically perform another request to the new location. We can enable the automatic redirection in REST Client by adding the \"follow-redirects\" property:"
msgstr "Un servidor HTTP puede redirigir una respuesta a otra ubicación enviando una respuesta con un código de estado que empiece por \"3\" y una cabecera HTTP \"Ubicación\" que contenga la URL a la que se va a redirigir. Cuando el cliente REST recibe una respuesta de redirección de un servidor HTTP, no realiza automáticamente otra solicitud a la nueva ubicación. Podemos activar la redirección automática en el cliente REST añadiendo la propiedad \"follow-redirects\":"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:598
#, fuzzy
msgid "`quarkus.rest-client.follow-redirects` to enable redirection for all REST clients."
msgstr "`quarkus.rest-client.client-prefix.max-redirects` para limitar el número de redirecciones."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:599
#, fuzzy
msgid "`quarkus.rest-client.<client-prefix>.follow-redirects` to enable redirection for a specific REST client."
msgstr "`quarkus.rest-client.client-prefix.max-redirects` para limitar el número de redirecciones."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:601
#, fuzzy
msgid "If this property is true, then REST Client will perform a new request that it receives a redirection response from the HTTP server."
msgstr "Si esta propiedad es true, entonces el Cliente REST realizará una nueva petición que reciba una respuesta de redirección del servidor HTTP."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:603
#, fuzzy
msgid "Additionally, we can limit the number of redirections using the property \"max-redirects\"."
msgstr "Además, podemos limitar el número de redirecciones utilizando la propiedad \"max-redirects\"."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:605
#, fuzzy
msgid "One important note is that according to the https://www.rfc-editor.org/rfc/rfc2616#section-10.3.8[RFC2616] specs, by default the redirection will only happen for GET or HEAD methods. However, in REST Client, you can provide your custom redirect handler to enable redirection on POST or PUT methods, or to follow a more complex logic, via either using the `@ClientRedirectHandler` annotation, CDI or programmatically when creating your client."
msgstr "Una nota importante es que de acuerdo con las especificaciones  link:https://www.rfc-editor.org/rfc/rfc2616#section-10.3.8[RFC2616], por defecto la redirección sólo se producirá para los métodos GET o HEAD. Sin embargo, en el cliente REST, puede proporcionar su controlador de redirección personalizado para habilitar la redirección en los métodos POST o PUT, o para seguir una lógica más compleja, ya sea mediante el uso de la anotación `@ClientRedirectHandler`, CDI o mediante programación al crear su cliente."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:607
#, fuzzy
msgid "Let's see an example about how to register your own custom redirect handler using the `@ClientRedirectHandler` annotation:"
msgstr "Veamos un ejemplo sobre cómo registrar su propio gestor de redirecciones personalizado utilizando la anotación `@ClientRedirectHandler`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:611
#, no-wrap
msgid "import jakarta.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:613
#, no-wrap
msgid "import io.quarkus.rest.client.reactive.ClientRedirectHandler;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:621
#, no-wrap
msgid ""
"@RegisterRestClient(configKey=\"extensions-api\")\n"
"public interface ExtensionsService {\n"
"    @ClientRedirectHandler\n"
"    static URI alwaysRedirect(Response response) {\n"
"        if (Response.Status.Family.familyOf(response.getStatus()) == Response.Status.Family.REDIRECTION) {\n"
"            return response.getLocation();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:625
#, no-wrap
msgid ""
"        return null;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:628
#, fuzzy
msgid "The \"alwaysRedirect\" redirect handler will only be used by the specified REST Client which in this example is the \"ExtensionsService\" client."
msgstr "El gestor de redirecciones \"alwaysRedirect\" sólo será utilizado por el cliente REST especificado, que en este ejemplo es el cliente \"ExtensionsService\"."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:630
#, fuzzy
msgid "Alternatively, you can also provide a custom redirect handler for all your REST Clients via CDI:"
msgstr "Alternativamente, también puede proporcionar un controlador de redirección personalizado para todos sus clientes REST a través de CDI:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:636
#, no-wrap
msgid ""
"import jakarta.ws.rs.core.Response;\n"
"import jakarta.ws.rs.ext.ContextResolver;\n"
"import jakarta.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:638
#, no-wrap
msgid "import org.jboss.resteasy.reactive.client.handlers.RedirectHandler;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:641
#, no-wrap
msgid ""
"@Provider\n"
"public class AlwaysRedirectHandler implements ContextResolver<RedirectHandler> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:653
#, no-wrap
msgid ""
"    @Override\n"
"    public RedirectHandler getContext(Class<?> aClass) {\n"
"        return response -> {\n"
"            if (Response.Status.Family.familyOf(response.getStatus()) == Response.Status.Family.REDIRECTION) {\n"
"                return response.getLocation();\n"
"            }\n"
"            // no redirect\n"
"            return null;\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:656
#, fuzzy
msgid "Now, all the REST Clients will be using your custom redirect handler."
msgstr "Ahora, todos los clientes REST utilizarán sus opciones de cliente HTTP personalizadas."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:658
#, fuzzy
msgid "Another approach is to provide it programmatically when creating the client:"
msgstr "Otro enfoque es proporcionar las opciones del Cliente HTTP personalizado cuando se crea el cliente mediante programación:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:672
#, no-wrap
msgid ""
"    public ExtensionsResource() {\n"
"        extensionsService = QuarkusRestClientBuilder.newBuilder()\n"
"            .baseUri(URI.create(\"https://stage.code.quarkus.io/api\"))\n"
"            .register(AlwaysRedirectHandler.class) <1>\n"
"            .build(ExtensionsService.class);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:678
#, fuzzy
msgid "the client will use the registered redirect handler over the redirect handler provided via CDI if any."
msgstr "el cliente utilizará las opciones del cliente HTTP registradas sobre las opciones del cliente HTTP proporcionadas a través de CDI, si las hubiera."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:679
#, fuzzy, no-wrap
msgid "Update the test"
msgstr "Actualizar la prueba"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:683
#, fuzzy
msgid "Next, we need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` file and change the content of the test to:"
msgstr "A continuación, tenemos que actualizar la prueba funcional para reflejar los cambios realizados en el punto final. Edite el archivo `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` y cambie el contenido de la prueba a:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:690
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:692
#, no-wrap
msgid "import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:697
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.hasItem;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
"import static org.hamcrest.Matchers.greaterThan;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:700
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class ExtensionsResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:714
#, no-wrap
msgid ""
"    @Test\n"
"    public void testExtensionsIdEndpoint() {\n"
"        given()\n"
"            .when().get(\"/extension/id/io.quarkus:quarkus-rest-client-reactive\")\n"
"            .then()\n"
"            .statusCode(200)\n"
"            .body(\"$.size()\", is(1),\n"
"                \"[0].id\", is(\"io.quarkus:quarkus-rest-client-reactive\"),\n"
"                \"[0].name\", is(\"REST Client Reactive\"),\n"
"                \"[0].keywords.size()\", greaterThan(1),\n"
"                \"[0].keywords\", hasItem(\"rest-client\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:717
#, fuzzy
msgid "The code above uses link:https://rest-assured.io/[REST Assured]'s link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] capabilities."
msgstr "El código anterior utiliza las capacidades  link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] de  link:http://rest-assured.io/[REST Assured]."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:720
#, fuzzy, no-wrap
msgid "Async Support"
msgstr "Soporte asíncrono"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:725
#, fuzzy
msgid "To get the full power of the reactive nature of the client, you can use the non-blocking flavor of REST Client Reactive extension, which comes with support for `CompletionStage` and `Uni`.  Let's see it in action by adding a `getByIdAsync` method in our `ExtensionsService` REST interface. The code should look like:"
msgstr "Para obtener toda la potencia de la naturaleza reactiva del cliente, puedes utilizar el sabor no bloqueante de la extensión REST Client Reactive, que viene con soporte para `CompletionStage` y `Uni`. Vamos a verlo en acción añadiendo un método `getByIdAsync` en nuestra interfaz REST `ExtensionsService`. El código debería tener el siguiente aspecto:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:737
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
"import java.util.concurrent.CompletionStage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:744
#: upstream/_guides/rest-client-reactive.adoc:1022
#: upstream/_guides/rest-client-reactive.adoc:1120
#: upstream/_guides/rest-client-reactive.adoc:1174
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getById(@QueryParam(\"id\") String id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:748
#: upstream/_guides/rest-client-reactive.adoc:1026
#, no-wrap
msgid ""
"    @GET\n"
"    CompletionStage<Set<Extension>> getByIdAsync(@QueryParam(\"id\") String id);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:751
#, fuzzy
msgid "Open the `src/main/java/org/acme/rest/client/ExtensionsResource.java` file and update it with the following content:"
msgstr "Abra el archivo `src/main/java/org/acme/rest/client/ExtensionsResource.java` y actualícelo con el siguiente contenido:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:762
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import java.util.Set;\n"
"import java.util.concurrent.CompletionStage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:768
#: upstream/_guides/rest-client-reactive.adoc:849
#, no-wrap
msgid ""
"    @RestClient\n"
"    ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:775
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    public Set<Extension> id(String id) {\n"
"        return extensionsService.getById(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:782
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id-async/{id}\")\n"
"    public CompletionStage<Set<Extension>> idAsync(String id) {\n"
"        return extensionsService.getByIdAsync(id);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:787
#, fuzzy
msgid "Please note that since the invocation is now non-blocking, the `idAsync` method will be invoked on the event loop, i.e. will not get offloaded to a worker pool thread and thus reducing hardware resource utilization.  See xref:resteasy-reactive.adoc#execution-model[Resteasy reactive execution model] for more details."
msgstr "Ten en cuenta que como la invocación es ahora no bloqueante, ya no necesitamos la anotación `@Blocking` en el endpoint. Esto significa que el método `idAsync` se invocará en el bucle de eventos, es decir, no se descargará a un hilo del grupo de trabajadores y, por lo tanto, se reducirá la utilización de recursos de hardware."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:790
#, fuzzy
msgid "To test asynchronous methods, add the test method below in `ExtensionsResourceTest`:"
msgstr "Para probar los métodos asíncronos, añada el método de prueba siguiente en `ExtensionsResourceTest`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:804
#, no-wrap
msgid ""
"@Test\n"
"public void testExtensionIdAsyncEndpoint() {\n"
"    given()\n"
"        .when().get(\"/extension/id-async/io.quarkus:quarkus-rest-client-reactive\")\n"
"        .then()\n"
"        .statusCode(200)\n"
"        .body(\"$.size()\", is(1),\n"
"            \"[0].id\", is(\"io.quarkus:quarkus-rest-client-reactive\"),\n"
"            \"[0].name\", is(\"REST Client Reactive\"),\n"
"            \"[0].keywords.size()\", greaterThan(1),\n"
"            \"[0].keywords\", hasItem(\"rest-client\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:807
#, fuzzy
msgid "The `Uni` version is very similar:"
msgstr "La versión `Uni` es muy similar:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:814
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:825
#: upstream/_guides/rest-client-reactive.adoc:852
#, no-wrap
msgid "    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:829
#, no-wrap
msgid ""
"    @GET\n"
"    Uni<Set<Extension>> getByIdAsUni(@QueryParam(\"id\") String id);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:832
#, fuzzy
msgid "The `ExtensionsResource` becomes:"
msgstr "El `ExtensionsResource` se convierte en:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:839
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:859
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id-uni/{id}\")\n"
"    public Uni<Set<Extension>> idUni(String id) {\n"
"        return extensionsService.getByIdAsUni(id);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/rest-client-reactive.adoc:862
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motín"

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:866
#, fuzzy
msgid "The previous snippet uses Mutiny reactive types.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "El fragmento anterior utiliza tipos reactivos Mutiny. Si no está familiarizado con Mutiny, consulte  link:mutiny-primer.html[Mutiny - una biblioteca de programación reactiva intuitiva]."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:870
#, fuzzy
msgid "When returning a `Uni`, every _subscription_ invokes the remote service.  It means you can re-send the request by re-subscribing on the `Uni`, or use a `retry` as follows:"
msgstr "Al devolver un `Uni`, cada _suscripción_ invoca el servicio remoto. Significa que puede volver a enviar la solicitud volviendo a suscribirse en el `Uni`, o utilizar un `retry` como se indica a continuación:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:875
#, no-wrap
msgid "@RestClient ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:877
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:880
#, no-wrap
msgid ""
"extensionsService.getByIdAsUni(id)\n"
"    .onFailure().retry().atMost(10);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:885
#, fuzzy
msgid "If you use a `CompletionStage`, you would need to call the service's method to retry.  This difference comes from the laziness aspect of Mutiny and its subscription protocol.  More details about this can be found in https://smallrye.io/smallrye-mutiny/latest/reference/uni-and-multi/[the Mutiny documentation]."
msgstr "Si utiliza un `CompletionStage`, tendría que llamar al método del servicio para reintentar. Esta diferencia proviene del aspecto de pereza de Mutiny y su protocolo de suscripción. Puedes encontrar más detalles sobre esto en  link:https://smallrye.io/smallrye-mutiny/#_uni_and_multi[la documentación de Mut]iny."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:886
#, fuzzy, no-wrap
msgid "Custom headers support"
msgstr "Soporte de cabeceras personalizadas"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:889
#, fuzzy
msgid "There are a few ways in which you can specify custom headers for your REST calls:"
msgstr "Hay varias formas de especificar cabeceras personalizadas para sus llamadas REST:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:891
#, fuzzy
msgid "by registering a `ClientHeadersFactory` or a `ReactiveClientHeadersFactory` with the `@RegisterClientHeaders` annotation"
msgstr "registrando un `ClientHeadersFactory` o un `ReactiveClientHeadersFactory` con la anotación `@RegisterClientHeaders`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:892
#, fuzzy
msgid "by programmatically registering a `ClientHeadersFactory` or a `ReactiveClientHeadersFactory` with the `QuarkusRestClientBuilder.clientHeadersFactory(factory)` method"
msgstr "registrando un `ClientHeadersFactory` o un `ReactiveClientHeadersFactory` con la anotación `@RegisterClientHeaders`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:893
#, fuzzy
msgid "by specifying the value of the header with `@ClientHeaderParam`"
msgstr "especificando el valor de la cabecera con `@ClientHeaderParam`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:894
#, fuzzy
msgid "by specifying the value of the header by `@HeaderParam`"
msgstr "especificando el valor de la cabecera mediante `@HeaderParam`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:896
#, fuzzy
msgid "The code below demonstrates how to use each of these techniques:"
msgstr "El código siguiente muestra cómo utilizar cada una de estas técnicas:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:904
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.annotation.ClientHeaderParam;\n"
"import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;\n"
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:911
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.HeaderParam;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
"import io.quarkus.rest.client.reactive.NotBody;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:918
#, no-wrap
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient\n"
"@RegisterClientHeaders(RequestUUIDHeaderFactory.class) // <1>\n"
"@ClientHeaderParam(name = \"my-header\", value = \"constant-header-value\") // <2>\n"
"@ClientHeaderParam(name = \"computed-header\", value = \"{org.acme.rest.client.Util.computeHeader}\") // <3>\n"
"public interface ExtensionsService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:924
#, no-wrap
msgid ""
"    @GET\n"
"    @ClientHeaderParam(name = \"header-from-properties\", value = \"${header.value}\") // <4>\n"
"    @ClientHeaderParam(name = \"header-from-method-param\", value = \"Bearer {token}\") // <5>\n"
"    Set<Extension> getById(@QueryParam(\"id\") String id, @HeaderParam(\"jaxrs-style-header\") String headerValue, @NotBody String token); // <6>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:927
#, fuzzy
msgid "There can be only one `ClientHeadersFactory` per class. With it, you can not only add custom headers, but you can also transform existing ones. See the `RequestUUIDHeaderFactory` class below for an example of the factory."
msgstr "Sólo puede haber una `ClientHeadersFactory` por clase. Con ella, no sólo puede añadir cabeceras personalizadas, sino que también puede transformar las existentes. Consulte la clase `RequestUUIDHeaderFactory` a continuación para ver un ejemplo de la fábrica."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:928
#, fuzzy
msgid "`@ClientHeaderParam` can be used on the client interface and on methods. It can specify a constant header value..."
msgstr "`@ClientHeaderParam` puede utilizarse en la interfaz del cliente y en los métodos. Puede especificar un valor de cabecera constante..."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:929
#, fuzzy
msgid "... and a name of a method that should compute the value of the header. It can either be a static method or a default method in this interface. The method can take either no parameters, a single String parameter or a single `io.quarkus.rest.client.reactive.ComputedParamContext` parameter (which is very useful for code that needs to compute headers based on method parameters and naturally complements `@io.quarkus.rest.client.reactive.NotBody`)."
msgstr "<li> <p>y el nombre del método que debe calcular el valor de la cabecera. Puede ser un método estático o un método por defecto de esta interfaz. El método puede no recibir ningún parámetro, un único parámetro String o un único parámetro `io.quarkus.rest.client.reactive.ComputedParamContext` (que es muy útil para el código que necesita calcular las cabeceras basándose en los parámetros del método y complementa de forma natural a `@io.quarkus.rest.client.reactive.NotBody`).</p> </li>"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:930
#, fuzzy
msgid "... as well as a value from your application's configuration"
msgstr "<li> <p>así como un valor de la configuración de su aplicación</p> </li>"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:931
#, fuzzy
msgid "... or even any mixture of verbatim text, method parameters (referenced by name), a configuration value (as mentioned previously) and method invocations (as mentioned before)"
msgstr "<li> <p>o incluso cualquier mezcla de texto literal, parámetros de método (referenciados por nombre), un valor de configuración (como se ha mencionado anteriormente) e invocaciones de método (como se ha mencionado anteriormente).</p> </li>"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:932
#, fuzzy
msgid "... or as a normal Jakarta REST `@HeaderParam` annotated argument"
msgstr "<li> <p>o como un argumento normal de JAX-RS `@HeaderParam` anotado</p> </li>"

#. type: delimited block =
#: upstream/_guides/rest-client-reactive.adoc:937
#, fuzzy
msgid "When using Kotlin, if default methods are going to be leveraged, then the Kotlin compiler needs to be configured to use Java's default interface capabilities.  See link:https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces[this] for more details."
msgstr "Cuando se utiliza Kotlin, si se van a aprovechar los métodos por defecto, entonces el compilador de Kotlin necesita ser configurado para utilizar las capacidades de la interfaz por defecto de Java. Consulta  link:https://kotlinlang.org/docs/java-to-kotlin-interop.html#default-methods-in-interfaces[esto] para más detalles."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:940
#, fuzzy
msgid "A `ClientHeadersFactory` can look as follows:"
msgstr "Un `ClientHeadersFactory` puede tener el siguiente aspecto:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:946
#: upstream/_guides/rest-client-reactive.adoc:983
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.ext.ClientHeadersFactory;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:951
#: upstream/_guides/rest-client-reactive.adoc:988
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.ws.rs.core.MultivaluedHashMap;\n"
"import jakarta.ws.rs.core.MultivaluedMap;\n"
"import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:954
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class RequestUUIDHeaderFactory implements ClientHeadersFactory {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:962
#, no-wrap
msgid ""
"    @Override\n"
"    public MultivaluedMap<String, String> update(MultivaluedMap<String, String> incomingHeaders, MultivaluedMap<String, String> clientOutgoingHeaders) {\n"
"        MultivaluedMap<String, String> result = new MultivaluedHashMap<>();\n"
"        result.add(\"X-request-uuid\", UUID.randomUUID().toString());\n"
"        return result;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:966
#, fuzzy
msgid "As you see in the example above, you can make your `ClientHeadersFactory` implementation a CDI bean by annotating it with a scope-defining annotation, such as `@Singleton`, `@ApplicationScoped`, etc."
msgstr "Como puede ver en el ejemplo anterior, puede hacer que su implementación de `ClientHeadersFactory` sea un bean CDI anotándolo con una anotación que defina el ámbito, como `@Singleton`, `@ApplicationScoped`, etc."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:968
#, fuzzy
msgid "To specify a value for `${header.value}`, simply put the following in your `application.properties`:"
msgstr "Para especificar un valor para `${header.value}`, simplemente ponga lo siguiente en su `application.properties`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:972
#, no-wrap
msgid "header.value=value of the header\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:975
#, fuzzy
msgid "Also, there is a reactive flavor of `ClientHeadersFactory` that allows doing blocking operations. For example:"
msgstr "Además, existe una versión reactiva de `ClientHeadersFactory` que permite realizar operaciones de bloqueo. Por ejemplo:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:981
#, no-wrap
msgid "import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:991
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class GetTokenReactiveClientHeadersFactory extends ReactiveClientHeadersFactory {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:994
#, no-wrap
msgid ""
"    @Inject\n"
"    Service service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1007
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<MultivaluedMap<String, String>> getHeaders(\n"
"            MultivaluedMap<String, String> incomingHeaders,\n"
"            MultivaluedMap<String, String> clientOutgoingHeaders) {\n"
"        return Uni.createFrom().item(() -> {\n"
"            MultivaluedHashMap<String, String> newHeaders = new MultivaluedHashMap<>();\n"
"            // perform blocking call\n"
"            newHeaders.add(HEADER_NAME, service.getToken());\n"
"            return newHeaders;\n"
"        });\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1009
#, fuzzy, no-wrap
msgid "Default header factory"
msgstr "Fábrica de cabeceras por defecto"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1013
#, fuzzy
msgid "The `@RegisterClientHeaders` annotation can also be used without any custom factory specified. In that case the `DefaultClientHeadersFactoryImpl` factory will be used.  If you make a REST client call from a REST resource, this factory will propagate all the headers listed in `org.eclipse.microprofile.rest.client.propagateHeaders` configuration property from the resource request to the client request. Individual header names are comma-separated."
msgstr "La anotación `@RegisterClientHeaders` también puede utilizarse sin especificar ninguna fábrica personalizada. En ese caso se utilizará la fábrica `DefaultClientHeadersFactoryImpl`. Si se realiza una llamada al cliente REST desde un recurso REST, esta fábrica propagará todas las cabeceras listadas en la propiedad de configuración `org.eclipse.microprofile.rest.client.propagateHeaders` desde la petición del recurso a la petición del cliente. Los nombres de las cabeceras individuales están separados por comas."

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1019
#, no-wrap
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient\n"
"@RegisterClientHeaders\n"
"public interface ExtensionsService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1031
#, no-wrap
msgid "org.eclipse.microprofile.rest.client.propagateHeaders=Authorization,Proxy-Authorization\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1033
#, fuzzy, no-wrap
msgid "Customizing the request"
msgstr "Personalizar la solicitud"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1036
#, fuzzy
msgid "The REST Client Reactive supports further customization of the final request to be sent to the server via filters. The filters must implement either the interface `ClientRequestFilter` or `ResteasyReactiveClientRequestFilter`."
msgstr "El cliente REST reactivo admite una mayor personalización de la solicitud final que se enviará al servidor mediante filtros. Los filtros deben implementar la interfaz `ClientRequestFilter` o `ResteasyReactiveClientRequestFilter`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1038
#, fuzzy
msgid "A simple example of customizing the request would be to add a custom header:"
msgstr "Un ejemplo sencillo de personalización de la solicitud sería añadir una cabecera personalizada:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1043
#: upstream/_guides/rest-client-reactive.adoc:1082
#, no-wrap
msgid ""
"@Provider\n"
"public class TestClientRequestFilter implements ClientRequestFilter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1049
#, no-wrap
msgid ""
"    @Override\n"
"    public void filter(ClientRequestContext requestContext) {\n"
"        requestContext.getHeaders().add(\"my_header\", \"value\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1052
#, fuzzy
msgid "Next, you can register your filter using the `@RegisterProvider` annotation:"
msgstr "A continuación, puede registrar su filtro utilizando la anotación `@RegisterProvider`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1058
#, no-wrap
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterProvider(TestClientRequestFilter.class)\n"
"public interface ExtensionsService {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1064
#, fuzzy
msgid "Or programmatically using the `.register()` method:"
msgstr "O mediante programación utilizando el método `.register()`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1070
#, no-wrap
msgid ""
"QuarkusRestClientBuilder.newBuilder()\n"
"    .register(TestClientRequestFilter.class)\n"
"    .build(ExtensionsService.class)\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1072
#, fuzzy, no-wrap
msgid "Injecting the `jakarta.ws.rs.ext.Providers` instance in filters"
msgstr "Inyección de la instancia `jakarta.ws.rs.ext.Providers` en los filtros"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1075
#, fuzzy
msgid "The `jakarta.ws.rs.ext.Providers` is useful when we need to lookup the provider instances of the current client."
msgstr "`jakarta.ws.rs.ext.Providers` es útil cuando necesitamos buscar las instancias del proveedor del cliente actual."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1077
#, fuzzy
msgid "We can get the `Providers` instance in our filters from the request context as follows:"
msgstr "Podemos obtener la instancia `Providers` en nuestros filtros desde el contexto de la petición de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1089
#, no-wrap
msgid ""
"    @Override\n"
"    public void filter(ClientRequestContext requestContext) {\n"
"        Providers providers = ((ResteasyReactiveClientRequestContext) requestContext).getProviders();\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1092
#, fuzzy
msgid "Alternatively, you can implement the `ResteasyReactiveClientRequestFilter` interface instead of the `ClientRequestFilter` interface that will directly provide the `ResteasyReactiveClientRequestContext` context:"
msgstr "Alternativamente, puede implementar la interfaz `ResteasyReactiveClientRequestFilter` en lugar de la interfaz `ClientRequestFilter` que proporcionará directamente el contexto `ResteasyReactiveClientRequestContext`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1097
#, no-wrap
msgid ""
"@Provider\n"
"public class TestClientRequestFilter implements ResteasyReactiveClientRequestFilter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1104
#, no-wrap
msgid ""
"    @Override\n"
"    public void filter(ResteasyReactiveClientRequestFilter requestContext) {\n"
"        Providers providers = requestContext.getProviders();\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1106
#, fuzzy, no-wrap
msgid "Customizing the ObjectMapper in REST Client Reactive Jackson"
msgstr "Personalización de ObjectMapper en REST Client Reactive Jackson"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1109
#, fuzzy
msgid "The REST Client Reactive supports adding a custom ObjectMapper to be used only the Client using the annotation `@ClientObjectMapper`."
msgstr "El cliente REST reactivo permite añadir un ObjectMapper personalizado para que sólo lo utilice el cliente mediante la anotación `@ClientObjectMapper`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1111
#, fuzzy
msgid "A simple example is to provide a custom ObjectMapper to the REST Client Reactive Jackson extension by doing:"
msgstr "Un ejemplo sencillo es proporcionar un ObjectMapper personalizado a la extensión REST Client Reactive Jackson haciendo:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1128
#, no-wrap
msgid ""
"    @ClientObjectMapper <1>\n"
"    static ObjectMapper objectMapper(ObjectMapper defaultObjectMapper) { <2>\n"
"        return defaultObjectMapper.copy() <3>\n"
"                .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)\n"
"                .disable(DeserializationFeature.UNWRAP_ROOT_VALUE);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1131
#, fuzzy
msgid "The method must be annotated with `@ClientObjectMapper`."
msgstr "El método debe llevar la anotación `@ClientObjectMapper`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1132
#, fuzzy
msgid "It's must be a static method. Also, the parameter `defaultObjectMapper` will be resolved via CDI. If not found, it will throw an exception at runtime."
msgstr "Debe ser un método estático. Además, el parámetro `defaultObjectMapper` se resolverá a través de CDI. Si no se encuentra, lanzará una excepción en tiempo de ejecución."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1133
#, fuzzy
msgid "In this example, we're creating a copy of the default object mapper. You should *NEVER* modify the default object mapper, but create a copy instead."
msgstr "En este ejemplo, estamos creando una copia del mapeador de objetos por defecto. *NUNCA* debes modificar el mapeador de objetos por defecto, sino crear una copia."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1134
#, fuzzy, no-wrap
msgid "Exception handling"
msgstr "Gestión de excepciones"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1137
#, fuzzy
msgid "The MicroProfile REST Client specification introduces the `org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper` whose purpose is to convert an HTTP response to an exception."
msgstr "La especificación del Cliente REST de MicroProfile introduce el `org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper` cuyo propósito es convertir una respuesta HTTP en una excepción."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1139
#, fuzzy
msgid "A simple example of implementing such a `ResponseExceptionMapper` for the `ExtensionsService` discussed above, could be:"
msgstr "Un ejemplo sencillo de aplicación de este tipo de `ResponseExceptionMapper` para el `ExtensionsService` comentado anteriormente, podría ser:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1143
#, no-wrap
msgid "public class MyResponseExceptionMapper implements ResponseExceptionMapper<RuntimeException> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1152
#, no-wrap
msgid ""
"    @Override\n"
"    public RuntimeException toThrowable(Response response) {\n"
"        if (response.getStatus() == 500) {\n"
"            throw new RuntimeException(\"The remote service responded with HTTP 500\");\n"
"        }\n"
"        return null;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1156
#, fuzzy
msgid "`ResponseExceptionMapper` also defines the `getPriority` method which is used in order to determine the priority with which `ResponseExceptionMapper` implementations will be called (implementations with a lower value for `getPriority` will be invoked first).  If `toThrowable` returns an exception, then that exception will be thrown. If `null` is returned, the next implementation of `ResponseExceptionMapper` in the chain will be called (if there is any)."
msgstr "`ResponseExceptionMapper` también define el método `getPriority` que se utiliza para determinar la prioridad con la que se llamará a las implementaciones de `ResponseExceptionMapper` (las implementaciones con un valor más bajo para `getPriority` se invocarán primero). Si `toThrowable` devuelve una excepción, se lanzará esa excepción. Si `null` devuelve una excepción, se llamará a la siguiente implementación de `ResponseExceptionMapper` en la cadena (si la hay)."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1159
#, fuzzy
msgid "The class as written above, would not be automatically be used by any REST Client. To make it available to every REST Client of the application, the class needs to be annotated with `@Provider` (as long as `quarkus.rest-client-reactive.provider-autodiscovery` is not set to `false`).  Alternatively, if the exception handling class should only apply to specific REST Client interfaces, you can either annotate the interfaces with `@RegisterProvider(MyResponseExceptionMapper.class)`, or register it using configuration using the `providers` property of the proper `quarkus.rest-client` configuration group."
msgstr "La clase, tal y como está escrita, no será utilizada automáticamente por ningún cliente REST. Para que esté disponible para todos los clientes REST de la aplicación, la clase debe anotarse con `@Provider` (siempre que `quarkus.rest-client-reactive.provider-autodiscovery` no se establezca como `false`). Como alternativa, si la clase de gestión de excepciones sólo debe aplicarse a interfaces de clientes REST específicas, puede anotar las interfaces con `@RegisterProvider(MyResponseExceptionMapper.class)`, o registrarla mediante la configuración utilizando la propiedad `providers` del grupo de configuración adecuado `quarkus.rest-client`."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1160
#, fuzzy, no-wrap
msgid "Using @ClientExceptionMapper"
msgstr "Uso de @ClientExceptionMapper"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1163
#, fuzzy
msgid "A simpler way to convert HTTP response codes of 400 or above is to use the `@ClientExceptionMapper` annotation."
msgstr "Una forma más sencilla de convertir los códigos de respuesta HTTP de 400 o superiores es utilizar la anotación `@ClientExceptionMapper`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1165
#, fuzzy
msgid "For the `ExtensionsService` REST Client interface defined above, an example use of `@ClientExceptionMapper` would be:"
msgstr "Para la interfaz `ExtensionsService` REST Client definida anteriormente, un ejemplo de uso de `@ClientExceptionMapper` sería:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1177
#, no-wrap
msgid ""
"    @GET\n"
"    CompletionStage<Set<Extension>> getByIdAsync(@QueryParam(\"id\") String id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1186
#, no-wrap
msgid ""
"    @ClientExceptionMapper\n"
"    static RuntimeException toException(Response response) {\n"
"        if (response.getStatus() == 500) {\n"
"            return new RuntimeException(\"The remote service responded with HTTP 500\");\n"
"        }\n"
"        return null;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1189
#, fuzzy
msgid "Naturally this handling is per REST Client. `@ClientExceptionMapper` uses the default priority if the `priority` attribute is not set and the normal rules of invoking all handlers in turn apply."
msgstr "Naturalmente, este manejo es por Cliente REST. `@ClientExceptionMapper` utiliza la prioridad por defecto si el atributo `priority` no está establecido y se aplican las reglas normales de invocación de todos los manejadores por turno."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1191
#, fuzzy
msgid "Methods annotated with `@ClientExceptionMapper` can also take a `java.lang.reflect.Method` parameter which is useful if the exception mapping code needs to know the REST Client method that was invoked and caused the exception mapping code to engage."
msgstr "Los métodos anotados con `@ClientExceptionMapper` también pueden tomar un parámetro `java.lang.reflect.Method` que es útil si el código de mapeo de excepciones necesita saber el método del cliente REST que fue invocado y causó que el código de mapeo de excepciones se activara."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1192
#, fuzzy, no-wrap
msgid "Using @Blocking annotation in exception mappers"
msgstr "Uso de @ClientExceptionMapper"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1195
#, fuzzy
msgid "In cases that warrant using `InputStream` as the return type of REST Client method (such as when large amounts of data need to be read):"
msgstr "En casos que justifiquen el uso de `InputStream` como tipo de retorno del método Cliente REST (como cuando se necesita leer grandes cantidades de datos):"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1201
#: upstream/_guides/rest-client-reactive.adoc:1238
#, no-wrap
msgid ""
"@Path(\"/echo\")\n"
"@RegisterRestClient\n"
"public interface EchoClient {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1205
#, no-wrap
msgid ""
"    @GET\n"
"    InputStream get();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1208
#, fuzzy
msgid "This will work as expected, but if you try to read this InputStream object in a custom exception mapper, you will receive a `BlockingNotAllowedException` exception. This is because `ResponseExceptionMapper` classes are run on the Event Loop thread executor by default - which does not allow to perform IO operations."
msgstr "Esto funcionará como se espera, pero si intentas leer este objeto InputStream en un mapeador de excepciones personalizado, recibirás una excepción `BlockingNotAllowedException`. Esto se debe a que las clases `ResponseExceptionMapper` se ejecutan por defecto en el ejecutor de hilos Event Loop - que no permite realizar operaciones IO."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1210
#, fuzzy
msgid "To make your exception mapper blocking, you can annotate the exception mapper with the `@Blocking` annotation:"
msgstr "Para que su mapeador de excepciones se bloquee, puede anotar el mapeador de excepciones con la anotación `@Blocking`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1216
#, no-wrap
msgid ""
"@Provider\n"
"@Blocking <1>\n"
"public class MyResponseExceptionMapper implements ResponseExceptionMapper<RuntimeException> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1226
#, no-wrap
msgid ""
"    @Override\n"
"    public RuntimeException toThrowable(Response response) {\n"
"        if (response.getStatus() == 500) {\n"
"            response.readEntity(String.class); <2>\n"
"            return new RuntimeException(\"The remote service responded with HTTP 500\");\n"
"        }\n"
"        return null;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1229
#, fuzzy
msgid "With the `@Blocking` annotation, the MyResponseExceptionMapper exception mapper will be executed in the worker thread pool."
msgstr "Con la anotación `@Blocking`, el mapeador de excepciones MyResponseExceptionMapper se ejecutará en el pool de hilos del trabajador."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1230
#, fuzzy
msgid "Reading the entity is now allowed because we're executing the mapper on the worker thread pool."
msgstr "La lectura de la entidad está ahora permitida porque estamos ejecutando el mapeador en el pool de hilos del trabajador."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1232
#, fuzzy
msgid "Note that you can also use the `@Blocking` annotation when using @ClientExceptionMapper:"
msgstr "Tenga en cuenta que también puede utilizar la anotación `@Blocking` cuando utilice @ClientExceptionMapper:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1241
#, no-wrap
msgid ""
"    @GET\n"
"    InputStream get();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1252
#, no-wrap
msgid ""
"    @ClientExceptionMapper\n"
"    @Blocking\n"
"    static RuntimeException toException(Response response) {\n"
"        if (response.getStatus() == 500) {\n"
"            response.readEntity(String.class);\n"
"            return new RuntimeException(\"The remote service responded with HTTP 500\");\n"
"        }\n"
"        return null;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1255
#, fuzzy, no-wrap
msgid "Multipart Form support"
msgstr "Soporte de formularios multiparte"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1258
#, fuzzy
msgid "REST Client Reactive support multipart messages."
msgstr "El cliente REST Reactive admite mensajes multiparte."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1259
#, fuzzy, no-wrap
msgid "Sending Multipart messages"
msgstr "Envío de mensajes multiparte"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1263
#, fuzzy
msgid "REST Client Reactive allows sending data as multipart forms. This way you can for example send files efficiently."
msgstr "REST Client Reactive permite enviar datos como formularios multiparte. De esta manera, por ejemplo, se pueden enviar archivos de manera eficiente."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1265
#, fuzzy
msgid "To send data as a multipart form, you can just use the regular `@RestForm` (or `@FormParam`) annotations:"
msgstr "Para enviar los datos como un formulario multiparte, puede utilizar las anotaciones normales de `@RestForm` (o `@FormParam`):"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1271
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/binary\")\n"
"    String sendMultipart(@RestForm File file, @RestForm String otherField);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1276
#, fuzzy
msgid "Parameters specified as `File`, `Path`, `byte[]` or `Buffer` are sent as files and default to the `application/octet-stream` MIME type. Other `@RestForm` parameter types default to the `text/plain` MIME type. You can override these defaults with the `@PartType` annotation."
msgstr "Los parámetros especificados como `File`, `Path`, `byte[]` o `Buffer` se envían como archivos y por defecto con el tipo MIME `application/octet-stream`. Otros tipos de parámetros de `@RestForm` se envían por defecto al tipo MIME `text/plain`. Puede anular estos valores por defecto con la anotación `@PartType`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1278
#, fuzzy
msgid "Naturally, you can also group these parameters into a containing class:"
msgstr "Naturalmente, también puede agrupar estos parámetros en una clase contenedora:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1284
#, no-wrap
msgid ""
"    public static class Parameters {\n"
"        @RestForm\n"
"        File file;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1288
#, no-wrap
msgid ""
"        @RestForm\n"
"        String otherField;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1292
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/binary\")\n"
"    String sendMultipart(Parameters parameters);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1297
#, fuzzy
msgid "Any `@RestForm` parameter of the type `File`, `Path`, `byte[]` or `Buffer`, as well as any annotated with `@PartType` automatically imply a `@Consumes(MediaType.MULTIPART_FORM_DATA)` on the method if there is no `@Consumes` present."
msgstr "Cualquier parámetro de `@RestForm` del tipo `File`, `Path`, `byte[]` o `Buffer`, así como los anotados con `@PartType` implican automáticamente un `@Consumes(MediaType.MULTIPART_FORM_DATA)` en el método si no hay `@Consumes` presente."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1300
#, fuzzy
msgid "If there are `@RestForm` parameters that are not multipart-implying, then `@Consumes(MediaType.APPLICATION_FORM_URLENCODED)` is implied."
msgstr "Si hay parámetros de `@RestForm` que no son multipart-implying, entonces `@Consumes(MediaType.APPLICATION_FORM_URLENCODED)` está implícito."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1310
#, fuzzy
msgid "There are a few modes in which the form data can be encoded. By default, Rest Client Reactive uses RFC1738.  You can override it by specifying the mode either on the client level, by setting `io.quarkus.rest.client.multipart-post-encoder-mode` RestBuilder property to the selected value of `HttpPostRequestEncoder.EncoderMode` or by specifying `quarkus.rest-client.multipart-post-encoder-mode` in your `application.properties`. Please note that the latter works only for clients created with the `@RegisterRestClient` annotation.  All the available modes are described in the link:https://netty.io/4.1/api/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.EncoderMode.html[Netty documentation]"
msgstr "Hay varios modos en los que se pueden codificar los datos del formulario. Por defecto, Rest Client Reactive utiliza RFC1738. Puede anularlo especificando el modo en el nivel del cliente, estableciendo la propiedad `io.quarkus.rest.client.multipart-post-encoder-mode` RestBuilder al valor seleccionado de `HttpPostRequestEncoder.EncoderMode` o especificando `quarkus.rest-client.multipart-post-encoder-mode` en su `application.properties`. Tenga en cuenta que esto último sólo funciona para los clientes creados con la anotación `@RegisterRestClient`. Todos los modos disponibles se describen en la  link:https://netty.io/4.1/api/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.EncoderMode.html[documentación de Netty]"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1312
#, fuzzy
msgid "You can also send JSON multiparts by specifying the `@PartType` annotation:"
msgstr "También puede enviar multipartes JSON especificando la anotación `@PartType`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1319
#, no-wrap
msgid ""
"    public static class Person {\n"
"        public String firstName;\n"
"        public String lastName;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1323
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/json\")\n"
"    String sendMultipart(@RestForm @PartType(MediaType.APPLICATION_JSON) Person person);\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1325
#, fuzzy, no-wrap
msgid "Receiving Multipart Messages"
msgstr "Recepción de mensajes multiparte"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1328
#, fuzzy
msgid "REST Client Reactive also supports receiving multipart messages.  As with sending, to parse a multipart response, you need to create a class that describes the response data, e.g."
msgstr "REST Client Reactive también admite la recepción de mensajes multiparte. Al igual que con el envío, para analizar una respuesta multiparte, es necesario crear una clase que describa los datos de la respuesta, por ejemplo"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1335
#, no-wrap
msgid ""
"public class FormDto {\n"
"    @RestForm // <1>\n"
"    @PartType(MediaType.APPLICATION_OCTET_STREAM)\n"
"    public File file;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1340
#, no-wrap
msgid ""
"    @FormParam(\"otherField\") // <2>\n"
"    @PartType(MediaType.TEXT_PLAIN)\n"
"    public String textProperty;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1342
#, fuzzy
msgid "uses the shorthand `@RestForm` annotation to make a field as a part of a multipart form"
msgstr "utiliza la anotación abreviada `@RestForm` para que un campo forme parte de un formulario multiparte"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1343
#, fuzzy
msgid "the standard `@FormParam` can also be used. It allows to override the name of the multipart part."
msgstr "el estándar `@FormParam` también puede ser utilizado. Permite anular el nombre de la parte multiparte."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1345
#, fuzzy
msgid "Then, create an interface method that corresponds to the call and make it return the `FormDto`:"
msgstr "A continuación, crea un método de interfaz que corresponda a la llamada y haz que devuelva el `FormDto`:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1351
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.MULTIPART_FORM_DATA)\n"
"    @Path(\"/get-file\")\n"
"    FormDto data receiveMultipart();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1354
#, fuzzy
msgid "At the moment, multipart response support is subject to the following limitations:"
msgstr "Por el momento, la compatibilidad con la respuesta multiparte está sujeta a las siguientes limitaciones:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1356
#, fuzzy
msgid "files sent in multipart responses can only be parsed to `File`, `Path` and `FileDownload`"
msgstr "Los archivos enviados en respuestas multiparte sólo pueden ser analizados en `File`, `Path` y `FileDownload`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1357
#, fuzzy
msgid "each field of the response type has to be annotated with `@PartType` - fields without this annotation are ignored"
msgstr "cada campo del tipo de respuesta tiene que estar anotado con `@PartType` - los campos sin esta anotación se ignoran"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1359
#, fuzzy
msgid "REST Client Reactive needs to know the classes used as multipart return types upfront. If you have an interface method that produces `multipart/form-data`, the return type will be discovered automatically. However, if you intend to use the `ClientBuilder` API to parse a response as multipart, you need to annotate your DTO class with `@MultipartForm`."
msgstr "REST Client Reactive necesita conocer por adelantado las clases utilizadas como tipos de retorno multiparte. Si tienes un método de interfaz que produce `multipart/form-data`, el tipo de retorno se descubrirá automáticamente. Sin embargo, si pretende utilizar la API `ClientBuilder` para analizar una respuesta como multiparte, debe anotar su clase DTO con `@MultipartForm`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1361
#, fuzzy
msgid "The files you download are not automatically removed and can take up a lot of disk space. Consider removing the files when you are done working with them."
msgstr "Los archivos que se descargan no se eliminan automáticamente y pueden ocupar mucho espacio en el disco. Considere la posibilidad de eliminar los archivos cuando termine de trabajar con ellos."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1362
#, fuzzy, no-wrap
msgid "Multipart mixed / OData usage"
msgstr "Uso mixto multiparte / OData"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1366
#, fuzzy
msgid "It is not uncommon that an application has to interact with enterprise systems (like CRM systems) using a special protocol called https://www.odata.org/documentation/odata-version-3-0/batch-processing/[OData].  This protocol essentially uses a custom HTTP `Content-Type` which needs some glue code to work with the REST Client (creating the body is entirely up to the application - the REST Client can't do much to help)."
msgstr "No es raro que una aplicación tenga que interactuar con sistemas empresariales (como sistemas CRM) utilizando un protocolo especial llamado  link:https://www.odata.org/documentation/odata-version-3-0/batch-processing/[OData]. Este protocolo utiliza esencialmente un HTTP personalizado `Content-Type` que necesita algo de código de cola para trabajar con el cliente REST (la creación del cuerpo depende totalmente de la aplicación - el cliente REST no puede hacer mucho para ayudar)."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1368
#, fuzzy
msgid "An example looks like the following:"
msgstr "Un ejemplo es el siguiente:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1374
#, no-wrap
msgid ""
"@Path(\"/crm\")\n"
"@RegisterRestClient\n"
"public interface CRMService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1378
#, no-wrap
msgid ""
"    @POST\n"
"    @ClientHeaderParam(name = \"Content-Type\", value = \"{calculateContentType}\")  // <1>\n"
"    String performBatch(@HeaderParam(\"Authorization\") String accessToken, @NotBody String batchId, String body); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1383
#, no-wrap
msgid ""
"    default String calculateContentType(ComputedParamContext context) {\n"
"        return \"multipart/mixed;boundary=batch_\" + context.methodParameters().get(1).value(); // <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1386
#, fuzzy
msgid "The code uses the following pieces:"
msgstr "Supongamos que tienes el siguiente cliente:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1388
#, fuzzy
msgid "`@ClientHeaderParam(name = \"Content-Type\", value = \"{calculateContentType}\")` which ensures that the `Content-Type` header is created by calling the interface's `calculateContentType` default method."
msgstr "`@ClientHeaderParam(name = \"Content-Type\", value = \"{calculateContentType}\")` que garantiza la creación de la cabecera `Content-Type` llamando al método por defecto `calculateContentType` de la interfaz."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1389
#, fuzzy
msgid "The aforementioned parameter needs to be annotated with `@NotBody` because it is only used to aid the construction of HTTP headers."
msgstr "Es necesario anotar el parámetro mencionado con `@NotBody` porque sólo se utiliza para ayudar a la construcción de las cabeceras HTTP."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1390
#, fuzzy
msgid "`context.methodParameters().get(1).value()` which allows the `calculateContentType` method to obtain the proper method parameter passed to the REST Client method."
msgstr "`context.methodParameters().get(1).value()` que permite al método `calculateContentType` obtener el parámetro de método adecuado pasado al método del cliente REST."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1393
#, fuzzy
msgid "As previously mentioned, the body parameter needs to be properly crafted by the application code to conform to the service's requirements."
msgstr "Como se mencionó anteriormente, el parámetro del cuerpo debe ser elaborado adecuadamente por el código de la aplicación para ajustarse a los requisitos del servicio."

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1394
#, fuzzy, no-wrap
msgid "Receiving compressed messages"
msgstr "Recepción de mensajes multiparte"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1397
#, fuzzy
msgid "REST Client Reactive also supports receiving compressed messages using GZIP. You can enable the HTTP compression support by adding the property `quarkus.http.enable-compression=true`.  When this feature is enabled and a server returns a response that includes the header `Content-Encoding: gzip`, REST Client Reactive will automatically decode the content and proceed with the message handling."
msgstr "REST Client Reactive también admite la recepción de mensajes comprimidos mediante GZIP. Puede activar la compatibilidad con la compresión HTTP añadiendo la propiedad `quarkus.http.enable-compression=true`. Cuando esta función está activada y un servidor devuelve una respuesta que incluye la cabecera `Content-Encoding: gzip`, REST Client Reactive descodificará automáticamente el contenido y procederá a gestionar el mensaje."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1398
#, fuzzy, no-wrap
msgid "Proxy support"
msgstr "Soporte de proxy"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1401
#, fuzzy
msgid "REST Client Reactive supports sending requests through a proxy.  It honors the JVM settings for it but also allows to specify both:"
msgstr "El cliente REST Reactive soporta el envío de peticiones a través de un proxy. Respeta la configuración de la JVM para ello pero también permite especificar ambos:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1403
#, fuzzy
msgid "global client proxy settings, with `quarkus.rest-client.proxy-address`, `quarkus.rest-client.proxy-user`, `quarkus.rest-client.proxy-password`, `quarkus.rest-client.non-proxy-hosts`"
msgstr "configuración global del proxy del cliente, con `quarkus.rest-client.proxy-address`, `quarkus.rest-client.proxy-user`, `quarkus.rest-client.proxy-password`, `quarkus.rest-client.non-proxy-hosts`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1405
#, fuzzy
msgid "per-client proxy settings, with `quarkus.rest-client.<my-client>.proxy-address`, etc. These are applied only to clients injected with CDI, that is the ones created with `@RegisterRestClient`"
msgstr "configuración del proxy por cliente, con `quarkus.rest-client.&amp;lt;my-client&amp;gt;.proxy-address`, etc. Estos se aplican sólo a los clientes inyectados con CDI, es decir, los creados con `@RegisterRestClient`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1407
#, fuzzy
msgid "If `proxy-address` is set on the client level, the client uses its specific proxy settings. No proxy settings are propagated from the global configuration or JVM properties."
msgstr "Si `proxy-address` se establece en el nivel del cliente, el cliente utiliza su configuración específica de proxy. No se propaga ninguna configuración de proxy desde la configuración global o las propiedades de la JVM."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1410
#, fuzzy
msgid "If `proxy-address` is not set for the client but is set on the global level, the client uses the global settings.  Otherwise, the client uses the JVM settings."
msgstr "Si `proxy-address` no está configurado para el cliente pero sí a nivel global, el cliente utiliza la configuración global. De lo contrario, el cliente utiliza la configuración de la JVM."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1413
#, fuzzy
msgid "An example configuration for setting proxy:"
msgstr "Un ejemplo de configuración para establecer el proxy:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1421
#, no-wrap
msgid ""
"# global proxy configuration is used for all clients\n"
"quarkus.rest-client.proxy-address=localhost:8182\n"
"quarkus.rest-client.proxy-user=<proxy user name>\n"
"quarkus.rest-client.proxy-password=<proxy password>\n"
"quarkus.rest-client.non-proxy-hosts=example.com\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1427
#, no-wrap
msgid ""
"# per-client configuration overrides the global settings for a specific client\n"
"quarkus.rest-client.my-client.proxy-address=localhost:8183\n"
"quarkus.rest-client.my-client.proxy-user=<proxy user name>\n"
"quarkus.rest-client.my-client.proxy-password=<proxy password>\n"
"quarkus.rest-client.my-client.url=...\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1430
#, fuzzy
msgid "MicroProfile REST Client specification does not allow setting proxy credentials. In order to specify proxy user and proxy password programmatically, you need to cast your `RestClientBuilder` to `RestClientBuilderImpl`."
msgstr "La especificación del cliente REST de MicroProfile no permite establecer las credenciales del proxy. Para especificar el usuario y la contraseña del proxy de forma programada, es necesario lanzar su `RestClientBuilder` a `RestClientBuilderImpl`."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1431
#, fuzzy, no-wrap
msgid "Package and run the application"
msgstr "Empaquetar y ejecutar la aplicación"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1434
#, fuzzy
msgid "Run the application with:"
msgstr "Ejecuta la aplicación con:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1438
#, fuzzy
msgid "Open your browser to http://localhost:8080/extension/id/io.quarkus:quarkus-rest-client-reactive."
msgstr "Abra su navegador en  http://localhost:8080/extension/id/io.quarkus:quarkus-rest-client-reactive"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1440
#, fuzzy
msgid "You should see a JSON object containing some basic information about this extension."
msgstr "Debería ver un objeto JSON que contiene información básica sobre esta extensión."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1442
#, fuzzy
msgid "As usual, the application can be packaged using:"
msgstr "Como es habitual, la aplicación se puede empaquetar utilizando:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1446
#, fuzzy
msgid "And executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "Y ejecutado con `java -jar target/quarkus-app/quarkus-run.jar`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1448
#, fuzzy
msgid "You can also generate the native executable with:"
msgstr "También puedes generar el ejecutable nativo con:"

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1451
#, fuzzy, no-wrap
msgid "Logging traffic"
msgstr "Registro del tráfico"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1454
#, fuzzy
msgid "REST Client Reactive can log the requests it sends and the responses it receives.  To enable logging, add the `quarkus.rest-client.logging.scope` property to your `application.properties` and set it to:"
msgstr "El cliente REST Reactive puede registrar las solicitudes que envía y las respuestas que recibe. Para habilitar el registro, añada la propiedad `quarkus.rest-client.logging.scope` a su `application.properties` y configúrela como:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1456
#, fuzzy
msgid "`request-response` to log the request and response contents, or"
msgstr "`request-response` para registrar el contenido de la solicitud y la respuesta, o"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1457
#, fuzzy
msgid "`all` to also enable low level logging of the underlying libraries."
msgstr "`all` para permitir también el registro de bajo nivel de las bibliotecas subyacentes."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1459
#, fuzzy
msgid "As HTTP messages can have large bodies, we limit the amount of body characters logged. The default limit is `100`, you can change it by specifying `quarkus.rest-client.logging.body-limit`."
msgstr "Como los mensajes HTTP pueden tener cuerpos grandes, limitamos la cantidad de caracteres del cuerpo registrados. El límite por defecto es `100`, puedes cambiarlo especificando `quarkus.rest-client.logging.body-limit`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1461
#, fuzzy
msgid "REST Client Reactive is logging the traffic with level DEBUG and does not alter logger properties. You may need to adjust your logger configuration to use this feature."
msgstr "REST Client Reactive registra el tráfico con el nivel DEBUG y no altera las propiedades del registrador. Es posible que tenga que ajustar la configuración del registrador para utilizar esta función."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1463
#, fuzzy
msgid "An example logging configuration:"
msgstr "Un ejemplo de configuración de registro:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1468
#, no-wrap
msgid ""
"quarkus.rest-client.logging.scope=request-response\n"
"quarkus.rest-client.logging.body-limit=50\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1470
#, no-wrap
msgid "quarkus.log.category.\"org.jboss.resteasy.reactive.client.logging\".level=DEBUG\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1473
#, fuzzy
msgid "REST Client Reactive uses a default `ClientLogger` implementation. You can change it by providing a custom `ClientLogger` instance through CDI or when programmatically creating your client."
msgstr "Para personalizar completamente la instancia del cliente HTTP de Vert.x que el cliente REST reactivo utiliza internamente, puede proporcionar su instancia personalizada de opciones de cliente HTTP a través de CDI o al crear su cliente mediante programación."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1474
#, fuzzy, no-wrap
msgid "Mocking the client for tests"
msgstr "Burlarse del cliente para las pruebas"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1477
#, fuzzy
msgid "If you use a client injected with the `@RestClient` annotation, you can easily mock it for tests.  You can do it with Mockito's `@InjectMock` or with `QuarkusMock`."
msgstr "Si utilizas un cliente inyectado con la anotación `@RestClient`, puedes burlarlo fácilmente para las pruebas. Puedes hacerlo con `@InjectMock` de Mockito o con `QuarkusMock`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1479
#, fuzzy
msgid "This section shows how to replace your client with a mock. If you would like to get a more in-depth understanding of how mocking works in Quarkus, see the blog post on https://quarkus.io/blog/mocking/[Mocking CDI beans]."
msgstr "Esta sección muestra cómo reemplazar tu cliente con un mock. Si desea obtener una comprensión más profunda de cómo funciona el mocking en Quarkus, consulte la entrada del blog sobre  link:https://quarkus.io/blog/mocking/[Mocking CDI beans]."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1481
#, fuzzy
msgid "Mocking does not work when using `@QuarkusIntegrationTest`."
msgstr "La burla no funciona cuando se utiliza `@NativeImageTest` o `@QuarkusIntegrationTest`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1483
#, fuzzy
msgid "Let's assume you have the following client:"
msgstr "Supongamos que tienes el siguiente cliente:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1486
#: upstream/_guides/rest-client-reactive.adoc:1528
#: upstream/_guides/rest-client-reactive.adoc:1563
#, no-wrap
msgid "package io.quarkus.it.rest.client.main;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1489
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1499
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"@RegisterRestClient\n"
"public interface Client {\n"
"    @GET\n"
"    String get();\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1502
#, fuzzy, no-wrap
msgid "Mocking with InjectMock"
msgstr "Mocking con InjectMock"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1504
#, fuzzy
msgid "The simplest approach to mock a client for tests is to use Mockito and `@InjectMock`."
msgstr "El enfoque más sencillo para simular un cliente para las pruebas es utilizar Mockito y `@InjectMock`."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1506
#, fuzzy
msgid "First, add the following dependency to your application:"
msgstr "En primer lugar, añada la siguiente dependencia a su aplicación:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1515
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-junit5-mockito</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1521
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-junit5-mockito\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1524
#, fuzzy
msgid "Then, in your test you can simply use `@InjectMock` to create and inject a mock:"
msgstr "Entonces, en su prueba puede simplemente usar `@InjectMock` para crear e inyectar un simulacro:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1530
#, no-wrap
msgid "import static org.mockito.Mockito.when;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1534
#: upstream/_guides/rest-client-reactive.adoc:1567
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
"import org.junit.jupiter.api.BeforeEach;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1537
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.junit.mockito.InjectMock;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1540
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class InjectMockTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1544
#, no-wrap
msgid ""
"    @InjectMock\n"
"    @RestClient\n"
"    Client mock;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1549
#, no-wrap
msgid ""
"    @BeforeEach\n"
"    public void setUp() {\n"
"        when(mock.get()).thenReturn(\"MockAnswer\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1555
#, no-wrap
msgid ""
"    @Test\n"
"    void doTest() {\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-client-reactive.adoc:1557
#, fuzzy, no-wrap
msgid "Mocking with QuarkusMock"
msgstr "Burlarse con QuarkusMock"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1559
#, fuzzy
msgid "If Mockito doesn't meet your needs, you can create a mock programmatically using `QuarkusMock`, e.g.:"
msgstr "Si Mockito no satisface sus necesidades, puede crear un simulacro mediante programación utilizando `QuarkusMock`, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1570
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusMock;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1573
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class QuarkusMockTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-client-reactive.adoc:1589
#, no-wrap
msgid ""
"    @BeforeEach\n"
"    public void setUp() {\n"
"        Client customMock = new Client() { //<1>\n"
"            @Override\n"
"            public String get() {\n"
"                return \"MockAnswer\";\n"
"            }\n"
"        };\n"
"        QuarkusMock.installMockForType(customMock, Client.class, RestClient.LITERAL); // <2>\n"
"    }\n"
"    @Test\n"
"    void doTest() {\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1592
#, fuzzy
msgid "here we use a manually created implementation of the client interface to replace the actual Client"
msgstr "aquí utilizamos una implementación creada manualmente de la interfaz del cliente para reemplazar el Cliente real"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1593
#, fuzzy
msgid "note that `RestClient.LITERAL` has to be passed as the last argument of the `installMockForType` method"
msgstr "Tenga en cuenta que `RestClient.LITERAL` tiene que ser pasado como el último argumento del método `installMockForType`"

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1595
#, fuzzy, no-wrap
msgid "Using a Mock HTTP Server for tests"
msgstr "Uso de un servidor HTTP simulado para las pruebas"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1598
#, fuzzy
msgid "In some cases you may want to mock the remote endpoint - the HTTP server - instead of mocking the client itself.  This may be especially useful for native tests, or for programmatically created clients."
msgstr "En algunos casos, es posible que desee simular el punto final remoto -el servidor HTTP- en lugar de simular el propio cliente. Esto puede ser especialmente útil para pruebas nativas, o para clientes creados mediante programación."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1602
#, fuzzy
msgid "You can easily mock an HTTP Server with Wiremock.  The xref:rest-client.adoc#using-a-mock-http-server-for-tests[Wiremock section of the Quarkus - Using the REST Client] describes how to set it up in detail."
msgstr "Puedes simular fácilmente un servidor HTTP con Wiremock. La  link:rest-client.html#using-a-mock-http-server-for-tests[sección Wiremock de Quarkus - Using the REST Client] describe cómo configurarlo en detalle."

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1603
#, fuzzy, no-wrap
msgid "Known limitations"
msgstr "Limitaciones conocidas"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1606
#, fuzzy
msgid "While the REST Client Reactive extension aims to be a drop-in replacement for the REST Client extension, there are some differences and limitations:"
msgstr "Aunque la extensión REST Client Reactive pretende ser un sustituto directo de la extensión REST Client, existen algunas diferencias y limitaciones:"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1609
#, fuzzy
msgid "the default scope of the client for the new extension is `@ApplicationScoped` while the `quarkus-rest-client` defaults to `@Dependent` To change this behavior, set the `quarkus.rest-client-reactive.scope` property to the fully qualified scope name."
msgstr "el ámbito de aplicación por defecto del cliente para la nueva extensión es `@ApplicationScoped` mientras que el `quarkus-rest-client` se establece por defecto en `@Dependent`. Para cambiar este comportamiento, establezca la propiedad `quarkus.rest-client-reactive.scope` con el nombre de ámbito de aplicación completo."

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1610
#, fuzzy
msgid "it is not possible to set `HostnameVerifier` or `SSLContext`"
msgstr "no es posible establecer `HostnameVerifier` o `SSLContext`"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1611
#, fuzzy
msgid "a few things that don't make sense for a non-blocking implementations, such as setting the `ExecutorService`, don't work"
msgstr "algunas cosas que no tienen sentido para las implementaciones no bloqueantes, como la configuración de `ExecutorService`, no funcionan"

#. type: Title ==
#: upstream/_guides/rest-client-reactive.adoc:1614
#, fuzzy, no-wrap
msgid "Further reading"
msgstr "Más información"

#. type: Plain text
#: upstream/_guides/rest-client-reactive.adoc:1616
#, fuzzy
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[MicroProfile Rest Client specification]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[Especificación del cliente Rest de MicroProfile]"

#, fuzzy
#~ msgid "More information about this annotation can be found on the javadoc of"
#~ msgstr "Encontrará más información sobre esta anotación en el javadoc de"

#, fuzzy
#~ msgid "... and a name of a method that should compute the value of the header. It can either be a static method or a default method in this interface"
#~ msgstr "<li> <p>y un nombre de un método que debe calcular el valor de la cabecera. Puede ser un método estático o un método por defecto en esta interfaz</p> </li>"

#, fuzzy
#~ msgid "To send data as a multipart form, you need to create a class that would encapsulate all the fields to be sent, e.g."
#~ msgstr "Para enviar datos como un formulario multiparte, es necesario crear una clase que encapsule todos los campos a enviar, por ejemplo"

#, fuzzy
#~ msgid "The method that sends a form needs to specify multipart form data as the consumed media type, e.g."
#~ msgstr "El método que envía un formulario necesita especificar datos de formulario multiparte como el tipo de medio consumido, por ejemplo"

#, fuzzy
#~ msgid "Fields specified as `File`, `Path`, `byte[]` or `Buffer` are sent as files; as binary files for `@PartType(MediaType.APPLICATION_OCTET_STREAM)`, as text files for other content types.  Other fields are sent as form attributes."
#~ msgstr "Los campos especificados como `File`, `Path`, `byte[]` o `Buffer` se envían como archivos; como archivos binarios para `@PartType(MediaType.APPLICATION_OCTET_STREAM)`, como archivos de texto para otros tipos de contenido. Los demás campos se envían como atributos de formulario."

#, fuzzy
#~ msgid "the call we are making with the client is blocking, hence we need the `@Blocking` annotation on the REST endpoint"
#~ msgstr "la llamada que estamos realizando con el cliente es de bloqueo, por lo que necesitamos la anotación `@Blocking` en el endpoint REST"
