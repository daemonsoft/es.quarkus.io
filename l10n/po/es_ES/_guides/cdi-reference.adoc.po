# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-15 08:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/cdi-reference.adoc:6
#, fuzzy, no-wrap
msgid "Contexts and Dependency Injection"
msgstr "Contextos e inyección de dependencia"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:19
#, fuzzy
msgid "Quarkus DI solution (also called ArC) is based on the https://jakarta.ee/specifications/cdi/4.0/jakarta-cdi-spec-4.0.html[Jakarta Contexts and Dependency Injection 4.0, window=\"_blank\"] specification.  It implements the CDI Lite specification, with selected improvements on top, and passes the CDI Lite TCK.  It does not implement CDI Full.  See also xref:supported_features_and_limitations[the list of supported features and limitations]."
msgstr "La solución Quarkus DI (también llamada ArC) se basa en la especificación  link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html[Contexts and Dependency Injection for Java 2.0, window=_blank]. Sin embargo, no es una implementación completa de CDI verificada por el TCK. Sólo se implementa un subconjunto de las características de CDI - véase también  link:#supported_features[la lista de características soportadas] y  link:#limitations[la lista de limitaciones]."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:21
#, fuzzy
msgid "If you're new to CDI then we recommend you to read the xref:cdi.adoc[Introduction to CDI] first."
msgstr "Si es nuevo en el CDI, le recomendamos que lea primero la  link:cdi.html[Introducción al CDI]."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:23
#, fuzzy
msgid "Most of the existing CDI code should work just fine but there are some small differences which follow from the Quarkus architecture and goals."
msgstr "La mayor parte del código CDI existente debería funcionar bien, pero hay algunas pequeñas diferencias que se derivan de la arquitectura y los objetivos de Quarkus."

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:25
#, fuzzy, no-wrap
msgid "Bean Discovery"
msgstr "Descubrimiento de las judías"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:30
#, fuzzy
msgid "Bean discovery in CDI is a complex process which involves legacy deployment structures and accessibility requirements of the underlying module architecture.  However, Quarkus is using a *simplified bean discovery*.  There is only single bean archive with the https://jakarta.ee/specifications/cdi/4.0/jakarta-cdi-spec-4.0.html#default_bean_discovery[bean discovery mode `annotated`, window=\"_blank\"] and no visibility boundaries."
msgstr "El descubrimiento de beans en CDI es un proceso complejo que implica estructuras de despliegue heredadas y requisitos de accesibilidad de la arquitectura de módulos subyacente. Sin embargo, Quarkus utiliza un descubrimiento de *beans simplificado*. Sólo hay un archivo de frijoles con el  link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#default_bean_discovery[modo de descubrimiento de frijoles `annotated`, window=_blank] y sin límites de visibilidad."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:32
#, fuzzy
msgid "The bean archive is synthesized from:"
msgstr "El archivo de frijoles se sintetiza a partir de:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:34
#, fuzzy
msgid "the application classes,"
msgstr "las clases de aplicación,"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:35
#, fuzzy
msgid "dependencies that contain a `beans.xml` descriptor (content is ignored),"
msgstr "dependencias que contienen un descriptor `beans.xml` (se ignora el contenido),"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:36
#, fuzzy
msgid "dependencies that contain a Jandex index - `META-INF/jandex.idx`,"
msgstr "dependencias que contienen un índice Jandex - `META-INF/jandex.idx`,"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:37
#, fuzzy
msgid "dependencies referenced by `quarkus.index-dependency` in `application.properties`,"
msgstr "dependencias referenciadas por `quarkus.index-dependency` en `application.properties`,"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:38
#, fuzzy
msgid "and Quarkus integration code."
msgstr "y el código de integración de Quarkus."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:43
#, fuzzy
msgid "Bean classes that don't have a https://jakarta.ee/specifications/cdi/4.0/jakarta-cdi-spec-4.0.html#bean_defining_annotations[bean defining annotation, window=\"_blank\"] are not discovered.  This behavior is defined by CDI.  But producer methods and fields and observer methods are discovered even if the declaring class is not annotated with a bean defining annotation (this behavior is different to what is defined in CDI).  In fact, the declaring bean classes are considered annotated with `@Dependent`."
msgstr "Las clases de bean que no tienen una  link:https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html#bean_defining_annotations[anotación de definición de bean, window=_blank] no se descubren. Este comportamiento está definido por CDI. Pero los métodos y campos productores y los métodos observadores se descubren incluso si la clase declarante no está anotada con una anotación de definición de frijol (este comportamiento es diferente al definido en CDI). De hecho, las clases declarantes de frijoles se consideran anotadas con `@Dependent`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:45
#, fuzzy
msgid "Quarkus extensions may declare additional discovery rules. For example, `@Scheduled` business methods are registered even if the declaring class is not annotated with a bean defining annotation."
msgstr "Las extensiones de Quarkus pueden declarar reglas de descubrimiento adicionales. Por ejemplo, los métodos de negocio de `@Scheduled` se registran incluso si la clase declarante no está anotada con una anotación de definición de frijoles."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:46
#, fuzzy, no-wrap
msgid "How to Generate a Jandex Index"
msgstr "Cómo generar un índice Jandex"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:50
#, fuzzy
msgid "A dependency with a Jandex index is automatically scanned for beans.  To generate the index just add the following plugin to your build file:"
msgstr "Una dependencia con un índice Jandex es automáticamente escaneada en busca de frijoles. Para generar el índice sólo tiene que añadir lo siguiente a su `pom.xml`:"

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:52
#, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:73
#, no-wrap
msgid ""
"<build>\n"
"  <plugins>\n"
"    <plugin>\n"
"      <groupId>io.smallrye</groupId>\n"
"      <artifactId>jandex-maven-plugin</artifactId>\n"
"      <version>{jandex-version}</version>\n"
"      <executions>\n"
"        <execution>\n"
"          <id>make-index</id>\n"
"          <goals>\n"
"            <goal>jandex</goal>\n"
"          </goals>\n"
"        </execution>\n"
"      </executions>\n"
"    </plugin>\n"
"  </plugins>\n"
"</build>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:77
#, no-wrap
msgid "Gradle (Groovy DSL)"
msgstr "Gradle (Groovy DSL)"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:85
#, no-wrap
msgid ""
"plugins {\n"
"    id 'org.kordamp.gradle.jandex' version '{jandex-gradle-plugin-version}'\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:87
#: upstream/_guides/cdi-reference.adoc:100
#, fuzzy
msgid "You can find the latest plugin version in the https://plugins.gradle.org/plugin/org.kordamp.gradle.jandex[Gradle Plugin Portal]"
msgstr "Puede encontrar la última versión del plugin en el  link:https://plugins.gradle.org/plugin/org.kordamp.gradle.jandex[Portal de plugins de Gradle]"

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:90
#, fuzzy, no-wrap
msgid "Gradle (Kotlin DSL)"
msgstr "Gradle (DSL de Kotlin)"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:98
#, no-wrap
msgid ""
"plugins {\n"
"    id(\"org.kordamp.gradle.jandex\") version '{jandex-gradle-plugin-version}'\n"
"}\n"
msgstr ""

#. type: delimited block *
#: upstream/_guides/cdi-reference.adoc:105
#, fuzzy
msgid "If you can't modify the dependency, you can still index it by adding `quarkus.index-dependency` entries to your `application.properties`:"
msgstr "Si no puede modificar la dependencia, todavía puede indexarla añadiendo entradas de `quarkus.index-dependency` a su `application.properties`:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:111
#, no-wrap
msgid ""
"quarkus.index-dependency.<name>.group-id=\n"
"quarkus.index-dependency.<name>.artifact-id=\n"
"quarkus.index-dependency.<name>.classifier=(this one is optional)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:114
#, fuzzy
msgid "For example, the following entries ensure that the `org.acme:acme-api` dependency is indexed:"
msgstr "Por ejemplo, las siguientes entradas garantizan la indexación de la dependencia `org.acme:acme-api`:"

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:115
#: upstream/_guides/cdi-reference.adoc:140
#: upstream/_guides/cdi-reference.adoc:152
#: upstream/_guides/cdi-reference.adoc:471
#: upstream/_guides/cdi-reference.adoc:655
#, fuzzy, no-wrap
msgid "Example application.properties"
msgstr "Ejemplo de application.properties"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:120
#, no-wrap
msgid ""
"quarkus.index-dependency.acme.group-id=org.acme <1>\n"
"quarkus.index-dependency.acme.artifact-id=acme-api <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:122
#: upstream/_guides/cdi-reference.adoc:159
#, fuzzy
msgid "Value is a group id for a dependency identified by name `acme`."
msgstr "El valor es un identificador de grupo para una relación identificada por el nombre `acme`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:123
#: upstream/_guides/cdi-reference.adoc:160
#, fuzzy
msgid "Value is an artifact id for a dependency identified by name `acme`."
msgstr "El valor es un identificador de artefacto para una relación identificada por el nombre `acme`."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:124
#, fuzzy, no-wrap
msgid "How To Exclude Types and Dependencies from Discovery"
msgstr "Cómo excluir tipos y relaciones de la detección"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:130
#, fuzzy
msgid "It may happen that some beans from third-party libraries do not work correctly in Quarkus.  A typical example is a bean injecting a portable extension.  In such case, it's possible to exclude types and dependencies from the bean discovery.  The `quarkus.arc.exclude-types` property accepts a list of string values that are used to match classes that should be excluded."
msgstr "Puede ocurrir que algunos beans de bibliotecas de terceros no funcionen correctamente en Quarkus. Un ejemplo típico es un frijol que inyecta una extensión portátil. En tal caso, es posible excluir clases y dependencias del descubrimiento de beans. La propiedad `quarkus.arc.exclude-types` acepta una lista de valores de cadena que se utilizan para coincidir con las clases que deben excluirse."

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:131
#: upstream/_guides/cdi-reference.adoc:462
#: upstream/_guides/cdi-reference.adoc:646
#, fuzzy, no-wrap
msgid "Value Examples"
msgstr "Ejemplos de valores"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:133
#: upstream/_guides/cdi-reference.adoc:464
#: upstream/_guides/cdi-reference.adoc:648
#, fuzzy, no-wrap
msgid "Valu"
msgstr "Valu"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:134
#: upstream/_guides/cdi-reference.adoc:465
#: upstream/_guides/cdi-reference.adoc:649
#, fuzzy, no-wrap
msgid "Description"
msgstr "Descripción"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:134
#: upstream/_guides/cdi-reference.adoc:465
#: upstream/_guides/cdi-reference.adoc:649
#, fuzzy, no-wrap
msgid "`org.acme.Foo`"
msgstr "`org.acme.Foo`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:135
#, fuzzy, no-wrap
msgid "Match the fully qualified name of the class"
msgstr "Coincidir con el nombre completo de la clase"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:135
#: upstream/_guides/cdi-reference.adoc:466
#: upstream/_guides/cdi-reference.adoc:650
#, fuzzy, no-wrap
msgid "`org.acme.*`"
msgstr "`org.acme.*`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:136
#, fuzzy, no-wrap
msgid "Match classes with package `org.acme`"
msgstr "Combinar las clases con el paquete `org.acme`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:136
#: upstream/_guides/cdi-reference.adoc:467
#: upstream/_guides/cdi-reference.adoc:651
#, fuzzy, no-wrap
msgid "`org.acme.**`"
msgstr "`org.acme.**`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:137
#, fuzzy, no-wrap
msgid "Match classes where the package starts with `org.acme`"
msgstr "Coinciden con las clases en las que el paquete empieza por `org.acme`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:137
#: upstream/_guides/cdi-reference.adoc:468
#: upstream/_guides/cdi-reference.adoc:652
#, fuzzy, no-wrap
msgid "`Bar`"
msgstr "`Bar`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:138
#, fuzzy, no-wrap
msgid "Match the simple name of the class"
msgstr "Coincidir con el nombre simple de la clase"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:144
#, no-wrap
msgid "quarkus.arc.exclude-types=org.acme.Foo,org.acme.*,Bar <1><2><3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:146
#, fuzzy
msgid "Exclude the type `org.acme.Foo`."
msgstr "Excluya el tipo `org.acme.Foo`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:147
#, fuzzy
msgid "Exclude all types from the `org.acme` package."
msgstr "Excluya todos los tipos del paquete `org.acme`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:148
#, fuzzy
msgid "Exclude all types whose simple name is `Bar`"
msgstr "Excluir todos los tipos cuyo nombre simple sea `Bar`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:151
#, fuzzy
msgid "It is also possible to exclude a dependency artifact that would be otherwise scanned for beans.  For example, because it contains a `beans.xml` descriptor."
msgstr "También es posible excluir un artefacto de dependencia que, de otro modo, sería analizado en busca de judías. Por ejemplo, porque contiene un descriptor `beans.xml`."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:157
#, no-wrap
msgid ""
"quarkus.arc.exclude-dependency.acme.group-id=org.acme <1>\n"
"quarkus.arc.exclude-dependency.acme.artifact-id=acme-services <2>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:161
#, fuzzy, no-wrap
msgid "Native Executables and Private Members"
msgstr "Ejecutables nativos y miembros privados"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:167
#, fuzzy
msgid "Quarkus is using GraalVM to build a native executable.  One of the limitations of GraalVM is the usage of link:https://www.graalvm.org/latest/reference-manual/native-image/Reflection/[Reflection, window=\"_blank\"].  Reflective operations are supported but all relevant members must be registered for reflection explicitly.  Those registrations result in a bigger native executable."
msgstr "Quarkus está utilizando GraalVM para construir un ejecutable nativo. Una de las limitaciones de GraalVM es el uso de  link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Limitations.md#reflection[Reflection, window=_blank]. Las operaciones de reflexión están soportadas pero todos los miembros relevantes deben ser registrados para la reflexión explícitamente. Esos registros resultan en un ejecutable nativo más grande."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:171
#, fuzzy
msgid "And if Quarkus DI needs to access a private member it *has to use reflection*.  That's why Quarkus users are encouraged __not to use private members__ in their beans.  This involves injection fields, constructors and initializers, observer methods, producer methods and fields, disposers and interceptor methods."
msgstr "Y si Quarkus DI necesita acceder a un miembro privado *tiene que utilizar la reflexión*. Por eso se anima a los usuarios de Quarkus _a no utilizar_ miembros privados en sus beans. Esto implica campos de inyección, constructores e inicializadores, métodos de observador, métodos y campos de productor, dispositores y métodos de interceptor."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:174
#, fuzzy
msgid "How to avoid using private members? You can use package-private modifiers:"
msgstr "¿Cómo evitar el uso de miembros privados? Puede utilizar modificadores de paquete-privado:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:179
#: upstream/_guides/cdi-reference.adoc:196
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CounterBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:182
#, no-wrap
msgid ""
"    @Inject\n"
"    CounterService counterService; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:186
#, no-wrap
msgid ""
"    void onMessage(@Observes Event msg) { <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:188
#, fuzzy
msgid "A package-private injection field."
msgstr "Un campo de inyección privado del paquete."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:189
#, fuzzy
msgid "A package-private observer method."
msgstr "Un método de observador privado del paquete."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:191
#, fuzzy
msgid "Or constructor injection:"
msgstr "O la inyección de constructores:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:198
#, no-wrap
msgid "    private CounterService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:203
#, no-wrap
msgid ""
"    CounterBean(CounterService service) { <1>\n"
"      this.service = service;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:205
#, fuzzy
msgid "A package-private constructor injection. `@Inject` is optional in this particular case."
msgstr "Inyección de un constructor privado del paquete. `@Inject` es opcional en este caso particular."

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:207
#, fuzzy, no-wrap
msgid "[[supported_features]][[limitations]] Supported Features and Limitations"
msgstr "link:[, id=supported_features] link:[, id=limitations] Funciones compatibles y limitaciones"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:211
#, fuzzy
msgid "The CDI Lite specification is fully supported.  The following features from CDI Full are also supported:"
msgstr "La especificación CDI Lite es totalmente compatible. También se admiten las siguientes funciones de CDI Full:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:213
#, fuzzy
msgid "Decorators"
msgstr "Decoradores"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:214
#, fuzzy
msgid "Decoration of built-in beans, such as `Event`, is not supported"
msgstr "No se admite la decoración de los frijoles incorporados, como `Event`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:215
#, fuzzy
msgid "`BeanManager`"
msgstr "`BeanContainer`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:216
#, fuzzy
msgid "In addition to the `BeanContainer` methods, the following methods are supported: `getInjectableReference()`, `resolveDecorators()`"
msgstr "`BeanManager`: además de los métodos de `BeanContainer`, sólo se admiten los siguientes métodos: `getInjectableReference()`, `resolveDecorators()`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:217
#, fuzzy
msgid "`@SessionScoped`"
msgstr "`@SessionScoped`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:218
#, fuzzy
msgid "Only with the Undertow extension; see xref:cdi.adoc#bean-scope-available[here] for details"
msgstr "Ámbitos y contextos; consulte  link:cdi.html#bean-scope-available[aquí] los detalles"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:220
#, fuzzy
msgid "These additional features are not covered by the CDI Lite TCK."
msgstr "Estas funciones adicionales no están cubiertas por el TCK de CDI Lite."

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:222
#, fuzzy, no-wrap
msgid "Non-standard Features"
msgstr "Características no estándar"

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:224
#, fuzzy, no-wrap
msgid "Eager Instantiation of Beans"
msgstr "Instanciación ansiosa de los frijoles"

#. type: Title ====
#: upstream/_guides/cdi-reference.adoc:227
#, fuzzy, no-wrap
msgid "Lazy By Default"
msgstr "Vagos por defecto"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:231
#, fuzzy
msgid "By default, CDI beans are created lazily, when needed.  What exactly \"needed\" means depends on the scope of a bean."
msgstr "Por defecto, los beans CDI se crean de forma perezosa, cuando se necesitan. Lo que significa exactamente \"necesario\" depende del ámbito de un bean."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:233
#, fuzzy
msgid "A *normal scoped bean* (`@ApplicationScoped`, `@RequestScoped`, etc.) is needed when a method is invoked upon an injected instance (contextual reference per the specification)."
msgstr "Un *bean de ámbito normal* ( `@ApplicationScoped`, `@RequestScoped`, etc.) es necesario cuando se invoca un método sobre una instancia inyectada (referencia contextual según la especificación)."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:235
#, fuzzy
msgid "In other words, injecting a normal scoped bean will not suffice because a _client proxy_ is injected instead of a contextual instance of the bean."
msgstr "En otras palabras, inyectar un bean de ámbito normal no será suficiente porque se inyecta un _proxy del cliente_ en lugar de una instancia contextual del bean."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:237
#, fuzzy
msgid "A *bean with a pseudo-scope* (`@Dependent` and `@Singleton` ) is created when injected."
msgstr "Cuando se inyecta, se crea un *bean con un pseudo-ámbito* ( `@Dependent` y `@Singleton` )."

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:238
#, fuzzy, no-wrap
msgid "Lazy Instantiation Example"
msgstr "Ejemplo de instanciación perezosa"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:247
#, no-wrap
msgid ""
"@Singleton // => pseudo-scope\n"
"class AmazingService {\n"
"  String ping() {\n"
"    return \"amazing\";\n"
"  }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:254
#, no-wrap
msgid ""
"@ApplicationScoped // => normal scope\n"
"class CoolService {\n"
"  String ping() {\n"
"    return \"cool\";\n"
"  }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:257
#, no-wrap
msgid ""
"@Path(\"/ping\")\n"
"public class PingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:260
#, no-wrap
msgid ""
"  @Inject\n"
"  AmazingService s1; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:263
#, no-wrap
msgid ""
"  @Inject\n"
"  CoolService s2; <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:269
#, no-wrap
msgid ""
"  @GET\n"
"  public String ping() {\n"
"    return s1.ping() + s2.ping(); <3>\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:271
#, fuzzy
msgid "Injection triggers the instantiation of `AmazingService`."
msgstr "La inyección desencadena la instanciación de `AmazingService`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:272
#, fuzzy
msgid "Injection itself does not result in the instantiation of `CoolService`. A client proxy is injected."
msgstr "La inyección en sí misma no da lugar a la instanciación de `CoolService`. Se inyecta un proxy de cliente."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:273
#, fuzzy
msgid "The first invocation upon the injected proxy triggers the instantiation of `CoolService`."
msgstr "La primera invocación al proxy inyectado desencadena la instanciación de `CoolService`."

#. type: Title ====
#: upstream/_guides/cdi-reference.adoc:275
#, fuzzy, no-wrap
msgid "Startup Event"
msgstr "Evento de inicio"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:278
#, fuzzy
msgid "However, if you really need to instantiate a bean eagerly you can:"
msgstr "Sin embargo, si realmente necesitas instanciar un bean de forma ansiosa puedes hacerlo:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:280
#, fuzzy
msgid "Declare an observer of the `StartupEvent` - the scope of the bean does not matter in this case:"
msgstr "Declarar un observador de la `StartupEvent` - el ámbito del frijol no importa en este caso:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:288
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class CoolService {\n"
"  void startup(@Observes StartupEvent event) { <1>\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:290
#, fuzzy
msgid "A `CoolService` is created during startup to service the observer method invocation."
msgstr "Durante el inicio se crea un `CoolService` para atender la invocación del método del observador."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:292
#, fuzzy
msgid "Use the bean in an observer of the `StartupEvent` - normal scoped beans must be used as described in xref:lazy_by_default[Lazy By Default]:"
msgstr "Utilizar el bean en un observador de la `StartupEvent` - los beans de ámbito normal deben utilizarse como se describe en  link:#lazy_by_default[[lazy_by_default]]:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:297
#, no-wrap
msgid ""
"@Dependent\n"
"class MyBeanStarter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:302
#, no-wrap
msgid ""
"  void startup(@Observes StartupEvent event, AmazingService amazing, CoolService cool) { <1>\n"
"    cool.toString(); <2>\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:304
#, fuzzy
msgid "The `AmazingService` is created during injection."
msgstr "El `AmazingService` se crea durante la inyección."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:305
#, fuzzy
msgid "The `CoolService` is a normal scoped bean, so we have to invoke a method upon the injected proxy to force the instantiation."
msgstr "El `CoolService` es un bean de ámbito normal por lo que tenemos que invocar un método sobre el proxy inyectado para forzar la instanciación."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:307
#, fuzzy
msgid "Annotate the bean with `@io.quarkus.runtime.Startup` as described in xref:lifecycle.adoc#startup_annotation[Startup annotation]:"
msgstr "Anote el frijol con `@io.quarkus.runtime.Startup` como se describe en  link:lifecycle.html#startup_annotation[Anotación de inicio]:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:313
#, no-wrap
msgid ""
"@Startup // <1>\n"
"@ApplicationScoped\n"
"public class EagerAppBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:315
#, no-wrap
msgid "   private final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:320
#, no-wrap
msgid ""
"   EagerAppBean(NameGenerator generator) { // <2>\n"
"     this.name = generator.createName();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:322
#, fuzzy
msgid "For each bean annotated with `@Startup` a synthetic observer of `StartupEvent` is generated. The default priority is used."
msgstr "Para cada frijol anotado con `@Startup` se genera un observador sintético de `StartupEvent`. Se utiliza la prioridad por defecto."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:323
#, fuzzy
msgid "The bean constructor is called when the application starts and the resulting contextual instance is stored in the application context."
msgstr "El constructor del bean se llama cuando la aplicación se inicia y la instancia contextual resultante se almacena en el contexto de la aplicación."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:325
#, fuzzy
msgid "Quarkus users are encouraged to always prefer the `@Observes StartupEvent` to `@Initialized(ApplicationScoped.class)` as explained in the xref:lifecycle.adoc[Application Initialization and Termination] guide."
msgstr "Se anima a los usuarios de Quarkus a preferir siempre el `@Observes StartupEvent` a `@Initialized(ApplicationScoped.class)` como se explica en la guía de  link:lifecycle.html[Inicialización y Terminación de Aplicaciones]."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:326
#, fuzzy, no-wrap
msgid "Request Context Lifecycle"
msgstr "Ciclo de vida del contexto de la solicitud"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:329
#, fuzzy
msgid "The request context is also active:"
msgstr "El contexto de la solicitud también está activo:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:331
#, fuzzy
msgid "during notification of a synchronous observer method."
msgstr "durante la notificación de un método observador síncrono."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:333
#, fuzzy
msgid "The request context is destroyed:"
msgstr "El contexto de la solicitud se destruye:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:335
#, fuzzy
msgid "after the observer notification completes for an event, if it was not already active when the notification started."
msgstr "después de que se complete la notificación del observador para un evento, si no estaba ya activo cuando se inició la notificación."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:337
#, fuzzy
msgid "An event with qualifier `@Initialized(RequestScoped.class)` is fired when the request context is initialized for an observer notification. Moreover, the events with qualifiers `@BeforeDestroyed(RequestScoped.class)` and `@Destroyed(RequestScoped.class)` are fired when the request context is destroyed."
msgstr "Un evento con el calificador `@Initialized(RequestScoped.class)` se dispara cuando el contexto de la solicitud se inicializa para una notificación de observador. Además, los eventos con los calificadores `@BeforeDestroyed(RequestScoped.class)` y `@Destroyed(RequestScoped.class)` se disparan cuando se destruye el contexto de la solicitud."

#. type: Title ====
#: upstream/_guides/cdi-reference.adoc:338
#, fuzzy, no-wrap
msgid "How to Enable Trace Logging for Request Context Activation"
msgstr "Cómo habilitar el registro de rastros para la activación del contexto de solicitud"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:341
#, fuzzy
msgid "You can set the `TRACE` level for the logger `io.quarkus.arc.requestContext` and try to analyze the log output afterwards."
msgstr "Puede establecer el nivel `TRACE` para el registrador `io.quarkus.arc.requestContext` y tratar de analizar la salida del registro después."

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:342
#, fuzzy, no-wrap
msgid "`application.properties` Example"
msgstr "Ejemplo de application.properties"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:347
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.arc.requestContext\".min-level=TRACE <1>\n"
"quarkus.log.category.\"io.quarkus.arc.requestContext\".level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:349
#, fuzzy
msgid "You also need to adjust the minimum log level for the relevant category."
msgstr "También es necesario ajustar el nivel mínimo de registro para la categoría correspondiente."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:350
#, fuzzy, no-wrap
msgid "Qualified Injected Fields"
msgstr "Campos inyectados cualificados"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:353
#, fuzzy
msgid "In CDI, if you declare a field injection point you need to use `@Inject` and optionally a set of qualifiers."
msgstr "En CDI, si se declara un punto de inyección de campo es necesario utilizar `@Inject` y opcionalmente un conjunto de calificadores."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:359
#: upstream/_guides/cdi-reference.adoc:672
#, no-wrap
msgid ""
"  @Inject\n"
"  @ConfigProperty(name = \"cool\")\n"
"  String coolProperty;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:362
#, fuzzy
msgid "In Quarkus, you can skip the `@Inject` annotation completely if the injected field declares at least one qualifier."
msgstr "En Quarkus, se puede omitir completamente la anotación `@Inject` si el campo inyectado declara al menos un calificador."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:367
#: upstream/_guides/cdi-reference.adoc:689
#, no-wrap
msgid ""
"  @ConfigProperty(name = \"cool\")\n"
"  String coolProperty;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:370
#, fuzzy
msgid "With the notable exception of one special case discussed below, `@Inject` is still required for constructor and method injection."
msgstr "Con la notable excepción de un caso especial que se discute más adelante, `@Inject` sigue siendo necesario para la inyección de constructores y métodos."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:371
#, fuzzy, no-wrap
msgid "Simplified Constructor Injection"
msgstr "Inyección de constructores simplificada"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:375
#, fuzzy
msgid "In CDI, a normal scoped bean must always declare a no-args constructor (this constructor is normally generated by the compiler unless you declare any other constructor).  However, this requirement complicates constructor injection - you need to provide a dummy no-args constructor to make things work in CDI."
msgstr "En CDI, un bean de ámbito normal debe declarar siempre un constructor sin cargas (este constructor es normalmente generado por el compilador a menos que se declare cualquier otro constructor). Sin embargo, este requisito complica la inyección de constructores - es necesario proporcionar un constructor ficticio sin cargas para que las cosas funcionen en CDI."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:380
#: upstream/_guides/cdi-reference.adoc:400
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyCoolService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:382
#: upstream/_guides/cdi-reference.adoc:402
#, no-wrap
msgid "  private SimpleProcessor processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:385
#, no-wrap
msgid ""
"  MyCoolService() { // dummy constructor needed\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:391
#, no-wrap
msgid ""
"  @Inject // constructor injection\n"
"  MyCoolService(SimpleProcessor processor) {\n"
"    this.processor = processor;\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:395
#, fuzzy
msgid "There is no need to declare dummy constructors for normal scoped bean in Quarkus - they are generated automatically.  Also, if there's only one constructor there is no need for `@Inject`."
msgstr "No hay necesidad de declarar constructores ficticios para un bean de ámbito normal en Quarkus - se generan automáticamente. Además, si sólo hay un constructor no es necesario `@Inject`."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:407
#, no-wrap
msgid ""
"  MyCoolService(SimpleProcessor processor) {\n"
"    this.processor = processor;\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:410
#, fuzzy
msgid "We don't generate a no-args constructor automatically if a bean class extends a class that does not declare a no-args constructor."
msgstr "No generamos un constructor no-args automáticamente si una clase bean extiende una clase que no declara un constructor no-args."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:412
#, fuzzy, no-wrap
msgid "Removing Unused Beans"
msgstr "Eliminación de los granos no utilizados"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:420
#, fuzzy
msgid "The container attempts to remove all unused beans, interceptors and decorators during build by default.  This optimization helps to minimize the amount of generated classes, thus conserving memory.  However, Quarkus can't detect the programmatic lookup performed via the `CDI.current()` static method.  Therefore, it is possible that a removal results in a false positive error, i.e. a bean is removed although it's actually used.  In such cases, you'll notice a big warning in the log.  Users and extension authors have several options xref:eliminate_false_positives[how to eliminate false positives]."
msgstr "El contenedor intenta eliminar todos los beans, interceptores y decoradores no utilizados durante la construcción por defecto. Esta optimización ayuda a minimizar la cantidad de clases generadas, conservando así la memoria. Sin embargo, Quarkus no puede detectar la búsqueda programática realizada a través del método estático `CDI.current()`. Por lo tanto, es posible que una eliminación resulte en un error falso positivo, es decir, que se elimine un bean aunque realmente se utilice. En tales casos, se notará una gran advertencia en el registro. Los usuarios y autores de extensiones tienen varias opciones  link:#eliminate_false_positives[para eliminar los falsos positivos]."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:424
#, fuzzy
msgid "The optimization can be disabled by setting `quarkus.arc.remove-unused-beans` to `none` or `false`.  Quarkus also provides a middle ground where application beans are never removed whether or not they are unused, while the optimization proceeds normally for non application classes.  To use this mode, set `quarkus.arc.remove-unused-beans` to `fwk` or `framework`."
msgstr "La optimización puede desactivarse estableciendo `quarkus.arc.remove-unused-beans` a `none` o `false`. Quarkus también proporciona un punto intermedio en el que los beans de aplicación nunca se eliminan, estén o no sin usar, mientras que la optimización procede normalmente para las clases que no son de aplicación. Para utilizar este modo, configure `quarkus.arc.remove-unused-beans` a `fwk` o `framework`."

#. type: Title ====
#: upstream/_guides/cdi-reference.adoc:425
#, fuzzy, no-wrap
msgid "What's Removed?"
msgstr "¿Qué se elimina?"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:429
#, fuzzy
msgid "Quarkus first identifies so-called _unremovable_ beans that form the roots in the dependency tree.  A good example is a Jakarta REST resource class or a bean which declares a `@Scheduled` method."
msgstr "Quarkus identifica primero los llamados beans _no removibles_ que forman las raíces en el árbol de dependencias. Un buen ejemplo es una clase de recurso JAX-RS o un frijol que declara un método `@Scheduled`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:431
#, fuzzy
msgid "An _unremovable_ bean:"
msgstr "Una judía _inamovible_:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:433
#, fuzzy
msgid "is excluded from removal by an extension, or"
msgstr "está excluida de la eliminación por una prórroga, o"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:434
#, fuzzy
msgid "has a name designated via `@Named`, or"
msgstr "tiene un nombre designado a través de `@Named`, o"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:435
#, fuzzy
msgid "declares an observer method."
msgstr "declara un método observador."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:437
#, fuzzy
msgid "An _unused_ bean:"
msgstr "Una judía _sin usar_:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:439
#, fuzzy
msgid "is not _unremovable_, and"
msgstr "no es _inamovible_, y"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:440
#, fuzzy
msgid "is not eligible for injection to any injection point in the dependency tree, and"
msgstr "no puede inyectarse en ningún punto de inyección del árbol de dependencias, y"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:441
#, fuzzy
msgid "does not declare any producer which is eligible for injection to any injection point in the dependency tree, and"
msgstr "no declara ningún productor que pueda ser inyectado en ningún punto de inyección del árbol de dependencias, y"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:442
#, fuzzy
msgid "is not eligible for injection into any `jakarta.enterprise.inject.Instance` or `jakarta.inject.Provider` injection point."
msgstr "no se puede inyectar en ningún punto de inyección de `javax.enterprise.inject.Instance` o `javax.inject.Provider`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:444
#, fuzzy
msgid "Unused interceptors and decorators are not associated with any bean."
msgstr "Los interceptores y decoradores no utilizados no están asociados a ningún bean."

#. type: delimited block =
#: upstream/_guides/cdi-reference.adoc:448
#, fuzzy
msgid "When using the dev mode (running `./mvnw clean compile quarkus:dev`), you can see more information about which beans are being removed:"
msgstr "Cuando se utiliza el modo dev (ejecutando `./mvnw clean compile quarkus:dev`), se puede ver más información sobre los beans que se están eliminando:"

#. type: delimited block =
#: upstream/_guides/cdi-reference.adoc:450
#, fuzzy
msgid "In the console - just enable the DEBUG level in your `application.properties`, i.e. `quarkus.log.category.\"io.quarkus.arc.processor\".level=DEBUG`"
msgstr "En la consola - simplemente habilite el nivel DEBUG en su `application.properties`, es decir. `quarkus.log.category.\"io.quarkus.arc.processor\".level=DEBUG`"

#. type: delimited block =
#: upstream/_guides/cdi-reference.adoc:451
#, fuzzy
msgid "In the relevant Dev UI page"
msgstr "En la página correspondiente de la interfaz de usuario de desarrollo"

#. type: Title ====
#: upstream/_guides/cdi-reference.adoc:454
#, fuzzy, no-wrap
msgid "How To Eliminate False Positives"
msgstr "Cómo eliminar los falsos positivos"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:458
#, fuzzy
msgid "Users can instruct the container to not remove any of their specific beans (even if they satisfy all the rules specified above) by annotating them with `@io.quarkus.arc.Unremovable`.  This annotation can be declared on a class, a producer method or field."
msgstr "Los usuarios pueden ordenar al contenedor que no elimine ninguno de sus beans específicos (aunque satisfagan todas las reglas especificadas anteriormente) anotándolos con `@io.quarkus.arc.Unremovable`. Esta anotación puede ser declarada en una clase, un método productor o un campo."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:461
#, fuzzy
msgid "Since this is not always possible, there is an option to achieve the same via `application.properties`.  The `quarkus.arc.unremovable-types` property accepts a list of string values that are used to match beans based on their name or package."
msgstr "Como esto no siempre es posible, existe una opción para lograr lo mismo a través de `application.properties`. La propiedad `quarkus.arc.unremovable-types` acepta una lista de valores de cadena que se utilizan para hacer coincidir los beans en función de su nombre o paquete."

#. type: Table
#: upstream/_guides/cdi-reference.adoc:466
#, fuzzy, no-wrap
msgid "Match the fully qualified name of the bean class"
msgstr "Coincidir con el nombre completo de la clase de frijol"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:467
#: upstream/_guides/cdi-reference.adoc:651
#, fuzzy, no-wrap
msgid "Match beans where the package of the bean class is `org.acme`"
msgstr "Emparejar frijoles donde el paquete de la clase de frijol es `org.acme`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:468
#: upstream/_guides/cdi-reference.adoc:652
#, fuzzy, no-wrap
msgid "Match beans where the package of the bean class starts with `org.acme`"
msgstr "Coincidir con los frijoles cuyo paquete de la clase de frijol comienza con `org.acme`"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:469
#, fuzzy, no-wrap
msgid "Match the simple name of the bean class"
msgstr "Coincidir con el nombre simple de la clase de frijol"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:475
#, no-wrap
msgid "quarkus.arc.unremovable-types=org.acme.Foo,org.acme.*,Bar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:478
#, fuzzy
msgid "Furthermore, extensions can eliminate false positives by producing an `UnremovableBeanBuildItem`."
msgstr "Además, las extensiones pueden eliminar los falsos positivos produciendo un `UnremovableBeanBuildItem`."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:480
#, fuzzy, no-wrap
msgid "Default Beans"
msgstr "Frijoles por defecto"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:484
#, fuzzy
msgid "Quarkus adds a capability that CDI currently does not support which is to conditionally declare a bean if no other bean with equal types and qualifiers was declared by any available means (bean class, producer, synthetic bean, ...)  This is done using the `@io.quarkus.arc.DefaultBean` annotation and is best explained with an example."
msgstr "Quarkus añade una capacidad que CDI no soporta actualmente, que es la de declarar condicionalmente un bean si no se ha declarado ningún otro bean con tipos y calificadores iguales por ningún medio disponible (clase bean, productor, bean sintético, ...) Esto se hace usando la anotación `@io.quarkus.arc.DefaultBean` y se explica mejor con un ejemplo."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:486
#, fuzzy
msgid "Say there is a Quarkus extension that among other things declares a few CDI beans like the following code does:"
msgstr "Digamos que hay una extensión de Quarkus que, entre otras cosas, declara unos cuantos beans CDI como lo hace el siguiente código:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:491
#: upstream/_guides/cdi-reference.adoc:545
#: upstream/_guides/cdi-reference.adoc:566
#: upstream/_guides/cdi-reference.adoc:596
#: upstream/_guides/cdi-reference.adoc:619
#, no-wrap
msgid ""
"@Dependent\n"
"public class TracerConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:496
#, no-wrap
msgid ""
"    @Produces\n"
"    public Tracer tracer(Reporter reporter, Configuration configuration) {\n"
"        return new Tracer(reporter, configuration);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:502
#, no-wrap
msgid ""
"    @Produces\n"
"    @DefaultBean\n"
"    public Configuration configuration() {\n"
"        // create a Configuration\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:509
#, no-wrap
msgid ""
"    @Produces\n"
"    @DefaultBean\n"
"    public Reporter reporter(){\n"
"        // create a Reporter\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:514
#, fuzzy
msgid "The idea is that the extension autoconfigures things for the user, eliminating a lot of boilerplate - we can just `@Inject` a `Tracer` wherever it is needed.  Now imagine that in our application we would like to utilize the configured `Tracer`, but we need to customize it a little, for example by providing a custom `Reporter`.  The only thing that would be needed in our application would be something like the following:"
msgstr "La idea es que la extensión auto-configura las cosas para el usuario, eliminando un montón de bucle - podemos simplemente `@Inject` un `Tracer` donde sea necesario. Ahora imaginemos que en nuestra aplicación nos gustaría utilizar el `Tracer` configurado, pero necesitamos personalizarlo un poco, por ejemplo proporcionando un `Reporter` personalizado. Lo único que se necesitaría en nuestra aplicación sería algo como lo siguiente:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:520
#, no-wrap
msgid ""
"@Dependent\n"
"public class CustomTracerConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:526
#, no-wrap
msgid ""
"    @Produces\n"
"    public Reporter reporter(){\n"
"        // create a custom Reporter\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:530
#, fuzzy
msgid "`@DefaultBean` allows extensions (or any other code for that matter) to provide defaults while backing off if beans of that type are supplied in any way Quarkus supports."
msgstr "`@DefaultBean` permite a las extensiones (o a cualquier otro código, para el caso) proporcionar valores por defecto mientras se retrocede si los frijoles de ese tipo son suministrados de cualquier manera que Quarkus soporte."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:532
#, fuzzy, no-wrap
msgid "Enabling Beans for Quarkus Build Profile"
msgstr "Habilitación de los frijoles para el perfil de construcción de Quarkus"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:537
#, fuzzy
msgid "Quarkus adds a capability that CDI currently does not support which is to conditionally enable a bean when a Quarkus build time profile is enabled, via the `@io.quarkus.arc.profile.IfBuildProfile` and `@io.quarkus.arc.profile.UnlessBuildProfile` annotations.  When used in conjunction with `@io.quarkus.arc.DefaultBean`, these annotations allow for the creation of different bean configurations for different build profiles."
msgstr "Quarkus añade una capacidad que CDI no soporta actualmente, que es la de habilitar condicionalmente un bean cuando se habilita un perfil de tiempo de compilación de Quarkus, a través de las anotaciones `@io.quarkus.arc.profile.IfBuildProfile` y `@io.quarkus.arc.profile.UnlessBuildProfile`. Cuando se utilizan junto con `@io.quarkus.arc.DefaultBean`, estas anotaciones permiten la creación de diferentes configuraciones de frijoles para diferentes perfiles de construcción."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:540
#, fuzzy
msgid "Imagine for instance that an application contains a bean named `Tracer`, which needs to do nothing when in tests or in dev mode, but works in its normal capacity for the production artifact.  An elegant way to create such beans is the following:"
msgstr "Imaginemos, por ejemplo, que una aplicación contiene un bean llamado `Tracer`, que necesita no hacer nada cuando está en pruebas o en modo dev, pero que funciona en su capacidad normal para el artefacto de producción. Una forma elegante de crear tales beans es la siguiente:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:551
#, no-wrap
msgid ""
"    @Produces\n"
"    @IfBuildProfile(\"prod\")\n"
"    public Tracer realTracer(Reporter reporter, Configuration configuration) {\n"
"        return new RealTracer(reporter, configuration);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:558
#: upstream/_guides/cdi-reference.adoc:579
#: upstream/_guides/cdi-reference.adoc:609
#: upstream/_guides/cdi-reference.adoc:632
#, no-wrap
msgid ""
"    @Produces\n"
"    @DefaultBean\n"
"    public Tracer noopTracer() {\n"
"        return new NoopTracer();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:561
#, fuzzy
msgid "If instead, it is required that the `Tracer` bean also works in dev mode and only default to doing nothing for tests, then `@UnlessBuildProfile` would be ideal. The code would look like:"
msgstr "Si por el contrario, se requiere que el frijol `Tracer` también funcione en modo dev y sólo por defecto no hacer nada para las pruebas, entonces `@UnlessBuildProfile` sería ideal. El código se vería así:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:572
#, no-wrap
msgid ""
"    @Produces\n"
"    @UnlessBuildProfile(\"test\") // this will be enabled for both prod and dev build time profiles\n"
"    public Tracer realTracer(Reporter reporter, Configuration configuration) {\n"
"        return new RealTracer(reporter, configuration);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:582
#, fuzzy
msgid "The runtime profile has absolutely no effect on the bean resolution using `@IfBuildProfile` and `@UnlessBuildProfile`."
msgstr "El perfil de tiempo de ejecución no tiene absolutamente ningún efecto sobre la resolución de los frijoles utilizando `@IfBuildProfile` y `@UnlessBuildProfile`."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:584
#, fuzzy, no-wrap
msgid "Enabling Beans for Quarkus Build Properties"
msgstr "Habilitación de los frijoles para las propiedades de construcción de Quarkus"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:589
#, fuzzy
msgid "Quarkus adds a capability that CDI currently does not support which is to conditionally enable a bean when a Quarkus build time property has/has not a specific value, via the `@io.quarkus.arc.properties.IfBuildProperty` and `@io.quarkus.arc.properties.UnlessBuildProperty` annotations.  When used in conjunction with `@io.quarkus.arc.DefaultBean`, this annotation allow for the creation of different bean configurations for different build properties."
msgstr "Quarkus añade una capacidad que CDI actualmente no soporta, que es la de habilitar condicionalmente un bean cuando una propiedad de tiempo de construcción de Quarkus tiene/no tiene un valor específico, a través de las anotaciones `@io.quarkus.arc.properties.IfBuildProperty` y `@io.quarkus.arc.properties.UnlessBuildProperty`. Cuando se utiliza junto con `@io.quarkus.arc.DefaultBean`, esta anotación permite la creación de diferentes configuraciones de frijoles para diferentes propiedades de construcción."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:591
#, fuzzy
msgid "The scenario we mentioned above with `Tracer` could also be implemented in the following way:"
msgstr "El escenario que mencionamos anteriormente con `Tracer` también podría implementarse de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:602
#, no-wrap
msgid ""
"    @Produces\n"
"    @IfBuildProperty(name = \"some.tracer.enabled\", stringValue = \"true\")\n"
"    public Tracer realTracer(Reporter reporter, Configuration configuration) {\n"
"        return new RealTracer(reporter, configuration);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:612
#, fuzzy
msgid "`@IfBuildProperty` and `@UnlessBuildProperty` are repeatable annotations, i.e. a bean will only be enabled if **all** the conditions defined by these annotations are satisfied."
msgstr "`@IfBuildProperty` y `@UnlessBuildProperty` son anotaciones repetibles, es decir, un bean sólo se habilitará si se cumplen *todas* las condiciones definidas por estas anotaciones."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:614
#, fuzzy
msgid "If instead, it is required that the `RealTracer` bean is only used if the `some.tracer.enabled` property is not `false`, then `@UnlessBuildProperty` would be ideal. The code would look like:"
msgstr "Si en cambio, se requiere que el frijol `RealTracer` sólo se utilice si la propiedad `some.tracer.enabled` no es `false`, entonces `@UnlessBuildProperty` sería lo ideal. El código se vería así:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:625
#, no-wrap
msgid ""
"    @Produces\n"
"    @UnlessBuildProperty(name = \"some.tracer.enabled\", stringValue = \"false\")\n"
"    public Tracer realTracer(Reporter reporter, Configuration configuration) {\n"
"        return new RealTracer(reporter, configuration);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:635
#, fuzzy
msgid "Properties set at runtime have absolutely no effect on the bean resolution using `@IfBuildProperty`."
msgstr "Las propiedades establecidas en tiempo de ejecución no tienen absolutamente ningún efecto en la resolución de los frijoles utilizando `@IfBuildProperty`."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:636
#, fuzzy, no-wrap
msgid "Declaring Selected Alternatives"
msgstr "Declarar las alternativas seleccionadas"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:640
#, fuzzy
msgid "In CDI, an alternative bean may be selected either globally for an application by means of `@Priority`, or for a bean archive using a `beans.xml` descriptor.  Quarkus has a simplified bean discovery and the content of `beans.xml` is ignored."
msgstr "En CDI, se puede seleccionar un bean alternativo de forma global para una aplicación mediante `@Priority`, o para un archivo de beans mediante un descriptor `beans.xml`. Quarkus tiene un descubrimiento de beans simplificado y el contenido de `beans.xml` se ignora."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:645
#, fuzzy
msgid "However, it is also possible to select alternatives for an application using the unified configuration.  The `quarkus.arc.selected-alternatives` property accepts a list of string values that are used to match alternative beans.  If any value matches then the priority of `Integer#MAX_VALUE` is used for the relevant bean.  The priority declared via `@Priority` or inherited from a stereotype is overridden."
msgstr "Sin embargo, también es posible seleccionar alternativas para una aplicación utilizando la configuración unificada. La propiedad `quarkus.arc.selected-alternatives` acepta una lista de valores de cadena que se utilizan para comparar beans alternativos. Si algún valor coincide, se utiliza la prioridad de `Integer#MAX_VALUE` para el bean correspondiente. La prioridad declarada a través de `@Priority` o `@AlternativePriority` se anula."

#. type: Table
#: upstream/_guides/cdi-reference.adoc:650
#, fuzzy, no-wrap
msgid "Match the fully qualified name of the bean class or the bean class of the bean that declares the producer"
msgstr "Coincidir con el nombre completo de la clase del bean o la clase del bean que declara el productor"

#. type: Table
#: upstream/_guides/cdi-reference.adoc:653
#, fuzzy, no-wrap
msgid "Match the simple name of the bean class or the bean class of the bean that declares the producer"
msgstr "Coincidir con el nombre simple de la clase del bean o la clase del bean que declara el productor"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:659
#, no-wrap
msgid "quarkus.arc.selected-alternatives=org.acme.Foo,org.acme.*,Bar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:661
#, fuzzy, no-wrap
msgid "Simplified Producer Method Declaration"
msgstr "Declaración simplificada del método del productor"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:664
#, fuzzy
msgid "In CDI, a producer method must be always annotated with `@Produces`."
msgstr "En CDI, un método productor debe estar siempre anotado con `@Produces`."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:668
#: upstream/_guides/cdi-reference.adoc:686
#, no-wrap
msgid "class Producers {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:679
#, no-wrap
msgid ""
"  @Produces\n"
"  @ApplicationScoped\n"
"  MyService produceService() {\n"
"    return new MyService(coolProperty);\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:682
#, fuzzy
msgid "In Quarkus, you can skip the `@Produces` annotation completely if the producer method is annotated with a scope annotation, a stereotype or a qualifier."
msgstr "En Quarkus, se puede omitir completamente la anotación `@Produces` si el método productor está anotado con una anotación de alcance, un estereotipo o un calificador."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:695
#, no-wrap
msgid ""
"  @ApplicationScoped\n"
"  MyService produceService() {\n"
"    return new MyService(coolProperty);\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:697
#, fuzzy, no-wrap
msgid "Interception of Static Methods"
msgstr "Interceptación de métodos estáticos"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:703
#, fuzzy
msgid "The Interceptors specification is clear that _around-invoke_ methods must not be declared static.  However, this restriction was driven mostly by technical limitations.  And since Quarkus is a build-time oriented stack that allows for additional class transformations, those limitations don't apply anymore.  It's possible to annotate a non-private static method with an interceptor binding:"
msgstr "La especificación de los interceptores deja claro que los métodos _around-invoke_ no deben declararse estáticos. Sin embargo, esta restricción fue impulsada principalmente por limitaciones técnicas. Y desde que Quarkus es una pila orientada al tiempo de construcción que permite transformaciones adicionales de las clases, esas limitaciones ya no se aplican. Es posible anotar un método estático no privado con un enlace interceptor:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:707
#, no-wrap
msgid "class Services {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:715
#, no-wrap
msgid ""
"  @Logged <1>\n"
"  static BigDecimal computePrice(long amount) { <2>\n"
"    BigDecimal price;\n"
"    // Perform computations...\n"
"    return price;\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:717
#, fuzzy
msgid "`Logged` is an interceptor binding."
msgstr "`Logged` es un enlace interceptor."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:718
#, fuzzy
msgid "Each method invocation is intercepted if there is an interceptor associated with `Logged`."
msgstr "Cada invocación de un método se intercepta si hay un interceptor asociado a `Logged`."

#. type: Title ====
#: upstream/_guides/cdi-reference.adoc:719
#, fuzzy, no-wrap
msgid "Limitations"
msgstr "Limitaciones"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:722
#, fuzzy
msgid "Only *method-level bindings* are considered for backward compatibility reasons (otherwise static methods of bean classes that declare class-level bindings would be suddenly intercepted)"
msgstr "Sólo se tienen en cuenta los enlaces a nivel de *método* por razones de compatibilidad con versiones anteriores (de lo contrario, los métodos estáticos de las clases de frijoles que declaran enlaces a nivel de clase serían interceptados de repente)"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:723
#, fuzzy
msgid "Private static methods are never intercepted"
msgstr "Los métodos estáticos privados nunca son interceptados"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:724
#, fuzzy
msgid "`InvocationContext#getTarget()` returns `null` for obvious reasons; therefore not all existing interceptors may behave correctly when intercepting static methods"
msgstr "`InvocationContext#getTarget()` devuelve `null` por razones obvias; por lo tanto, no todos los interceptores existentes pueden comportarse correctamente al interceptar métodos estáticos"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:726
#, fuzzy
msgid "Interceptors can use `InvocationContext.getMethod()` to detect static methods and adjust the behavior accordingly."
msgstr "Los interceptores pueden utilizar `InvocationContext.getMethod()` para detectar métodos estáticos y ajustar el comportamiento en consecuencia."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:728
#, fuzzy, no-wrap
msgid "Ability to handle 'final' classes and methods"
msgstr "Capacidad para manejar clases y métodos \"finales\"."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:733
#, fuzzy
msgid "In normal CDI, classes that are marked as `final` and / or have `final` methods are not eligible for proxy creation, which in turn means that interceptors and normal scoped beans don't work properly.  This situation is very common when trying to use CDI with alternative JVM languages like Kotlin where classes and methods are `final` by default."
msgstr "En CDI normal, las clases que están marcadas como `final` y/o tienen métodos `final` no son elegibles para la creación de proxies, lo que a su vez significa que los interceptores y los beans de alcance normal no funcionan correctamente. Esta situación es muy común cuando se intenta utilizar CDI con lenguajes JVM alternativos como Kotlin, donde las clases y los métodos son `final` por defecto."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:735
#, fuzzy
msgid "Quarkus however, can overcome these limitations when `quarkus.arc.transform-unproxyable-classes` is set to `true` (which is the default value)."
msgstr "Sin embargo, Quarkus puede superar estas limitaciones cuando `quarkus.arc.transform-unproxyable-classes` se establece en `true` (que es el valor por defecto)."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:736
#, fuzzy, no-wrap
msgid "Container-managed Concurrency"
msgstr "Concurrencia gestionada por contenedores"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:744
#, fuzzy
msgid "There is no standard concurrency control mechanism for CDI beans.  Nevertheless, a bean instance can be shared and accessed concurrently from multiple threads.  In that case it should be thread-safe.  You can use standard Java constructs (`volatile`, `synchronized`, `ReadWriteLock`, etc.) or let the container control the concurrent access.  Quarkus provides `@io.quarkus.arc.Lock` and a built-in interceptor for this interceptor binding.  Each interceptor instance associated with a contextual instance of an intercepted bean holds a separate `ReadWriteLock` with non-fair ordering policy."
msgstr "No existe un mecanismo de control de concurrencia estándar para los beans CDI. Sin embargo, una instancia de un bean puede ser compartida y accedida concurrentemente desde múltiples hilos. En ese caso debería ser seguro para los hilos. Se pueden utilizar construcciones estándar de Java ( `volatile`, `synchronized`, `ReadWriteLock`, etc.) o dejar que el contenedor controle el acceso concurrente. Quarkus proporciona `@io.quarkus.arc.Lock` y un interceptor incorporado para esta unión de interceptores. Cada instancia de interceptor asociada a una instancia contextual de un frijol interceptado contiene un `ReadWriteLock` separado con una política de ordenación no justa."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:746
#, fuzzy
msgid "`io.quarkus.arc.Lock` is a regular interceptor binding and as such can be used for any bean with any scope. However, it is especially useful for \"shared\" scopes, e.g. `@Singleton` and `@ApplicationScoped`."
msgstr "`io.quarkus.arc.Lock` es un enlace interceptor normal y, como tal, puede utilizarse para cualquier frijol con cualquier ámbito. Sin embargo, es especialmente útil para ámbitos \"compartidos\", por ejemplo, `@Singleton` y `@ApplicationScoped`."

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:747
#, fuzzy, no-wrap
msgid "Container-managed Concurrency Example"
msgstr "Ejemplo de concurrencia gestionada por contenedores"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:751
#, no-wrap
msgid "import io.quarkus.arc.Lock;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:755
#, no-wrap
msgid ""
"@Lock <1>\n"
"@ApplicationScoped\n"
"class SharedService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:759
#, no-wrap
msgid ""
"  void addAmount(BigDecimal amount) {\n"
"    // ...changes some internal state of the bean\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:765
#, no-wrap
msgid ""
"  @Lock(value = Lock.Type.READ, time = 1, unit = TimeUnit.SECONDS) <2> <3>\n"
"  BigDecimal getAmount() {\n"
"    // ...it is safe to read the value concurrently\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:767
#, fuzzy
msgid "`@Lock` (which maps to `@Lock(Lock.Type.WRITE)`) declared on the class instructs the container to lock the bean instance for any invocation of any business method, i.e. the client has \"exclusive access\" and no concurrent invocations will be allowed."
msgstr "`@Lock` (que se asigna a `@Lock(Lock.Type.WRITE)`) declarada en la clase indica al contenedor que bloquee la instancia del frijol para cualquier invocación de cualquier método de negocio, es decir, el cliente tiene \"acceso exclusivo\" y no se permitirán invocaciones concurrentes."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:768
#, fuzzy
msgid "`@Lock(Lock.Type.READ)` overrides the value specified at class level. It means that any number of clients can invoke the method concurrently, unless the bean instance is locked by `@Lock(Lock.Type.WRITE)`."
msgstr "`@Lock(Lock.Type.READ)` anula el valor especificado a nivel de clase. Significa que cualquier número de clientes puede invocar el método de forma concurrente, a menos que la instancia del bean esté bloqueada por `@Lock(Lock.Type.WRITE)`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:769
#, fuzzy
msgid "You can also specify the \"wait time\". If it's not possible to acquire the lock in the given time a `LockException` is thrown."
msgstr "También se puede especificar el \"tiempo de espera\". Si no es posible adquirir el bloqueo en el tiempo dado se lanza un `LockException`."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:770
#, fuzzy, no-wrap
msgid "Repeatable interceptor bindings"
msgstr "Enlaces interceptores repetibles"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:773
#, fuzzy
msgid "Quarkus has limited support for `@Repeatable` interceptor binding annotations."
msgstr "Quarkus tiene un soporte limitado para las anotaciones de enlace del interceptor `@Repeatable`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:777
#, fuzzy
msgid "When binding an interceptor to a component, you can declare multiple `@Repeatable` annotations on methods.  Repeatable interceptor bindings declared on classes and stereotypes are not supported, because there are some open questions around interactions with the Interceptors specification.  This might be added in the future."
msgstr "Cuando se vincula un interceptor a un componente, se pueden declarar múltiples anotaciones `@Repeatable` en los métodos. Las anotaciones repetidas de interceptores declaradas en clases y estereotipos no están soportadas, porque hay algunas cuestiones abiertas en torno a las interacciones con la especificación de los interceptores. Esto podría añadirse en el futuro."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:781
#, fuzzy
msgid "As an example, suppose we have an interceptor that clears a cache.  The corresponding interceptor binding would be called `@CacheInvalidateAll` and would be declared as `@Repeatable`.  If we wanted to clear two caches at the same time, we would add `@CacheInvalidateAll` twice:"
msgstr "Como ejemplo, supongamos que tenemos un interceptor que borra una caché. El correspondiente enlace del interceptor se llamaría `@CacheInvalidateAll` y se declararía como `@Repeatable`. Si quisiéramos limpiar dos cachés al mismo tiempo, añadiríamos `@CacheInvalidateAll` dos veces:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:795
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class CachingService {\n"
"  @CacheInvalidateAll(cacheName = \"foo\")\n"
"  @CacheInvalidateAll(cacheName = \"bar\")\n"
"  void heavyComputation() {\n"
"    // ...\n"
"    // some computation that updates a lot of data\n"
"    // and requires 2 caches to be invalidated\n"
"    // ...\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:799
#, fuzzy
msgid "This is how interceptors are used.  What about creating an interceptor?"
msgstr "Así es como se utilizan los interceptores. ¿Qué pasa con la creación de un interceptor?"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:802
#, fuzzy
msgid "When declaring interceptor bindings of an interceptor, you can add multiple `@Repeatable` annotations to the interceptor class as usual.  This is useless when the annotation members are `@Nonbinding`, as would be the case for the `@Cached` annotation, but is important otherwise."
msgstr "Cuando se declaran los enlaces de un interceptor, se pueden añadir múltiples anotaciones `@Repeatable` a la clase del interceptor como es habitual. Esto es inútil cuando los miembros de la anotación son `@Nonbinding`, como sería el caso de la anotación `@Cached`, pero es importante en caso contrario."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:806
#, fuzzy
msgid "For example, suppose we have an interceptor that can automatically log method invocations to certain targets.  The interceptor binding annotation `@Logged` would have a member called `target`, which specifies where to store the log.  Our implementation could be restricted to console logging and file logging:"
msgstr "Por ejemplo, supongamos que tenemos un interceptor que puede registrar automáticamente las invocaciones de métodos a ciertos objetivos. La anotación de enlace del interceptor `@Logged` tendría un miembro llamado `target`, que especifica dónde almacenar el registro. Nuestra implementación podría limitarse al registro en la consola y al registro en archivos:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:815
#, no-wrap
msgid ""
"@Interceptor\n"
"@Logged(target = \"console\")\n"
"@Logged(target = \"file\")\n"
"class NaiveLoggingInterceptor {\n"
"  // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:818
#, fuzzy
msgid "Other interceptors could be provided to log method invocations to different targets."
msgstr "Se podrían proporcionar otros interceptores para registrar las invocaciones de métodos a diferentes objetivos."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:819
#, fuzzy, no-wrap
msgid "Caching the Result of Programmatic Lookup"
msgstr "Almacenamiento en caché del resultado de la búsqueda programática"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:829
#, fuzzy
msgid "In certain situations, it is practical to obtain a bean instance programmatically via an injected `jakarta.enterprise.inject.Instance` and `Instance.get()`.  However, according to the specification the `get()` method must identify the matching bean and obtain a contextual reference.  As a consequence, a new instance of a `@Dependent` bean is returned from each invocation of `get()`.  Moreover, this instance is a dependent object of the injected `Instance`.  This behavior is well-defined, but it may lead to unexpected errors and memory leaks.  Therefore, Quarkus comes with the `io.quarkus.arc.WithCaching` annotation.  An injected `Instance` annotated with this annotation will cache the result of the `Instance#get()` operation.  The result is computed on the first call and the same value is returned for all subsequent calls, even for `@Dependent` beans."
msgstr "En determinadas situaciones, resulta práctico obtener una instancia de bean de forma programática a través de un `javax.enterprise.inject.Instance` y `Instance.get()` inyectados. Sin embargo, según la especificación, el método `get()` debe identificar el bean correspondiente y obtener una referencia contextual. Como consecuencia, se devuelve una nueva instancia de un bean `@Dependent` en cada invocación de `get()`. Además, esta instancia es un objeto dependiente del inyectado `Instance`. Este comportamiento está bien definido, pero puede dar lugar a errores inesperados y fugas de memoria. Por lo tanto, Quarkus viene con la anotación `io.quarkus.arc.WithCaching`. Un `Instance` inyectado anotado con esta anotación almacenará en caché el resultado de la operación `Instance#get()`. El resultado se calcula en la primera llamada y se devuelve el mismo valor para todas las llamadas posteriores, incluso para los frijoles `@Dependent`."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:833
#, no-wrap
msgid "class Producer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:836
#, no-wrap
msgid ""
"  AtomicLong nextLong = new AtomicLong();\n"
"  AtomicInteger nextInt = new AtomicInteger();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:842
#, no-wrap
msgid ""
"   @Dependent\n"
"   @Produces\n"
"   Integer produceInt() {\n"
"     return nextInt.incrementAndGet();\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:849
#, no-wrap
msgid ""
"   @Dependent\n"
"   @Produces\n"
"   Long produceLong() {\n"
"     return nextLong.incrementAndGet();\n"
"   }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:851
#, no-wrap
msgid "class Consumer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:854
#, no-wrap
msgid ""
"  @Inject\n"
"  Instance<Long> longInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:858
#, no-wrap
msgid ""
"  @Inject\n"
"  @WithCaching\n"
"  Instance<Integer> intInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:864
#, no-wrap
msgid ""
"  // this method should always return true\n"
"  // Producer#produceInt() is only called once\n"
"  boolean pingInt() {\n"
"    return intInstance.get().equals(intInstance.get());\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:871
#, no-wrap
msgid ""
"  // this method should always return false\n"
"  // Producer#produceLong() is called twice per each pingLong() invocation\n"
"  boolean pingLong() {\n"
"    return longInstance.get().equals(longInstance.get());\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:874
#, fuzzy
msgid "It is also possible to clear the cached value via `io.quarkus.arc.InjectableInstance.clearCache()`. In this case, you'll need to inject the Quarkus-specific `io.quarkus.arc.InjectableInstance` instead of `jakarta.enterprise.inject.Instance`."
msgstr "También es posible borrar el valor de la caché a través de `io.quarkus.arc.InjectableInstance.clearCache()`. En este caso, tendrá que inyectar el `io.quarkus.arc.InjectableInstance` específico de Quarkus en lugar de `javax.enterprise.inject.Instance`."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:875
#, fuzzy, no-wrap
msgid "Declaratively Choose Beans That Can Be Obtained by Programmatic Lookup"
msgstr "Elija de forma declarativa los frijoles que pueden obtenerse mediante la búsqueda programática"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:879
#, fuzzy
msgid "It is sometimes useful to narrow down the set of beans that can be obtained by programmatic lookup via `jakarta.enterprise.inject.Instance`.  Typically, a user needs to choose the appropriate implementation of an interface based on a runtime configuration property."
msgstr "A veces resulta útil limitar el conjunto de beans que pueden obtenerse mediante la búsqueda programática a través de `javax.enterprise.inject.Instance`. Normalmente, un usuario necesita elegir la implementación adecuada de una interfaz basándose en una propiedad de configuración en tiempo de ejecución."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:886
#, fuzzy
msgid "Imagine that we have two beans implementing the interface `org.acme.Service`.  You can't inject the `org.acme.Service` directly unless your implementations declare a CDI qualifier.  However, you can inject the `Instance<Service>` instead, then iterate over all implementations and choose the correct one manually.  Alternatively, you can use the `@LookupIfProperty` and `@LookupUnlessProperty` annotations.  `@LookupIfProperty` indicates that a bean should only be obtained if a runtime configuration property matches the provided value.  `@LookupUnlessProperty`, on the other hand, indicates that a bean should only be obtained if a runtime configuration property does not match the provided value."
msgstr "Imagina que tenemos dos beans que implementan la interfaz `org.acme.Service`. No puedes inyectar el `org.acme.Service` directamente a menos que tus implementaciones declaren un calificador CDI. Sin embargo, puedes inyectar el `Instance&amp;lt;Service&amp;gt;` en su lugar, y luego iterar sobre todas las implementaciones y elegir la correcta manualmente. Como alternativa, puedes utilizar las anotaciones `@LookupIfProperty` y `@LookupUnlessProperty`. `@LookupIfProperty` indica que un bean sólo debe obtenerse si una propiedad de configuración en tiempo de ejecución coincide con el valor proporcionado. `@LookupUnlessProperty` Por otro lado, indica que un bean sólo debe obtenerse si una propiedad de configuración en tiempo de ejecución no coincide con el valor proporcionado."

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:887
#, fuzzy, no-wrap
msgid "`@LookupIfProperty` Example"
msgstr "`@LookupIfProperty` Ejemplo"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:893
#, no-wrap
msgid ""
" interface Service {\n"
"    String name();\n"
" }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:897
#, no-wrap
msgid ""
" @LookupIfProperty(name = \"service.foo.enabled\", stringValue = \"true\")\n"
" @ApplicationScoped\n"
" class ServiceFoo implements Service {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:902
#, no-wrap
msgid ""
"    public String name() {\n"
"       return \"foo\";\n"
"    }\n"
" }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:905
#, no-wrap
msgid ""
" @ApplicationScoped\n"
" class ServiceBar implements Service {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:910
#, no-wrap
msgid ""
"    public String name() {\n"
"       return \"bar\";\n"
"    }\n"
" }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:913
#, no-wrap
msgid ""
" @ApplicationScoped\n"
" class Client {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:916
#, no-wrap
msgid ""
"    @Inject\n"
"    Instance<Service> service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:923
#, no-wrap
msgid ""
"    void printServiceName() {\n"
"       // This will print \"bar\" if the property \"service.foo.enabled\" is NOT set to \"true\"\n"
"       // If \"service.foo.enabled\" is set to \"true\" then service.get() would result in an AmbiguousResolutionException\n"
"       System.out.println(service.get().name());\n"
"    }\n"
" }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:925
#, fuzzy, no-wrap
msgid "Injecting Multiple Bean Instances Intuitively"
msgstr "Inyección de múltiples instancias de frijoles de forma intuitiva"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:931
#, fuzzy
msgid "In CDI, it's possible to inject multiple bean instances (aka contextual references) via the `jakarta.enterprise.inject.Instance` which implements `java.lang.Iterable`.  However, it's not exactly intuitive.  Therefore, a new way was introduced in Quarkus - you can inject a `java.util.List` annotated with the `io.quarkus.arc.All` qualifier.  The type of elements in the list is used as the required type when performing the lookup."
msgstr "En CDI, es posible inyectar múltiples instancias de bean (también conocidas como referencias contextuales) a través de `javax.enterprise.inject.Instance` que implementa `java.lang.Iterable`. Sin embargo, no es exactamente intuitivo. Por lo tanto, en Quarkus se introdujo una nueva forma: se puede inyectar un `java.util.List` anotado con el calificador `io.quarkus.arc.All`. El tipo de los elementos de la lista se utiliza como el tipo requerido al realizar la búsqueda."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:936
#: upstream/_guides/cdi-reference.adoc:956
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class Processor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:941
#, no-wrap
msgid ""
"     @Inject\n"
"     @All\n"
"     List<Service> services; <1> <2>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:943
#, fuzzy
msgid "The injected instance is an _immutable list_ of the contextual references of the _disambiguated_ beans."
msgstr "La instancia inyectada es una _lista inmutable_ de las referencias contextuales de los beans _desambiguados_."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:944
#, fuzzy
msgid "For this injection point the required type is `Service` and no additional qualifiers are declared."
msgstr "Para este punto de inyección el tipo requerido es `Service` y no se declaran calificadores adicionales."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:946
#, fuzzy
msgid "The list is sorted by priority as defined by `io.quarkus.arc.InjectableBean#getPriority()`. Higher priority goes first. In general, the `@jakarta.annotation.Priority` annotation can be used to assign the priority to a class bean, producer method or producer field."
msgstr "Por defecto, la lista de beans se ordena por prioridad, tal y como se define en `io.quarkus.arc.InjectableBean#getPriority()`. La prioridad más alta va primero. En general, las anotaciones `@javax.annotation.Priority` y `@io.quarkus.arc.Priority` pueden utilizarse para asignar la prioridad a un bean de clase, método productor o campo productor."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:948
#, fuzzy
msgid "If an injection point declares no other qualifier than `@All` then `@Any` is used, i.e. the behavior is equivalent to `@Inject @Any Instance<Service>`."
msgstr "Si un punto de inyección no declara ningún otro calificador que `@All` entonces se utiliza `@Any`, es decir, el comportamiento es equivalente a `@Inject @Any Instance&amp;lt;Service&amp;gt;`."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:951
#, fuzzy
msgid "You can also inject a list of bean instances wrapped in `io.quarkus.arc.InstanceHandle`.  This can be useful if you need to inspect the related bean metadata."
msgstr "También puedes inyectar una lista de instancias de bean envueltas en `io.quarkus.arc.InstanceHandle`. Esto puede ser útil si necesitas inspeccionar los metadatos del bean relacionado."

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:960
#, no-wrap
msgid ""
"     @Inject\n"
"     @All\n"
"     List<InstanceHandle<Service>> services;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:970
#, no-wrap
msgid ""
"     public void doSomething() {\n"
"       for (InstanceHandle<Service> handle : services) {\n"
"         if (handle.getBean().getScope().equals(Dependent.class)) {\n"
"           handle.get().process();\n"
"           break;\n"
"         }\n"
"       }\n"
"     }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:973
#, fuzzy
msgid "Neither a type variable nor a wildcard is a legal type parameter for an `@All List<>` injection point, i.e. `@Inject @All List<?> all` is not supported and results in a deployment error."
msgstr "Ni una variable de tipo ni un comodín es un parámetro de tipo legal para un punto de inyección `@All List&amp;lt;&amp;gt;`, es decir, `@Inject @All List&amp;lt;?&amp;gt; all` no es compatible y da lugar a un error de implementación."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:975
#, fuzzy
msgid "It is also possible to obtain the list of all bean instance handles programmatically via the `Arc.container().listAll()` methods."
msgstr "También es posible obtener la lista de todos los manejadores de las instancias de los frijoles mediante los métodos `Arc.container().listAll()`."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:976
#, fuzzy, no-wrap
msgid "Ignoring Class-Level Interceptor Bindings for Methods and Constructors"
msgstr "Ignorar los enlaces del interceptor de nivel de clase para los métodos y constructores"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:980
#, fuzzy
msgid "If a managed bean declares interceptor binding annotations on the class level, the corresponding `@AroundInvoke` interceptors will apply to all business methods.  Similarly, the corresponding `@AroundConstruct` interceptors will apply to the bean constructor."
msgstr "Si un bean gestionado declara anotaciones de enlace de interceptor a nivel de clase, los interceptores correspondientes de `@AroundInvoke` se aplicarán a todos los métodos de negocio. Del mismo modo, los interceptores correspondientes de `@AroundConstruct` se aplicarán al constructor del bean."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:982
#, fuzzy
msgid "For example, suppose we have a logging interceptor with the `@Logged` binding annotation and a tracing interceptor with the `@Traced` binding annotation:"
msgstr "Por ejemplo, supongamos que tenemos un interceptor de registro con la anotación de enlace `@Logged` y un interceptor de seguimiento con la anotación de enlace `@Traced`:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:991
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@Logged\n"
"public class MyService {\n"
"    public void doSomething() {\n"
"        ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:997
#, no-wrap
msgid ""
"    @Traced\n"
"    public void doSomethingElse() {\n"
"        ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1001
#, fuzzy
msgid "In this example, both `doSomething` and `doSomethingElse` will be intercepted by the hypothetical logging interceptor.  Additionally, the `doSomethingElse` method will be intercepted by the hypothetical tracing interceptor."
msgstr "En este ejemplo, tanto `doSomething` como `doSomethingElse` serán interceptados por el hipotético interceptor de registro. Además, el método `doSomethingElse` será interceptado por el hipotético interceptor de rastreo."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1004
#, fuzzy
msgid "Now, if that `@Traced` interceptor also performed all the necessary logging, we'd like to skip the `@Logged` interceptor for this method, but keep it for all other methods.  To achieve that, you can annotate the method with `@NoClassInterceptors`:"
msgstr "Ahora, si ese interceptor `@Traced` también realiza todo el registro necesario, nos gustaría omitir el interceptor `@Logged` para este método, pero mantenerlo para todos los demás métodos. Para conseguirlo, puedes anotar el método con `@NoClassInterceptors`:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:1012
#, no-wrap
msgid ""
"@Traced\n"
"@NoClassInterceptors\n"
"public void doSomethingElse() {\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1016
#, fuzzy
msgid "The `@NoClassInterceptors` annotation may be put on methods and constructors and means that all class-level interceptors are ignored for these methods and constructors.  In other words, if a method/constructor is annotated `@NoClassInterceptors`, then the only interceptors that will apply to this method/constructor are interceptors declared directly on the method/constructor."
msgstr "La anotación `@NoClassInterceptors` puede ponerse en métodos y constructores y significa que todos los interceptores a nivel de clase se ignoran para estos métodos y constructores. En otras palabras, si un método/constructor está anotado `@NoClassInterceptors`, entonces los únicos interceptores que se aplicarán a este método/constructor son los interceptores declarados directamente en el método/constructor."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1018
#, fuzzy
msgid "This annotation affects only business method interceptors (`@AroundInvoke`) and constructor lifecycle callback interceptors (`@AroundConstruct`)."
msgstr "Esta anotación sólo afecta a los interceptores de métodos de negocio ( `@AroundInvoke`) y a los interceptores de llamadas de retorno del ciclo de vida del constructor ( `@AroundConstruct`)."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:1019
#, fuzzy, no-wrap
msgid "Exceptions Thrown By An Asynchronous Observer Method"
msgstr "Excepciones lanzadas por un método observador asíncrono"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1026
#, fuzzy
msgid "If an exception is thrown by an asynchronous observer then the `CompletionStage` returned by the `fireAsync()` method completes exceptionally so that the event producer may react appropriately.  However, if the event producer does not care then the exception is ignored silently.  Therefore, Quarkus logs an error message by default.  It is also possible to implement a custom `AsyncObserverExceptionHandler`.  A bean that implements this interface should be `@jakarta.inject.Singleton` or `@jakarta.enterprise.context.ApplicationScoped`."
msgstr "Si un observador asíncrono lanza una excepción, entonces el `CompletionStage` devuelto por el método `fireAsync()` se completa excepcionalmente para que el productor de eventos pueda reaccionar adecuadamente. Sin embargo, si el productor de eventos no se preocupa entonces la excepción es ignorada silenciosamente. Por lo tanto, Quarkus registra un mensaje de error por defecto. También es posible implementar un `AsyncObserverExceptionHandler` personalizado. Un bean que implemente esta interfaz debe ser `@javax.inject.Singleton` o `@javax.enterprise.context.ApplicationScoped`."

#. type: Block title
#: upstream/_guides/cdi-reference.adoc:1027
#, fuzzy, no-wrap
msgid "`NoopAsyncObserverExceptionHandler`"
msgstr "`NoopAsyncObserverExceptionHandler`"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:1032
#, no-wrap
msgid ""
"@Singleton\n"
"public class NoopAsyncObserverExceptionHandler implements AsyncObserverExceptionHandler {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:1036
#, no-wrap
msgid ""
"  void handle(Throwable throwable, ObserverMethod<?> observerMethod, EventContext<?> eventContext) {\n"
"    // do nothing\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:1038
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:1041
#, fuzzy, no-wrap
msgid "Build Time Extensions"
msgstr "Ampliaciones del tiempo de construcción"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1047
#, fuzzy
msgid "Quarkus incorporates build-time optimizations in order to provide instant startup and low memory footprint.  The downside of this approach is that CDI Portable Extensions cannot be supported.  Nevertheless, most of the functionality can be achieved using Quarkus xref:writing-extensions.adoc[extensions].  See the xref:cdi-integration.adoc[integration guide] for more information."
msgstr "Quarkus incorpora optimizaciones en el tiempo de compilación para proporcionar un inicio instantáneo y una baja huella de memoria. La desventaja de este enfoque es que las extensiones portátiles CDI no pueden ser soportadas. Sin embargo, la mayor parte de la funcionalidad puede lograrse utilizando  link:writing-extensions.html[las extensiones] de Quarkus. Consulte la  link:cdi-integration.html[guía de integración] para obtener más información."

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:1048
#, fuzzy, no-wrap
msgid "Development Mode"
msgstr "Modo de desarrollo"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1051
#, fuzzy
msgid "In the development mode, two special endpoints are registered automatically to provide some basic debug info in the JSON format:"
msgstr "En el modo de desarrollo, se registran automáticamente dos puntos finales especiales para proporcionar información básica de depuración en formato JSON:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1053
#, fuzzy
msgid "HTTP GET `/q/arc` - returns the summary; number of beans, config properties, etc."
msgstr "HTTP GET `/q/arc` - devuelve el resumen; número de beans, propiedades de configuración, etc."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1054
#, fuzzy
msgid "HTTP GET `/q/arc/beans` - returns the list of all beans"
msgstr "HTTP GET `/q/arc/beans` - devuelve la lista de todos los frijoles"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1055
#, fuzzy
msgid "You can use query params to filter the output:"
msgstr "Puede utilizar parámetros de consulta para filtrar la salida:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1056
#, fuzzy
msgid "`scope` - include beans with scope that ends with the given value, i.e. `http://localhost:8080/q/arc/beans?scope=ApplicationScoped`"
msgstr "`scope` - incluyen alubias con un ámbito que termina con el valor dado, es decir `&lt;a href=\"http://localhost:8080/q/arc/beans?scope=ApplicationScoped\" class=\"bare\"&gt;http://localhost:8080/q/arc/beans?scope=ApplicationScoped&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1057
#, fuzzy
msgid "`beanClass` - include beans with bean class that starts with the given value, i.e. `http://localhost:8080/q/arc/beans?beanClass=org.acme.Foo`"
msgstr "`beanClass` - incluir frijoles con la clase de frijol que comienza con el valor dado, es decir `&lt;a href=\"http://localhost:8080/q/arc/beans?beanClass=org.acme.Foo\" class=\"bare\"&gt;http://localhost:8080/q/arc/beans?beanClass=org.acme.Foo&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1058
#, fuzzy
msgid "`kind` - include beans of the specified kind (`CLASS`, `PRODUCER_FIELD`, `PRODUCER_METHOD`, `INTERCEPTOR` or `SYNTHETIC`), i.e. `http://localhost:8080/q/arc/beans?kind=PRODUCER_METHOD`"
msgstr "`kind` - incluir frijoles del tipo especificado ( `CLASS`, `PRODUCER_FIELD`, `PRODUCER_METHOD`, `INTERCEPTOR` o `SYNTHETIC`), es decir `&lt;a href=\"http://localhost:8080/q/arc/beans?kind=PRODUCER_METHOD\" class=\"bare\"&gt;http://localhost:8080/q/arc/beans?kind=PRODUCER_METHOD&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1059
#, fuzzy
msgid "HTTP GET `/q/arc/removed-beans` - returns the list of unused beans removed during build"
msgstr "HTTP GET `/q/arc/removed-beans` - devuelve la lista de beans no utilizados eliminados durante la construcción"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1060
#, fuzzy
msgid "HTTP GET `/q/arc/observers` - returns the list of all observer methods"
msgstr "HTTP GET `/q/arc/observers` - devuelve la lista de todos los métodos de observación"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1062
#, fuzzy
msgid "These endpoints are only available in the development mode, i.e. when you run your application via `mvn quarkus:dev` (or `./gradlew quarkusDev`)."
msgstr "Estos puntos finales sólo están disponibles en el modo de desarrollo, es decir, cuando se ejecuta la aplicación a través de `mvn quarkus:dev` (o `./gradlew quarkusDev`)."

#. type: Title ===
#: upstream/_guides/cdi-reference.adoc:1063
#, fuzzy, no-wrap
msgid "Monitoring Business Method Invocations and Events"
msgstr "Supervisión de invocaciones y eventos de métodos comerciales"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1067
#, fuzzy
msgid "In the development mode, it is also possible to enable monitoring of business method invocations and fired events.  Simply set the `quarkus.arc.dev-mode.monitoring-enabled` configuration property to `true` and explore the relevant Dev UI pages."
msgstr "En el modo de desarrollo, también es posible habilitar la monitorización de las invocaciones de los métodos de negocio y los eventos disparados. Basta con establecer la propiedad de configuración `quarkus.arc.dev-mode.monitoring-enabled` en `true` y explorar las páginas pertinentes de Dev UI."

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:1069
#, fuzzy, no-wrap
msgid "Strict Mode"
msgstr "Modo estricto"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1073
#, fuzzy
msgid "By default, ArC does not perform all validations required by the CDI specification.  It also improves CDI usability in many ways, some of them being directly against the specification."
msgstr "Por defecto, ArC no realiza todas las validaciones requeridas por la especificación CDI. También mejora la usabilidad de CDI de muchas maneras, algunas de ellas directamente en contra de la especificación."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1076
#, fuzzy
msgid "To pass the CDI Lite TCK, ArC also has a _strict_ mode.  This mode enables additional validations and disables certain improvements that conflict with the specification."
msgstr "Para poder pasar eventualmente el TCK de CDI Lite, ArC también dispone de un modo _estricto_. Este modo habilita validaciones adicionales y desactiva ciertas mejoras que entran en conflicto con la especificación."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1078
#, fuzzy
msgid "To enable the strict mode, use the following configuration:"
msgstr "Para activar el modo estricto, utilice la siguiente configuración:"

#. type: delimited block -
#: upstream/_guides/cdi-reference.adoc:1082
#, no-wrap
msgid "quarkus.arc.strict-compatibility=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1085
#, fuzzy
msgid "Some other features affect specification compatibility as well:"
msgstr "Otras características también afectan a la compatibilidad de las especificaciones:"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1087
#, fuzzy
msgid "xref:unproxyable_classes_transformation[Transformation of unproxyable classes]"
msgstr "link:#unproxyable_classes_transformation[Transformación de clases no delegables]"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1088
#, fuzzy
msgid "xref:remove_unused_beans[Unused beans removal]"
msgstr "link:#remove_unused_beans[Eliminación de judías no utilizadas]"

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1090
#, fuzzy
msgid "To get a behavior closer to the specification, these features should be disabled."
msgstr "Para obtener un comportamiento más cercano a la especificación, estas funciones también deben desactivarse."

#. type: Plain text
#: upstream/_guides/cdi-reference.adoc:1093
#, fuzzy
msgid "Applications are recommended to use the default, non-strict mode, which makes CDI more convenient to use.  The \"strictness\" of the strict mode (the set of additional validations and the set of disabled improvements on top of the CDI specification) may change over time."
msgstr "Se recomienda a las aplicaciones que utilicen el modo por defecto, no estricto, que hace que el uso de CDI sea más cómodo. El \"rigor\" del modo estricto (el conjunto de validaciones adicionales y el conjunto de mejoras desactivadas sobre la especificación CDI) puede cambiar con el tiempo."

#. type: Title ==
#: upstream/_guides/cdi-reference.adoc:1095
#, fuzzy, no-wrap
msgid "ArC Configuration Reference"
msgstr "Referencia de la configuración de ArC"

#, fuzzy
#~ msgid "Supported Features"
#~ msgstr "Características soportadas"

#, fuzzy
#~ msgid "Programming model"
#~ msgstr "Modelo de programación"

#, fuzzy
#~ msgid "Managed beans implemented by a Java class"
#~ msgstr "Frijoles gestionados implementados por una clase Java"

#, fuzzy
#~ msgid "`@PostConstruct` and `@PreDestroy` lifecycle callbacks"
#~ msgstr "`@PostConstruct` y `@PreDestroy` llamadas de retorno del ciclo de vida"

#, fuzzy
#~ msgid "Producer methods and fields, disposers"
#~ msgstr "Métodos y campos de producción, trituradoras"

#, fuzzy
#~ msgid "Qualifiers"
#~ msgstr "Calificadores"

#, fuzzy
#~ msgid "Alternatives"
#~ msgstr "Alternativas"

#, fuzzy
#~ msgid "Stereotypes"
#~ msgstr "Estereotipos"

#, fuzzy
#~ msgid "Dependency injection and lookup"
#~ msgstr "Inyección de dependencia y búsqueda"

#, fuzzy
#~ msgid "Field, constructor and initializer/setter injection"
#~ msgstr "Inyección de campos, constructores e inicializadores/setters"

#, fuzzy
#~ msgid "Type-safe resolution"
#~ msgstr "Resolución de tipo seguro"

#, fuzzy
#~ msgid "Programmatic lookup via `jakarta.enterprise.inject.Instance`"
#~ msgstr "Búsqueda programática a través de `javax.enterprise.inject.Instance`"

#, fuzzy
#~ msgid "Client proxies"
#~ msgstr "Proxies de clientes"

#, fuzzy
#~ msgid "Injection point metadata"
#~ msgstr "Metadatos del punto de inyección"

#, fuzzy
#~ msgid "Interceptors"
#~ msgstr "Interceptores"

#, fuzzy
#~ msgid "Business method interceptors: `@AroundInvoke`"
#~ msgstr "Interceptores de métodos comerciales: `@AroundInvoke`"

#, fuzzy
#~ msgid "Interceptors for lifecycle event callbacks: `@PostConstruct`, `@PreDestroy`, `@AroundConstruct`"
#~ msgstr "Interceptores de llamadas de eventos del ciclo de vida: `@PostConstruct`, `@PreDestroy`, `@AroundConstruct`"

#, fuzzy
#~ msgid "Events and observer methods, including asynchronous events and transactional observer methods"
#~ msgstr "Eventos y métodos de observación, incluyendo eventos asíncronos y métodos de observación transaccional"

#, fuzzy
#~ msgid "Build Compatible Extensions"
#~ msgstr "Ampliaciones del tiempo de construcción"

#, fuzzy
#~ msgid "`@ConversationScoped` is not supported"
#~ msgstr "`@ConversationScoped` no se admite"

#, fuzzy
#~ msgid "Portable Extensions are not supported"
#~ msgstr "No se admiten las extensiones portátiles"

#, fuzzy
#~ msgid "Specialization is not supported"
#~ msgstr "No se admite la especialización"

#, fuzzy
#~ msgid "`beans.xml` descriptor content is ignored, except for the `bean-discovery-mode` attribute"
#~ msgstr "`beans.xml` se ignora el contenido del descriptor"

#, fuzzy
#~ msgid "Passivation and passivating scopes are not supported"
#~ msgstr "No se admiten los ámbitos de pasivación y pasivación"

#, fuzzy
#~ msgid "Interceptor methods on superclasses are not implemented yet"
#~ msgstr "Los métodos interceptores en las superclases aún no están implementados"

#, fuzzy
#~ msgid "`@Interceptors` is not supported"
#~ msgstr "`@Interceptors` no se admite"

#, fuzzy
#~ msgid "`BeanManager` - only the following methods are implemented: `getBeans()`, `createCreationalContext()`, `getReference()`, `getInjectableReference()` , `resolve()`, `getContext()`, `fireEvent()`, `getEvent()` and `createInstance()`"
#~ msgstr "`BeanManager` - sólo se implementan los siguientes métodos: `getBeans()`, `createCreationalContext()`, `getReference()`, `getInjectableReference()`, `resolve()`, `getContext()`, `fireEvent()`, `getEvent()` y `createInstance()`"

#, fuzzy
#~ msgid "The disadvantage of `@javax.annotation.Priority` is that it has `@Target({ TYPE, PARAMETER })` and so it cannot be used for producer methods and fields.  This problem should be fixed in Common Annotations 2.1.  Users are encouraged to use `@io.quarkus.arc.Priority` instead, until Quarkus upgrades to this version of `jakarta.annotation-api`."
#~ msgstr "La desventaja de `@javax.annotation.Priority` es que tiene `@Target({ TYPE, PARAMETER })`, por lo que no puede utilizarse para métodos y campos productores. Este problema debería solucionarse en Common Annotations 2.1. Se anima a los usuarios a utilizar `@io.quarkus.arc.Priority` en su lugar, hasta que Quarkus se actualice a esta versión de `jakarta.annotation-api`."

#, fuzzy
#~ msgid "Scopes and contexts"
#~ msgstr "Ámbitos y contextos"

#, fuzzy
#~ msgid "`@Dependent`, `@ApplicationScoped`, `@Singleton`, `@RequestScoped` and `@SessionScoped`"
#~ msgstr "`@Dependent`, `@ApplicationScoped`, `@Singleton`, `@RequestScoped` y `@SessionScoped`"

#, fuzzy
#~ msgid "Custom scopes and contexts"
#~ msgstr "Ámbitos y contextos personalizados"

#, fuzzy
#~ msgid "If you are using gradle, you can apply the following plugin to your `build.gradle`:"
#~ msgstr "Si está usando gradle, puede aplicar el siguiente plugin a su `build.gradle`:"
