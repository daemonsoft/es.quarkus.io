# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 08:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:7
#, fuzzy, no-wrap
msgid "OpenID Connect authorization code flow mechanism for protecting web applications"
msgstr "Mecanismo de flujo de código de autorización de OpenID Connect para proteger las aplicaciones web"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:16
#, fuzzy
msgid "To protect your web applications, you can use the industry-standard OpenID Connect (OIDC) Authorization Code Flow mechanism provided by the Quarkus OIDC extension."
msgstr "Para proteger sus aplicaciones web, puede utilizar el mecanismo estándar de la industria OpenID Connect (OIDC) Authorization Code Flow proporcionado por la extensión OIDC de Quarkus."

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:17
#, fuzzy, no-wrap
msgid "Overview of the OIDC authorization code flow mechanism"
msgstr "Visión general del mecanismo de flujo de código de autorización OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:20
#, fuzzy
msgid "The Quarkus OpenID Connect (OIDC) extension can protect application HTTP endpoints by using the OIDC Authorization Code Flow mechanism supported by OIDC-compliant authorization servers, such as link:https://www.keycloak.org[Keycloak]."
msgstr "La extensión OpenID Connect (OIDC) de Quarkus puede proteger los puntos finales HTTP de la aplicación utilizando el mecanismo de flujo de código de autorización OIDC admitido por los servidores de autorización compatibles con OIDC, como  link:https://www.keycloak.org[Keycloak]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:24
#, fuzzy
msgid "The Authorization Code Flow mechanism authenticates users of your web application by redirecting them to an OIDC provider, such as Keycloak, to log in.  After authentication, the OIDC provider redirects the user back to the application with an authorization code that confirms that authentication was successful.  Then, the application exchanges this code with the OIDC provider for an ID token (which represents the authenticated user), an access token, and a refresh token to authorize the user's access to the application."
msgstr "El mecanismo de flujo de código de autorización autentica a los usuarios de su aplicación web redirigiéndolos a un proveedor de OIDC, como Keycloak, para que inicien sesión. Tras la autenticación, el proveedor de OIDC redirige al usuario de vuelta a la aplicación con un código de autorización que confirma que la autenticación se ha realizado correctamente. A continuación, la aplicación intercambia este código con el proveedor de OIDC por un token de identificación (que representa al usuario autenticado), un token de acceso y un token de actualización para autorizar el acceso del usuario a la aplicación."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:26
#, fuzzy
msgid "The following diagram outlines the Authorization Code Flow mechanism in Quarkus."
msgstr "El siguiente diagrama describe el mecanismo de flujo de código de autorización en Quarkus."

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:27
#, fuzzy, no-wrap
msgid "Authorization code flow mechanism in Quarkus"
msgstr "Mecanismo de flujo de código de autorización en Quarkus"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:28
#, fuzzy, no-wrap
msgid "Authorization"
msgstr "Autorización"

#. type: Target for macro image
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:28
#, no-wrap
msgid "authorization_code_flow.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:30
#, fuzzy
msgid "The Quarkus user requests access to a Quarkus web-app application."
msgstr "El usuario de Quarkus solicita acceso a una aplicación web-app de Quarkus."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:31
#, fuzzy
msgid "The Quarkus web-app redirects the user to the authorization endpoint, that is, the OIDC provider for authentication."
msgstr "La aplicación web de Quarkus redirige al usuario al punto final de autorización, es decir, al proveedor de OIDC para la autenticación."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:32
#, fuzzy
msgid "The OIDC provider redirects the user to a login and authentication prompt."
msgstr "El proveedor de OIDC redirige al usuario a una pantalla de inicio de sesión y autenticación."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:33
#, fuzzy
msgid "At the prompt, the user enters their user credentials."
msgstr "Cuando se le pregunte, el usuario introducirá sus credenciales de usuario."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:34
#, fuzzy
msgid "The OIDC provider authenticates the user credentials entered and, if successful, issues an authorization code then redirects the user back to the Quarkus web-app with the code included as a query parameter."
msgstr "El proveedor de OIDC autentica las credenciales de usuario introducidas y, si tiene éxito, emite un código de autorización y luego redirige al usuario de vuelta a la aplicación web de Quarkus con el código incluido como parámetro de consulta."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:35
#, fuzzy
msgid "The Quarkus web-app exchanges this authorization code with the OIDC provider for ID, access, and refresh tokens."
msgstr "La aplicación web de Quarkus intercambia este código de autorización con el proveedor de OIDC para obtener tokens de identificación, acceso y actualización."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:38
#, fuzzy
msgid "The authorization code flow is completed and the Quarkus web-app uses the tokens issued to access information about the user and grants the relevant role-based authorization to that user.  The following tokens are issued:"
msgstr "El flujo del código de autorización se completa y la aplicación web de Quarkus utiliza los tokens emitidos para acceder a la información sobre el usuario y concede la autorización pertinente basada en roles a ese usuario. Se emiten los siguientes tokens:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:40
#, fuzzy
msgid "ID token: The Quarkus `web-app` application uses the user information in the ID token to enable the authenticated user to log in securely and to provide role-based access to the web application."
msgstr "Identificador: La aplicación Quarkus `web-app` utiliza la información del usuario en el token de identificación para permitir que el usuario autenticado inicie sesión de forma segura y para proporcionar acceso basado en roles a la aplicación web."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:41
#, fuzzy
msgid "Access token: The Quarkus web-app might use the access token to access the UserInfo API to get additional information about the authenticated user or to propagate it to another endpoint."
msgstr "Token de acceso: La aplicación web de Quarkus podría utilizar el token de acceso para acceder a la API UserInfo y obtener información adicional sobre el usuario autenticado o propagarla a otro punto final."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:42
#, fuzzy
msgid "Refresh token: (Optional) If the ID and access tokens expire, the Quarkus web-app can use the refresh token to get new ID and access tokens."
msgstr "Refresh token: (Opcional) Si el ID y los tokens de acceso caducan, la aplicación web de Quarkus puede utilizar el token de actualización para obtener nuevos ID y tokens de acceso."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:44
#, fuzzy
msgid "See also the xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties] reference guide."
msgstr "Véase también la guía de referencia de  link:security-oidc-configuration-properties-reference.html[las propiedades de configuración de OIDC]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:46
#, fuzzy
msgid "To learn about how you can protect web applications by using the OIDC authorization code flow mechanism, see xref:security-oidc-code-flow-authentication-tutorial.adoc[Protect a web application by using OIDC authorization code flow]"
msgstr "Para saber cómo proteger las aplicaciones web mediante el mecanismo de  link:security-oidc-code-flow-authentication-tutorial.html[flujo de código de autorización de OIDC], consulte  link:security-oidc-code-flow-authentication-tutorial.html[Proteger una aplicación web mediante el flujo de código de autorización de OIDC]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:48
#, fuzzy
msgid "If you want to protect service applications by using OIDC Bearer token authentication, see xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]."
msgstr "Si desea proteger las aplicaciones de servicio mediante la autenticación con token  link:security-oidc-bearer-token-authentication.html[de portador OIDC], consulte  link:security-oidc-bearer-token-authentication.html[Autenticación con token de portador OIDC]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:50
#, fuzzy
msgid "For information about how to support multiple tenants, see xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy]."
msgstr "Para obtener información sobre cómo admitir varios inquilinos, consulte  link:security-openid-connect-multitenancy.html[Uso de OpenID Connect Multi-Tenancy]."

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:51
#, fuzzy, no-wrap
msgid "Using the authorization code flow mechanism"
msgstr "Utilizar el mecanismo de flujo de código de autorización"

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:53
#, fuzzy, no-wrap
msgid "Configuring access to the OIDC provider endpoint"
msgstr "Configuración del acceso al punto final del proveedor OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:56
#, fuzzy
msgid "The OIDC `web-app` application requires URLs of the OIDC provider's authorization, token, `JsonWebKey` (JWK) set, and possibly the `UserInfo`, introspection, and end session (RP-initiated logout) endpoints."
msgstr "La aplicación OIDC `web-app` requiere URLs del conjunto de autorización, token, `JsonWebKey` (JWK) del proveedor OIDC, y posiblemente los puntos finales `UserInfo`, introspección y fin de sesión (cierre de sesión iniciado por el RP)."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:58
#, fuzzy
msgid "By convention, they are discovered by adding a `/.well-known/openid-configuration` path to the configured `quarkus.oidc.auth-server-url`."
msgstr "Por convención, se descubren añadiendo una ruta `/.well-known/openid-configuration` a la configurada `quarkus.oidc.auth-server-url`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:60
#, fuzzy
msgid "Alternatively, if the discovery endpoint is not available, or you prefer to reduce the discovery endpoint round-trip, you can disable endpoint discovery and configure relative path values, for example:"
msgstr "Alternativamente, si el punto final de descubrimiento no está disponible, o si prefiere reducir el viaje de ida y vuelta del punto final de descubrimiento, puede desactivar el descubrimiento del punto final y configurar valores de ruta relativos, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:77
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.discovery-enabled=false\n"
"# Authorization endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/auth\n"
"quarkus.oidc.authorization-path=/protocol/openid-connect/auth\n"
"# Token endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/token\n"
"quarkus.oidc.token-path=/protocol/openid-connect/token\n"
"# JWK set endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/certs\n"
"quarkus.oidc.jwks-path=/protocol/openid-connect/certs\n"
"# UserInfo endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/userinfo\n"
"quarkus.oidc.user-info-path=/protocol/openid-connect/userinfo\n"
"# Token Introspection endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/token/introspect\n"
"quarkus.oidc.introspection-path=/protocol/openid-connect/token/introspect\n"
"# End session endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/logout\n"
"quarkus.oidc.end-session-path=/protocol/openid-connect/logout\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:81
#, fuzzy
msgid "Some OIDC providers support metadata discovery but do not return all the endpoint URL values required for the authorization code flow to complete or to support application functions, for example, user logout.  To work around this limitation, you can configure the missing endpoint URL values locally, as outlined in the following example:"
msgstr "Algunos proveedores de OIDC admiten la detección de metadatos, pero no devuelven todos los valores de URL de punto final necesarios para que se complete el flujo de código de autorización o para admitir funciones de la aplicación, por ejemplo, el cierre de sesión del usuario. Para evitar esta limitación, puede configurar localmente los valores de URL de punto final que faltan, como se indica en el siguiente ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:85
#, no-wrap
msgid "# Metadata is auto-discovered but it does not return an end-session endpoint URL\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:87
#, no-wrap
msgid "quarkus.oidc.auth-server-url=http://localhost:8180/oidcprovider/account\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:90
#, no-wrap
msgid ""
"# Configure the end-session URL locally, it can be an absolute or relative (to 'quarkus.oidc.auth-server-url') address\n"
"quarkus.oidc.end-session-path=logout\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:96
#, fuzzy
msgid "You can use this same configuration to override a discovered endpoint URL if that URL does not work for the local Quarkus endpoint and a more specific value is required.  For example, a provider that supports both global and application-specific end-session endpoints returns a global end-session URL such as `http://localhost:8180/oidcprovider/account/global-logout`.  This URL will log the user out of all of the applications that the user is currently logged into.  However, if the requirement is for the current application to log the user out of only the specific application, you can override the global end-session URL, by setting the `quarkus.oidc.end-session-path=logout` parameter."
msgstr "Se puede utilizar esta misma configuración para anular un URL de extremo descubierto si ese URL no funciona para el extremo local de Quarkus y se requiere un valor más específico. Por ejemplo, un proveedor que admite puntos finales de sesión globales y específicos de la aplicación devuelve un URL de punto final de sesión global como `&lt;a href=\"http://localhost:8180/oidcprovider/account/global-logout\" class=\"bare\"&gt;http://localhost:8180/oidcprovider/account/global-logout&lt;/a&gt;`. Este URL cerrará la sesión del usuario en todas las aplicaciones en las que el usuario haya iniciado sesión. Sin embargo, si el requisito es que la aplicación actual cierre la sesión del usuario sólo en la aplicación específica, puede anular la URL de fin de sesión global configurando el parámetro `quarkus.oidc.end-session-path=logout`."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:98
#, fuzzy, no-wrap
msgid "OIDC provider client authentication"
msgstr "Autenticación del cliente proveedor de OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:102
#, fuzzy
msgid "OIDC providers typically require applications to be identified and authenticated when they interact with the OIDC endpoints.  Quarkus OIDC, specifically the `quarkus.oidc.runtime.OidcProviderClient` class, authenticates to the OIDC provider when the authorization code must be exchanged for the ID, access, and refresh tokens, or when the ID and access tokens need to be refreshed or introspected."
msgstr "Los proveedores de OIDC normalmente requieren que las aplicaciones se identifiquen y autentiquen cuando interactúan con los puntos finales de OIDC. Quarkus OIDC, específicamente la clase `quarkus.oidc.runtime.OidcProviderClient`, autentica al proveedor OIDC cuando el código de autorización debe ser intercambiado por los tokens de identificación, acceso y refresco, o cuando los tokens de identificación y acceso necesitan ser refrescados o introspeccionados."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:105
#, fuzzy
msgid "Typically, client id and client secrets are defined for a given application when it enlists to the OIDC provider.  All the https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[OIDC Client Authentication] options are supported, for example:"
msgstr "Normalmente, el id de cliente y los secretos de cliente se definen para una aplicación determinada cuando se alista en el proveedor OIDC. Se admiten todas las opciones de  link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[autenticación de cliente de] OIDC, por ejemplo:"

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:106
#, fuzzy, no-wrap
msgid "Example of  `client_secret_basic`:"
msgstr "Ejemplo de `client_secret_basic`:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:113
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.secret=mysecret\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:116
#, fuzzy
msgid "Or:"
msgstr "O:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:122
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.client-secret.value=mysecret\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:125
#, fuzzy
msgid "The following example shows the secret retrieved from a xref:credentials-provider.adoc[credentials provider]:"
msgstr "El siguiente ejemplo muestra el secreto recuperado de un  link:credentials-provider.html[proveedor de credenciales]:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:130
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:162
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:135
#, no-wrap
msgid ""
"# This is a key which will be used to retrieve a secret from the map of credentials returned from CredentialsProvider\n"
"quarkus.oidc.credentials.client-secret.provider.key=mysecret-key\n"
"# Set it only if more than one CredentialsProvider can be registered\n"
"quarkus.oidc.credentials.client-secret.provider.name=oidc-credentials-provider\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:137
#, fuzzy, no-wrap
msgid "Example of `client_secret_post`"
msgstr "Ejemplo de `client_secret_post`"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:145
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.client-secret.value=mysecret\n"
"quarkus.oidc.credentials.client-secret.method=post\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:147
#, fuzzy, no-wrap
msgid "Example of `client_secret_jwt`, where the signature algorithm is HS256:"
msgstr "Ejemplo de `client_secret_jwt`, donde el algoritmo de firma es HS256:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:154
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.jwt.secret=AyM1SysPpbyDfgZld3umj1qzKObwVMkoqQ-EstJQLr_T-1qS0gZH75aKtMN3Yj0iPS4hcgUuTwjAzZr1Z9CAow\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:156
#, fuzzy, no-wrap
msgid "Example of `client_secret_jwt`, where the secret is retrieved from a xref:credentials-provider.adoc[credentials provider]:"
msgstr "Ejemplo de `client_secret_jwt`, donde el secreto se recupera de un  link:credentials-provider.html[proveedor de credenciales]:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:167
#, no-wrap
msgid ""
"# This is a key which will be used to retrieve a secret from the map of credentials returned from CredentialsProvider\n"
"quarkus.oidc.credentials.jwt.secret-provider.key=mysecret-key\n"
"# Set it only if more than one CredentialsProvider can be registered\n"
"quarkus.oidc.credentials.jwt.secret-provider.name=oidc-credentials-provider\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:170
#, fuzzy
msgid "Example of `private_key_jwt` with the PEM key file, and where the signature algorithm is RS256:"
msgstr "Ejemplo de `private_key_jwt` con el fichero de claves PEM, y donde el algoritmo de firma es RS256:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:176
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:205
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.jwt.key-file=privateKey.pem\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:178
#, fuzzy, no-wrap
msgid "Example of `private_key_jwt` with the keystore file, where the signature algorithm is RS256:"
msgstr "Ejemplo de `private_key_jwt` con el archivo keystore, donde el algoritmo de firma es RS256:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:187
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.jwt.key-store-file=keystore.jks\n"
"quarkus.oidc.credentials.jwt.key-store-password=mypassword\n"
"quarkus.oidc.credentials.jwt.key-password=mykeypassword\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:190
#, no-wrap
msgid ""
"# Private key alias inside the keystore\n"
"quarkus.oidc.credentials.jwt.key-id=mykeyAlias\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:193
#, fuzzy
msgid "Using `client_secret_jwt` or `private_key_jwt` authentication methods ensures that a client secret does not get sent to the OIDC provider, therefore avoiding the risk of a secret being intercepted by a 'man-in-the-middle' attack."
msgstr "El uso de los métodos de autenticación `client_secret_jwt` o `private_key_jwt` garantiza que el secreto del cliente no se envíe al proveedor de OIDC, evitando así el riesgo de que el secreto sea interceptado por un ataque \"man-in-the-middle\"."

#. type: Title =====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:194
#, fuzzy, no-wrap
msgid "Additional JWT authentication options"
msgstr "Opciones adicionales de autenticación JWT"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:197
#, fuzzy
msgid "If `client_secret_jwt`, `private_key_jwt` authentication methods are used or an Apple `post_jwt` method is used, then the JWT signature algorithm, key identifier, audience, subject and issuer can be customized, for example:"
msgstr "Si se utilizan los métodos de autenticación `client_secret_jwt`, `private_key_jwt` o un método de Apple `post_jwt`, se pueden personalizar, por ejemplo, el algoritmo de firma JWT, el identificador de clave, el público, el asunto y el emisor:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:201
#, no-wrap
msgid "# private_key_jwt client authentication\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:210
#, no-wrap
msgid ""
"# This is a token key identifier 'kid' header - set it if your OpenID Connect provider requires it.\n"
"# Note if the key is represented in a JSON Web Key (JWK) format with a `kid` property then\n"
"# using 'quarkus.oidc.credentials.jwt.token-key-id' is not necessary.\n"
"quarkus.oidc.credentials.jwt.token-key-id=mykey\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:213
#, no-wrap
msgid ""
"# Use RS512 signature algorithm instead of the default RS256\n"
"quarkus.oidc.credentials.jwt.signature-algorithm=RS512\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:216
#, no-wrap
msgid ""
"# The token endpoint URL is the default audience value, use the base address URL instead:\n"
"quarkus.oidc.credentials.jwt.audience=${quarkus.oidc-client.auth-server-url}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:219
#, no-wrap
msgid ""
"# custom subject instead of the client id :\n"
"quarkus.oidc.credentials.jwt.subject=custom-subject\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:222
#, no-wrap
msgid ""
"# custom issuer instead of the client id :\n"
"quarkus.oidc.credentials.jwt.issuer=custom-issuer\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:224
#, fuzzy, no-wrap
msgid "Apple POST JWT"
msgstr "Apple POST JWT"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:227
#, fuzzy
msgid "The Apple OIDC provider uses a `client_secret_post` method whereby a secret is a JWT produced with a `private_key_jwt` authentication method but with the Apple account-specific issuer and subject claims."
msgstr "El proveedor de OIDC de Apple utiliza un método `client_secret_post` por el que un secreto es un JWT producido con un método de autenticación `private_key_jwt` pero con el emisor específico de la cuenta de Apple y las reivindicaciones del sujeto."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:229
#, fuzzy
msgid "In Quarkus Security, `quarkus-oidc` supports a non-standard `client_secret_post_jwt` authentication method, which you can configure as follows:"
msgstr "En Quarkus Security, `quarkus-oidc` admite un método de autenticación no estándar `client_secret_post_jwt`, que puede configurar de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:234
#, no-wrap
msgid ""
"# Apple provider configuration sets a 'client_secret_post_jwt' authentication method\n"
"quarkus.oidc.provider=apple\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:239
#, no-wrap
msgid ""
"quarkus.oidc.client-id=${apple.client-id}\n"
"quarkus.oidc.credentials.jwt.key-file=ecPrivateKey.pem\n"
"quarkus.oidc.credentials.jwt.token-key-id=${apple.key-id}\n"
"# Apple provider configuration sets ES256 signature algorithm\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:242
#, no-wrap
msgid ""
"quarkus.oidc.credentials.jwt.subject=${apple.subject}\n"
"quarkus.oidc.credentials.jwt.issuer=${apple.issuer}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:244
#, fuzzy, no-wrap
msgid "mutual TLS (mTLS)"
msgstr "TLS mutuo (mTLS)"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:247
#, fuzzy
msgid "Some OpenID Connect providers might require that a client is authenticated as part of the mutual TLS authentication process."
msgstr "Algunos proveedores de OpenID Connect pueden requerir que un cliente se autentique como parte del proceso de autenticación mutua TLS."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:249
#, fuzzy
msgid "The following example shows how you can configure `quarkus-oidc` to support `mTLS`:"
msgstr "El siguiente ejemplo muestra cómo puede configurar `quarkus-oidc` para que admita `mTLS`:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:253
#, no-wrap
msgid "quarkus.oidc.tls.verification=certificate-validation\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:257
#, no-wrap
msgid ""
"# Keystore configuration\n"
"quarkus.oidc.tls.key-store-file=client-keystore.jks\n"
"quarkus.oidc.tls.key-store-password=${key-store-password}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:261
#, no-wrap
msgid ""
"# Add more keystore properties if needed:\n"
"#quarkus.oidc.tls.key-store-alias=keyAlias\n"
"#quarkus.oidc.tls.key-store-alias-password=keyAliasPassword\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:267
#, no-wrap
msgid ""
"# Truststore configuration\n"
"quarkus.oidc.tls.trust-store-file=client-truststore.jks\n"
"quarkus.oidc.tls.trust-store-password=${trust-store-password}\n"
"# Add more truststore properties if needed:\n"
"#quarkus.oidc.tls.trust-store-alias=certAlias\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:269
#, fuzzy, no-wrap
msgid "Introspection endpoint authentication"
msgstr "Autenticación del punto final de introspección"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:273
#, fuzzy
msgid "Some OIDC providers require authenticating to its introspection endpoint by using Basic authentication and with credentials that are different to the `client_id` and `client_secret`.  If you have previously configured security authentication to support either the`client_secret_basic` or `client_secret_post` client authentication methods as described in the xref:oidc-provider-client-authentication[OIDC provider client authentication] section, you might need to apply the additional configuration, as follows."
msgstr "Algunos proveedores de OIDC requieren autenticarse en su endpoint de introspección utilizando la autenticación Básica y con credenciales diferentes a las de `client_id` y `client_secret`. Si previamente has configurado la autenticación de seguridad para soportar los métodos de autenticación de cliente `client_secret_basic` o `client_secret_post` tal y como se describe en la sección de  link:#oidc-provider-client-authentication[autenticación de cliente del proveedor de OIDC], puede que necesites aplicar la configuración adicional, tal y como se indica a continuación."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:275
#, fuzzy
msgid "If the tokens have to be introspected and the introspection endpoint-specific authentication mechanism is required, then you can configure `quarkus-oidc`, as follows:"
msgstr "Si los tokens tienen que ser introspeccionados y se requiere el mecanismo de autenticación específico del punto final de introspección, entonces puede configurar `quarkus-oidc`, como se indica a continuación:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:280
#, no-wrap
msgid ""
"quarkus.oidc.introspection-credentials.name=introspection-user-name\n"
"quarkus.oidc.introspection-credentials.secret=introspection-user-secret\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:283
#, no-wrap
msgid "OIDC request customization"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:286
msgid "You can customize OIDC requests made by Quarkus to the OIDC provider by registering one or more `OidcRequestFiler` implementations which can update or add new request headers, please see xref:security-openid-connect-client-reference#oidc-client-filters[Client request customization] for more information."
msgstr ""

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:287
#, fuzzy, no-wrap
msgid "Redirecting to and from the OIDC provider"
msgstr "Redirección hacia y desde el proveedor OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:291
#, fuzzy
msgid "When a user is redirected to the OpenID Connect provider to authenticate, the redirect URL includes a `redirect_uri` query parameter, which indicates to the provider where the user has to be redirected to when the authentication is complete.  In our case, this is the Quarkus application."
msgstr "Cuando un usuario es redirigido al proveedor de OpenID Connect para autenticarse, la URL de redirección incluye un parámetro de consulta `redirect_uri`, que indica al proveedor a dónde tiene que ser redirigido el usuario una vez completada la autenticación. En nuestro caso, se trata de la aplicación Quarkus."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:295
#, fuzzy
msgid "Quarkus sets this parameter to the current application request URL by default.  For example, if a user is trying to access a Quarkus service endpoint at `http://localhost:8080/service/1` then the `redirect_uri` parameter is set to `http://localhost:8080/service/1`.  Similarly, if the request URL is `http://localhost:8080/service/2` then the `redirect_uri` parameter is set to `http://localhost:8080/service/2`."
msgstr "Quarkus establece este parámetro en la URL de solicitud de la aplicación actual por defecto. Por ejemplo, si un usuario está intentando acceder a un punto final de servicio de Quarkus en `&lt;a href=\"http://localhost:8080/service/1\" class=\"bare\"&gt;http://localhost:8080/service/1&lt;/a&gt;` entonces el parámetro `redirect_uri` se establece en `&lt;a href=\"http://localhost:8080/service/1\" class=\"bare\"&gt;http://localhost:8080/service/1&lt;/a&gt;`. Del mismo modo, si la URL de solicitud es `&lt;a href=\"http://localhost:8080/service/2\" class=\"bare\"&gt;http://localhost:8080/service/2&lt;/a&gt;` entonces el parámetro `redirect_uri` se establece en `&lt;a href=\"http://localhost:8080/service/2\" class=\"bare\"&gt;http://localhost:8080/service/2&lt;/a&gt;`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:298
#, fuzzy
msgid "Some OIDC providers require the `redirect_uri` to have the same value for a given application, for example, `http://localhost:8080/service/callback`, for all the redirect URLs.  In such cases, a `quarkus.oidc.authentication.redirect-path` property has to be set, for example, `quarkus.oidc.authentication.redirect-path=/service/callback`, and Quarkus will set the `redirect_uri` parameter to an absolute URL such as `http://localhost:8080/service/callback`, which will be the same regardless of the current request URL."
msgstr "Algunos proveedores de OIDC exigen que `redirect_uri` tenga el mismo valor para una aplicación determinada, por ejemplo, `&lt;a href=\"http://localhost:8080/service/callback\" class=\"bare\"&gt;http://localhost:8080/service/callback&lt;/a&gt;`para todas las URL de redirección. En tales casos, debe establecerse una propiedad `quarkus.oidc.authentication.redirect-path`, por ejemplo, `quarkus.oidc.authentication.redirect-path=/service/callback`, y Quarkus establecerá el parámetro `redirect_uri` a una URL absoluta como `&lt;a href=\"http://localhost:8080/service/callback\" class=\"bare\"&gt;http://localhost:8080/service/callback&lt;/a&gt;`que será la misma independientemente de la URL de la solicitud actual."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:301
#, fuzzy
msgid "If `quarkus.oidc.authentication.redirect-path` is set but you need the original request URL to be restored after the user has been redirected back to a unique callback URL, for example, `http://localhost:8080/service/callback`, set `quarkus.oidc.authentication.restore-path-after-redirect` property to `true`.  This will restore the request URL such as `http://localhost:8080/service/1`."
msgstr "Si `quarkus.oidc.authentication.redirect-path` está configurado pero necesita que la URL de solicitud original se restaure después de que el usuario haya sido redirigido de nuevo a una URL de devolución de llamada única, por ejemplo, `&lt;a href=\"http://localhost:8080/service/callback\" class=\"bare\"&gt;http://localhost:8080/service/callback&lt;/a&gt;`establezca la propiedad `quarkus.oidc.authentication.restore-path-after-redirect` en `true`. De este modo, se restablecerá la URL de solicitud, por ejemplo `&lt;a href=\"http://localhost:8080/service/1\" class=\"bare\"&gt;http://localhost:8080/service/1&lt;/a&gt;`."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:302
#, fuzzy, no-wrap
msgid "Customizing authentication requests"
msgstr "Personalización de las solicitudes de autenticación"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:305
#, fuzzy
msgid "By default, only the `response_type` (set to `code`), `scope` (set to 'openid'), `client_id`, `redirect_uri` and `state` properties are passed as HTTP query parameters to the OpenID Connect provider's authorization endpoint when the user is redirected to it to authenticate."
msgstr "Por defecto, sólo las propiedades `response_type` (establecida como `code`), `scope` (establecida como 'openid'), `client_id`, `redirect_uri` y `state` se pasan como parámetros de consulta HTTP al extremo de autorización del proveedor OpenID Connect cuando el usuario es redirigido a él para autenticarse."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:309
#, fuzzy
msgid "You can add more properties to it with `quarkus.oidc.authentication.extra-params`.  For example, some OIDC providers might choose to return the authorization code as part of the redirect URI's fragment, which would break the authentication process.  The following example shows how you can work around this issue:"
msgstr "Puedes añadirle más propiedades con `quarkus.oidc.authentication.extra-params`. Por ejemplo, algunos proveedores de OIDC podrían optar por devolver el código de autorización como parte del fragmento del URI de redirección, lo que rompería el proceso de autenticación. El siguiente ejemplo muestra cómo solucionar este problema:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:313
#, no-wrap
msgid "quarkus.oidc.authentication.extra-params.response_mode=query\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:315
#, fuzzy, no-wrap
msgid "Customizing the authentication error response"
msgstr "Personalización de la respuesta de error de autenticación"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:319
#, fuzzy
msgid "If the user authentication fails at the OIDC authorization endpoint, then the provider will redirect the user back to Quarkus with `error` and `error_description` parameters instead of `code`.  For example, this can happen when an invalid scope or other invalid parameters are included in the redirect to the provider."
msgstr "Si la autenticación del usuario falla en el punto final de autorización OIDC, entonces el proveedor redirigirá al usuario de vuelta a Quarkus con los parámetros `error` y `error_description` en lugar de `code`. Por ejemplo, esto puede ocurrir cuando se incluye un ámbito inválido u otros parámetros inválidos en la redirección al proveedor."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:323
#, fuzzy
msgid "In such cases, an HTTP `401`error will be returned by default.  However, you can instead request that a custom public error endpoint is called to return a more user-friendly HTML error page.  To do this, set the `quarkus.oidc.authentication.error-path` property, as shown in the following example:"
msgstr "En tales casos, una propiedad HTTP `401`error will be returned by default. However, you can instead request that a custom public error endpoint is called to return a more user-friendly HTML error page. To do this, set the `quarkus.oidc.authentication.error-path`, como se muestra en el siguiente ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:327
#, no-wrap
msgid "quarkus.oidc.authentication.error-path=/error\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:331
#, fuzzy
msgid "Ensure that the property starts with a forward slash (/) character and the path is relative to the base URI of the current endpoint.  For example, if it is set as '/error' and the current request URI is `https://localhost:8080/callback?error=invalid_scope` then a final redirect will be made to `https://localhost:8080/error?error=invalid_scope`."
msgstr "Asegúrese de que la propiedad comienza con una barra oblicua (/) y la ruta es relativa a la URI base del endpoint actual. Por ejemplo, si se establece como '/error' y el URI de la petición actual es `&lt;a href=\"https://localhost:8080/callback?error=invalid_scope\" class=\"bare\"&gt;https://localhost:8080/callback?error=invalid_scope&lt;/a&gt;` se realizará una redirección final a `&lt;a href=\"https://localhost:8080/error?error=invalid_scope\" class=\"bare\"&gt;https://localhost:8080/error?error=invalid_scope&lt;/a&gt;`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:333
#, fuzzy
msgid "It is important to ensure that this error endpoint is a public resource to prevent the user from being redirected to this page to be authenticated again."
msgstr "Es importante asegurarse de que este endpoint de error es un recurso público para evitar que el usuario sea redirigido a esta página para ser autenticado de nuevo."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:334
#, fuzzy, no-wrap
msgid "Accessing authorization data"
msgstr "Acceso a los datos de autorización"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:337
#, fuzzy
msgid "Let's first discuss how to access information around authorization."
msgstr "Veamos primero cómo acceder a la información relativa a la autorización."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:339
#, fuzzy, no-wrap
msgid "Accessing ID and access tokens"
msgstr "Acceso a los identificadores y fichas de acceso"

#. SJ: new concept topic to describe the different token types and usage proposed in next iteration
#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:342
#, fuzzy
msgid "The OIDC code authentication mechanism acquires three tokens during the authorization code flow: https://openid.net/specs/openid-connect-core-1_0.html#IDToken[IDToken], Access Token, and Refresh Token."
msgstr "El mecanismo de autenticación de código OIDC adquiere tres tokens durante el flujo de código de autorización:  link:https://openid.net/specs/openid-connect-core-1_0.html#IDToken[IDToken], Access Token y Refresh Token."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:346
#, fuzzy
msgid "ID Token is always a JWT token and is used to represent a user authentication with the JWT claims.  You can use this to get the issuing OIDC endpoint, the username, and other information called _claims_.  One can access ID Token claims by injecting `JsonWebToken` with an `IdToken` qualifier:"
msgstr "ID Token es siempre un token JWT y se utiliza para representar una autenticación de usuario con las reclamaciones JWT. Se puede utilizar para obtener el endpoint OIDC emisor, el nombre de usuario y otra información llamada _claims_. Se puede acceder a las reclamaciones ID Token inyectando `JsonWebToken` con un calificador `IdToken`:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:353
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import io.quarkus.oidc.IdToken;\n"
"import io.quarkus.security.Authenticated;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:357
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:381
#, no-wrap
msgid ""
"@Path(\"/web-app\")\n"
"@Authenticated\n"
"public class ProtectedResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:361
#, no-wrap
msgid ""
"    @Inject\n"
"    @IdToken\n"
"    JsonWebToken idToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:367
#, no-wrap
msgid ""
"    @GET\n"
"    public String getUserName() {\n"
"        return idToken.getName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:370
#, fuzzy
msgid "Access Token is usually used by the OIDC `web-app` application to access other endpoints on behalf of the currently logged-in user. The raw access token can be accessed as follows:"
msgstr "El token de acceso suele ser utilizado por la aplicación OIDC `web-app` para acceder a otros puntos finales en nombre del usuario conectado en ese momento. Se puede acceder al token de acceso sin procesar de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:377
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import io.quarkus.oidc.AccessTokenCredential;\n"
"import io.quarkus.security.Authenticated;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:384
#, no-wrap
msgid ""
"    @Inject\n"
"    JsonWebToken accessToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:388
#, no-wrap
msgid ""
"    // or\n"
"    // @Inject\n"
"    // AccessTokenCredential accessTokenCredential;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:394
#, no-wrap
msgid ""
"    @GET\n"
"    public String getReservationOnBehalfOfUser() {\n"
"        String rawAccessToken = accessToken.getRawToken();\n"
"        //or\n"
"        //String rawAccessToken = accessTokenCredential.getToken();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:399
#, no-wrap
msgid ""
"        // Use the raw access token to access a remote endpoint\n"
"        return getReservationfromRemoteEndpoint(rawAccesstoken);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:402
#, fuzzy
msgid "Note that `AccessTokenCredential` is used if the access token issued to the Quarkus `web-app` application is opaque (binary) and can not be parsed to a `JsonWebToken` or if the inner content is necessary for the application."
msgstr "Tenga en cuenta que `AccessTokenCredential` se utiliza si el token de acceso emitido a la aplicación Quarkus `web-app` es opaco (binario) y no se puede analizar en `JsonWebToken` o si el contenido interno es necesario para la aplicación."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:404
#, fuzzy
msgid "Injection of the `JsonWebToken` and `AccessTokenCredential` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "La inyección de `JsonWebToken` y `AccessTokenCredential` se admite en los contextos `@RequestScoped` y `@ApplicationScoped`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:406
#, fuzzy
msgid "RefreshToken is used by Quarkusn OIDC to refresh the current ID and access tokens as part of its xref:session-management[session management] process."
msgstr "RefreshToken es utilizado por Quarkusn OIDC para refrescar el ID actual y los tokens de acceso como parte de su proceso de  link:#session-management[gestión de sesión]."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:408
#, fuzzy, no-wrap
msgid "User info"
msgstr "Información del usuario"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:412
#, fuzzy
msgid "If the ID token does not provide enough information about the currently-authenticated user, you can get more information from the `UserInfo` endpoint.  Set the `quarkus.oidc.authentication.user-info-required=true` property for a link:https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] JSON object from the OIDC `UserInfo` endpoint to be requested."
msgstr "Si el token de ID no proporciona suficiente información sobre el usuario autenticado actualmente, puede obtener más información del endpoint `UserInfo`. Establezca la propiedad `quarkus.oidc.authentication.user-info-required=true` para que se solicite un objeto JSON  link:https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] desde el punto final OIDC `UserInfo`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:414
#, fuzzy
msgid "A request will be sent to the OpenID Provider UserInfo endpoint using the access token returned with the authorization code grant response and an `io.quarkus.oidc.UserInfo` (a simple `jakarta.json.JsonObject` wrapper) object will be created. `io.quarkus.oidc.UserInfo` can be either injected or accessed as a SecurityIdentity `userinfo` attribute."
msgstr "Se enviará una solicitud al punto final OpenID Provider UserInfo utilizando el token de acceso devuelto con la respuesta de concesión de código de autorización y se creará un objeto `io.quarkus.oidc.UserInfo` (un simple envoltorio de `jakarta.json.JsonObject` ). `io.quarkus.oidc.UserInfo` puede inyectarse o accederse como un atributo SecurityIdentity `userinfo`."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:416
#, fuzzy, no-wrap
msgid "Accessing the OIDC configuration information"
msgstr "Acceso a la información de configuración de OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:419
#, fuzzy
msgid "The current tenant's discovered link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[OpenID Connect Configuration Metadata] is represented by `io.quarkus.oidc.OidcConfigurationMetadata` and can be either injected or accessed as a `SecurityIdentity` `configuration-metadata` attribute."
msgstr "Los  link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[metadatos de configuración de OpenID Connect] descubiertos del inquilino actual están representados por `io.quarkus.oidc.OidcConfigurationMetadata` y se puede inyectar o acceder a ellos como atributo `SecurityIdentity` `configuration-metadata` ."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:421
#, fuzzy
msgid "The default tenant's `OidcConfigurationMetadata` is injected if the endpoint is public."
msgstr "La dirección `OidcConfigurationMetadata` del inquilino por defecto se inyecta si el punto final es público."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:423
#, fuzzy, no-wrap
msgid "Mapping token claims and `SecurityIdentity` roles"
msgstr "Correspondencia entre las solicitudes de fichas y las funciones de `SecurityIdentity`"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:426
#, fuzzy
msgid "The way the roles are mapped to the SecurityIdentity roles from the verified tokens is identical to how it is done for the xref:security-oidc-bearer-token-authentication.adoc[Bearer tokens] with the only difference being that https://openid.net/specs/openid-connect-core-1_0.html#IDToken[ID Token] is used as a source of the roles by default."
msgstr "La forma en que los roles se asignan a los roles SecurityIdentity desde los tokens verificados es idéntica a cómo se hace para los  link:security-oidc-bearer-token-authentication.html[tokens Bearer] con la única diferencia de que  link:https://openid.net/specs/openid-connect-core-1_0.html#IDToken[ID Token] se utiliza como fuente de los roles por defecto."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:431
#, fuzzy
msgid "If you use Keycloak, set a `microprofile_jwt` client scope for ID token to contain a `groups` claim.  For more information, see the link:https://www.keycloak.org/docs/latest/server_admin/#protocol[Keycloak Server Administration Guide]."
msgstr "Si utiliza Keycloak, establezca un ámbito de cliente `microprofile_jwt` para que el token de identificación contenga una reclamación `groups`. Para obtener más información, consulte la  link:https://www.keycloak.org/docs/latest/server_admin/#protocol[Guía de administración del servidor Key]cloak."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:434
#, fuzzy
msgid "But depending on your OIDC provider, roles might be stored in the access token or the user info."
msgstr "Pero dependiendo de tu proveedor de OIDC, los roles pueden estar almacenados en el token de acceso o en la información del usuario."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:436
#, fuzzy
msgid "If the access token contains the roles and this access token is not meant to be propagated to the downstream endpoints then set `quarkus.oidc.roles.source=accesstoken`."
msgstr "Si el token de acceso contiene los roles y este token de acceso no está destinado a ser propagado a los puntos finales aguas abajo, a continuación, establezca `quarkus.oidc.roles.source=accesstoken`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:438
#, fuzzy
msgid "If UserInfo is the source of the roles then set `quarkus.oidc.roles.source=userinfo`, and if needed, `quarkus.oidc.roles.role-claim-path`."
msgstr "Si UserInfo es la fuente de los roles, entonces establece `quarkus.oidc.roles.source=userinfo`, y si es necesario, `quarkus.oidc.roles.role-claim-path`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:440
#, fuzzy
msgid "Additionally, a custom `SecurityIdentityAugmentor` can also be used to add the roles. For more information, see xref:security-customization.adoc#security-identity-customization[SecurityIdentity customization]."
msgstr "Además, también se puede utilizar un `SecurityIdentityAugmentor` personalizado para añadir los roles. Para obtener más información, consulte  link:security-customization.html#security-identity-customization[Personalización de SecurityIdentity]."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:441
#, fuzzy, no-wrap
msgid "Ensuring validity of tokens and authentication data"
msgstr "Garantizar la validez de los tokens y los datos de autenticación"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:445
#, fuzzy
msgid "A core part of the authentication process is ensuring the chain of trust and validity of the information.  This is done by ensuring tokens are trustable."
msgstr "Una parte fundamental del proceso de autenticación es garantizar la cadena de confianza y la validez de la información. Esto se consigue garantizando que los tokens sean fiables."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:447
#, fuzzy, no-wrap
msgid "Token verification and introspection"
msgstr "Verificación de tokens e introspección"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:450
#, fuzzy
msgid "The verification process of OIDC authorization code flow tokens follows the Bearer token authentication token verification and introspection logic. For more information, see the xref:security-oidc-bearer-token-authentication.adoc#token-verification-introspection[Token Verification And Introspection] section of the \"Quarkus OpenID Connect (OIDC) Bearer token authentication\" guide."
msgstr "El proceso de verificación de tokens de flujo de código de autorización OIDC sigue la lógica de verificación e introspección de tokens de autenticación de token de portador. Para obtener más información, consulte la sección  link:security-oidc-bearer-token-authentication.html#token-verification-introspection[Verificación] e introspección de tokens de la guía \"Autenticación de tokens de portador de OpenID Connect (OIDC) de Quarkus\"."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:455
#, fuzzy
msgid "With Quarkus `web-app` applications, only the `IdToken` is verified by default because the access token is not used to access the current Quarkus `web-app` endpoint and is intended to be propagated to the services expecting this access token.  If you expect the access token to contain the roles required to access the current Quarkus endpoint (`quarkus.oidc.roles.source=accesstoken`) then it will also be verified."
msgstr "Con las aplicaciones de Quarkus `web-app`, por defecto sólo se verifica el `IdToken` porque el token de acceso no se utiliza para acceder al punto final actual de Quarkus `web-app` y está destinado a propagarse a los servicios que esperan este token de acceso. Si se espera que el token de acceso contenga las funciones necesarias para acceder al punto final actual de Quarkus ( `quarkus.oidc.roles.source=accesstoken`), entonces también se verificará."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:458
#, fuzzy, no-wrap
msgid "Token introspection and UserInfo cache"
msgstr "Introspección de tokens y caché UserInfo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:463
#, fuzzy
msgid "Code flow access tokens are not introspected unless they are expected to be the source of roles.  They will however be used to get `UserInfo`.  There will be one or two remote calls with the code flow access token, if the token introspection and/or `UserInfo` are required."
msgstr "Los tokens de acceso al flujo de código no son introspeccionados a menos que se espere que sean la fuente de roles. Sin embargo, se utilizarán para obtener `UserInfo`. Habrá una o dos llamadas remotas con el token de acceso al flujo de código, si se requiere la introspección del token y/o `UserInfo`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:465
#, fuzzy
msgid "Please see xref:security-oidc-bearer-token-authentication.adoc#token-introspection-userinfo-cache[Token Introspection and UserInfo cache] for more information about using a default token cache or registering a custom cache implementation."
msgstr "Consulte  link:security-oidc-bearer-token-authentication.html#token-introspection-userinfo-cache[Introspección de tokens y Caché UserInfo] para obtener más información sobre el uso de una caché de tokens predeterminada o el registro de una implementación de caché personalizada."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:467
#, fuzzy, no-wrap
msgid "JSON web token claim verification"
msgstr "Verificación de reclamaciones mediante token web JSON"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:471
#, fuzzy
msgid "Please see xref:security-oidc-bearer-token-authentication.adoc#jwt-claim-verification[JSON Web Token Claim verification] section about the claim verification, including the `iss` (issuer) claim.  It applies to ID tokens but also to access tokens in a JWT format if the `web-app` application has requested the access token verification."
msgstr "Consulte la sección Verificación de  link:security-oidc-bearer-token-authentication.html#jwt-claim-verification[reclamaciones de tokens web JSON] sobre la verificación de reclamaciones, incluida la reclamación `iss` (emisor). Se aplica a los tokens de identificación, pero también a los tokens de acceso en formato JWT si la aplicación `web-app` ha solicitado la verificación del token de acceso."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:472
#, fuzzy, no-wrap
msgid "Further security with Proof Key for Code Exchange (PKCE)"
msgstr "Más seguridad con la clave de prueba para el intercambio de códigos (PKCE)"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:475
#, fuzzy
msgid "link:https://datatracker.ietf.org/doc/html/rfc7636[Proof Key for Code Exchange] (PKCE) minimizes the risk of authorization code interception."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc7636[Proof Key for Code Exchange] (PKCE) minimiza el riesgo de interceptación del código de autorización."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:478
#, fuzzy
msgid "While PKCE is of primary importance to public OpenID Connect clients, such as SPA scripts running in a browser, it can also provide an extra level of protection to Quarkus OIDC `web-app` applications.  With PKCE, Quarkus OIDC `web-app` applications are confidential OpenID Connect clients capable of securely storing the client secret and using it to exchange the code for the tokens."
msgstr "Aunque PKCE es de importancia primaria para los clientes públicos de OpenID Connect, como los scripts SPA que se ejecutan en un navegador, también puede proporcionar un nivel extra de protección a las aplicaciones Quarkus OIDC `web-app`. Con PKCE, las aplicaciones Quarkus OIDC `web-app` son clientes confidenciales de OpenID Connect capaces de almacenar de forma segura el secreto del cliente y utilizarlo para intercambiar el código de los tokens."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:480
#, fuzzy
msgid "You can enable `PKCE` for your OIDC `web-app` endpoint with a `quarkus.oidc.authentication.pkce-required` property and a 32-character secret which is required to encrypt the PKCE code verifier in the state cookie, as shown in the following example:"
msgstr "Puede habilitar `PKCE` para su endpoint OIDC `web-app` con una propiedad `quarkus.oidc.authentication.pkce-required` y un secreto de 32 caracteres, como se muestra en el siguiente ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:485
#, no-wrap
msgid ""
"quarkus.oidc.authentication.pkce-required=true\n"
"quarkus.oidc.authentication.state-secret=eUk1p7UB3nFiXZGUXi0uph1Y9p34YhBU\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:488
#, fuzzy
msgid "If you already have a 32-characters client secret then you do not need to set the `quarkus.oidc.authentication.pkce-secret` property unless you prefer to use a different secret key. This secret will be auto-generated if it is not configured and if the fallback to the client secret is not possible in case of the client secret being less than 16 characters long."
msgstr "Si ya tiene un secreto de cliente de 32 caracteres, no necesita establecer la propiedad `quarkus.oidc.authentication.pkce-secret` a menos que prefiera utilizar una clave secreta diferente."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:492
#, fuzzy
msgid "The secret key is required for encrypting a randomly generated `PKCE` `code_verifier` while the user is being redirected with the `code_challenge` query parameter to an OIDC provider to authenticate.  The `code_verifier` is decrypted when the user is redirected back to Quarkus and sent to the token endpoint alongside the `code`, client secret, and other parameters to complete the code exchange.  The provider will fail the code exchange if a `SHA256` digest of the `code_verifier` does not match the `code_challenge` that was provided during the authentication request."
msgstr "La clave secreta es necesaria para cifrar un `PKCE` generado aleatoriamente `code_verifier` mientras el usuario está siendo redirigido con el parámetro de consulta `code_challenge` a un proveedor OIDC para autenticarse. El `code_verifier` es descifrado cuando el usuario es redirigido de vuelta a Quarkus y enviado al token endpoint junto con el `code`, secreto del cliente, y otros parámetros para completar el intercambio de código. El proveedor fallará en el intercambio de códigos si un `SHA256` digest del `code_verifier` no coincide con el `code_challenge` que se proporcionó durante la solicitud de autenticación."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:494
#, fuzzy, no-wrap
msgid "Handling and controlling the lifetime of authentication"
msgstr "Gestión y control de la duración de la autenticación"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:499
#, fuzzy
msgid "Another important requirement for authentication is to ensure that the data the session is based on is up-to-date without requiring the user to authenticate for every single request.  There are also situations where a logout event is explicitly requested.  Use the following key points to find the right balance for securing your Quarkus applications:"
msgstr "Otro requisito importante para la autenticación es garantizar que los datos en los que se basa la sesión están actualizados sin exigir al usuario que se autentique para cada solicitud. También hay situaciones en las que se solicita explícitamente un evento de cierre de sesión. Utilice los siguientes puntos clave para encontrar el equilibrio adecuado para asegurar sus aplicaciones Quarkus:"

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:501
#, fuzzy, no-wrap
msgid "Cookies"
msgstr "Cookies"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:505
#, fuzzy
msgid "The OIDC adapter uses cookies to keep the session, code flow, and post-logout state.  This state is a key element controlling the lifetime of authentication data."
msgstr "El adaptador OIDC utiliza cookies para mantener la sesión, el flujo de código y el estado posterior al cierre de sesión. Este estado es un elemento clave que controla la vida útil de los datos de autenticación."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:507
#, fuzzy
msgid "Use the `quarkus.oidc.authentication.cookie-path` property to ensure that the same cookie is visible when you access protected resources with overlapping or different roots, for example:"
msgstr "Utilice la propiedad `quarkus.oidc.authentication.cookie-path` para asegurarse de que la misma cookie es visible cuando acceda a recursos protegidos con raíces superpuestas o diferentes, por ejemplo:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:509
#, fuzzy
msgid "`/index.html` and `/web-app/service`"
msgstr "`/index.html` y `/web-app/service`"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:510
#, fuzzy
msgid "`/web-app/service1` and `/web-app/service2`"
msgstr "`/web-app/service1` y `/web-app/service2`"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:511
#, fuzzy
msgid "`/web-app1/service` and `/web-app2/service`"
msgstr "`/web-app1/service` y `/web-app2/service`"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:513
#, fuzzy
msgid "By default, `quarkus.oidc.authentication.cookie-path` is set to `/` but you can change this to a more specific path if required, for example, `/web-app`."
msgstr "Por defecto, `quarkus.oidc.authentication.cookie-path` se establece en `/`, pero puede cambiarla a una ruta más específica si es necesario, por ejemplo, `/web-app`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:517
#, fuzzy
msgid "To set the cookie path dynamically, configure the `quarkus.oidc.authentication.cookie-path-header` property.  Set the `quarkus.oidc.authentication.cookie-path-header` property.  For example, to set the cookie path dynamically by using the value of the`X-Forwarded-Prefix` HTTP header, configure the property to `quarkus.oidc.authentication.cookie-path-header=X-Forwarded-Prefix`."
msgstr "Para establecer la ruta de la cookie de forma dinámica, configure la propiedad `quarkus.oidc.authentication.cookie-path-header`. Configure la propiedad `quarkus.oidc.authentication.cookie-path-header`. Por ejemplo, para establecer la ruta de la cookie de forma dinámica utilizando el valor de la cabecera HTTP `X-Forwarded-Prefix`, configure la propiedad como `quarkus.oidc.authentication.cookie-path-header=X-Forwarded-Prefix`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:519
#, fuzzy
msgid "If `quarkus.oidc.authentication.cookie-path-header` is set but no configured HTTP header is available in the current request then the `quarkus.oidc.authentication.cookie-path` will be checked."
msgstr "Si `quarkus.oidc.authentication.cookie-path-header` está configurado pero no hay ninguna cabecera HTTP configurada en la solicitud actual, se comprobará `quarkus.oidc.authentication.cookie-path`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:522
#, fuzzy
msgid "If your application is deployed across multiple domains, set the `quarkus.oidc.authentication.cookie-domain` property so that the session cookie is visible to all protected Quarkus services.  For example, if you have Quarkus services deployed on the following two domains, then you must set the `quarkus.oidc.authentication.cookie-domain` property to `company.net`."
msgstr "Si la aplicación se despliega en varios dominios, establezca la propiedad `quarkus.oidc.authentication.cookie-domain` de modo que la cookie de sesión sea visible para todos los servicios protegidos de Quarkus. Por ejemplo, si tiene servicios de Quarkus desplegados en los dos dominios siguientes, debe establecer la propiedad `quarkus.oidc.authentication.cookie-domain` en `company.net`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:524
#, fuzzy
msgid "\\https://whatever.wherever.company.net/"
msgstr "https://whatever.wherever.company.net/"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:525
#, fuzzy
msgid "\\https://another.address.company.net/"
msgstr "https://another.address.company.net/"

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:528
#, fuzzy, no-wrap
msgid "Session cookie and default TokenStateManager"
msgstr "Personalización de la cookie con TokenStateManager"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:531
#, fuzzy
msgid "OIDC `CodeAuthenticationMechanism` uses the default `io.quarkus.oidc.TokenStateManager` interface implementation to keep the ID, access, and refresh tokens returned in the authorization code or refresh grant responses in an encrypted session cookie."
msgstr "OIDC `CodeAuthenticationMechanism` utiliza la implementación predeterminada de la interfaz `io.quarkus.oidc.TokenStateManager` para mantener los tokens de ID, acceso y actualización devueltos en el código de autorización o para actualizar las respuestas de concesión en una cookie de sesión. Esto hace que los puntos finales OIDC de Quarkus sean completamente apátridas."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:533
#, fuzzy
msgid "It makes Quarkus OIDC endpoints completely stateless and it is recommended to follow this strategy in order to achieve the best scalability results."
msgstr "Hace que los puntos finales de Quarkus OIDC sean completamente apátridas y se recomienda seguir esta estrategia para conseguir los mejores resultados de escalabilidad."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:535
#, fuzzy
msgid "See xref:db-token-state-manager[Database TokenStateManager] and xref:custom-token-state-manager[Session cookie and custom TokenStateManager] sections of this guide for alternative approaches where tokens can be stored in the database or other server-side storage, if you prefer and have good reasons for storing the token state on the server."
msgstr "Consulte las secciones  link:#db-token-state-manager[Database TokenStateManager] y  link:#custom-token-state-manager[Session cookie and custom TokenStateManager] de esta guía para conocer enfoques alternativos en los que los tokens se pueden almacenar en la base de datos o en otro almacenamiento del lado del servidor, si lo prefiere y tiene buenas razones para almacenar el estado del token en el servidor."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:537
#, fuzzy
msgid "You can configure the default `TokenStateManager` to avoid saving an access token in the session cookie and only keep ID and refresh tokens or ID token only."
msgstr "Puede configurar el valor predeterminado `TokenStateManager` para evitar guardar un token de acceso en la cookie de sesión y guardar sólo los tokens de ID y actualización o sólo el token de ID."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:539
#, fuzzy
msgid "An access token is only required if the endpoint needs to:"
msgstr "Sólo se requiere un token de acceso si el endpoint lo necesita:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:541
#, fuzzy
msgid "Retrieve `UserInfo`"
msgstr "Recuperar `UserInfo`"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:542
#, fuzzy
msgid "Access the downstream service with this access token"
msgstr "Acceder al servicio descendente con este token de acceso"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:543
#, fuzzy
msgid "Use the roles associated with the access token, which are checked by default"
msgstr "Utilizar los roles asociados al token de acceso, que están marcados por defecto"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:545
#, fuzzy
msgid "In such cases, use the `quarkus.oidc.token-state-manager.strategy` property to configure the token state strategy as follows:"
msgstr "En estos casos, utilice la propiedad `quarkus.oidc.token-state-manager.strategy` para configurar la estrategia de estado de los tokens de la siguiente manera:"

#. type: Table
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:547
#, fuzzy, no-wrap
msgid "To..."
msgstr "Para..."

#. type: Table
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:549
#, fuzzy, no-wrap
msgid "Set the property to ..."
msgstr "Ajuste la propiedad a ..."

#. type: Table
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:550
#, fuzzy, no-wrap
msgid "Keep the ID and refresh tokens only"
msgstr "Conserve sólo las fichas de identificación y actualización"

#. type: Table
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:552
#, fuzzy, no-wrap
msgid "`quarkus.oidc.token-state-manager.strategy=id-refresh-token`"
msgstr "`quarkus.oidc.token-state-manager.strategy=id-refresh-token`"

#. type: Table
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:553
#, fuzzy, no-wrap
msgid "Keep the ID token only"
msgstr "Mantener sólo el token de identificación"

#. type: Table
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:555
#, fuzzy, no-wrap
msgid "`quarkus.oidc.token-state-manager.strategy=id-token`"
msgstr "`quarkus.oidc.token-state-manager.strategy=id-token`"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:560
#, fuzzy
msgid "If your chosen session cookie strategy combines tokens and generates a large session cookie value that is greater than 4KB, some browsers might not be able to handle such cookie sizes.  This can occur when the ID, access, and refresh tokens are JWT tokens and the selected strategy is `keep-all-tokens` or with ID and refresh tokens when the strategy is `id-refresh-token`.  To workaround this issue, you can set `quarkus.oidc.token-state-manager.split-tokens=true` to create a unique session token for each token. An alternative solution is to have the tokens saved in the database, see xref:db-token-state-manager[Database TokenStateManager] for more information."
msgstr "Si la estrategia de cookies elegida combina tokens y genera un valor de cookie de sesión de gran tamaño, superior a 4 KB, es posible que algunos navegadores no puedan gestionar cookies de este tamaño. Esto puede ocurrir cuando los tokens de ID, acceso y actualización son tokens JWT y la estrategia seleccionada es `keep-all-tokens` o con tokens de ID y actualización cuando la estrategia es `id-refresh-token`. Para solucionar este problema, puede configurar `quarkus.oidc.token-state-manager.split-tokens=true` para crear un token de sesión único para cada token."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:563
#, fuzzy
msgid "Default `TokenStateManager` encrypts the tokens before storing them in the session cookie.  The following example shows how you configure it to split the tokens and encrypt them:"
msgstr "`TokenStateManager` cifra los tokens antes de almacenarlos en la cookie de sesión. El siguiente ejemplo muestra cómo configurar `TokenStateManager` para dividir los tokens y cifrarlos:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:572
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.secret=secret\n"
"quarkus.oidc.application-type=web-app\n"
"quarkus.oidc.token-state-manager.split-tokens=true\n"
"quarkus.oidc.token-state-manager.encryption-secret=eUk1p7UB3nFiXZGUXi0uph1Y9p34YhBU\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:576
#, fuzzy
msgid "The token encryption secret must be at least 32 characters long.  If this key is not configured then either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.jwt.secret` will be hashed to create an encryption key."
msgstr "El secreto de cifrado del token debe tener al menos 32 caracteres. Si no se configura esta clave, se utilizará `quarkus.oidc.credentials.secret` o `quarkus.oidc.credentials.jwt.secret` para crear una clave de cifrado."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:578
#, fuzzy
msgid "Configure the `quarkus.oidc.token-state-manager.encryption-secret` property if Quarkus authenticates to the OpenId Connect Provider by using one of the following authentication methods:"
msgstr "Configure la propiedad `quarkus.oidc.token-state-manager.encryption-secret` si Quarkus se autentica en el proveedor OpenId Connect utilizando uno de los siguientes métodos de autenticación:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:580
#, fuzzy
msgid "mTLS"
msgstr "mTLS"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:581
#, fuzzy
msgid "`private_key_jwt`, where a private RSA or EC key is used to sign a JWT token"
msgstr "`private_key_jwt`donde se utiliza una clave privada RSA o EC para firmar un token JWT."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:583
#, fuzzy
msgid "Otherwise, a random key is generated, which can be problematic if the Quarkus application is running in the cloud with multiple pods managing the requests."
msgstr "De lo contrario, se genera una clave aleatoria, lo que puede ser problemático si la aplicación Quarkus se ejecuta en la nube con múltiples pods gestionando las solicitudes."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:585
#, fuzzy
msgid "You can disable token encryption in the session cookie by setting `quarkus.oidc.token-state-manager.encryption-required=false`."
msgstr "Puede desactivar el cifrado de tokens en la cookie de sesión configurando `quarkus.oidc.token-state-manager.encryption-required=false`."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:587
#, fuzzy, no-wrap
msgid "Session cookie and custom TokenStateManager"
msgstr "Personalización de la cookie con TokenStateManager"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:590
#, fuzzy
msgid "Register a custom `io.quarkus.oidc.TokenStateManager' implementation as an `@ApplicationScoped` CDI bean if you need to customize the way the tokens are associated with the session cookie."
msgstr "Registre un bean CDI personalizado de `io.quarkus.oidc.TokenStateManager' implementation as an `@ApplicationScoped` si necesita personalizar la forma en que los tokens se asocian a la cookie de sesión."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:593
#, fuzzy
msgid "For example, you may want to keep the tokens in a cache cluster and have only a key stored in a session cookie.  Note that this approach might introduce some challenges if you need to make the tokens available across multiple microservices nodes."
msgstr "Registre su propio bean CDI `io.quarkus.oidc.TokenStateManager' implementation as an `@ApplicationScoped` si necesita personalizar la forma en que los tokens se asocian con la cookie de sesión. Por ejemplo, es posible que desee mantener los tokens en una base de datos y tener sólo un puntero de base de datos almacenado en una cookie de sesión. Tenga en cuenta que este enfoque podría introducir algunos desafíos si necesita hacer que los tokens estén disponibles a través de múltiples nodos de microservicios."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:595
#, fuzzy
msgid "Here is a simple example:"
msgstr "He aquí un ejemplo sencillo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:599
#, no-wrap
msgid "package io.quarkus.oidc.test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:604
#, no-wrap
msgid ""
"import jakarta.annotation.Priority;\n"
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.inject.Alternative;\n"
"import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:611
#, no-wrap
msgid ""
"import io.quarkus.oidc.AuthorizationCodeTokens;\n"
"import io.quarkus.oidc.OidcTenantConfig;\n"
"import io.quarkus.oidc.TokenStateManager;\n"
"import io.quarkus.oidc.runtime.DefaultTokenStateManager;\n"
"import io.smallrye.mutiny.Uni;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:616
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@Alternative\n"
"@Priority(1)\n"
"public class CustomTokenStateManager implements TokenStateManager {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:619
#, no-wrap
msgid ""
"    @Inject\n"
"    DefaultTokenStateManager tokenStateManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:626
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<String> createTokenState(RoutingContext routingContext, OidcTenantConfig oidcConfig,\n"
"            AuthorizationCodeTokens sessionContent, TokenStateManager.CreateTokenStateRequestContext requestContext) {\n"
"        return tokenStateManager.createTokenState(routingContext, oidcConfig, sessionContent, requestContext)\n"
"                .map(t -> (t + \"|custom\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:636
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<AuthorizationCodeTokens> getTokens(RoutingContext routingContext, OidcTenantConfig oidcConfig,\n"
"            String tokenState, TokenStateManager.GetTokensRequestContext requestContext) {\n"
"        if (!tokenState.endsWith(\"|custom\")) {\n"
"            throw new IllegalStateException();\n"
"        }\n"
"        String defaultState = tokenState.substring(0, tokenState.length() - 7);\n"
"        return tokenStateManager.getTokens(routingContext, oidcConfig, defaultState, requestContext);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:647
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<Void> deleteTokens(RoutingContext routingContext, OidcTenantConfig oidcConfig, String tokenState,\n"
"            TokenStateManager.DeleteTokensRequestContext requestContext) {\n"
"        if (!tokenState.endsWith(\"|custom\")) {\n"
"            throw new IllegalStateException();\n"
"        }\n"
"        String defaultState = tokenState.substring(0, tokenState.length() - 7);\n"
"        return tokenStateManager.deleteTokens(routingContext, oidcConfig, defaultState, requestContext);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:650
#, fuzzy
msgid "See xref:token-state-manager[Session cookie and default TokenStateManager] for the information about the default `TokenStateManager` storing the tokens in an encrypted session cookie."
msgstr "Consulte Cookie de  link:#token-state-manager[sesión y TokenStateManager predeterminado] para obtener información sobre el almacenamiento predeterminado de tokens en una cookie de sesión cifrada en `TokenStateManager`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:652
#, fuzzy
msgid "See xref:db-token-state-manager[Database TokenStateManager] for the information about the custom `TokenStatemanager` implementation provided by Quarkus."
msgstr "Véase  link:#db-token-state-manager[Database TokenStateManager] para obtener información sobre la implementación personalizada de `TokenStatemanager` proporcionada por Quarkus."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:654
#, fuzzy, no-wrap
msgid "Database TokenStateManager"
msgstr "Base de datos TokenStateManager"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:657
#, fuzzy
msgid "If you prefer to follow a stateful token storage strategy, then you can use a custom `TokenStateManager` provided by Quarkus to have your application storing tokens in a database, instead of storing them in an encrypted session cookie which is done by default, as described in the xref:token-state-manager[Session cookie and default TokenStateManager] section."
msgstr "Si prefieres seguir una estrategia de almacenamiento de tokens con estado, entonces puedes utilizar un `TokenStateManager` personalizado proporcionado por Quarkus para que tu aplicación almacene tokens en una base de datos, en lugar de almacenarlos en una cookie de sesión encriptada que se hace por defecto, como se describe en la sección  link:#token-state-manager[Cookie de sesión y TokenStateManager por defecto]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:659
#, fuzzy
msgid "To use this feature, add the following extension to your project:"
msgstr "Comience por añadir las siguientes dependencias a su proyecto de prueba:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:664
#, fuzzy
msgid "This extension will replace the default `io.quarkus.oidc.TokenStateManager' with a database-based one."
msgstr "Esta extensión reemplazará el `io.quarkus.oidc.TokenStateManager' por defecto con uno basado en base de datos."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:666
#, fuzzy
msgid "OIDC Database Token State Manager is using a Reactive SQL client under the hood to avoid blocking since the authentication is likely to happen on IO thread."
msgstr "OIDC Database Token State Manager está utilizando un cliente SQL Reactivo bajo el capó para evitar el bloqueo ya que la autenticación es probable que ocurra en el hilo IO."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:669
#, fuzzy
msgid "Depending on your database, please include and configure exactly one xref:reactive-sql-clients.adoc[Reactive SQL client].  Following Reactive SQL clients are supported:"
msgstr "Dependiendo de su base de datos, por favor incluya y configure exactamente un cliente Reactive  link:reactive-sql-clients.html[SQL]. Se admiten los siguientes clientes Reactive SQL:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:671
#, fuzzy
msgid "Reactive MS SQL client"
msgstr "Cliente MS SQL reactivo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:672
#, fuzzy
msgid "Reactive MySQL client"
msgstr "Cliente MySQL reactivo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:673
#, fuzzy
msgid "Reactive PostgreSQL client"
msgstr "Cliente PostgreSQL reactivo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:674
#, fuzzy
msgid "Reactive Oracle client"
msgstr "Cliente Oracle reactivo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:675
#, fuzzy
msgid "Reactive DB2 client"
msgstr "Cliente DB2 reactivo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:677
#, fuzzy
msgid "Your application is not required to switch to using the Reactive SQL client if it already uses Hibernate ORM with one of the JDBC driver extensions."
msgstr "No es necesario que su aplicación cambie al uso del cliente Reactive SQL si ya utiliza Hibernate ORM con una de las extensiones del controlador JDBC."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:679
#, fuzzy
msgid "Let's say you already have application that is using the Hibernate ORM extension together with a PostgreSQL JDBC Driver and your datasource is configured like this:"
msgstr "Supongamos que ya tiene una aplicación que utiliza la extensión Hibernate ORM junto con un controlador PostgreSQL JDBC y su fuente de datos está configurada de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:686
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus_test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:689
#, fuzzy
msgid "Now, if you decided to use OIDC Database Token State Manager, you need to add following dependencies and set a reactive driver URL."
msgstr "Ahora, si has decidido utilizar OIDC Database Token State Manager, necesitas añadir las siguientes dependencias y establecer una URL de controlador reactivo."

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:691
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1250
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1355
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1388
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1508
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:701
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc-db-token-state-manager</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-reactive-pg-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:704
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1260
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1376
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1398
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1518
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:708
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-oidc-db-token-state-manager\")\n"
"implementation(\"io.quarkus:quarkus-reactive-pg-client\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:713
#, no-wrap
msgid "quarkus.datasource.reactive.url=postgresql://localhost:5432/quarkus_test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:716
#, fuzzy
msgid "And you are ready to go."
msgstr "Y ya está listo."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:719
#, fuzzy
msgid "By default, a database table used for storing tokens is created for you, however you can disable this option with the `quarkus.oidc.db-token-state-manager.create-database-table-if-not-exists` configuration property.  Should you want the Hibernate ORM extension to create this table instead, you simply need to include an Entity like this one:"
msgstr "Por defecto, se crea una tabla de base de datos para almacenar tokens, sin embargo, puede desactivar esta opción con la propiedad de configuración `quarkus.oidc.db-token-state-manager.create-database-table-if-not-exists`. Si desea que la extensión ORM de Hibernate cree esta tabla en su lugar, sólo tiene que incluir una entidad como ésta:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:723
#, no-wrap
msgid "package org.acme.manager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:728
#, no-wrap
msgid ""
"import jakarta.persistence.Column;\n"
"import jakarta.persistence.Entity;\n"
"import jakarta.persistence.Id;\n"
"import jakarta.persistence.Table;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:732
#, no-wrap
msgid ""
"@Table(name = \"oidc_db_token_state_manager\") <1>\n"
"@Entity\n"
"public class OidcDbTokenStateManagerEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:735
#, no-wrap
msgid ""
"    @Id\n"
"    String id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:738
#, no-wrap
msgid ""
"    @Column(name = \"id_token\", length = 4000) <2>\n"
"    String idToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:741
#, no-wrap
msgid ""
"    @Column(name = \"refresh_token\", length = 4000)\n"
"    String refreshToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:744
#, no-wrap
msgid ""
"    @Column(name = \"access_token\", length = 4000)\n"
"    String accessToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:748
#, no-wrap
msgid ""
"    @Column(name = \"expires_in\")\n"
"    Long expiresIn;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:750
#, fuzzy
msgid "The Hibernate ORM extension will only create this table for you when database schema is generated. Please refer to the xref:hibernate-orm.adoc[Hibernate ORM] guide for more information."
msgstr "La extensión Hibernate ORM sólo creará esta tabla cuando se genere el esquema de la base de datos. Consulte la guía de Hibernate  link:hibernate-orm.html[ORM] para obtener más información."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:751
#, fuzzy
msgid "You can choose column length depending on the length of your tokens."
msgstr "Puede elegir la longitud de la columna en función de la longitud de sus fichas."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:752
#, fuzzy, no-wrap
msgid "Logout and expiration"
msgstr "Cierre de sesión y expiración"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:755
#, fuzzy
msgid "There are two main ways for the authentication information to expire: the tokens expired and were not renewed or an explicit logout operation was triggered."
msgstr "Hay dos formas principales de que caduque la información de autenticación: que los tokens caduquen y no se renueven o que se active una operación explícita de cierre de sesión."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:757
#, fuzzy
msgid "Let's start with explicit logout operations."
msgstr "Empecemos con las operaciones explícitas de cierre de sesión."

#. type: Title =====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:760
#, fuzzy, no-wrap
msgid "User-initiated logout"
msgstr "Cierre de sesión iniciado por el usuario"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:764
#, fuzzy
msgid "Users can request a logout by sending a request to the Quarkus endpoint logout path set with a `quarkus.oidc.logout.path` property.  For example, if the endpoint address is `https://application.com/webapp` and the `quarkus.oidc.logout.path` is set to \"/logout\" then the logout request has to be sent to `https://application.com/webapp/logout`."
msgstr "Los usuarios pueden solicitar un cierre de sesión enviando una solicitud a la ruta de cierre de sesión del punto final de Quarkus establecida con una propiedad `quarkus.oidc.logout.path`. Por ejemplo, si la dirección del punto final es `&lt;a href=\"https://application.com/webapp\" class=\"bare\"&gt;https://application.com/webapp&lt;/a&gt;` y `quarkus.oidc.logout.path` está configurada como \"/logout\", la solicitud de cierre de sesión debe enviarse a `&lt;a href=\"https://application.com/webapp/logout\" class=\"bare\"&gt;https://application.com/webapp/logout&lt;/a&gt;`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:766
#, fuzzy
msgid "This logout request will start an https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP-Initiated Logout] and the user will be redirected to the OpenID Connect Provider to logout where a user may be asked to confirm the logout is indeed intended."
msgstr "Esta solicitud de cierre de sesión iniciará un  link:https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[cierre de sesión iniciado por el RP] y el usuario será redirigido al proveedor de OpenID Connect para cerrar sesión, donde se le puede pedir al usuario que confirme que el cierre de sesión es realmente intencionado."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:768
#, fuzzy
msgid "The user will be returned to the endpoint post logout page once the logout has been completed if the `quarkus.oidc.logout.post-logout-path` property is set. For example, if the endpoint address is `https://application.com/webapp` and the `quarkus.oidc.logout.post-logout-path` is set to \"/signin\" then the user will be returned to `https://application.com/webapp/signin` (note this URI must be registered as a valid `post_logout_redirect_uri` in the OpenID Connect Provider)."
msgstr "El usuario será devuelto a la página de post cierre de sesión del endpoint una vez que el cierre de sesión se haya completado si la propiedad `quarkus.oidc.logout.post-logout-path` está establecida. Por ejemplo, si la dirección del endpoint es `&lt;a href=\"https://application.com/webapp\" class=\"bare\"&gt;https://application.com/webapp&lt;/a&gt;` y la propiedad `quarkus.oidc.logout.post-logout-path` está configurada como \"/signin\", el usuario será devuelto a la página `&lt;a href=\"https://application.com/webapp/signin\" class=\"bare\"&gt;https://application.com/webapp/signin&lt;/a&gt;` (tenga en cuenta que este URI debe estar registrado como un `post_logout_redirect_uri` válido en el proveedor de OpenID Connect)."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:770
#, fuzzy
msgid "If the `quarkus.oidc.logout.post-logout-path` is set then a `q_post_logout` cookie will be created and a matching `state` query parameter will be added to the logout redirect URI and the OpenID Connect Provider will return this `state` once the logout has been completed. It is recommended for the Quarkus `web-app` applications to check that a `state` query parameter matches the value of the `q_post_logout` cookie which can be done for example in a Jakarta REST filter."
msgstr "Si se establece `quarkus.oidc.logout.post-logout-path`, se creará una cookie `q_post_logout` y se agregará un parámetro de consulta `state` coincidente al URI de redirección de cierre de sesión y el proveedor OpenID Connect devolverá este `state` una vez que se haya completado el cierre de sesión. Se recomienda que las aplicaciones `web-app` de Quarkus comprueben que un parámetro de consulta `state` coincide con el valor de la cookie `q_post_logout`, lo que puede hacerse, por ejemplo, en un filtro REST de Yakarta."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:772
#, fuzzy
msgid "Note that a cookie name varies when using xref:security-openid-connect-multitenancy.adoc[OpenID Connect Multi-Tenancy]. For example, it will be named `q_post_logout_tenant_1` for a tenant with a `tenant_1` ID, and so on."
msgstr "Tenga en cuenta que el nombre de una cookie varía cuando se utiliza  link:security-openid-connect-multitenancy.html[OpenID Connect Multi-Tenancy]. Por ejemplo, se llamará `q_post_logout_tenant_1` para un inquilino con un ID de `tenant_1`, y así sucesivamente."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:774
#, fuzzy
msgid "Here is an example of how to configure a Quarkus app initiated logout flow:"
msgstr "He aquí un ejemplo de cómo configurar un flujo de cierre de sesión iniciado por una aplicación de Quarkus:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:781
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:844
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:869
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=frontend\n"
"quarkus.oidc.credentials.secret=secret\n"
"quarkus.oidc.application-type=web-app\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:785
#, no-wrap
msgid ""
"quarkus.oidc.logout.path=/logout\n"
"# Logged-out users should be returned to the /welcome.html site which will offer an option to re-login:\n"
"quarkus.oidc.logout.post-logout-path=/welcome.html\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:789
#, no-wrap
msgid ""
"# Only the authenticated users can initiate a logout:\n"
"quarkus.http.auth.permission.authenticated.paths=/logout\n"
"quarkus.http.auth.permission.authenticated.policy=authenticated\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:793
#, no-wrap
msgid ""
"# All users can see the welcome page:\n"
"quarkus.http.auth.permission.public.paths=/welcome.html\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:797
#, fuzzy
msgid "You may also need to set `quarkus.oidc.authentication.cookie-path` to a path value common to all the application resources which is `/` in this example.  For more information, see the xref:oidc-cookies[Cookies] section."
msgstr "También puede ser necesario establecer `quarkus.oidc.authentication.cookie-path` a un valor de ruta común a todos los recursos de la aplicación que es `/` en este ejemplo. Para más información, consulte la sección  link:#oidc-cookies[Cookies]."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:802
#, fuzzy
msgid "Some OIDC providers do not support link:https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP-initiated logout] specification and do not return an OpenID Connect well-known `end_session_endpoint` metadata property.  However, this is not a problem for Quarkus because the specific logout mechanisms of such OIDC providers only differ in how the logout URL query parameters are named."
msgstr "Algunos proveedores de OIDC no admiten la especificación de cierre de sesión  link:https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[iniciado por RP] y no devuelven una propiedad de metadatos conocida de OpenID Connect `end_session_endpoint`. Sin embargo, esto no es un problema para Quarkus porque los mecanismos específicos de cierre de sesión de dichos proveedores de OIDC solo difieren en cómo se nombran los parámetros de consulta de la URL de cierre de sesión."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:804
#, fuzzy
msgid "According to the https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP-initiated logout] specification, the `quarkus.oidc.logout.post-logout-path` property is represented as a `post_logout_redirect_uri` query parameter, which is not recognized by the providers that do not support this specification."
msgstr "Según la especificación de  link:https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[cierre de sesión iniciado por el RP], la propiedad `quarkus.oidc.logout.post-logout-path` se representa como un parámetro de consulta `post_logout_redirect_uri`, que no es reconocido por los proveedores que no soportan esta especificación."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:806
#, fuzzy
msgid "You can use `quarkus.oidc.logout.post-logout-url-param` to work around this issue. You can also request more logout query parameters added with `quarkus.oidc.logout.extra-params`. For example, here is how you can support a logout with `Auth0`:"
msgstr "Puede utilizar `quarkus.oidc.logout.post-logout-url-param` para solucionar este problema. También puede solicitar más parámetros de consulta de cierre de sesión añadidos con `quarkus.oidc.logout.extra-params`. Por ejemplo, así es como se puede apoyar un cierre de sesión con `Auth0`:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:813
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=https://dev-xxx.us.auth0.com\n"
"quarkus.oidc.client-id=redacted\n"
"quarkus.oidc.credentials.secret=redacted\n"
"quarkus.oidc.application-type=web-app\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:816
#, no-wrap
msgid ""
"quarkus.oidc.tenant-logout.logout.path=/logout\n"
"quarkus.oidc.tenant-logout.logout.post-logout-path=/welcome.html\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:821
#, no-wrap
msgid ""
"# Auth0 does not return the `end_session_endpoint` metadata property, configure it instead\n"
"quarkus.oidc.end-session-path=v2/logout\n"
"# Auth0 will not recognize the 'post_logout_redirect_uri' query parameter so make sure it is named as 'returnTo'\n"
"quarkus.oidc.logout.post-logout-uri-param=returnTo\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:825
#, no-wrap
msgid ""
"# Set more properties if needed.\n"
"# For example, if 'client_id' is provided then a valid logout URI should be set as Auth0 Application property, without it - as Auth0 Tenant property.\n"
"quarkus.oidc.logout.extra-params.client_id=${quarkus.oidc.client-id}\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:829
#, fuzzy, no-wrap
msgid "Back-channel logout"
msgstr "Desconexión del canal trasero"

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:833
#, fuzzy
msgid "The OIDC provider can force the logout of all applications using the authentification data: this is called back-channel logout.  In this case the OIDC will call a specific URL from each application to trigger that logout."
msgstr "El proveedor de OIDC puede forzar el cierre de sesión de todas las aplicaciones que utilicen los datos de autenticación: es lo que se denomina back-channel logout. En este caso, el OIDC llamará a una URL específica desde cada aplicación para desencadenar ese cierre de sesión."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:835
#, fuzzy
msgid "link:https://openid.net/specs/openid-connect-backchannel-1_0.html[Back-Channel Logout] is used by OpenID Connect providers to log out the current user from all the applications this user is currently logged in, bypassing the user agent."
msgstr "Los proveedores de OpenID Connect utilizan  link:https://openid.net/specs/openid-connect-backchannel-1_0.html[el cierre de sesión por canal trasero] para cerrar la sesión del usuario actual en todas las aplicaciones en las que este usuario haya iniciado sesión, sin pasar por el agente de usuario."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:837
#, fuzzy
msgid "You can configure Quarkus to support `Back-Channel Logout` as follows:"
msgstr "Puede configurar Quarkus para que admita `Back-Channel Logout` del siguiente modo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:846
#, no-wrap
msgid "quarkus.oidc.logout.backchannel.path=/back-channel-logout\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:850
#, fuzzy
msgid "The absolute `back-channel logout` URL is calculated by adding `quarkus.oidc.back-channel-logout.path` to the current endpoint URL, for example, `http://localhost:8080/back-channel-logout`.  You will need to configure this URL in the admin console of your OIDC provider."
msgstr "La URL absoluta de `back-channel logout` se calcula añadiendo `quarkus.oidc.back-channel-logout.path` a la URL del punto final actual, por ejemplo, `&lt;a href=\"http://localhost:8080/back-channel-logout\" class=\"bare\"&gt;http://localhost:8080/back-channel-logout&lt;/a&gt;`. Deberá configurar esta URL en la consola de administración de su proveedor de OIDC."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:853
#, fuzzy
msgid "You will also need to configure a token age property for the logout token verification to succeed if your OpenID Connect Provider does not set an expiry claim in the current logout token.  For example, set `quarkus.oidc.token.age=10S` to ensure that no more than 10 seconds elapse since the logout token's `iat` (issued at) time."
msgstr "También deberá configurar una propiedad de antigüedad del token para que la verificación del token de cierre de sesión se realice correctamente si el proveedor de OpenID Connect no establece una reclamación de caducidad en el token de cierre de sesión actual. Por ejemplo, configure `quarkus.oidc.token.age=10S` para asegurarse de que no transcurran más de 10 segundos desde la fecha de `iat` (fecha de emisión) del token de cierre de sesión."

#. type: Title =====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:855
#, fuzzy, no-wrap
msgid "Front-channel logout"
msgstr "Desconexión del canal frontal"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:860
#, fuzzy
msgid "link:https://openid.net/specs/openid-connect-frontchannel-1_0.html[Front-Channel Logout] can be used to logout the current user directly from the user agent (e.g. its browser).  It is like xref:back-channel-logout[Back-channel logout] but the logout steps are executed by the user agent like the browser and not in the background by the OIDP provider.  This option is rarely used."
msgstr "link:https://openid.net/specs/openid-connect-frontchannel-1_0.html[Front-Channel Logout] se puede utilizar para cerrar la sesión del usuario actual directamente desde el agente de usuario (por ejemplo, su navegador). Es como el cierre de sesión  link:#back-channel-logout[por canal trasero], pero los pasos del cierre de sesión son ejecutados por el agente de usuario, como el navegador, y no en segundo plano por el proveedor de OIDP. Esta opción se utiliza raramente."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:862
#, fuzzy
msgid "You can configure Quarkus to support `Front-Channel Logout` as follows:"
msgstr "Puede configurar Quarkus para que admita `Front-Channel Logout` del siguiente modo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:871
#, no-wrap
msgid "quarkus.oidc.logout.frontchannel.path=/front-channel-logout\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:874
#, fuzzy
msgid "This path will be compared against the current request's path and the user will be logged out if these paths match."
msgstr "Esta ruta se comparará con la ruta de la solicitud actual y el usuario se desconectará si estas rutas coinciden."

#. type: Title =====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:876
#, fuzzy, no-wrap
msgid "Local logout"
msgstr "Cierre de sesión local"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:882
#, fuzzy
msgid "xref:user-initiated-logout[User-initiated logout] will log the user out of the OIDC provider, if it is used as single sign-on, it might not be what you require.  If, for example, your OIDC provider is Google, you will be logged out from Google and its services.  Instead the user might just want to log out of that specific application.  Another use case might be when the OIDC provider does not have a logout endpoint."
msgstr "El  link:#user-initiated-logout[cierre de sesión iniciado por el] usuario cerrará la sesión del usuario en el proveedor de OIDC, si se utiliza como inicio de sesión único, puede que no sea lo que necesitas. Si, por ejemplo, tu proveedor de OIDC es Google, se cerrará la sesión del usuario en Google y sus servicios. En cambio, puede que el usuario sólo quiera cerrar la sesión de esa aplicación concreta. Otro caso de uso podría ser cuando el proveedor de OIDC no tiene un punto final de cierre de sesión."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:884
#, fuzzy
msgid "By using xref:oidc-session[OidcSession], you can support a local logout, which means that only the local session cookie is cleared, as shown in the following example:"
msgstr "Mediante el uso de  link:#oidc-session[OidcSession], puede soportar un cierre de sesión local, lo que significa que sólo se borra la cookie de sesión local, como se muestra en el siguiente ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:890
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:892
#, no-wrap
msgid "import io.quarkus.oidc.OidcSession;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:895
#, no-wrap
msgid ""
"@Path(\"/service\")\n"
"public class ServiceResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:898
#, no-wrap
msgid ""
"    @Inject\n"
"    OidcSession oidcSession;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:905
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"logout\")\n"
"    public String logout() {\n"
"        oidcSession.logout().await().indefinitely();\n"
"        return \"You are logged out\".\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:909
#, fuzzy
msgid "====== Using `OidcSession` for local logout"
msgstr "Uso de `OidcSession` para el cierre de sesión local"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:912
#, fuzzy
msgid "`io.quarkus.oidc.OidcSession` is a wrapper around the current `IdToken`, which can help to perform a xref:local-logout[Local logout], retrieve the current session's tenant identifier, and check when the session will expire.  More useful methods will be added to it over time."
msgstr "`io.quarkus.oidc.OidcSession` es una envoltura alrededor de la actual `IdToken`, que puede ayudar a realizar un  link:#local-logout[cierre de sesión Local], recuperar el identificador de inquilino de la sesión actual, y comprobar cuándo expirará la sesión. Con el tiempo se le irán añadiendo más métodos útiles."

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:914
#, fuzzy, no-wrap
msgid "Session management"
msgstr "Gestión de sesiones"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:918
#, fuzzy
msgid "By default, logout is based on the expiration time of the ID token issued by the OIDC provider. When the ID token expires, the current user session at the Quarkus endpoint is invalidated and the user is redirected to the OIDC provider again to authenticate.  If the session at the OIDC provider is still active, users are automatically re-authenticated without needing to provide their credentials again."
msgstr "Por defecto, el cierre de sesión se basa en el tiempo de expiración del token de identificación emitido por el proveedor de OIDC. Cuando el token de identificación caduca, la sesión actual del usuario en el punto final de Quarkus se invalida y el usuario es redirigido al proveedor de OIDC de nuevo para autenticarse. Si la sesión en el proveedor de OIDC sigue activa, los usuarios se vuelven a autenticar automáticamente sin necesidad de proporcionar de nuevo sus credenciales."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:921
#, fuzzy
msgid "The current user session can be automatically extended by enabling the `quarkus.oidc.token.refresh-expired` property.  If set to `true`, when the current ID token expires, a refresh token grant will be used to refresh the ID token as well as access and refresh tokens."
msgstr "La sesión de usuario actual puede extenderse automáticamente habilitando la propiedad `quarkus.oidc.token.refresh-expired`. Si se establece en `true`, cuando caduque el token de ID actual, se utilizará una concesión de token de actualización para actualizar el token de ID, así como los tokens de acceso y actualización."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:925
#, fuzzy
msgid "If you have a xref:security-oidc-bearer-token-authentication.adoc#single-page-applications[single page application for service applications] where your OIDC provider script such as `keycloak.js` is managing an authorization code flow then that script will also control the SPA authentication session lifespan."
msgstr "Si tiene una  link:security-oidc-bearer-token-authentication.html#single-page-applications[aplicación de una sola página para aplicaciones de servicio] en la que su script de proveedor de OIDC, como `keycloak.js`, gestiona un flujo de código de autorización, entonces ese script también controlará la duración de la sesión de autenticación de SPA."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:928
#, fuzzy
msgid "If you work with a Quarkus OIDC `web-app` application, then it is the Quarkus OIDC code authentication mechanism that is managing the user session lifespan."
msgstr "Si trabajas con una aplicación de Quarkus OIDC `web-app`, entonces es el mecanismo de autenticación de código de Quarkus OIDC el que está gestionando la duración de la sesión del usuario."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:931
#, fuzzy
msgid "To use the refresh token, you should carefully configure the session cookie age.  The session age should be longer than the ID token lifespan and close to or equal to the refresh token lifespan."
msgstr "Para utilizar el token de actualización, debe configurar cuidadosamente la antigüedad de la cookie de sesión. La edad de la sesión debe ser mayor que la vida útil del token de identificación y cercana o igual a la vida útil del token de actualización."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:933
#, fuzzy
msgid "You calculate the session age by adding the lifespan value of the current ID token and the values of the `quarkus.oidc.authentication.session-age-extension` and `quarkus.oidc.token.lifespan-grace` properties."
msgstr "La edad de la sesión se calcula sumando el valor de vida útil del token de ID actual y los valores de las propiedades `quarkus.oidc.authentication.session-age-extension` y `quarkus.oidc.token.lifespan-grace`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:937
#, fuzzy
msgid "You use only the `quarkus.oidc.authentication.session-age-extension` property to significantly extend the session lifespan, if required.  You use the `quarkus.oidc.token.lifespan-grace` property only for taking some small clock skews into consideration."
msgstr "Utiliza sólo la propiedad `quarkus.oidc.authentication.session-age-extension` para extender significativamente la vida de la sesión, si es necesario. La propiedad `quarkus.oidc.token.lifespan-grace` sólo se utiliza para tener en cuenta pequeñas desviaciones del reloj."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:941
#, fuzzy
msgid "When the current authenticated user returns to the protected Quarkus endpoint and the ID token associated with the session cookie has expired, then, by default, the user is automatically redirected to the OIDC Authorization endpoint to re-authenticate.  The OIDC provider might challenge the user again if the session between the user and this OIDC provider is still active, which might happen if the session is configured to last longer than the ID token."
msgstr "Cuando el usuario autenticado actual regresa al punto final protegido de Quarkus y el token de identificación asociado con la cookie de sesión ha caducado, entonces, por defecto, el usuario es redirigido automáticamente al punto final de autorización de OIDC para volver a autenticarse. El proveedor de OIDC podría cuestionar al usuario de nuevo si la sesión entre el usuario y este proveedor de OIDC sigue activa, lo que podría ocurrir si la sesión está configurada para durar más que el token de ID."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:945
#, fuzzy
msgid "If the `quarkus.oidc.token.refresh-expired` is set to `true`, then the expired ID token (as well as the access token) is refreshed by using the refresh token returned with the initial authorization code grant response.  This refresh token might also be recycled (refreshed) itself as part of this process.  As a result, the new session cookie is created and the session is extended."
msgstr "Si `quarkus.oidc.token.refresh-expired` está configurado como `true`, el token de identificación caducado (así como el token de acceso) se actualiza utilizando el token de actualización devuelto con la respuesta de concesión del código de autorización inicial. Este token de actualización también puede ser reciclado (actualizado) como parte de este proceso. Como resultado, se crea la nueva cookie de sesión y se amplía la sesión."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:952
#, fuzzy
msgid "In instances where the user is not very active, you can use the `quarkus.oidc.authentication.session-age-extension` property to help handle expired ID tokens.  If the ID token expires, the session cookie might not be returned to the Quarkus endpoint during the next user request as the cookie lifespan would have elapsed.  Quarkus assumes that this request is the first authentication request.  Set `quarkus.oidc.authentication.session-age-extension` to be _reasonably_ long for your barely-active users and in accordance with your security policies."
msgstr "En los casos en que el usuario no es muy activo, se puede utilizar la propiedad `quarkus.oidc.authentication.session-age-extension` para ayudar a manejar los tokens de identificación caducados. Si el identificador caduca, la cookie de sesión podría no ser devuelta al punto final de Quarkus durante la siguiente solicitud del usuario, ya que la vida útil de la cookie habría transcurrido. Quarkus asume que esta solicitud es la primera solicitud de autenticación. Configure `quarkus.oidc.authentication.session-age-extension` para que sea _razonablemente_ largo para sus usuarios poco activos y de acuerdo con sus políticas de seguridad."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:956
#, fuzzy
msgid "You can go one step further and proactively refresh ID tokens or access tokens that are about to expire.  Set `quarkus.oidc.token.refresh-token-time-skew` to the value you want to anticipate the refresh. If, during the current user request, it is calculated that the current ID token will expire within this `quarkus.oidc.token.refresh-token-time-skew` then it will be refreshed and the new session cookie will be created. This property should be set to a value which is less than the ID token lifespan; the closer it is to this lifespan value the more often the ID token will be refreshed."
msgstr "Puede ir un paso más allá y actualizar proactivamente los tokens de identificación o los tokens de acceso que están a punto de caducar. Establezca `quarkus.oidc.token.refresh-token-time-skew` en el valor que desee para anticipar la actualización. Si, durante la petición del usuario actual, se calcula que el token de identificación actual expirará dentro de este `quarkus.oidc.token.refresh-token-time-skew` entonces se refrescará y se creará la nueva cookie de sesión. Esta propiedad debe establecerse en un valor que sea menor que la vida útil del identificador; cuanto más se acerque a este valor, más a menudo se actualizará el identificador."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:958
#, fuzzy
msgid "You can further optimize this process by having a simple JavaScript function ping your Quarkus endpoint to periodically emulate the user activity, which minimizes the time frame during which the user might have to be re-authenticated."
msgstr "Puede optimizar aún más este proceso haciendo que una simple función de JavaScript haga ping a su punto final de Quarkus para emular periódicamente la actividad del usuario, lo que minimiza el lapso de tiempo durante el cual el usuario podría tener que volver a autenticarse."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:963
#, fuzzy
msgid "You cannot extend the user session indefinitely.  The returning user with the expired ID token will have to re-authenticate at the OIDC provider endpoint once the refresh token has expired."
msgstr "No se puede prolongar la sesión de usuario indefinidamente. El usuario que regresa con el token de ID caducado tendrá que volver a autenticarse en el punto final del proveedor de OIDC una vez que el token de actualización haya caducado."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:966
#, fuzzy, no-wrap
msgid "Integration with GitHub and non-OIDC OAuth2 providers"
msgstr "Integración con GitHub y proveedores OAuth2 ajenos a OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:970
#, fuzzy
msgid "Some well known providers such as GitHub or LinkedIn are not OpenID Connect but OAuth2 providers which support the `authorization code flow`, for example, link:https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps[GitHub OAuth2] and link:https://docs.microsoft.com/en-us/linkedin/shared/authentication/authorization-code-flow[LinkedIn OAuth2].  Remember, OIDC is built on top of OAuth2."
msgstr "Algunos proveedores muy conocidos, como  link:https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps[GitHub] o LinkedIn, no son OpenID Connect, sino proveedores OAuth2 compatibles con `authorization code flow`, por ejemplo,  link:https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps[GitHub OAuth2] y  link:https://docs.microsoft.com/en-us/linkedin/shared/authentication/authorization-code-flow[LinkedIn OAuth2]. Recuerda que OIDC se basa en OAuth2."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:972
#, fuzzy
msgid "The main difference between OpenID Connect and OAuth2 providers is that OpenID Connect providers return an `ID Token` that represents a user authentication, in addition to the standard authorization code flow `access` and `refresh` tokens returned by `OAuth2` providers."
msgstr "La principal diferencia entre los proveedores de OpenID Connect y OAuth2 es que los proveedores de OpenID Connect devuelven un `ID Token` que representa una autenticación de usuario, además de los tokens de flujo de código de autorización estándar `access` y `refresh` devueltos por los proveedores de `OAuth2`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:974
#, fuzzy
msgid "OAuth2 providers such as GitHub do not return `IdToken`, the fact of the user authentication is implicit and is indirectly represented by the `access` token which represents an authenticated user authorizing the current Quarkus `web-app` application to access some data on behalf of the authenticated user."
msgstr "Los proveedores OAuth2 como GitHub no devuelven `IdToken`, el hecho de la autenticación del usuario es implícito y está representado indirectamente por el token `access` que representa a un usuario autenticado que autoriza a la aplicación actual Quarkus `web-app` a acceder a algunos datos en nombre del usuario autenticado."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:978
#, fuzzy
msgid "For OIDC, you validate the ID token as proof of authentication validity whereas in the case of OAuth2, you validate the access token.  This is done by subsequently calling an endpoint that requires the access token and that typically returns user information.  This approach is similar to the OIDC xref:user-info[UserInfo] approach, with `UserInfo` fetched by Quarkus OIDC on your behalf."
msgstr "En el caso de OIDC, se valida el token de identificación como prueba de la validez de la autenticación, mientras que en el caso de OAuth2, se valida el token de acceso. Esto se hace llamando posteriormente a un punto final que requiere el token de acceso y que normalmente devuelve información sobre el usuario. Este enfoque es similar al de OIDC  link:#user-info[UserInfo], con `UserInfo` obtenido por Quarkus OIDC en su nombre."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:980
#, fuzzy
msgid "For example, when working with GitHub, the Quarkus endpoint can acquire an `access` token which allows the Quarkus endpoint to request a GitHub profile for the current user."
msgstr "Por ejemplo, cuando se trabaja con GitHub, el punto final de Quarkus puede adquirir un token `access` que permite al punto final de Quarkus solicitar un perfil de GitHub para el usuario actual."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:982
#, fuzzy
msgid "To support the integration with such OAuth2 servers, `quarkus-oidc` needs to be configured a bit differently to allow the authorization code flow responses without `IdToken`: `quarkus.oidc.authentication.id-token-required=false`."
msgstr "Para soportar la integración con tales servidores OAuth2, `quarkus-oidc` necesita ser configurado un poco diferente para permitir las respuestas de flujo de código de autorización sin `IdToken`: `quarkus.oidc.authentication.id-token-required=false`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:988
#, fuzzy
msgid "Even though you configure the extension to support the authorization code flows without `IdToken`, an internal `IdToken` is generated to standardize the way `quarkus-oidc` operates.  You use an `IdToken` to support the authentication session and to avoid redirecting the user to the provider, such as GitHub, on every request.  In this case, the session lifespan is set to 5 minutes, which you can can extend further as described in the xref:session-management[session management] section."
msgstr "Aunque configures la extensión para soportar los flujos de código de autorización sin `IdToken`, se genera un `IdToken` interno para estandarizar la forma en que opera `quarkus-oidc`. Se utiliza `IdToken` para soportar la sesión de autenticación y evitar redirigir al usuario al proveedor, como GitHub, en cada solicitud. En este caso, el tiempo de vida de la sesión se establece en 5 minutos, que se puede ampliar aún más como se describe en la sección de  link:#session-management[gestión de sesiones]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:990
#, fuzzy
msgid "This simplifies how you handle an application that supports multiple OIDC providers."
msgstr "Esto simplifica el manejo de una aplicación que soporta múltiples proveedores OIDC."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:999
#, fuzzy
msgid "The next step is to ensure that the returned access token can be useful and is valid to the current Quarkus endpoint.  The first way is to call the OAuth2 provider introspection endpoint by configuring `quarkus.oidc.introspection-path`, if the provider offers such an endpoint.  In this case you can use the access token as a source of roles using `quarkus.oidc.roles.source=accesstoken`.  If no introspection endpoint is present, you can attempt instead to request xref:user-info[UserInfo] from the provider as it will at least validate the access token.  To do so, specify `quarkus.oidc.token.verify-access-token-with-user-info=true`.  You also need to set the `quarkus.oidc.user-info-path` property to a URL endpoint that fetches the user info (or to an endpoint protected by the access token).  For GitHub, since it does not have an introspection endpoint, requesting the UserInfo is required."
msgstr "El siguiente paso es asegurarse de que el token de acceso devuelto puede ser útil y es válido para el punto final actual de Quarkus. La primera forma es llamar al punto final de introspección del proveedor OAuth2 configurando `quarkus.oidc.introspection-path`, si el proveedor ofrece tal punto final. En este caso se puede usar el token de acceso como fuente de roles usando `quarkus.oidc.roles.source=accesstoken`. Si no hay ningún punto final de introspección, puedes intentar solicitar  link:#user-info[UserInfo] al proveedor, ya que al menos validará el token de acceso. Para ello, especifique `quarkus.oidc.token.verify-access-token-with-user-info=true`. También debes establecer la propiedad `quarkus.oidc.user-info-path` en un punto final de URL que obtenga la información de usuario (o en un punto final protegido por el token de acceso). En el caso de GitHub, dado que no dispone de un punto final de introspección, es necesario solicitar la información de usuario."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1005
#, fuzzy
msgid "Requiring xref:user-info[UserInfo] involves making a remote call on every request.  Therefore, you might want to consider caching `UserInfo` data.  For more information, see the xref:security-oidc-bearer-token-authentication.adoc#token-introspection-userinfo-cache[Token Introspection and UserInfo cache] section of the \"OpenID Connect (OIDC) Bearer token authentication\" guide."
msgstr "Requerir  link:#user-info[UserInfo] implica hacer una llamada remota en cada petición. Por lo tanto, es posible que desee considerar el almacenamiento en caché de los datos de `UserInfo`. Para obtener más información, consulta la sección  link:security-oidc-bearer-token-authentication.html#token-introspection-userinfo-cache[Introspección de tokens y] caché de UserInfo de la guía \"Autenticación con token de portador de OpenID Connect (OIDC)\"."

#. type: delimited block =
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1007
#, fuzzy
msgid "Alternatively, you may want to request that `UserInfo` is embedded into the internal generated `IdToken` with the `quarkus.oidc.cache-user-info-in-idtoken=true` property - the advantage of this approach is that by default no cached `UserInfo` state will be kept with the endpoint - instead it will be stored in a session cookie. You may also want to consider encrypting `IdToken` in this case if `UserInfo` contains sensitive data. For more information, see xref:token-state-manager[Encrypt tokens with TokenStateManager]."
msgstr "Alternativamente, puede que desee solicitar que `UserInfo` se incruste en el `IdToken` generado internamente con la propiedad `quarkus.oidc.cache-user-info-in-idtoken=true` - la ventaja de este enfoque es que por defecto ningún estado `UserInfo` en caché se mantendrá con el endpoint - en su lugar se almacenará en una cookie de sesión. También puede considerar cifrar `IdToken` en este caso si `UserInfo` contiene datos sensibles. Para obtener más información, consulte  link:#token-state-manager[Cifrar tokens con TokenStateManager]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1011
#, fuzzy
msgid "OAuth2 servers might not support a well-known configuration endpoint.  In this case, you must disable the discovery and configure the authorization, token, and introspection and the userinfo endpoint paths manually."
msgstr "Es posible que los servidores OAuth2 no admitan un endpoint de configuración conocido. En este caso, debes desactivar el descubrimiento y configurar manualmente las rutas de autorización, token e introspección y el endpoint userinfo."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1014
#, fuzzy
msgid "For well-known OIDC or OAuth2 providers, like Apple, Facebook, GitHub, Google, Microsoft, Spotify, and Twitter, Quarkus can help significantly simplify your application's configuration with the `quarkus.oidc.provider` property.  Here is how you can integrate `quarkus-oidc` with GitHub after you have link:https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app[created a GitHub OAuth application]. Configure your Quarkus endpoint like this:"
msgstr "Para proveedores OIDC u OAuth2 bien conocidos, como Apple, Facebook, GitHub, Google, Microsoft, Spotify y Twitter, Quarkus puede ayudar a simplificar significativamente la configuración de tu aplicación con la propiedad `quarkus.oidc.provider`. He aquí cómo puedes integrar `quarkus-oidc` con GitHub después de haber  link:https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app[creado una aplicación GitHub OAuth]. Configura tu endpoint de Quarkus así:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1020
#, no-wrap
msgid ""
"quarkus.oidc.provider=github\n"
"quarkus.oidc.client-id=github_app_clientid\n"
"quarkus.oidc.credentials.secret=github_app_clientsecret\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1023
#, no-wrap
msgid ""
"# user:email scope is requested by default, use 'quarkus.oidc.authentication.scopes' to request different scopes such as `read:user`.\n"
"# See https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps for more information.\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1030
#, no-wrap
msgid ""
"# Consider enabling UserInfo Cache\n"
"# quarkus.oidc.token-cache.max-size=1000\n"
"# quarkus.oidc.token-cache.time-to-live=5M\n"
"#\n"
"# Or having UserInfo cached inside IdToken itself\n"
"# quarkus.oidc.cache-user-info-in-idtoken=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1033
#, fuzzy
msgid "See xref:security-openid-connect-providers.adoc[OpenID Connect providers] for more details about configuring other well-known providers."
msgstr "Consulte  link:security-openid-connect-providers.html[Proveedores de OpenID] Connect para obtener más información sobre la configuración de otros proveedores conocidos."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1035
#, fuzzy
msgid "This is all what is needed for an endpoint like this one to return the currently-authenticated user's profile with `GET http://localhost:8080/github/userinfo` and access it as the individual `UserInfo` properties:"
msgstr "Esto es todo lo que se necesita para que un endpoint como éste devuelva el perfil del usuario autenticado actualmente con `GET &lt;a href=\"http://localhost:8080/github/userinfo\" class=\"bare\"&gt;http://localhost:8080/github/userinfo&lt;/a&gt;` y acceder a él como las propiedades individuales de `UserInfo`:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1042
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1113
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1045
#, no-wrap
msgid ""
"import io.quarkus.oidc.UserInfo;\n"
"import io.quarkus.security.Authenticated;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1049
#, no-wrap
msgid ""
"@Path(\"/github\")\n"
"@Authenticated\n"
"public class TokenResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1052
#, no-wrap
msgid ""
"    @Inject\n"
"    UserInfo userInfo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1060
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/userinfo\")\n"
"    @Produces(\"application/json\")\n"
"    public String getUserInfo() {\n"
"        return userInfo.getUserInfoString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1063
#, fuzzy
msgid "If you support more than one social provider with the help of xref:security-openid-connect-multitenancy.adoc[OpenID Connect Multi-Tenancy], for example, Google which is an OpenID Connect Provider returning `IdToken` and GitHub which is an OAuth2 provider returning no `IdToken` and only allowing to access `UserInfo` then you can have your endpoint working with only the injected `SecurityIdentity` for both Google and GitHub flows. A simple augmentation of `SecurityIdentity` will be required where a principal created with the internally generated `IdToken` will be replaced with the `UserInfo` based principal when the GiHub flow is active:"
msgstr "Si admite más de un proveedor social con la ayuda de  link:security-openid-connect-multitenancy.html[OpenID Connect Multi-Tenancy], por ejemplo, Google que es un proveedor de OpenID Connect que devuelve `IdToken` y GitHub que es un proveedor de OAuth2 que no devuelve `IdToken` y solo permite acceder a `UserInfo`, entonces puede hacer que su endpoint funcione solo con el `SecurityIdentity` inyectado para los flujos de Google y GitHub. Se requerirá un simple aumento de `SecurityIdentity` donde un principal creado con el `IdToken` generado internamente será reemplazado por el principal basado en `UserInfo` cuando el flujo de GiHub esté activo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1067
#, no-wrap
msgid "package io.quarkus.it.keycloak;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1069
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1071
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1200
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1079
#, no-wrap
msgid ""
"import io.quarkus.oidc.UserInfo;\n"
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1082
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CustomSecurityIdentityAugmentor implements SecurityIdentityAugmentor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1090
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        RoutingContext routingContext = identity.getAttribute(RoutingContext.class.getName());\n"
"        if (routingContext != null && routingContext.normalizedPath().endsWith(\"/github\")) {\n"
"\t        QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
"\t        UserInfo userInfo = identity.getAttribute(\"userinfo\");\n"
"\t        builder.setPrincipal(new Principal() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1095
#, no-wrap
msgid ""
"\t            @Override\n"
"\t            public String getName() {\n"
"\t                return userInfo.getString(\"preferred_username\");\n"
"\t            }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1101
#, no-wrap
msgid ""
"\t        });\n"
"\t        identity = builder.build();\n"
"        }\n"
"        return Uni.createFrom().item(identity);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1103
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1106
#, fuzzy
msgid "Now, the following code will work when the user signs into your application by using Google or GitHub:"
msgstr "Ahora, el siguiente código funcionará cuando el usuario inicie sesión en tu aplicación utilizando Google o GitHub:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1116
#, no-wrap
msgid ""
"import io.quarkus.security.Authenticated;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1120
#, no-wrap
msgid ""
"@Path(\"/service\")\n"
"@Authenticated\n"
"public class TokenResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1123
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity identity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1130
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/google\")\n"
"    @Produces(\"application/json\")\n"
"    public String getUserName() {\n"
"        return identity.getPrincipal().getName();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1138
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/github\")\n"
"    @Produces(\"application/json\")\n"
"    public String getUserName() {\n"
"        return identity.getPrincipal().getUserName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1141
#, fuzzy
msgid "Possibly a simpler alternative is to inject both `@IdToken JsonWebToken` and `UserInfo` and use `JsonWebToken` when dealing with the providers returning `IdToken` and `UserInfo` with the providers which do not return `IdToken`."
msgstr "Posiblemente una alternativa más sencilla sea inyectar tanto `@IdToken JsonWebToken` como `UserInfo` y utilizar `JsonWebToken` cuando se trate de los proveedores que devuelven `IdToken` y `UserInfo` con los proveedores que no devuelven `IdToken`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1143
#, fuzzy
msgid "You must ensure that the callback path you enter in the GitHub OAuth application configuration matches the endpoint path where you'd like the user be redirected to after a successful GitHub authentication and application authorization, in this case it has to be set to `http:localhost:8080/github/userinfo`."
msgstr "Debes asegurarte de que la ruta de devolución de llamada que introduces en la configuración de la aplicación GitHub OAuth coincide con la ruta del punto final al que te gustaría que se redirigiera al usuario tras una autenticación de GitHub y una autorización de la aplicación satisfactorias, en este caso debe establecerse en `http:localhost:8080/github/userinfo`."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1145
#, fuzzy, no-wrap
msgid "Listening to important authentication events"
msgstr "Escuchar eventos de autenticación importantes"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1151
#, fuzzy
msgid "You can register the `@ApplicationScoped` bean which will observe important OIDC authentication events.  When a user logs in for the first time, reauthenticates, or refreshes the session, the listener is updated.  In the future, more events might be reported.  For example:"
msgstr "Puedes registrar el bean `@ApplicationScoped` que observará importantes eventos de autenticación OIDC. Cuando un usuario se conecta por primera vez, se reautentica, o refresca la sesión, el receptor se actualiza. En el futuro, más eventos podrían ser reportados. Por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1156
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.event.Observes;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1161
#, no-wrap
msgid ""
"import io.quarkus.oidc.IdTokenCredential;\n"
"import io.quarkus.oidc.SecurityEvent;\n"
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1164
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class SecurityEventListener {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1171
#, no-wrap
msgid ""
"    public void event(@Observes SecurityEvent event) {\n"
"        String tenantId = event.getSecurityIdentity().getAttribute(\"tenant-id\");\n"
"        RoutingContext vertxContext = event.getSecurityIdentity().getAttribute(RoutingContext.class.getName());\n"
"        vertxContext.put(\"listener-message\", String.format(\"event:%s,tenantId:%s\", event.getEventType().name(), tenantId));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1173
#, fuzzy, no-wrap
msgid "Propagating tokens to downstream services"
msgstr "Propagación de fichas a servicios posteriores"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1176
#, fuzzy
msgid "For information about Authorization Code Flow access token propagation to downstream services, see the xref:security-openid-connect-client-reference.adoc#token-propagation[Token Propagation] section."
msgstr "Para obtener información sobre la propagación de tokens de acceso de flujo de código de autorización a servicios posteriores, consulte la sección  link:security-openid-connect-client-reference.html#token-propagation[Propagación de tokens]."

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1178
#, fuzzy, no-wrap
msgid "Integration considerations"
msgstr "Consideraciones sobre la integración"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1181
#, fuzzy
msgid "Your application secured by OIDC integrates in an environment where it can be called from single-page applications, needs to work with well-known OIDC providers, run behind HTTP Reverse Proxy, require external and internal access, etc."
msgstr "Su aplicación asegurada por OIDC se integra en un entorno en el que puede ser llamada desde aplicaciones de una sola página, necesita trabajar con proveedores OIDC bien conocidos, ejecutarse detrás de un proxy inverso HTTP, requerir acceso externo e interno, etc."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1183
#, fuzzy
msgid "This section discusses these considerations."
msgstr "En esta sección se analizan estas consideraciones."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1184
#, fuzzy, no-wrap
msgid "Single-page applications"
msgstr "Aplicaciones de una sola página"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1187
#, fuzzy
msgid "You can check if implementing single-page applications (SPAs) the way it is suggested in the xref:security-oidc-bearer-token-authentication.adoc#single-page-applications[Single-page applications] section of the \"OpenID Connect (OIDC) Bearer token authentication\" guide meets your requirements."
msgstr "Puede comprobar si la implementación de aplicaciones de  link:security-oidc-bearer-token-authentication.html#single-page-applications[una sola] página (SPA) del modo sugerido en la sección  link:security-oidc-bearer-token-authentication.html#single-page-applications[Aplicaciones de una sola página] de la guía \"Autenticación con token de portador de OpenID Connect (OIDC)\" cumple sus requisitos."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1190
#, fuzzy
msgid "If you prefer to use SPAs and JavaScript APIs such as `Fetch` or `XMLHttpRequest`(XHR) with Quarkus web applications, be aware that OpenID Connect providers might not support cross-origin resource sharing (CORS) for authorization endpoints where the users are authenticated after a redirect from Quarkus.  This will lead to authentication failures if the Quarkus application and the OpenID Connect provider are hosted on different HTTP domains, ports, or both."
msgstr "Si prefiere utilizar SPA y API de JavaScript como `Fetch` o `XMLHttpRequest`(XHR) con aplicaciones web de Quarkus, tenga en cuenta que los proveedores de OpenID Connect podrían no admitir el uso compartido de recursos entre orígenes (CORS) para puntos finales de autorización en los que los usuarios se autentican después de una redirección desde Quarkus. Esto dará lugar a fallos de autenticación si la aplicación Quarkus y el proveedor OpenID Connect están alojados en diferentes dominios HTTP, puertos, o ambos."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1192
#, fuzzy
msgid "In such cases, set the `quarkus.oidc.authentication.java-script-auto-redirect` property to `false`, which will instruct Quarkus to return a `499` status code and a `WWW-Authenticate` header with the `OIDC` value."
msgstr "En tales casos, establezca la propiedad `quarkus.oidc.authentication.java-script-auto-redirect` en `false`, lo que indicará a Quarkus que devuelva un código de estado `499` y una cabecera `WWW-Authenticate` con el valor `OIDC`. También debe actualizar el script del navegador para establecer el encabezado `X-Requested-With` con el valor `JavaScript` y recargar la última página solicitada en caso de un código de estado `499`. Por ejemplo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1194
#, fuzzy
msgid "The browser script must set a header to identify the current request as a JavaScript request for `499` status code to be returned when `quarkus.oidc.authentication.java-script-auto-redirect` property is set to `false`."
msgstr "El script del navegador debe establecer una cabecera para identificar la solicitud actual como una solicitud JavaScript para que se devuelva el código de estado `499` cuando la propiedad `quarkus.oidc.authentication.java-script-auto-redirect` se establezca en `false`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1196
#, fuzzy
msgid "If the script engine sets an engine-specific request header itself, then you can register a custom `quarkus.oidc.JavaScriptRequestChecker` bean, which will inform Quarkus if the current request is a JavaScript request. For example, if the JavaScript engine sets a header such as `HX-Request: true` then you can have it checked like this:"
msgstr "Si el motor de script establece por sí mismo una cabecera de petición específica del motor, entonces puede registrar un frijol `quarkus.oidc.JavaScriptRequestChecker` personalizado, que informará a Quarkus si la petición actual es una petición JavaScript. Por ejemplo, si el motor de JavaScript establece una cabecera como `HX-Request: true`, entonces puede hacer que se compruebe así:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1203
#, no-wrap
msgid ""
"import io.quarkus.oidc.JavaScriptRequestChecker;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1206
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CustomJavaScriptRequestChecker implements JavaScriptRequestChecker {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1212
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isJavaScriptRequest(RoutingContext context) {\n"
"        return \"true\".equals(context.request().getHeader(\"HX-Request\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1215
#, fuzzy
msgid "and reload the last requested page in case of a `499` status code."
msgstr "y recargar la última página solicitada en caso de código de estado `499`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1217
#, fuzzy
msgid "Otherwise you must also update the browser script to set the `X-Requested-With` header with the `JavaScript` value and reload the last requested page in case of a `499` status code."
msgstr "En tales casos, establezca la propiedad `quarkus.oidc.authentication.java-script-auto-redirect` en `false`, lo que indicará a Quarkus que devuelva un código de estado `499` y una cabecera `WWW-Authenticate` con el valor `OIDC`. También debe actualizar el script del navegador para establecer el encabezado `X-Requested-With` con el valor `JavaScript` y recargar la última página solicitada en caso de un código de estado `499`. Por ejemplo"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1219
#, fuzzy
msgid "For example:"
msgstr "Por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1224
#, no-wrap
msgid ""
"Future<void> callQuarkusService() async {\n"
"    Map<String, String> headers = Map.fromEntries([MapEntry(\"X-Requested-With\", \"JavaScript\")]);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1233
#, no-wrap
msgid ""
"    await http\n"
"        .get(\"https://localhost:443/serviceCall\")\n"
"        .then((response) {\n"
"            if (response.statusCode == 499) {\n"
"                window.location.assign(\"https://localhost.com:443/serviceCall\");\n"
"            }\n"
"         });\n"
"  }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1235
#, fuzzy, no-wrap
msgid "Cross-origin resource sharing"
msgstr "Compartir recursos entre orígenes"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1239
#, fuzzy
msgid "If you plan to consume this application from a single-page application running on a different domain, you need to configure cross-origin resource sharing (CORS).  For more information, see the xref:security-cors.adoc#cors-filter[CORS filter] section of the \"Cross-origin resource sharing\" guide."
msgstr "Si tiene previsto consumir esta aplicación desde una aplicación de una sola página que se ejecute en un dominio diferente, deberá configurar la compartición de recursos entre orígenes (CORS). Para obtener más información, consulte la sección  link:http-reference.html#cors-filter[Filtro COR] S de la guía \"Referencia HTTP\"."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1240
#, fuzzy, no-wrap
msgid "Calling Cloud provider services"
msgstr "Llamar a los servicios del proveedor de la nube"

#. type: Title ====
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1242
#, fuzzy, no-wrap
msgid "Google Cloud"
msgstr "Nube de Google"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1245
#, fuzzy
msgid "You can have Quarkus OIDC `web-app` applications access **Google Cloud services** such as **BigQuery** on behalf of the currently-authenticated users who have enabled OpenID Connect (Authorization Code Flow) permissions to such services in their Google developer consoles."
msgstr "Puede hacer que las aplicaciones de Quarkus OIDC `web-app` accedan a *los servicios de Google Cloud*, como *BigQuery*, en nombre de los usuarios autenticados en ese momento que hayan habilitado los permisos de OpenID Connect (flujo de código de autorización) para dichos servicios en sus consolas de desarrollador de Google."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1248
#, fuzzy
msgid "It is super easy to do with https://github.com/quarkiverse[Quarkiverse] https://github.com/quarkiverse/quarkiverse-google-cloud-services[Google Cloud Services], only add the https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[latest tag] service dependency, for example:"
msgstr "Es súper fácil de hacer con  link:https://github.com/quarkiverse[Quarkiverse]  link:https://github.com/quarkiverse/quarkiverse-google-cloud-services[Google Cloud Services], sólo tiene que añadir la  link:https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[última] dependencia del servicio de  link:https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[etiquetas], por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1257
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkiverse.googlecloudservices</groupId>\n"
"    <artifactId>quarkus-google-cloud-bigquery</artifactId>\n"
"    <version>${quarkiverse.googlecloudservices.version}</version>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1263
#, no-wrap
msgid "implementation(\"io.quarkiverse.googlecloudservices:quarkus-google-cloud-bigquery:${quarkiverse.googlecloudservices.version}\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1266
#, fuzzy
msgid "and configure Google OIDC properties:"
msgstr "y configurar las propiedades de Google OIDC:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1273
#, no-wrap
msgid ""
"quarkus.oidc.provider=google\n"
"quarkus.oidc.client-id={GOOGLE_CLIENT_ID}\n"
"quarkus.oidc.credentials.secret={GOOGLE_CLIENT_SECRET}\n"
"quarkus.oidc.token.issuer=https://accounts.google.com\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1275
#, fuzzy, no-wrap
msgid "Running Quarkus application behind a reverse proxy"
msgstr "Ejecución de la aplicación Quarkus detrás de un proxy inverso"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1278
#, fuzzy
msgid "OIDC authentication mechanism can be affected if your Quarkus application is running behind a reverse proxy/gateway/firewall when HTTP `Host` header may be reset to the internal IP address, HTTPS connection may be terminated, etc. For example, an authorization code flow `redirect_uri` parameter may be set to the internal host instead of the expected external one."
msgstr "El mecanismo de autenticación OIDC puede verse afectado si su aplicación Quarkus se ejecuta detrás de un proxy inverso/gateway/firewall cuando el encabezado HTTP `Host` puede ser restablecido a la dirección IP interna, la conexión HTTPS puede ser terminada, etc. Por ejemplo, un parámetro de flujo de código de autorización `redirect_uri` puede establecerse en el host interno en lugar del externo esperado."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1280
#, fuzzy
msgid "In such cases configuring Quarkus to recognize the original headers forwarded by the proxy will be required, for more information, see the xref:http-reference.adoc#reverse-proxy[Running behind a reverse proxy] Vert.x documentation section."
msgstr "En tales casos será necesario configurar Quarkus para que reconozca las cabeceras originales reenviadas por el proxy, para más información, véase la sección de documentación  link:http-reference.html#reverse-proxy[Ejecutando detrás de un proxy inverso] Vert.x."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1282
#, fuzzy
msgid "For example, if your Quarkus endpoint runs in a cluster behind Kubernetes Ingress then a redirect from the OpenID Connect Provider back to this endpoint may not work since the calculated `redirect_uri` parameter may point to the internal endpoint address. This problem can be resolved with the following configuration:"
msgstr "Por ejemplo, si su punto final Quarkus se ejecuta en un clúster detrás de Kubernetes Ingress, entonces una redirección desde el proveedor OpenID Connect de vuelta a este punto final puede no funcionar ya que el parámetro calculado `redirect_uri` puede apuntar a la dirección del punto final interno. Este problema puede resolverse con la siguiente configuración:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1289
#, no-wrap
msgid ""
"quarkus.http.proxy.proxy-address-forwarding=true\n"
"quarkus.http.proxy.allow-forwarded=false\n"
"quarkus.http.proxy.enable-forwarded-host=true\n"
"quarkus.http.proxy.forwarded-host-header=X-ORIGINAL-HOST\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1292
#, fuzzy
msgid "where `X-ORIGINAL-HOST` is set by Kubernetes Ingress to represent the external endpoint address."
msgstr "donde `X-ORIGINAL-HOST` es establecido por Kubernetes Ingress para representar la dirección del punto final externo."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1294
#, fuzzy
msgid "`quarkus.oidc.authentication.force-redirect-https-scheme` property may also be used when the Quarkus application is running behind an SSL terminating reverse proxy."
msgstr "`quarkus.oidc.authentication.force-redirect-https-scheme` también puede utilizarse cuando la aplicación Quarkus se ejecuta detrás de un proxy inverso con terminación SSL."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1295
#, fuzzy, no-wrap
msgid "External and internal access to the OIDC provider"
msgstr "Acceso externo e interno al proveedor de OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1299
#, fuzzy
msgid "Note that the OpenID Connect Provider externally accessible authorization, logout and other endpoints may have different HTTP(S) URLs compared to the URLs auto-discovered or configured relative to `quarkus.oidc.auth-server-url` internal URL.  In such cases an issuer verification failure may be reported by the endpoint and redirects to the externally accessible Connect Provider endpoints may fail."
msgstr "Tenga en cuenta que los puntos finales de autorización, cierre de sesión y otros accesibles externamente del proveedor de OpenID Connect pueden tener URL HTTP(S) diferentes en comparación con las URL autodescubiertas o configuradas en relación con la URL interna de `quarkus.oidc.auth-server-url`. En tales casos, es posible que el punto final notifique un error de verificación del emisor y que fallen las redirecciones a los puntos finales del proveedor de Connect accesibles externamente."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1302
#, fuzzy
msgid "In such cases, if you work with Keycloak then please start it with a `KEYCLOAK_FRONTEND_URL` system property set to the externally accessible base URL.  If you work with other Openid Connect providers then please check your provider's documentation."
msgstr "En estos casos, si trabajas con Keycloak, por favor, inícialo con una propiedad del sistema `KEYCLOAK_FRONTEND_URL` establecida en la URL base accesible externamente. Si trabaja con otros proveedores de Openid Connect, consulte la documentación del proveedor."

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1304
#, fuzzy, no-wrap
msgid "OIDC SAML Identity broker"
msgstr "Agente de identidad SAML OIDC"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1307
#, fuzzy
msgid "If your identity provider does not implement OpenId Connect but only the legacy XML-based SAML2.0 SSO protocol, then Quarkus can not be used as a SAML 2.0 adapter, similarly to how `quarkus-oidc` is used as an OIDC adapter."
msgstr "Si su proveedor de identidad no implementa OpenId Connect, sino sólo el protocolo SSO SAML 2.0 basado en XML, entonces Quarkus no puede utilizarse como adaptador de SAML 2.0, de forma similar a como se utiliza `quarkus-oidc` como adaptador de OIDC."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1309
#, fuzzy
msgid "However, many OIDC providers such as Keycloak, Okta, Auth0, Microsoft ADFS can offer OIDC to SAML 2.0 bridges. You can create an identity broker connection to SAML 2.0 provider in your OIDC provider and use `quarkus-oidc` to authenticate your users to this SAML 2.0 provider with the OIDC provider coordinating OIDC and SAML 2.0 communications. As far as Quarkus endpoints are concerned, they can continue using the same Quarkus Security and OIDC API and annotations such as `@Authenticated`, `SecurityIdentity`, etc."
msgstr "Sin embargo, muchos proveedores de OIDC como Keycloak, Okta, Auth0, Microsoft ADFS pueden ofrecer puentes de OIDC a SAML 2.0. Puedes crear una conexión de agente de identidad con el proveedor SAML 2.0 en tu proveedor OIDC y utilizar `quarkus-oidc` para autenticar a tus usuarios en este proveedor SAML 2.0 con el proveedor OIDC coordinando las comunicaciones OIDC y SAML 2.0. En lo que respecta a los puntos finales de Quarkus, pueden seguir utilizando la misma API de Quarkus Security y OIDC y anotaciones como `@Authenticated`, `SecurityIdentity`, etc."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1311
#, fuzzy
msgid "For example, lets assume `Okta` is your SAML 2.0 provider and `Keycloak` is your OIDC provider. Here is a typical sequence explaining how to configure `Keycloak` to broker with the `Okta` SAML 2.0 provider."
msgstr "Por ejemplo, supongamos que `Okta` es su proveedor SAML 2.0 y `Keycloak` es su proveedor OIDC. A continuación se muestra una secuencia típica que explica cómo configurar `Keycloak` para que actúe como intermediario con el proveedor SAML 2.0 `Okta`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1313
#, fuzzy
msgid "First, create a new `SAML2` integration in your `Okta` `Dashboard/Applications`:"
msgstr "En primer lugar, cree una nueva integración `SAML2` en su `Okta` `Dashboard/Applications` :"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1314
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1318
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1322
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1326
#, fuzzy, no-wrap
msgid "Okta"
msgstr "Okta"

#. type: Target for macro image
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1314
#, no-wrap
msgid "okta-create-saml-integration.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1317
#, fuzzy
msgid "For example, name it as `OktaSaml`:"
msgstr "Por ejemplo, nómbrelo como `OktaSaml`:"

#. type: Target for macro image
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1318
#, no-wrap
msgid "okta-saml-general-settings.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1321
#, fuzzy
msgid "Next, configure it to point to a Keycloak SAML broker endpoint. At this point you need to know the name of the Keycloak realm, for example, `quarkus`, and, assuming that the Keycloak SAML broker alias is `saml`, enter the endpoint address as `http:localhost:8081/realms/quarkus/broker/saml/endpoint` and Service provider (SP) entity id as `http:localhost:8081/realms/quarkus`, where `http://localhost:8081` is a Keycloak base address and `saml` is a broker alias:"
msgstr "A continuación, configúrelo para que apunte a un endpoint del broker SAML de Keycloak. En este punto necesitas saber el nombre del dominio Keycloak, por ejemplo, `quarkus`, y, asumiendo que el alias del broker SAML de Keycloak es `saml`, introduce la dirección del endpoint como `http:localhost:8081/realms/quarkus/broker/saml/endpoint` y el id de entidad del proveedor de servicios (SP) como `http:localhost:8081/realms/quarkus`, donde `&lt;a href=\"http://localhost:8081\" class=\"bare\"&gt;http://localhost:8081&lt;/a&gt;` es una dirección base Keycloak y `saml` es un alias de broker:"

#. type: Target for macro image
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1322
#, no-wrap
msgid "okta-saml-configuration.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1325
#, fuzzy
msgid "Next, save this SAML integration and note its Metadata URL:"
msgstr "A continuación, guarde esta integración SAML y anote su URL de metadatos:"

#. type: Target for macro image
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1326
#, no-wrap
msgid "okta-saml-metadata.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1329
#, fuzzy
msgid "Next, add SAML Provider to Keycloak:"
msgstr "A continuación, añada SAML Provider a Keycloak:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1331
#, fuzzy
msgid "First, as usual, create a new realm or import the existing realm to `Keycloak`, in this case, the realm name has to be `quarkus`."
msgstr "En primer lugar, como de costumbre, cree un nuevo dominio o importe el existente a `Keycloak`, en este caso, el nombre del dominio tiene que ser `quarkus`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1333
#, fuzzy
msgid "Now, in the `quarkus` Realm properties, navigate to `Identity Providers` and add a new SAML provider:"
msgstr "Ahora, en las propiedades de `quarkus` Realm, navegue hasta `Identity Providers` y añada un nuevo proveedor SAML:"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1334
#, no-wrap
msgid "Keycloak"
msgstr "Keycloak"

#. type: Target for macro image
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1334
#, no-wrap
msgid "keycloak-add-saml-provider.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1337
#, fuzzy
msgid "Note the alias is set to `saml`, `Redirect URI` is `http:localhost:8081/realms/quarkus/broker/saml/endpoint` and `Service provider entity id` is `http:localhost:8081/realms/quarkus` - these are the same values you have entered when creating the Okta SAML integration in the previous step."
msgstr "Tenga en cuenta que el alias es `saml`, `Redirect URI` es `http:localhost:8081/realms/quarkus/broker/saml/endpoint` y `Service provider entity id` es `http:localhost:8081/realms/quarkus` - estos son los mismos valores que ha introducido al crear la integración SAML de Okta en el paso anterior."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1339
#, fuzzy
msgid "Finally, set `Service entity descriptor` to point to the Okta SAML Intregration Metadata URL you noted at the end of the previous step."
msgstr "Por último, configure `Service entity descriptor` para que apunte a la URL de metadatos de integración SAML de Okta que anotó al final del paso anterior."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1341
#, fuzzy
msgid "Next, if you would like, you can register this Keycloak SAML Provider as a Default Provider by navigating to `Authentication/browser/Identity Provider Redirector config` and setting both `Alias` and `Default Identity Provider` properties to `saml`. If you do not configure it as a Default Provider then, at the authentication time, Keycloak will offer 2 options - authenticate with the SAML provider, and authenticate directly to Keycloak with the name and password."
msgstr "A continuación, si lo desea, puede registrar este Proveedor SAML de Keycloak como Proveedor por Defecto navegando a `Authentication/browser/Identity Provider Redirector config` y configurando ambas propiedades `Alias` y `Default Identity Provider` a `saml`. Si no lo configura como Proveedor por Defecto entonces, en el momento de la autenticación, Keycloak ofrecerá 2 opciones - autenticar con el proveedor SAML, y autenticar directamente a Keycloak con el nombre y contraseña."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1343
#, fuzzy
msgid "Now configure the Quarkus OIDC `web-app` application to point to the Keycloak `quarkus` realm, `quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus` and you are ready to start authenticating your Quarkus users to the Okta SAML 2.0 provider using an OIDC to SAML bridge provided by Keycloak OIDC and Okta SAML 2.0 providers."
msgstr "Ahora configure la aplicación OIDC `web-app` de Quarkus para que apunte al dominio `quarkus` de Keycloak, `quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus` y estará listo para empezar a autenticar a sus usuarios de Quarkus en el proveedor SAML 2.0 de Okta utilizando un puente OIDC a SAML proporcionado por los proveedores OIDC de Keycloak y SAML 2.0 de Okta."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1345
#, fuzzy
msgid "You can configure other OIDC providers to provide a SAML bridge similarly to how it can be done for Keycloak."
msgstr "Puede configurar otros proveedores OIDC para que proporcionen un puente SAML de forma similar a como se puede hacer para Keycloak."

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1347
#, fuzzy, no-wrap
msgid "Testing"
msgstr "Pruebas"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1351
#, fuzzy
msgid "Testing is often tricky when it comes to authentification to a separate OIDC like server.  Quarkus offers several options from mocking to a local run of an OIDC provider."
msgstr "Las pruebas suelen ser complicadas cuando se trata de la autenticación de un servidor OIDC independiente. Quarkus ofrece varias opciones, desde la simulación hasta la ejecución local de un proveedor de OIDC."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1353
#, fuzzy
msgid "Start by adding the following dependencies to your test project:"
msgstr "Comience por añadir las siguientes dependencias a su proyecto de prueba:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1373
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>net.sourceforge.htmlunit</groupId>\n"
"    <artifactId>htmlunit</artifactId>\n"
"    <exclusions>\n"
"        <exclusion>\n"
"            <groupId>org.eclipse.jetty</groupId>\n"
"            <artifactId>*</artifactId>\n"
"       </exclusion>\n"
"    </exclusions>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-junit5</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1380
#, no-wrap
msgid ""
"testImplementation(\"net.sourceforge.htmlunit:htmlunit\")\n"
"testImplementation(\"io.quarkus:quarkus-junit5\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1383
#, fuzzy, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1386
#, fuzzy
msgid "Add the following dependency:"
msgstr "Añade la siguiente dependencia:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1395
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-oidc-server</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1401
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-test-oidc-server\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1404
#, fuzzy
msgid "Prepare the REST test endpoints, set `application.properties`, for example:"
msgstr "Prepare los puntos finales de prueba REST, establezca `application.properties`, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1412
#, no-wrap
msgid ""
"# keycloak.url is set by OidcWiremockTestResource\n"
"quarkus.oidc.auth-server-url=${keycloak.url}/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-web-app\n"
"quarkus.oidc.credentials.secret=secret\n"
"quarkus.oidc.application-type=web-app\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1415
#, fuzzy
msgid "and finally write the test code, for example:"
msgstr "y finalmente escribir el código de prueba, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1419
#, no-wrap
msgid "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1421
#, no-wrap
msgid "import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1426
#, no-wrap
msgid ""
"import com.gargoylesoftware.htmlunit.SilentCssErrorHandler;\n"
"import com.gargoylesoftware.htmlunit.WebClient;\n"
"import com.gargoylesoftware.htmlunit.html.HtmlForm;\n"
"import com.gargoylesoftware.htmlunit.html.HtmlPage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1430
#, no-wrap
msgid ""
"import io.quarkus.test.common.QuarkusTestResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.oidc.server.OidcWiremockTestResource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1434
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(OidcWiremockTestResource.class)\n"
"public class CodeFlowAuthorizationTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1440
#, no-wrap
msgid ""
"    @Test\n"
"    public void testCodeFlow() throws Exception {\n"
"        try (final WebClient webClient = createWebClient()) {\n"
"            // the test REST endpoint listens on '/code-flow'\n"
"            HtmlPage page = webClient.getPage(\"http://localhost:8081/code-flow\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1445
#, no-wrap
msgid ""
"            HtmlForm form = page.getFormByName(\"form\");\n"
"            // user 'alice' has the 'user' role\n"
"            form.getInputByName(\"username\").type(\"alice\");\n"
"            form.getInputByName(\"password\").type(\"alice\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1447
#, no-wrap
msgid "            page = form.getInputByValue(\"login\").click();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1451
#, no-wrap
msgid ""
"            assertEquals(\"alice\", page.getBody().asText());\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1458
#, no-wrap
msgid ""
"    private WebClient createWebClient() {\n"
"        WebClient webClient = new WebClient();\n"
"        webClient.setCssErrorHandler(new SilentCssErrorHandler());\n"
"        return webClient;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1461
#, fuzzy
msgid "`OidcWiremockTestResource` recognizes `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `quarkus.test.oidc.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `quarkus.test.oidc.token.admin-roles` system property."
msgstr "`OidcWiremockTestResource` reconoce los usuarios `alice` y `admin`. El usuario `alice` sólo tiene el rol `user` por defecto - puede ser personalizado con una propiedad del sistema `quarkus.test.oidc.token.user-roles`. El usuario `admin` tiene los roles `user` y `admin` por defecto - puede ser personalizado con una propiedad del sistema `quarkus.test.oidc.token.admin-roles`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1463
#, fuzzy
msgid "Additionally, `OidcWiremockTestResource` set token issuer and audience to `https://service.example.com` which can be customized with `quarkus.test.oidc.token.issuer` and `quarkus.test.oidc.token.audience` system properties."
msgstr "Además, `OidcWiremockTestResource` establece el emisor de tokens y la audiencia en `&lt;a href=\"https://service.example.com\" class=\"bare\"&gt;https://service.example.com&lt;/a&gt;` que pueden personalizarse con las propiedades del sistema `quarkus.test.oidc.token.issuer` y `quarkus.test.oidc.token.audience`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1465
#, fuzzy
msgid "`OidcWiremockTestResource` can be used to emulate all OpenID Connect providers."
msgstr "`OidcWiremockTestResource` puede utilizarse para emular todos los proveedores de OpenID Connect."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1467
#, fuzzy, no-wrap
msgid "Dev services for Keycloak"
msgstr "Servicios de desarrollo para Keycloak"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1471
#, fuzzy
msgid "Using xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] is recommended for the integration testing against Keycloak.  `Dev Services for Keycloak` will launch and initialize a test container: it will create a `quarkus` realm, a `quarkus-app` client (`secret` secret) and add `alice` (`admin` and `user` roles) and `bob` (`user` role) users, where all of these properties can be customized."
msgstr "Se recomienda el uso de  link:security-openid-connect-dev-services.html[Dev Services para Keycloak] para las pruebas de integración contra Keycloak. `Dev Services for Keycloak` lanzará e inicializará un contenedor de pruebas: creará un dominio `quarkus`, un cliente `quarkus-app` ( `secret` secret) y añadirá usuarios `alice` ( `admin` y `user` roles) y `bob` ( `user` rol), donde todas estas propiedades pueden ser personalizadas."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1473
#, fuzzy
msgid "First, prepare `application.properties`. You can start with a completely empty `application.properties` as `Dev Services for Keycloak` will register `quarkus.oidc.auth-server-url` pointing to the running test container as well as `quarkus.oidc.client-id=quarkus-app` and `quarkus.oidc.credentials.secret=secret`."
msgstr "En primer lugar, prepare `application.properties`. Puede empezar con un `application.properties` completamente vacío, ya que `Dev Services for Keycloak` registrará `quarkus.oidc.auth-server-url` apuntando al contenedor de prueba en ejecución, así como `quarkus.oidc.client-id=quarkus-app` y `quarkus.oidc.credentials.secret=secret`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1475
#, fuzzy
msgid "But if you already have all the required `quarkus-oidc` properties configured then you only need to associate `quarkus.oidc.auth-server-url` with the `prod` profile for `Dev Services for Keycloak`to start a container, for example:"
msgstr "Pero si ya tienes configuradas todas las propiedades requeridas de `quarkus-oidc` entonces sólo necesitas asociar `quarkus.oidc.auth-server-url` con el perfil `prod` para `Dev Services for Keycloak` para iniciar un contenedor, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1479
#, no-wrap
msgid "%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1482
#, fuzzy
msgid "If a custom realm file has to be imported into Keycloak before running the tests then you can configure `Dev Services for Keycloak` as follows:"
msgstr "Si es necesario importar un archivo de dominio personalizado en Keycloak antes de ejecutar las pruebas, puede configurar `Dev Services for Keycloak` de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1487
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1491
#, fuzzy
msgid "Finally, write a test code the same way as it is described in the xref:integration-testing-wiremock[Wiremock] section.  The only difference is that `@QuarkusTestResource` is no longer needed:"
msgstr "Por último, escriba un código de prueba de la misma forma que se describe en la sección  link:#integration-testing-wiremock[Wiremock]. La única diferencia es que `@QuarkusTestResource` ya no es necesario:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1497
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class CodeFlowAuthorizationTest {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1500
#, fuzzy, no-wrap
msgid "Using KeycloakTestResourceLifecycleManager"
msgstr "Uso de KeycloakTestResourceLifecycleManager"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1504
#, fuzzy
msgid "Use `KeycloakTestResourceLifecycleManager` for your tests only if there is a good reason not to use `Dev Services for Keycloak`.  If you need to do the integration testing against Keycloak then you are encouraged to do it with xref:integration-testing-keycloak-devservices[Dev services For Keycloak]."
msgstr "Utilice `KeycloakTestResourceLifecycleManager` para sus pruebas sólo si hay una buena razón para no utilizar `Dev Services for Keycloak`. Si necesita realizar las pruebas de integración contra  link:#integration-testing-keycloak-devservices[Keycloak], le animamos a que lo haga con  link:#integration-testing-keycloak-devservices[Dev services For Keycloak]."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1506
#, fuzzy
msgid "Start with adding the following dependency:"
msgstr "Empiece por añadir la siguiente dependencia:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1515
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-keycloak-server</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1521
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-test-keycloak-server\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1524
#, fuzzy
msgid "which provides `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - an implementation of `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which starts a Keycloak container."
msgstr "que proporciona `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - una implementación de `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que inicia un contenedor Keycloak."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1526
#, fuzzy
msgid "And configure the Maven Surefire plugin as follows:"
msgstr "Y configura el plugin Maven Surefire como sigue:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1542
#, no-wrap
msgid ""
"<plugin>\n"
"    <artifactId>maven-surefire-plugin</artifactId>\n"
"    <configuration>\n"
"        <systemPropertyVariables>\n"
"            <!-- or, alternatively, configure 'keycloak.version' -->\n"
"            <keycloak.docker.image>${keycloak.docker.image}</keycloak.docker.image>\n"
"            <!--\n"
"              Disable HTTPS if required:\n"
"              <keycloak.use.https>false</keycloak.use.https>\n"
"            -->\n"
"        </systemPropertyVariables>\n"
"    </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1545
#, fuzzy
msgid "(and similarly the Maven Failsafe plugin when testing in native image)."
msgstr "(y de forma similar el plugin Maven Failsafe al probar en imagen nativa)."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1548
#, fuzzy
msgid "And now set the configuration and write the test code the same way as it is described in the xref:integration-testing-wiremock[Wiremock] section.  The only difference is the name of `QuarkusTestResource`:"
msgstr "Y ahora establezca la configuración y escriba el código de prueba de la misma manera que se describe en la sección  link:#integration-testing-wiremock[Wiremock]. La única diferencia es el nombre de `QuarkusTestResource`:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1552
#, no-wrap
msgid "import io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1557
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(KeycloakTestResourceLifecycleManager.class)\n"
"public class CodeFlowAuthorizationTest {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1560
#, fuzzy
msgid "`KeycloakTestResourceLifecycleManager` registers `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `keycloak.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `keycloak.token.admin-roles` system property."
msgstr "`KeycloakTestResourceLifecycleManager` registra los usuarios `alice` y `admin`. El usuario `alice` sólo tiene el rol `user` por defecto - puede ser personalizado con una propiedad del sistema `keycloak.token.user-roles`. El usuario `admin` tiene los roles `user` y `admin` por defecto - puede ser personalizado con una propiedad del sistema `keycloak.token.admin-roles`."

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1563
#, fuzzy
msgid "By default, `KeycloakTestResourceLifecycleManager` uses HTTPS to initialize a Keycloak instance which can be disabled with `keycloak.use.https=false`.  Default realm name is `quarkus` and client id - `quarkus-web-app` - set `keycloak.realm` and `keycloak.web-app.client` system properties to customize the values if needed."
msgstr "Por defecto, `KeycloakTestResourceLifecycleManager` utiliza HTTPS para inicializar una instancia de Keycloak, lo que puede desactivarse con `keycloak.use.https=false`. El nombre de dominio por defecto es `quarkus` y el id de cliente - `quarkus-web-app` - configure las propiedades del sistema `keycloak.realm` y `keycloak.web-app.client` para personalizar los valores si es necesario."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1565
#, fuzzy, no-wrap
msgid "TestSecurity annotation"
msgstr "Anotación TestSecurity"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1568
#, fuzzy
msgid "See xref:security-oidc-bearer-token-authentication.adoc#integration-testing-security-annotation[Use TestingSecurity with injected JsonWebToken] section for more information about using `@TestSecurity` and `@OidcSecurity` annotations for testing the `web-app` application endpoint code which depends on the injected ID and access `JsonWebToken` as well as `UserInfo` and `OidcConfigurationMetadata`."
msgstr "Consulte la sección  link:security-oidc-bearer-token-authentication.html#integration-testing-security-annotation[Usar TestingSecurity con JsonWebToken iny] ectado para obtener más información sobre el uso de las anotaciones `@TestSecurity` y `@OidcSecurity` para probar el código del endpoint de la aplicación `web-app` que depende del ID inyectado y acceder a `JsonWebToken` así como a `UserInfo` y `OidcConfigurationMetadata`."

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1569
#, fuzzy, no-wrap
msgid "Checking errors in the logs"
msgstr "Comprobación de errores en los registros"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1572
#, fuzzy
msgid "To see details about the token verification errors, you must enable `io.quarkus.oidc.runtime.OidcProvider` `TRACE` level logging:"
msgstr "Para ver detalles sobre los errores de verificación de token, debe activar el registro de nivel `io.quarkus.oidc.runtime.OidcProvider` `TRACE` :"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1577
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcProvider\".level=TRACE\n"
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcProvider\".min-level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1580
#, fuzzy
msgid "To see details about the OidcProvider client initialization errors, enable `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` level logging:"
msgstr "Para ver detalles sobre los errores de inicialización del cliente OidcProvider, habilite el registro de nivel `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` :"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1585
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcRecorder\".level=TRACE\n"
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcRecorder\".min-level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1588
#, fuzzy
msgid "You can also from `quarkus dev` console hit `j` to change the application global log level."
msgstr "También puedes desde la consola `quarkus dev` pulsar `j` para cambiar el nivel de registro global de la aplicación."

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1589
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1592
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr "link:security-oidc-configuration-properties-reference.html[Propiedades de configuración de OIDC]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1593
#, fuzzy
msgid "xref:security-openid-connect-providers.adoc[Configuring well-known OpenID Connect Providers]"
msgstr "link:security-openid-connect-providers.html[Configuración de proveedores de OpenID Connect conocidos]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1594
#, fuzzy
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "link:security-openid-connect-client-reference.html[Guía de referencia del cliente y los filtros de OpenID Connect y OAuth2]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1595
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "link:security-openid-connect-dev-services.html[Servicios de desarrollo para Keycloak]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1596
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#oidc-jwt-oauth2-comparison[Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms]"
msgstr "link:security-authentication-mechanisms.html#oidc-jwt-oauth2-comparison[Elegir entre los mecanismos de autenticación OpenID Connect, SmallRye JWT y OAuth2]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1597
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "link:security-authentication-mechanisms.html#combining-authentication-mechanisms[Combinación de mecanismos de autenticación]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1598
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "link:security-overview.html[Visión general de Quarkus Security]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1599
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Documentación de Keycloak]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1600
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication.adoc:1601
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[Token web JSON]"
