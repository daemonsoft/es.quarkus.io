# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 08:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/resteasy.adoc:6
#, fuzzy, no-wrap
msgid "RESTEasy Classic"
msgstr "RESTEasy Classic"

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:15
#, fuzzy
msgid "This guide is about https://resteasy.dev[RESTEasy Classic], which used to be the default Jakarta REST (formerly known as JAX-RS) implementation until Quarkus 2.8."
msgstr "Esta guía es sobre  link:https://resteasy.dev[RESTEasy Classic], que solía ser la implementación JAX-RS por defecto hasta Quarkus 2.8."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:17
msgid "It is now recommended to use RESTEasy Reactive, which supports both traditional blocking workloads and reactive workloads equally well."
msgstr ""

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:20
#, fuzzy
msgid "For more information about RESTEasy Reactive, please see the xref:rest-json.adoc[introductory REST JSON guide] or the xref:resteasy-reactive.adoc[RESTEasy Reactive reference documentation]."
msgstr "Ahora se recomienda utilizar RESTEasy Reactive, que admite por igual las cargas de trabajo tradicionales de bloqueo y las cargas de trabajo reactivas. Para obtener más información sobre RESTEasy Reactive, consulte la  link:rest-json.html[guía introductoria de REST JSON] o la  link:resteasy-reactive.html[guía] más detallada de  link:resteasy-reactive.html[RESTEasy Reactive]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:23
#, fuzzy
msgid "There is another guide if you need a xref:rest-client.adoc[REST client based on RESTEasy Classic] (including support for JSON)."
msgstr "hay otra guía si necesitas un  link:rest-client.html[cliente REST basado en RESTEasy Classic] (incluyendo soporte para JSON)."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:24
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:27
#, fuzzy
msgid "The application created in this guide is straightforward: users can add elements to a list through a form, and the list gets updated accordingly."
msgstr "La aplicación construida en esta guía es bastante sencilla: el usuario puede añadir elementos en una lista mediante un formulario y la lista se actualiza."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:29
#, fuzzy
msgid "All the information between the browser and the server is formatted as JSON."
msgstr "Toda la información entre el navegador y el servidor se formatea como JSON."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:30
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:33
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:40
#, fuzzy
msgid "This command generates a new project importing the RESTEasy/Jakarta REST and https://github.com/FasterXML/jackson[Jackson] extensions, and in particular, adds the following dependency:"
msgstr "Este comando genera un nuevo proyecto que importa las extensiones RESTEasy/JAX-RS y  link:https://github.com/FasterXML/jackson[Jackson], y en particular añade la siguiente dependencia:"

#. type: Block title
#: upstream/_guides/resteasy.adoc:42 upstream/_guides/resteasy.adoc:71
#: upstream/_guides/resteasy.adoc:610
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:48
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/resteasy.adoc:51 upstream/_guides/resteasy.adoc:80
#: upstream/_guides/resteasy.adoc:619
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:54
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-jackson\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:59
#, fuzzy
msgid "To improve user experience, Quarkus registers the three Jackson https://github.com/FasterXML/jackson-modules-java8[Java 8 modules], so you do not need to do it manually."
msgstr "Para mejorar la experiencia del usuario, Quarkus registra los tres  link:https://github.com/FasterXML/jackson-modules-java8[módulos] Jackson  link:https://github.com/FasterXML/jackson-modules-java8[Java] 8 para que no tengas que hacerlo manualmente."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:62
#, fuzzy
msgid "Quarkus also supports https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], so if you prefer JSON-B over Jackson, you can create a project relying on the RESTEasy JSON-B extension instead:"
msgstr "Quarkus también es compatible con  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], por lo que, si prefiere JSON-B a Jackson, puede crear un proyecto basado en la extensión JSON-B de RESTEasy:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:69
#, fuzzy
msgid "This command generates a new project importing the RESTEasy/Jakarta REST and https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] extensions, and in particular, adds the following dependency:"
msgstr "Este comando genera un nuevo proyecto que importa las extensiones RESTEasy/JAX-RS y  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], y en particular añade la siguiente dependencia:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:77
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jsonb</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:83
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-jsonb\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:85
#, fuzzy, no-wrap
msgid "Creating the first JSON REST service"
msgstr "Creación de su primer servicio JSON REST"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:88
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "En este ejemplo, crearemos una aplicación para gestionar una lista de frutas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:90
#, fuzzy
msgid "First, let us create the `Fruit` bean as follows:"
msgstr "En primer lugar, vamos a crear el frijol `Fruit` de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:94 upstream/_guides/resteasy.adoc:118
#: upstream/_guides/resteasy.adoc:482 upstream/_guides/resteasy.adoc:505
#: upstream/_guides/resteasy.adoc:660
#, no-wrap
msgid "package org.acme.rest.json;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:96
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:99 upstream/_guides/resteasy.adoc:487
#, no-wrap
msgid ""
"    public String name;\n"
"    public String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:102
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:108
#, no-wrap
msgid ""
"    public Fruit(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:112
#, fuzzy
msgid "Nothing fancy.  One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "No es nada del otro mundo. Una cosa importante a tener en cuenta es que tener un constructor por defecto es requerido por la capa de serialización JSON."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:114
#, fuzzy
msgid "Now, create the `org.acme.rest.json.FruitResource` class as follows:"
msgstr "Ahora, cree la clase `org.acme.rest.json.FruitResource` como sigue:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:122
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.LinkedHashMap;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:127
#, no-wrap
msgid ""
"import jakarta.ws.rs.DELETE;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:130
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:132
#, no-wrap
msgid "    private Set<Fruit> fruits = Collections.newSetFromMap(Collections.synchronizedMap(new LinkedHashMap<>()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:137
#, no-wrap
msgid ""
"    public FruitResource() {\n"
"        fruits.add(new Fruit(\"Apple\", \"Winter fruit\"));\n"
"        fruits.add(new Fruit(\"Pineapple\", \"Tropical fruit\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:142
#, no-wrap
msgid ""
"    @GET\n"
"    public Set<Fruit> list() {\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:148
#, no-wrap
msgid ""
"    @POST\n"
"    public Set<Fruit> add(Fruit fruit) {\n"
"        fruits.add(fruit);\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:155
#, no-wrap
msgid ""
"    @DELETE\n"
"    public Set<Fruit> delete(Fruit fruit) {\n"
"        fruits.removeIf(existingFruit -> existingFruit.name.contentEquals(fruit.name));\n"
"        return fruits;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:158
#, fuzzy
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations."
msgstr "La implementación es bastante sencilla y sólo hay que definir los puntos finales utilizando las anotaciones JAX-RS."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:161
#, fuzzy
msgid "The `Fruit` objects will be automatically serialized/deserialized by https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] or https://github.com/FasterXML/jackson[Jackson], depending on the extension you chose when initializing the project."
msgstr "Los objetos de `Fruit` se serializarán/deserializarán automáticamente mediante  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] o  link:https://github.com/FasterXML/jackson[Jackson], dependiendo de la extensión que hayas elegido al inicializar el proyecto."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:166
#, fuzzy
msgid "When a JSON extension like `quarkus-resteasy-jackson` or `quarkus-resteasy-jsonb` is installed, Quarkus defaults to the `application/json` media type for most return values.  This can be overridden using `@Produces` or `@Consumes` annotations, except for certain well-known types like `String` (defaulting to `text/plain`) and `File` (defaulting to `application/octet-stream`)."
msgstr "Cuando se instala una extensión JSON como `quarkus-resteasy-jackson` o `quarkus-resteasy-jsonb`, Quarkus utilizará el tipo de medio `application/json` por defecto para la mayoría de los valores de retorno, a menos que el tipo de medio se establezca explícitamente a través de las anotaciones `@Produces` o `@Consumes` (hay algunas excepciones para tipos bien conocidos, como `String` y `File`, que por defecto son `text/plain` y `application/octet-stream` respectivamente)."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:169
#, fuzzy
msgid "To disable the default JSON behavior, set `quarkus.resteasy-json.default-json=false`, and the default will return to auto-negotiation.  In this case, you must include `@Produces(MediaType.APPLICATION_JSON)` and `@Consumes(MediaType.APPLICATION_JSON)` annotations in your endpoints to use JSON."
msgstr "Si no quieres JSON por defecto puedes establecer `quarkus.resteasy-json.default-json=false` y el valor por defecto volverá a ser auto-negociado. Si lo establece, tendrá que añadir `@Produces(MediaType.APPLICATION_JSON)` y `@Consumes(MediaType.APPLICATION_JSON)` a sus puntos finales para poder utilizar JSON."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:172
#, fuzzy
msgid "If you don't depend on the JSON default, it's highly advisable to use `@Produces` and `@Consumes` annotations on your endpoints to specify the expected content types precisely.  This helps reduce the number of Jakarta REST providers (essentially converters) included in the native executable."
msgstr "Si no confías en el JSON por defecto, es muy recomendable anotar tus endpoints con las anotaciones `@Produces` y `@Consumes` para definir con precisión los tipos de contenido esperados. Esto permitirá reducir el número de proveedores JAX-RS (que pueden verse como convertidores) incluidos en el ejecutable nativo."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:175
#, fuzzy, no-wrap
msgid "Configuring JSON support"
msgstr "Configuración de la compatibilidad con JSON"

#. type: Title ====
#: upstream/_guides/resteasy.adoc:177
#, fuzzy, no-wrap
msgid "Jackson"
msgstr "Jackson"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:180
#, fuzzy
msgid "In Quarkus, the default Jackson `ObjectMapper` obtained via CDI (utilized by Quarkus extensions) is set to ignore unknown properties (by disabling `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES`)."
msgstr "En Quarkus, el Jackson `ObjectMapper` por defecto obtenido a través de CDI (y consumido por las extensiones de Quarkus) está configurado para ignorar las propiedades desconocidas (desactivando la característica `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` )."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:182
#, fuzzy
msgid "To revert to Jackson's default behavior, set `quarkus.jackson.fail-on-unknown-properties=true` in your `application.properties`, or set it on a per-class basis with `@JsonIgnoreProperties(ignoreUnknown = false)`."
msgstr "Puede restablecer el comportamiento por defecto de Jackson configurando `quarkus.jackson.fail-on-unknown-properties=true` en su `application.properties` o por clase a través de `@JsonIgnoreProperties(ignoreUnknown = false)`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:184
#, fuzzy
msgid "Additionally, the `ObjectMapper` formats dates and times in ISO-8601 (by disabling `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS`)."
msgstr "Además, el `ObjectMapper` está configurado para formatear las fechas y la hora en ISO-8601 (desactivando la función `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` )."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:187
#, fuzzy
msgid "To restore Jackson's default behavior, use `quarkus.jackson.write-dates-as-timestamps=true` in your `application.properties`.  For custom date format on a single field, use the `@JsonFormat` annotation."
msgstr "El comportamiento por defecto de Jackson puede restaurarse configurando `quarkus.jackson.write-dates-as-timestamps=true` en su `application.properties`. Si desea cambiar el formato de un solo campo, puede utilizar la anotación `@JsonFormat`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:189
msgid "Quarkus simplifies Jackson configuration via CDI beans. Create a CDI bean of type `io.quarkus.jackson.ObjectMapperCustomizer` to apply various Jackson settings. Here's an example for registering a custom module:"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:199
#, no-wrap
msgid ""
"```java\n"
"@ApplicationScoped\n"
"public class MyObjectMapperCustomizer implements ObjectMapperCustomizer {\n"
"    @Override\n"
"    public void customize(ObjectMapper objectMapper) {\n"
"        // Add custom Jackson configuration here\n"
"    }\n"
"}\n"
"```\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:201
msgid "This approach is recommended for configuring Jackson settings."
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:207
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import io.quarkus.jackson.ObjectMapperCustomizer;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:210
#, no-wrap
msgid ""
"@Singleton\n"
"public class RegisterCustomModuleCustomizer implements ObjectMapperCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:215
#, no-wrap
msgid ""
"    public void customize(ObjectMapper mapper) {\n"
"        mapper.registerModule(new CustomModule());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:220
#, fuzzy
msgid "Users can even provide their own `ObjectMapper` bean if they so choose.  If this is done, it is very important to manually inject and apply all `io.quarkus.jackson.ObjectMapperCustomizer` beans in the CDI producer that produces `ObjectMapper`.  Failure to do so will prevent Jackson-specific customizations provided by various extensions from being applied."
msgstr "Los usuarios pueden incluso proporcionar su propio frijol `ObjectMapper` si así lo desean. Si se hace esto, es muy importante inyectar y aplicar manualmente todos los beans `io.quarkus.jackson.ObjectMapperCustomizer` en el productor CDI que produce `ObjectMapper`. Si no se hace así, se evitará que se apliquen las personalizaciones específicas de Jackson proporcionadas por varias extensiones."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:228
#, no-wrap
msgid ""
"import com.fasterxml.jackson.databind.ObjectMapper;\n"
"import io.quarkus.arc.All;\n"
"import io.quarkus.jackson.ObjectMapperCustomizer;\n"
"import java.util.List;\n"
"import jakarta.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:230
#, no-wrap
msgid "public class CustomObjectMapper {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:235
#, no-wrap
msgid ""
"    // Replaces the CDI producer for ObjectMapper built into Quarkus\n"
"    @Singleton\n"
"    ObjectMapper objectMapper(@All List<ObjectMapperCustomizer> customizers) {\n"
"        ObjectMapper mapper = myObjectMapper(); // Custom `ObjectMapper`\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:240
#, no-wrap
msgid ""
"        // Apply all ObjectMapperCustomizer beans (incl. Quarkus)\n"
"        for (ObjectMapperCustomizer customizer : customizers) {\n"
"            customizer.customize(mapper);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:244
#, no-wrap
msgid ""
"        return mapper;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/resteasy.adoc:246
#, fuzzy, no-wrap
msgid "JSON-B"
msgstr "JSON-B"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:249
#, fuzzy
msgid "As stated above, Quarkus provides the option of using JSON-B instead of Jackson via the use of the `quarkus-resteasy-jsonb` extension."
msgstr "Como ya se ha dicho, Quarkus ofrece la opción de utilizar JSON-B en lugar de Jackson mediante el uso de la extensión `quarkus-resteasy-jsonb`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:251
#, fuzzy
msgid "Following the same approach described in the previous section, JSON-B can be configured using an `io.quarkus.jsonb.JsonbConfigCustomizer` bean."
msgstr "Siguiendo el mismo enfoque descrito en la sección anterior, JSON-B puede ser configurado utilizando un bean `io.quarkus.jsonb.JsonbConfigCustomizer`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:253
#, fuzzy
msgid "If, for example, a custom serializer named `FooSerializer` for type `com.example.Foo` needs to be registered with JSON-B, the addition of a bean like the following would suffice:"
msgstr "Si por ejemplo un serializador personalizado llamado `FooSerializer` para el tipo `com.example.Foo` necesita ser registrado con JSON-B, la adición de un bean como el siguiente sería suficiente:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:260
#, no-wrap
msgid ""
"import io.quarkus.jsonb.JsonbConfigCustomizer;\n"
"import jakarta.inject.Singleton;\n"
"import jakarta.json.bind.JsonbConfig;\n"
"import jakarta.json.bind.serializer.JsonbSerializer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:263
#, no-wrap
msgid ""
"@Singleton\n"
"public class FooSerializerRegistrationCustomizer implements JsonbConfigCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:268
#, no-wrap
msgid ""
"    public void customize(JsonbConfig config) {\n"
"        config.withSerializers(new FooSerializer());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:273
#, fuzzy
msgid "A more advanced option would be to directly provide a bean of `jakarta.json.bind.JsonbConfig` (with a `Dependent` scope) or, in the extreme case, to provide a bean of type `jakarta.json.bind.Jsonb` (with a `Singleton` scope).  If the latter approach is leveraged it is very important to manually inject and apply all `io.quarkus.jsonb.JsonbConfigCustomizer` beans in the CDI producer that produces `jakarta.json.bind.Jsonb`.  Failure to do so will prevent JSON-B specific customizations provided by various extensions from being applied."
msgstr "Una opción más avanzada sería proporcionar directamente un bean de `javax.json.bind.JsonbConfig` (con un ámbito `Dependent` ) o, en el caso extremo, proporcionar un bean de tipo `javax.json.bind.Jsonb` (con un ámbito `Singleton` ). Si se aprovecha este último enfoque, es muy importante inyectar y aplicar manualmente todos los beans de `io.quarkus.jsonb.JsonbConfigCustomizer` en el productor CDI que produce `javax.json.bind.Jsonb`. Si no se hace así, se evitará que se apliquen las personalizaciones específicas de JSON-B proporcionadas por varias extensiones."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:277
#, no-wrap
msgid "import io.quarkus.jsonb.JsonbConfigCustomizer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:281
#, no-wrap
msgid ""
"import jakarta.enterprise.context.Dependent;\n"
"import jakarta.enterprise.inject.Instance;\n"
"import jakarta.json.bind.JsonbConfig;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:283
#, no-wrap
msgid "public class CustomJsonbConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:288
#, no-wrap
msgid ""
"    // Replaces the CDI producer for JsonbConfig built into Quarkus\n"
"    @Dependent\n"
"    JsonbConfig jsonConfig(Instance<JsonbConfigCustomizer> customizers) {\n"
"        JsonbConfig config = myJsonbConfig(); // Custom `JsonbConfig`\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:293
#, no-wrap
msgid ""
"        // Apply all JsonbConfigCustomizer beans (incl. Quarkus)\n"
"        for (JsonbConfigCustomizer customizer : customizers) {\n"
"            customizer.customize(config);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:297
#, no-wrap
msgid ""
"        return config;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy.adoc:300
#, fuzzy, no-wrap
msgid "JSON Hypertext Application Language (HAL) support"
msgstr "Compatibilidad con el lenguaje de aplicación de hipertexto JSON (HAL)"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:303
#, fuzzy
msgid "The https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] standard is a simple format to represent web links."
msgstr "El estándar  link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] es un formato sencillo para representar los enlaces web."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:305
#, fuzzy
msgid "To enable the HAL support, add the `quarkus-hal` extension to your project. Also, as HAL needs JSON support, you need to add either the `quarkus-resteasy-jsonb` or the `quarkus-resteasy-jackson` extension."
msgstr "Para habilitar el soporte de HAL, añade la extensión `quarkus-hal` a tu proyecto. Además, como HAL necesita soporte JSON, necesitas añadir la extensión `quarkus-resteasy-jsonb` o `quarkus-resteasy-jackson`."

#. type: Block title
#: upstream/_guides/resteasy.adoc:306
#, fuzzy, no-wrap
msgid "Table Context object"
msgstr "Tabla Objeto de contexto"

#. type: Table
#: upstream/_guides/resteasy.adoc:308
#, fuzzy, no-wrap
msgid "GAV"
msgstr "GAV"

#. type: Table
#: upstream/_guides/resteasy.adoc:310
#, fuzzy, no-wrap
msgid "Usage"
msgstr "Uso"

#. type: Table
#: upstream/_guides/resteasy.adoc:311
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-hal`"
msgstr "`io.quarkus:quarkus-hal`"

#. type: Table
#: upstream/_guides/resteasy.adoc:313
#, fuzzy, no-wrap
msgid "https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"
msgstr "link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:316
#, fuzzy
msgid "After adding the extensions, we can now annotate the REST resources to produce the media type `application/hal+json` (or use RestMediaType.APPLICATION_HAL_JSON). For example:"
msgstr "Después de añadir las extensiones, ahora podemos anotar los recursos REST para producir el tipo de medio `application/hal+json` (o utilizar RestMediaType.APPLICATION_HAL_JSON). Por ejemplo:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:321
#, no-wrap
msgid ""
"@Path(\"/records\")\n"
"public class RecordsResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:328
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.APPLICATION_JSON, \"application/hal+json\" })\n"
"    @LinkResource(entityClassName = \"org.acme.Record\", rel = \"list\")\n"
"    public List<TestRecord> getAll() {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:337
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/first\")\n"
"    @Produces({ MediaType.APPLICATION_JSON, \"application/hal+json\" })\n"
"    @LinkResource(rel = \"first\")\n"
"    public TestRecord getFirst() {\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:340
#, fuzzy
msgid "Now, the endpoints `/records` and `/records/first` will accept the media type, both `json` and `hal+json`, to print the records in Hal format."
msgstr "Ahora, los puntos finales `/records` y `/records/first` aceptarán el tipo de medio tanto `json` como `hal+json` para imprimir los registros en formato Hal."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:342
#, fuzzy
msgid "For example, if we invoke the `/records` endpoint using curl to return a list of records, the HAL format will look like as follows:"
msgstr "Por ejemplo, si invocamos el endpoint `/records` utilizando curl para devolver una lista de registros, el formato HAL será el siguiente"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:383
#, no-wrap
msgid ""
"& curl -H \"Accept:application/hal+json\" -i localhost:8080/records\n"
"{\n"
"    \"_embedded\": {\n"
"        \"items\": [\n"
"            {\n"
"                \"id\": 1,\n"
"                \"slug\": \"first\",\n"
"                \"value\": \"First value\",\n"
"                \"_links\": {\n"
"                    \"list\": {\n"
"                        \"href\": \"http://localhost:8081/records\"\n"
"                    },\n"
"                    \"first\": {\n"
"                        \"href\": \"http://localhost:8081/records/first\"\n"
"                    }\n"
"                }\n"
"            },\n"
"            {\n"
"                \"id\": 2,\n"
"                \"slug\": \"second\",\n"
"                \"value\": \"Second value\",\n"
"                \"_links\": {\n"
"                    \"list\": {\n"
"                        \"href\": \"http://localhost:8081/records\"\n"
"                    },\n"
"                    \"first\": {\n"
"                        \"href\": \"http://localhost:8081/records/first\"\n"
"                    }\n"
"                }\n"
"            }\n"
"        ]\n"
"    },\n"
"    \"_links\": {\n"
"        \"list\": {\n"
"            \"href\": \"http://localhost:8081/records\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:386
#, fuzzy
msgid "When we call a resource `/records/first` that returns only one instance, then the output is:"
msgstr "Cuando llamamos a un recurso `/records/first` que devuelve sólo una instancia, la salida es:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:403
#, no-wrap
msgid ""
"& curl -H \"Accept:application/hal+json\" -i localhost:8080/records/first\n"
"{\n"
"    \"id\": 1,\n"
"    \"slug\": \"first\",\n"
"    \"value\": \"First value\",\n"
"    \"_links\": {\n"
"        \"list\": {\n"
"            \"href\": \"http://localhost:8081/records\"\n"
"        },\n"
"        \"first\": {\n"
"            \"href\": \"http://localhost:8081/records/first\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:405
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "Creación de un frontend"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:410
#, fuzzy
msgid "Now let us add a simple web page to interact with our `FruitResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr "Ahora vamos a añadir una simple página web para interactuar con nuestro `FruitResource`. Quarkus sirve automáticamente recursos estáticos ubicados en el directorio `META-INF/resources`. En el directorio `src/main/resources/META-INF/resources`, añade un archivo `fruits.html` con el contenido de este archivo {quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:412
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "Ahora puede interactuar con su servicio REST:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:416
#, fuzzy
msgid "start Quarkus with:"
msgstr "con el que empezar a Quarkus:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:419
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "abrir un navegador para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:420
#, fuzzy
msgid "add new fruits to the list via the form"
msgstr "añadir nuevas frutas a la lista a través del formulario"

#. type: Title ==
#: upstream/_guides/resteasy.adoc:423
#, fuzzy, no-wrap
msgid "Building a native executable"
msgstr "Construir un ejecutable nativo"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:426
#, fuzzy
msgid "You can build a native executable with the usual command:"
msgstr "Puedes construir un ejecutable nativo con el comando habitual:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:430
#, fuzzy
msgid "Running it is as simple as executing `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "Ejecutarlo es tan sencillo como ejecutar `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:432
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "A continuación, puede dirigir su navegador a `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;` y utilizar su aplicación."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:433
#, fuzzy, no-wrap
msgid "About serialization"
msgstr "Sobre la serialización"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:436
#, fuzzy
msgid "JSON serialization libraries use Java reflection to get the properties of an object and serialize them."
msgstr "Las bibliotecas de serialización JSON utilizan Java reflection para obtener las propiedades de un objeto y serializarlas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:440
#, fuzzy
msgid "When using native executables with GraalVM, all classes that will be used with reflection need to be registered.  The good news is that Quarkus does that work for you most of the time.  So far, we have not registered any class, not even `Fruit`, for reflection usage, and everything is working fine."
msgstr "Cuando se utilizan ejecutables nativos con GraalVM, todas las clases que se utilizarán con la reflexión deben ser registradas. La buena noticia es que Quarkus hace ese trabajo por ti la mayor parte del tiempo. Hasta ahora, no hemos registrado ninguna clase, ni siquiera `Fruit`, para el uso de reflection y todo funciona bien."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:443
#, fuzzy
msgid "Quarkus performs some magic when it is capable of inferring the serialized types from the REST methods.  When you have the following REST method, Quarkus determines that `Fruit` will be serialized:"
msgstr "Quarkus realiza algo de magia cuando es capaz de inferir los tipos serializados a partir de los métodos REST. Cuando se tiene el siguiente método REST, Quarkus determina que `Fruit` será serializado:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:450
#, no-wrap
msgid ""
"@GET\n"
"public List<Fruit> list() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:453
#, fuzzy
msgid "Quarkus does that for you automatically by analyzing the REST methods at build time, and that is why we did not need any reflection registration in the first part of this guide."
msgstr "Quarkus lo hace por ti de forma automática analizando los métodos REST en tiempo de compilación y es por eso que no necesitamos ningún registro de reflexión en la primera parte de esta guía."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:456
#, fuzzy
msgid "Another common pattern in the Jakarta REST world is to use the `Response` object.  `Response` comes with some nice perks:"
msgstr "Otro patrón común en el mundo de JAX-RS es utilizar el objeto `Response`. `Response` tiene algunas ventajas:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:458
#, fuzzy
msgid "You can return different entity types depending on what happens in your method (a `Legume` or an `Error` for instance)."
msgstr "puede devolver diferentes tipos de entidad dependiendo de lo que ocurra en su método (un `Legume` o un `Error` por ejemplo);"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:459
#, fuzzy
msgid "You can set the attributes of the `Response` (the status comes to mind in the case of an error)."
msgstr "puede establecer los atributos de la página `Response` (el estado viene a cuento en el caso de un error)."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:461
#, fuzzy
msgid "Your REST method then looks like this:"
msgstr "Su método REST tiene entonces el siguiente aspecto:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:468
#, no-wrap
msgid ""
"@GET\n"
"public Response list() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:472
#, fuzzy
msgid "Quarkus cannot determine at build time the type included in the `Response` as the information is not available.  In this case, Quarkus won't be able to register for reflection in the required classes automatically."
msgstr "No es posible para Quarkus determinar en el momento de la construcción la clase incluida en el `Response` ya que la información no está disponible. En este caso, Quarkus no podrá registrar automáticamente para la reflexión las clases requeridas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:474
#, fuzzy
msgid "This leads us to our next section."
msgstr "Esto nos lleva a la siguiente sección."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:475
#, fuzzy, no-wrap
msgid "Using response"
msgstr "Uso de la respuesta"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:478
#, fuzzy
msgid "Let us create the `Legume` class, which will be serialized as JSON, following the same model as for our `Fruit` class:"
msgstr "Vamos a crear la clase `Legume` que se serializará como JSON, siguiendo el mismo modelo que para nuestra clase `Fruit`:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:484
#, no-wrap
msgid "public class Legume {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:490
#, no-wrap
msgid ""
"    public Legume() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:496
#, no-wrap
msgid ""
"    public Legume(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:499
#, fuzzy
msgid "Now let's create a `LegumeResource` REST service with only one method that returns the list of legumes."
msgstr "Ahora vamos a crear un servicio REST `LegumeResource` con un solo método que devuelva la lista de legumbres."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:501
#, fuzzy
msgid "This method returns a `Response` and not a list of `Legume`."
msgstr "Este método devuelve un `Response` y no una lista de `Legume`."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:509
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.LinkedHashSet;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:516
#, no-wrap
msgid ""
"import jakarta.ws.rs.Consumes;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import jakarta.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:521
#, no-wrap
msgid ""
"@Path(\"/legumes\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class LegumeResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:523
#, no-wrap
msgid "    private Set<Legume> legumes = Collections.synchronizedSet(new LinkedHashSet<>());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:528
#, no-wrap
msgid ""
"    public LegumeResource() {\n"
"        legumes.add(new Legume(\"Carrot\", \"Root vegetable, usually orange\"));\n"
"        legumes.add(new Legume(\"Zucchini\", \"Summer squash\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:534
#, no-wrap
msgid ""
"    @GET\n"
"    public Response list() {\n"
"        return Response.ok(legumes).build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:539
#, fuzzy
msgid "Now, let us add a simple web page to display our list of legumes.  In the `src/main/resources/META-INF/resources` directory, add a `legumes.html` file with the content from this {quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html] file in it."
msgstr "Ahora vamos a añadir una página web sencilla para mostrar nuestra lista de legumbres. En el directorio `src/main/resources/META-INF/resources`, añade un archivo `legumes.html` con el contenido de este archivo {quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:541
#, fuzzy
msgid "Open a browser to http://localhost:8080/legumes.html, and you will see our list of legumes."
msgstr "Abra un navegador a  http://localhost:8080/legumes.html  y verá nuestra lista de legumbres."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:543
#, fuzzy
msgid "The interesting part starts when running the application as a native executable:"
msgstr "La parte interesante comienza cuando se ejecuta la aplicación como un ejecutable nativo:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:547 upstream/_guides/resteasy.adoc:587
#, fuzzy
msgid "create the native executable with:"
msgstr "crear el ejecutable nativo con:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:550 upstream/_guides/resteasy.adoc:590
#, fuzzy
msgid "execute it with `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"
msgstr "ejecutarlo con `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:551 upstream/_guides/resteasy.adoc:591
#, fuzzy
msgid "open a browser and go to http://localhost:8080/legumes.html"
msgstr "abra un navegador y vaya a  http://localhost:8080/legumes.html"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:555
#, fuzzy
msgid "There are no legumes there."
msgstr "Allí no hay legumbres."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:558
#, fuzzy
msgid "As mentioned above, the issue is that Quarkus could not determine the `Legume` class, which will require some reflection by analyzing the REST endpoints.  The JSON serialization library tries to get the list of fields of `Legume` and gets an empty list, so it does not serialize the fields' data."
msgstr "Como se mencionó anteriormente, el problema es que Quarkus no fue capaz de determinar la clase `Legume` requerirá alguna reflexión mediante el análisis de los puntos finales REST. La biblioteca de serialización JSON intenta obtener la lista de campos de `Legume` y obtiene una lista vacía, por lo que no serializa los datos de los campos."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:563
#, fuzzy
msgid "At the moment, when JSON-B or Jackson tries to get the list of fields of a class, if the class is not registered for reflection, no exception will be thrown.  GraalVM will return an empty list of fields."
msgstr "Actualmente, cuando JSON-B o Jackson intentan obtener la lista de campos de una clase, si la clase no está registrada para reflexión, no se lanzará ninguna excepción. GraalVM simplemente devolverá una lista de campos vacía."

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:565
#, fuzzy
msgid "Hopefully, this will change in the future and make the error more obvious."
msgstr "Esperemos que esto cambie en el futuro y que el error sea más evidente."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:568
#, fuzzy
msgid "We can register `Legume` for reflection manually by adding the `@RegisterForReflection` annotation on our `Legume` class:"
msgstr "Podemos registrar `Legume` para la reflexión manualmente añadiendo la anotación `@RegisterForReflection` en nuestra clase `Legume`:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:571
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:576
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Legume {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:580
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation.  More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "La anotación `@RegisterForReflection` indica a Quarkus que mantenga la clase y sus miembros durante la compilación nativa. Se pueden encontrar más detalles sobre la anotación `@RegisterForReflection` en la página de  link:writing-native-applications-tips.html#registerForReflection[consejos para aplicaciones] nativas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:582
#, fuzzy
msgid "Let us do that and follow the same steps as before:"
msgstr "Hagámoslo y sigamos los mismos pasos que antes:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:586
#, fuzzy
msgid "hit `Ctrl+C` to stop the application"
msgstr "pulse `Ctrl+C` para detener la aplicación"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:595
#, fuzzy
msgid "This time, you can see our list of legumes."
msgstr "Esta vez, puedes ver nuestra lista de legumbres."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:597
#, fuzzy, no-wrap
msgid "Being reactive"
msgstr "Ser reactivo"

#. type: delimited block =
#: upstream/_guides/resteasy.adoc:602
#, fuzzy
msgid "For reactive workloads, please always use xref:resteasy-reactive.adoc[RESTEasy Reactive]."
msgstr "Para las cargas de trabajo reactivas, utilice siempre  link:resteasy-reactive.html[RESTEasy Reactive]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:606
#, fuzzy
msgid "You can return _reactive types_ to handle asynchronous processing.  Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code."
msgstr "Puedes devolver _tipos reactivos_ para manejar el procesamiento asíncrono. Quarkus recomienda el uso de  link:https://smallrye.io/smallrye-mutiny[Mutiny] para escribir código reactivo y asíncrono."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:608
#, fuzzy
msgid "To integrate Mutiny and RESTEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:"
msgstr "Para integrar Mutiny y RESTEasy, debe añadir la dependencia de `quarkus-resteasy-mutiny` a su proyecto:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:616
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-mutiny</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:622
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-resteasy-mutiny\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:625
#, fuzzy
msgid "Then, your endpoint can return `Uni` or `Multi` instances:"
msgstr "Entonces, su punto final puede devolver instancias de `Uni` o `Multi`:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:634
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/{name}\")\n"
"public Uni<Fruit> getOne(@PathParam String name) {\n"
"    return findByName(name);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:639
#, no-wrap
msgid ""
"@GET\n"
"public Multi<Fruit> getAll() {\n"
"    return findAll();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:643
#, fuzzy
msgid "Use `Uni` when you have a single result.  Use `Multi` when you have multiple items that may be emitted asynchronously."
msgstr "Utilice `Uni` cuando tenga un único resultado. Utilice `Multi` cuando tenga varios elementos que puedan ser emitidos de forma asíncrona."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:645
#, fuzzy
msgid "You can use `Uni` and `Response` to return asynchronous HTTP responses: `Uni<Response>`."
msgstr "Puede utilizar `Uni` y `Response` para devolver respuestas HTTP asíncronas: `Uni&amp;lt;Response&amp;gt;`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:647
#, fuzzy
msgid "More details about Mutiny can be found in xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Puede encontrar más detalles sobre Mutiny en  link:mutiny-primer.html[Mutiny - an intuitive reactive programming library]."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:648
#, fuzzy, no-wrap
msgid "HTTP filters and interceptors"
msgstr "Filtros e interceptores HTTP"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:654
#, fuzzy
msgid "Both HTTP request and response can be intercepted by providing `ContainerRequestFilter` or `ContainerResponseFilter` implementations respectively.  These filters are suitable for processing the metadata associated with a message: HTTP headers, query parameters, media type, and other metadata.  They also can abort the request processing, for instance, when the user does not have permission to access the endpoint."
msgstr "Tanto la petición como la respuesta HTTP pueden ser interceptadas proporcionando implementaciones de `ContainerRequestFilter` o `ContainerResponseFilter` respectivamente. Estos filtros son adecuados para procesar los metadatos asociados a un mensaje: cabeceras HTTP, parámetros de consulta, tipo de medio y otros metadatos. También tienen la capacidad de abortar el procesamiento de la solicitud, por ejemplo cuando el usuario no tiene los permisos para acceder al punto final."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:656
#, fuzzy
msgid "Let's use `ContainerRequestFilter` to add logging capability to our service. We can do that by implementing `ContainerRequestFilter` and annotating it with the `@Provider` annotation:"
msgstr "Vamos a utilizar `ContainerRequestFilter` para añadir la capacidad de registro a nuestro servicio. Podemos hacerlo implementando `ContainerRequestFilter` y anotándolo con la anotación `@Provider`:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:663
#, no-wrap
msgid ""
"import io.vertx.core.http.HttpServerRequest;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:669
#, no-wrap
msgid ""
"import jakarta.ws.rs.container.ContainerRequestContext;\n"
"import jakarta.ws.rs.container.ContainerRequestFilter;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.UriInfo;\n"
"import jakarta.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:672
#, no-wrap
msgid ""
"@Provider\n"
"public class LoggingFilter implements ContainerRequestFilter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:674
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(LoggingFilter.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:677
#, no-wrap
msgid ""
"    @Context\n"
"    UriInfo info;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:680
#, no-wrap
msgid ""
"    @Context\n"
"    HttpServerRequest request;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:683
#, no-wrap
msgid ""
"    @Override\n"
"    public void filter(ContainerRequestContext context) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:687
#, no-wrap
msgid ""
"        final String method = context.getMethod();\n"
"        final String path = info.getPath();\n"
"        final String address = request.remoteAddress().toString();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:691
#, no-wrap
msgid ""
"        LOG.infof(\"Request %s %s from IP %s\", method, path, address);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:694
#, fuzzy
msgid "Now, whenever a REST method is invoked, the request will be logged into the console:"
msgstr "Ahora, cada vez que se invoque un método REST, la petición se registrará en la consola:"

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:701
#, no-wrap
msgid ""
"2019-06-05 12:44:26,526 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /legumes from IP 127.0.0.1\n"
"2019-06-05 12:49:19,623 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /fruits from IP 0:0:0:0:0:0:0:1\n"
"2019-06-05 12:50:44,019 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request POST /fruits from IP 0:0:0:0:0:0:0:1\n"
"2019-06-05 12:51:04,485 INFO  [org.acm.res.jso.LoggingFilter] (executor-thread-1) Request GET /fruits from IP 127.0.0.1\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:703
#, fuzzy, no-wrap
msgid "CORS filter"
msgstr "Filtro CORS"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:708
#, fuzzy
msgid "link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[Cross-origin resource sharing] (CORS) is a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served."
msgstr "La link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[compartición de recursos entre orígenes] (CORS) es un mecanismo que permite solicitar recursos restringidos en una página web desde otro dominio fuera del dominio desde el que se sirvió el primer recurso."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:711
msgid "Quarkus includes a CORS filter at the HTTP layer level.  For more information about the CORS filters and their usage, see the xref:security-cors.adoc#cors-filter[CORS filter] section of the Quarkus \"Cross-origin resource sharing\" guide."
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:712
#, fuzzy, no-wrap
msgid "GZip Support"
msgstr "Soporte GZip"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:715
#, fuzzy
msgid "Quarkus comes with GZip support (even though it is not enabled by default). The following configuration knobs allow to configure GZip support."
msgstr "Quarkus viene con soporte GZip (aunque no está habilitado por defecto). Los siguientes mandos de configuración permiten configurar el soporte de GZip."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:720
#, no-wrap
msgid ""
"quarkus.resteasy.gzip.enabled=true // <1>\n"
"quarkus.resteasy.gzip.max-input=10M // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:723
#, fuzzy
msgid "Enable Gzip support."
msgstr "Activar el soporte de Gzip."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:727
#, fuzzy
msgid "Configure the upper limit on the deflated request body.  This is useful to mitigate potential attacks by limiting their reach. The default value is `10M`.  This configuration option would recognize strings in this format (shown as a regular expression): `[0-9]+[KkMmGgTtPpEeZzYy]?`.  If no suffix is given, assume bytes."
msgstr "Configurar el límite superior del cuerpo de la solicitud desinflado. Esto es útil para mitigar posibles ataques limitando su alcance. El valor por defecto es `10M`. Esta opción de configuración reconocería cadenas con este formato (mostrado como una expresión regular): `[0-9]+[KkMmGgTtPpEeZzYy]?`. Si no se da ningún sufijo, se asumen los bytes."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:729
#, fuzzy
msgid "Once GZip support has been enabled, you can use it on an endpoint by adding the `@org.jboss.resteasy.annotations.GZIP` annotation to your endpoint method."
msgstr "Una vez habilitado el soporte de GZip, puede utilizarlo en un endpoint añadiendo la anotación `@org.jboss.resteasy.annotations.GZIP` a su método de endpoint."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:732
#, fuzzy
msgid "There is also the `quarkus.http.enable-compression` configuration property, which enables HTTP response compression globally.  If enabled, a response body is compressed if the `Content-Type` HTTP header is set and the value is a compressed media type configured via the `quarkus.http.compress-media-types` configuration property."
msgstr "También existe la propiedad de configuración `quarkus.http.enable-compression` que habilita la compresión de respuestas HTTP de forma global. Si se activa, el cuerpo de la respuesta se comprime si se establece la cabecera HTTP `Content-Type` y el valor es un tipo de medio comprimido, tal y como se configura mediante la propiedad de configuración `quarkus.http.compress-media-types`."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:733
#, fuzzy, no-wrap
msgid "Multipart Support"
msgstr "Soporte multiparte"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:736
#, fuzzy
msgid "RESTEasy supports multipart via the https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."
msgstr "RESTEasy admite el uso de multipartes a través del  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:738
#, fuzzy
msgid "Quarkus provides an extension called `quarkus-resteasy-multipart` to make things easier for you."
msgstr "Quarkus proporciona una extensión llamada `quarkus-resteasy-multipart` para facilitarte las cosas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:740
#, fuzzy
msgid "This extension slightly differs from the RESTEasy default behavior as the default charset (if none is specified in your request) is UTF-8 rather than US-ASCII."
msgstr "Esta extensión difiere ligeramente del comportamiento por defecto de RESTEasy, ya que el conjunto de caracteres por defecto (si no se especifica ninguno en su solicitud) es UTF-8 en lugar de US-ASCII."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:742
#, fuzzy
msgid "You can configure this behavior with the following configuration properties:"
msgstr "Puede configurar este comportamiento con las siguientes propiedades de configuración:"

#. type: Title ==
#: upstream/_guides/resteasy.adoc:745
#, fuzzy, no-wrap
msgid "Servlet compatibility"
msgstr "Compatibilidad con servlets"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:748
#, fuzzy
msgid "In Quarkus, RESTEasy can either run directly on top of the Vert.x HTTP server, or on top of Undertow if you have any servlet dependency."
msgstr "En Quarkus, RESTEasy puede ejecutarse directamente sobre el servidor HTTP Vert.x, o sobre Undertow si tiene alguna dependencia de servlets."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:751
msgid "As a result, certain classes, such as `HttpServletRequest` are not always available for injection.  Most use cases for this particular class are covered by Jakarta REST equivalents, except for getting the remote client's IP."
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:757
#, fuzzy
msgid "RESTEasy comes with a replacement API that you can inject: https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html[`HttpRequest`], which has the methods https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteAddress--[`getRemoteAddress()`] and https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteHost--[`getRemoteHost()`] to solve this problem."
msgstr "Como resultado, ciertas clases, como `HttpServletRequest` no están siempre disponibles para la inyección. La mayoría de los casos de uso de esta clase en particular están cubiertos por los equivalentes de JAX-RS, excepto para obtener la IP del cliente remoto. RESTEasy viene con una API de reemplazo que se puede inyectar:  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html[`HttpRequest`]que tiene los métodos  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteAddress--[`getRemoteAddress()`] y  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteHost--[`getRemoteHost()`] para resolver este problema."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:758
#, fuzzy, no-wrap
msgid "RESTEasy and REST Client interactions"
msgstr "Interacciones entre RESTEasy y el cliente REST"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:762
#, fuzzy
msgid "In Quarkus, the RESTEasy extension and xref:rest-client.adoc[the REST Client extension] share the same infrastructure.  One important consequence of this consideration is that they share the same list of providers (in the Jakarta REST meaning of the word)."
msgstr "En Quarkus, la extensión RESTEasy y  link:rest-client.html[la extensión REST Client] comparten la misma infraestructura. Una consecuencia importante de esta consideración es que comparten la misma lista de proveedores (en el sentido JAX-RS de la palabra)."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:765
#, fuzzy
msgid "For instance, if you declare a `WriterInterceptor`, it will, by default, intercept both the servers calls and the client calls, which might not be the desired behavior."
msgstr "Por ejemplo, si declaras un `WriterInterceptor`, por defecto interceptará tanto las llamadas del servidor como las del cliente, lo que podría no ser el comportamiento deseado."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:767
#, fuzzy
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "Sin embargo, se puede cambiar este comportamiento por defecto y restringir un proveedor a:"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:769
#, fuzzy
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider;"
msgstr "sólo considera las llamadas *al servidor* añadiendo la anotación `@ConstrainedTo(RuntimeType.SERVER)` a su proveedor;"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:770
#, fuzzy
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider."
msgstr "sólo considera las llamadas *del cliente* añadiendo la anotación `@ConstrainedTo(RuntimeType.CLIENT)` a su proveedor."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:771
#, fuzzy, no-wrap
msgid "What's Different from Jakarta EE Development"
msgstr "¿Qué es diferente del desarrollo de Jakarta EE?"

#. type: Title ===
#: upstream/_guides/resteasy.adoc:773
#, fuzzy, no-wrap
msgid "No Need for `Application` Class"
msgstr "No es necesario `Application` Class"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:776
#, fuzzy
msgid "Configuration via an application-supplied subclass of `Application` is supported but not required."
msgstr "Se admite la configuración a través de una subclase de `Application` proporcionada por la aplicación, pero no es necesaria."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:777
#, fuzzy, no-wrap
msgid "Only a single Jakarta REST application"
msgstr "Sólo una aplicación JAX-RS"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:781
#, fuzzy
msgid "In contrast to Jakarta REST (and RESTeasy) running in a standard servlet container, Quarkus only supports the deployment of a single Jakarta REST application.  If multiple Jakarta REST `Application` classes are defined, the build will fail with the message `Multiple classes have been annotated with @ApplicationPath which is currently not supported`."
msgstr "A diferencia de JAX-RS (y RESTeasy) que se ejecuta en un contenedor de servlets estándar, Quarkus sólo admite el despliegue de una única aplicación JAX-RS. Si se definen varias clases JAX-RS `Application`, la compilación fallará con el mensaje `Multiple classes have been annotated with @ApplicationPath which is currently not supported`."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:784
#, fuzzy
msgid "If multiple Jakarta REST applications are defined, the property `quarkus.resteasy.ignore-application-classes=true` can be used to ignore all explicit `Application` classes.  This makes all resource-classes available via the application-path as defined by `quarkus.resteasy.path` (default: `/`)."
msgstr "Si se definen varias aplicaciones JAX-RS, se puede utilizar la propiedad `quarkus.resteasy.ignore-application-classes=true` para ignorar todas las clases explícitas de `Application`. Esto hace que todas las clases de recursos estén disponibles a través de la ruta de aplicación definida por `quarkus.resteasy.path` (por defecto: `/`)."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:785
#, fuzzy, no-wrap
msgid "Support limitations of Jakarta REST application"
msgstr "Apoyar las limitaciones de la aplicación JAX-RS"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:791
#, fuzzy
msgid "The RESTEasy extension doesn't support the method `getProperties()` of the class `jakarta.ws.rs.core.Application`.  Moreover, it only relies on the methods `getClasses()` and `getSingletons()` to filter out the annotated resource, provider, and feature classes.  It does not filter out the built-in resource, provider, and feature classes and also the resource, provider, and feature classes registered by the other extensions.  Finally, the objects returned by the method `getSingletons()` are ignored, only the classes are taken into account to filter out the resource, provider and feature classes, in other words the method `getSingletons()` is managed the same way as `getClasses()`."
msgstr "La extensión RESTEasy no admite el método `getProperties()` de la clase `javax.ws.rs.core.Application`. Además, sólo se basa en los métodos `getClasses()` y `getSingletons()` para filtrar las clases de recursos, proveedores y características anotadas. No filtra las clases de recursos, proveedores y características incorporadas ni las clases de recursos, proveedores y características registradas por otras extensiones. Por último, los objetos devueltos por el método `getSingletons()` se ignoran, sólo se tienen en cuenta las clases para filtrar las clases de recursos, proveedores y características, es decir, el método `getSingletons()` se gestiona de la misma manera que `getClasses()`."

#. type: Title ===
#: upstream/_guides/resteasy.adoc:792
#, fuzzy, no-wrap
msgid "Lifecycle of Resources"
msgstr "Ciclo de vida de los recursos"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:796
#, fuzzy
msgid "In Quarkus, all Jakarta REST resources are treated as CDI beans.  It's possible to inject other beans via `@Inject`, bind interceptors using bindings such as `@Transactional`, define `@PostConstruct` callbacks, etc."
msgstr "En Quarkus todos los recursos JAX-RS se tratan como beans CDI. Es posible inyectar otros beans a través de `@Inject`, enlazar interceptores usando bindings como `@Transactional`, definir callbacks de `@PostConstruct`, etc."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:799
msgid "If no scope annotation is declared on the resource class, then the scope is defaulted.  The `quarkus.resteasy.singleton-resources` property can control the default scope."
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:801
msgid "If set to `true` (default), then a *single instance* of a resource class is created to service all requests (as defined by `@jakarta.inject.Singleton`)."
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:803
msgid "If set to `false`, then a *new instance* of the resource class is created per each request."
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:805
msgid "An explicit CDI scope annotation (`@RequestScoped`, `@ApplicationScoped`, etc.) always overrides the default behavior and specifies the lifecycle of resource instances."
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy.adoc:806
#, fuzzy, no-wrap
msgid "Include/Exclude Jakarta REST classes with build time conditions"
msgstr "Incluir/excluir clases JAX-RS con condiciones de tiempo de construcción"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:810
#, fuzzy
msgid "Quarkus enables the inclusion or exclusion of Jakarta REST Resources, Providers and Features directly thanks to build time conditions in the same that it does for CDI beans.  Thus, the various Jakarta REST classes can be annotated with profile conditions (`@io.quarkus.arc.profile.IfBuildProfile` or `@io.quarkus.arc.profile.UnlessBuildProfile`) and/or with property conditions (`io.quarkus.arc.properties.IfBuildProperty` or `io.quarkus.arc.properties.UnlessBuildProperty`) to indicate to Quarkus at build time under which conditions these Jakarta REST classes should be included."
msgstr "Quarkus permite la inclusión o exclusión de Recursos, Proveedores y Características JAX-RS directamente gracias a las condiciones de tiempo de construcción de la misma manera que lo hace para los beans CDI. Así, las diversas clases JAX-RS pueden ser anotadas con condiciones de perfil ( `@io.quarkus.arc.profile.IfBuildProfile` o `@io.quarkus.arc.profile.UnlessBuildProfile`) y/o con condiciones de propiedad ( `io.quarkus.arc.properties.IfBuildProperty` o `io.quarkus.arc.properties.UnlessBuildProperty`) para indicar a Quarkus en tiempo de construcción bajo qué condiciones deben ser incluidas estas clases JAX-RS."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:812
#, fuzzy
msgid "In the following example, Quarkus includes the endpoint `sayHello` if and only if the build profile `app1` has been enabled."
msgstr "En el siguiente ejemplo, Quarkus incluye el punto final `sayHello` si y sólo si se ha habilitado el perfil de construcción `app1`."

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:817
#, no-wrap
msgid ""
"@IfBuildProfile(\"app1\")\n"
"public class ResourceForApp1Only {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy.adoc:824
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"sayHello\")\n"
"    public String sayHello() {\n"
"        return \"hello\";\n"
"     }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy.adoc:827
#, fuzzy
msgid "Please note that if a Jakarta REST Application has been detected and the method `getClasses()` and/or `getSingletons()` has/have been overridden, Quarkus will ignore the build time conditions and consider only what has been defined in the Jakarta REST Application."
msgstr "Tenga en cuenta que si se ha detectado una Aplicación JAX-RS y el método `getClasses()` y/o `getSingletons()` ha sido anulado, Quarkus ignorará las condiciones de tiempo de compilación y considerará sólo lo que se ha definido en la Aplicación JAX-RS."

#. type: Title ==
#: upstream/_guides/resteasy.adoc:828
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusión"

#. type: Plain text
#: upstream/_guides/resteasy.adoc:831
#, fuzzy
msgid "Creating JSON REST services with Quarkus is easy as it relies on proven and well-known technologies."
msgstr "Crear servicios JSON REST con Quarkus es fácil, ya que se basa en tecnologías probadas y bien conocidas."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:833
#, fuzzy
msgid "As usual, Quarkus further simplifies things under the hood when running your application as a native executable."
msgstr "Como es habitual, Quarkus simplifica aún más las cosas bajo el capó cuando se ejecuta su aplicación como un ejecutable nativo."

#. type: Plain text
#: upstream/_guides/resteasy.adoc:834
#, fuzzy
msgid "There is only one thing to remember: if you use `Response` and Quarkus cannot determine the beans that are serialized, you need to annotate them with `@RegisterForReflection`."
msgstr "Sólo hay que recordar una cosa: si usas `Response` y Quarkus no puede determinar los beans que se serializan, tienes que anotarlos con `@RegisterForReflection`."

#, fuzzy
#~ msgid "Also, Quarkus makes it very easy to configure various Jackson settings via CDI beans.  The simplest (and suggested) approach is to define a CDI bean of type `io.quarkus.jackson.ObjectMapperCustomizer` inside of which any Jackson configuration can be applied."
#~ msgstr "Además, Quarkus hace que sea muy fácil configurar varios ajustes de Jackson a través de beans CDI. El enfoque más sencillo (y sugerido) es definir un bean CDI de tipo `io.quarkus.jackson.ObjectMapperCustomizer` dentro del cual se puede aplicar cualquier configuración de Jackson."

#, fuzzy
#~ msgid "An example where a custom module needs to be registered would look like so:"
#~ msgstr "Un ejemplo en el que hay que registrar un módulo personalizado sería el siguiente"

#, fuzzy
#~ msgid "Quarkus comes with a CORS filter. Read the xref:http-reference.adoc#cors-filter[HTTP Reference Documentation] to learn how to use it."
#~ msgstr "Quarkus viene con un filtro CORS. Lea la  link:http-reference.html#cors-filter[documentación de referencia de HTTP] para aprender a usarlo."

#, fuzzy
#~ msgid "If there is no scope annotation declared on the resource class then the scope is defaulted.  The default scope can be controlled through the `quarkus.resteasy.singleton-resources` property.  If set to `true` (default) then a *single instance* of a resource class is created to service all requests (as defined by `@jakarta.inject.Singleton`).  If set to `false` then a *new instance* of the resource class is created per each request.  An explicit CDI scope annotation (`@RequestScoped`, `@ApplicationScoped`, etc.) always overrides the default behavior and specifies the lifecycle of resource instances."
#~ msgstr "Si no hay ninguna anotación de ámbito declarada en la clase de recurso, el ámbito se establece por defecto. El ámbito por defecto puede ser controlado a través de la propiedad `quarkus.resteasy.singleton-resources`. Si se establece en `true` (por defecto) entonces se crea una *única instancia* de una clase de recurso para atender todas las peticiones (como se define en `@javax.inject.Singleton`). Si se establece en `false`, se crea una *nueva* instancia de la clase de recurso por cada solicitud. Una anotación explícita del ámbito CDI ( `@RequestScoped`, `@ApplicationScoped`, etc.) siempre anula el comportamiento por defecto y especifica el ciclo de vida de las instancias de recursos."

#, fuzzy
#~ msgid "The configuration property `quarkus.http.enable-compression` has no effect on compression support of RESTEasy Classic endpoints."
#~ msgstr "La propiedad de configuración `quarkus.http.enable-compression` no tiene ningún efecto sobre el soporte de compresión de los extremos de RESTEasy Classic."

#, fuzzy
#~ msgid "If you want to compress everything then we recommended that you use the `quarkus.http.enable-compression=true` setting instead to globally enable compression support."
#~ msgstr "Si quieres comprimir todo, te recomendamos que utilices la opción `quarkus.http.enable-compression=true` para activar globalmente el soporte de compresión."
