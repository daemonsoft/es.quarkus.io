# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 08:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "RESTEasy Classic"
msgstr "RESTEasy Classic"

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "This guide is about https://resteasy.dev[RESTEasy Classic], which used to be the default Jakarta REST (formerly known as JAX-RS) implementation until Quarkus 2.8."
msgstr "Esta guía es sobre  link:https://resteasy.dev[RESTEasy Classic], que solía ser la implementación JAX-RS por defecto hasta Quarkus 2.8."

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "It is now recommended to use RESTEasy Reactive, which supports both traditional blocking workloads and reactive workloads equally well."
msgstr "Ahora se recomienda utilizar RESTEasy Reactive, que admite por igual las cargas de trabajo tradicionales de bloqueo y las cargas de trabajo reactivas."

#: _guides/resteasy.adoc
msgid ""
"For more information about RESTEasy Reactive,\n"
"please see the xref:rest-json.adoc[introductory REST JSON guide] or the xref:resteasy-reactive.adoc[RESTEasy Reactive reference documentation]."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "There is another guide if you need a xref:rest-client.adoc[REST client based on RESTEasy Classic] (including support for JSON)."
msgstr "hay otra guía si necesitas un  link:rest-client.html[cliente REST basado en RESTEasy Classic] (incluyendo soporte para JSON)."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The application created in this guide is straightforward: users can add elements to a list through a form, and the list gets updated accordingly."
msgstr "La aplicación construida en esta guía es bastante sencilla: el usuario puede añadir elementos en una lista mediante un formulario y la lista se actualiza."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "All the information between the browser and the server is formatted as JSON."
msgstr "Toda la información entre el navegador y el servidor se formatea como JSON."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#: _guides/resteasy.adoc
msgid ""
"This command generates a new project importing the RESTEasy/Jakarta REST and https://github.com/FasterXML/jackson[Jackson] extensions,\n"
"and in particular, adds the following dependency:"
msgstr ""

#. type: Block title
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "To improve user experience, Quarkus registers the three Jackson https://github.com/FasterXML/jackson-modules-java8[Java 8 modules], so you do not need to do it manually."
msgstr "Para mejorar la experiencia del usuario, Quarkus registra los tres  link:https://github.com/FasterXML/jackson-modules-java8[módulos] Jackson  link:https://github.com/FasterXML/jackson-modules-java8[Java] 8 para que no tengas que hacerlo manualmente."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus also supports https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], so if you prefer JSON-B over Jackson, you can create a project relying on the RESTEasy JSON-B extension instead:"
msgstr "Quarkus también es compatible con  link:https://eclipse-ee4j.github.io/jsonb-api/[JSON-B], por lo que, si prefiere JSON-B a Jackson, puede crear un proyecto basado en la extensión JSON-B de RESTEasy:"

#: _guides/resteasy.adoc
msgid ""
"This command generates a new project importing the RESTEasy/Jakarta REST and https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] extensions,\n"
"and in particular, adds the following dependency:"
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Creating the first JSON REST service"
msgstr "Creación de su primer servicio JSON REST"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "En este ejemplo, crearemos una aplicación para gestionar una lista de frutas."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "First, let us create the `Fruit` bean as follows:"
msgstr "En primer lugar, vamos a crear el frijol `Fruit` de la siguiente manera:"

#: _guides/resteasy.adoc
msgid ""
"Nothing fancy.\n"
"One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now, create the `org.acme.rest.json.FruitResource` class as follows:"
msgstr "Ahora, cree la clase `org.acme.rest.json.FruitResource` como sigue:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations."
msgstr "La implementación es bastante sencilla y sólo hay que definir los puntos finales utilizando las anotaciones JAX-RS."

#: _guides/resteasy.adoc
msgid ""
"The `Fruit` objects will be automatically serialized/deserialized by https://eclipse-ee4j.github.io/jsonb-api/[JSON-B] or https://github.com/FasterXML/jackson[Jackson],\n"
"depending on the extension you chose when initializing the project."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"When a JSON extension like `quarkus-resteasy-jackson` or `quarkus-resteasy-jsonb` is installed, Quarkus defaults to the `application/json` media type for most return values.\n"
"This can be overridden using `@Produces` or `@Consumes` annotations, except for certain well-known types like `String` (defaulting to `text/plain`) and `File` (defaulting to `application/octet-stream`)."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"To disable the default JSON behavior, set `quarkus.resteasy-json.default-json=false`, and the default will return to auto-negotiation.\n"
"In this case, you must include `@Produces(MediaType.APPLICATION_JSON)` and `@Consumes(MediaType.APPLICATION_JSON)` annotations in your endpoints to use JSON."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"If you don't depend on the JSON default, it's highly advisable to use `@Produces` and `@Consumes` annotations on your endpoints to specify the expected content types precisely.\n"
"This helps reduce the number of Jakarta REST providers (essentially converters) included in the native executable."
msgstr ""

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Configuring JSON support"
msgstr "Configuración de la compatibilidad con JSON"

#. type: Title ====
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Jackson"
msgstr "Jackson"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "In Quarkus, the default Jackson `ObjectMapper` obtained via CDI (utilized by Quarkus extensions) is set to ignore unknown properties (by disabling `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES`)."
msgstr "En Quarkus, el Jackson `ObjectMapper` por defecto obtenido a través de CDI (y consumido por las extensiones de Quarkus) está configurado para ignorar las propiedades desconocidas (desactivando la característica `DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES` )."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "To revert to Jackson's default behavior, set `quarkus.jackson.fail-on-unknown-properties=true` in your `application.properties`, or set it on a per-class basis with `@JsonIgnoreProperties(ignoreUnknown = false)`."
msgstr "Puede restablecer el comportamiento por defecto de Jackson configurando `quarkus.jackson.fail-on-unknown-properties=true` en su `application.properties` o por clase a través de `@JsonIgnoreProperties(ignoreUnknown = false)`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Additionally, the `ObjectMapper` formats dates and times in ISO-8601 (by disabling `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS`)."
msgstr "Además, el `ObjectMapper` está configurado para formatear las fechas y la hora en ISO-8601 (desactivando la función `SerializationFeature.WRITE_DATES_AS_TIMESTAMPS` )."

#: _guides/resteasy.adoc
msgid ""
"To restore Jackson's default behavior, use `quarkus.jackson.write-dates-as-timestamps=true` in your `application.properties`.\n"
"For custom date format on a single field, use the `@JsonFormat` annotation."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus simplifies Jackson configuration via CDI beans. Create a CDI bean of type `io.quarkus.jackson.ObjectMapperCustomizer` to apply various Jackson settings. Here's an example for registering a custom module:"
msgstr "Quarkus simplifica la configuración de Jackson mediante beans CDI. Cree un frijol CDI de tipo `io.quarkus.jackson.ObjectMapperCustomizer` para aplicar diversas configuraciones de Jackson. He aquí un ejemplo para registrar un módulo personalizado:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This approach is recommended for configuring Jackson settings."
msgstr "Este enfoque se recomienda para configurar los ajustes de Jackson."

#: _guides/resteasy.adoc
msgid ""
"Users can even provide their own `ObjectMapper` bean if they so choose.\n"
"If this is done, it is very important to manually inject and apply all `io.quarkus.jackson.ObjectMapperCustomizer` beans in the CDI producer that produces `ObjectMapper`.\n"
"Failure to do so will prevent Jackson-specific customizations provided by various extensions from being applied."
msgstr ""

#. type: Title ====
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "JSON-B"
msgstr "JSON-B"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "As stated above, Quarkus provides the option of using JSON-B instead of Jackson via the use of the `quarkus-resteasy-jsonb` extension."
msgstr "Como ya se ha dicho, Quarkus ofrece la opción de utilizar JSON-B en lugar de Jackson mediante el uso de la extensión `quarkus-resteasy-jsonb`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Following the same approach described in the previous section, JSON-B can be configured using an `io.quarkus.jsonb.JsonbConfigCustomizer` bean."
msgstr "Siguiendo el mismo enfoque descrito en la sección anterior, JSON-B puede ser configurado utilizando un bean `io.quarkus.jsonb.JsonbConfigCustomizer`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "If, for example, a custom serializer named `FooSerializer` for type `com.example.Foo` needs to be registered with JSON-B, the addition of a bean like the following would suffice:"
msgstr "Si por ejemplo un serializador personalizado llamado `FooSerializer` para el tipo `com.example.Foo` necesita ser registrado con JSON-B, la adición de un bean como el siguiente sería suficiente:"

#: _guides/resteasy.adoc
msgid ""
"A more advanced option would be to directly provide a bean of `jakarta.json.bind.JsonbConfig` (with a `Dependent` scope) or, in the extreme case, to provide a bean of type `jakarta.json.bind.Jsonb` (with a `Singleton` scope).\n"
"If the latter approach is leveraged it is very important to manually inject and apply all `io.quarkus.jsonb.JsonbConfigCustomizer` beans in the CDI producer that produces `jakarta.json.bind.Jsonb`.\n"
"Failure to do so will prevent JSON-B specific customizations provided by various extensions from being applied."
msgstr ""

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "JSON Hypertext Application Language (HAL) support"
msgstr "Compatibilidad con el lenguaje de aplicación de hipertexto JSON (HAL)"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] standard is a simple format to represent web links."
msgstr "El estándar  link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL] es un formato sencillo para representar los enlaces web."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "To enable the HAL support, add the `quarkus-hal` extension to your project. Also, as HAL needs JSON support, you need to add either the `quarkus-resteasy-jsonb` or the `quarkus-resteasy-jackson` extension."
msgstr "Para habilitar el soporte de HAL, añade la extensión `quarkus-hal` a tu proyecto. Además, como HAL necesita soporte JSON, necesitas añadir la extensión `quarkus-resteasy-jsonb` o `quarkus-resteasy-jackson`."

#. type: Block title
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Table Context object"
msgstr "Tabla Objeto de contexto"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "GAV"
msgstr "GAV"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Usage"
msgstr "Uso"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-hal`"
msgstr "`io.quarkus:quarkus-hal`"

#. type: Table
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"
msgstr "link:https://tools.ietf.org/id/draft-kelly-json-hal-01.html[HAL]"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "After adding the extensions, we can now annotate the REST resources to produce the media type `application/hal+json` (or use RestMediaType.APPLICATION_HAL_JSON). For example:"
msgstr "Después de añadir las extensiones, ahora podemos anotar los recursos REST para producir el tipo de medio `application/hal+json` (o utilizar RestMediaType.APPLICATION_HAL_JSON). Por ejemplo:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now, the endpoints `/records` and `/records/first` will accept the media type, both `json` and `hal+json`, to print the records in Hal format."
msgstr "Ahora, los puntos finales `/records` y `/records/first` aceptarán el tipo de medio tanto `json` como `hal+json` para imprimir los registros en formato Hal."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "For example, if we invoke the `/records` endpoint using curl to return a list of records, the HAL format will look like as follows:"
msgstr "Por ejemplo, si invocamos el endpoint `/records` utilizando curl para devolver una lista de registros, el formato HAL será el siguiente"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "When we call a resource `/records/first` that returns only one instance, then the output is:"
msgstr "Cuando llamamos a un recurso `/records/first` que devuelve sólo una instancia, la salida es:"

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "Creación de un frontend"

#: _guides/resteasy.adoc
msgid ""
"Now let us add a simple web page to interact with our `FruitResource`.\n"
"Quarkus automatically serves static resources located under the `META-INF/resources` directory.\n"
"In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "Ahora puede interactuar con su servicio REST:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "start Quarkus with:"
msgstr "con el que empezar a Quarkus:"

#: _guides/resteasy.adoc
msgid "CLI"
msgstr ""

#: _guides/resteasy.adoc
msgid "Maven"
msgstr ""

#: _guides/resteasy.adoc
msgid "Gradle"
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "abrir un navegador para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;`"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "add new fruits to the list via the form"
msgstr "añadir nuevas frutas a la lista a través del formulario"

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Building a native executable"
msgstr "Construir un ejecutable nativo"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can build a native executable with the usual command:"
msgstr "Puedes construir un ejecutable nativo con el comando habitual:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Running it is as simple as executing `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "Ejecutarlo es tan sencillo como ejecutar `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "A continuación, puede dirigir su navegador a `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;` y utilizar su aplicación."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "About serialization"
msgstr "Sobre la serialización"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "JSON serialization libraries use Java reflection to get the properties of an object and serialize them."
msgstr "Las bibliotecas de serialización JSON utilizan Java reflection para obtener las propiedades de un objeto y serializarlas."

#: _guides/resteasy.adoc
msgid ""
"When using native executables with GraalVM, all classes that will be used with reflection need to be registered.\n"
"The good news is that Quarkus does that work for you most of the time.\n"
"So far, we have not registered any class, not even `Fruit`, for reflection usage, and everything is working fine."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Quarkus performs some magic when it is capable of inferring the serialized types from the REST methods.\n"
"When you have the following REST method, Quarkus determines that `Fruit` will be serialized:"
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus does that for you automatically by analyzing the REST methods at build time, and that is why we did not need any reflection registration in the first part of this guide."
msgstr "Quarkus lo hace por ti de forma automática analizando los métodos REST en tiempo de compilación y es por eso que no necesitamos ningún registro de reflexión en la primera parte de esta guía."

#: _guides/resteasy.adoc
msgid ""
"Another common pattern in the Jakarta REST world is to use the `Response` object.\n"
"`Response` comes with some nice perks:"
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can return different entity types depending on what happens in your method (a `Legume` or an `Error` for instance)."
msgstr "puede devolver diferentes tipos de entidad dependiendo de lo que ocurra en su método (un `Legume` o un `Error` por ejemplo);"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can set the attributes of the `Response` (the status comes to mind in the case of an error)."
msgstr "puede establecer los atributos de la página `Response` (el estado viene a cuento en el caso de un error)."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Your REST method then looks like this:"
msgstr "Su método REST tiene entonces el siguiente aspecto:"

#: _guides/resteasy.adoc
msgid ""
"Quarkus cannot determine at build time the type included in the `Response` as the information is not available.\n"
"In this case, Quarkus won't be able to register for reflection in the required classes automatically."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This leads us to our next section."
msgstr "Esto nos lleva a la siguiente sección."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Using response"
msgstr "Uso de la respuesta"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Let us create the `Legume` class, which will be serialized as JSON, following the same model as for our `Fruit` class:"
msgstr "Vamos a crear la clase `Legume` que se serializará como JSON, siguiendo el mismo modelo que para nuestra clase `Fruit`:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now let's create a `LegumeResource` REST service with only one method that returns the list of legumes."
msgstr "Ahora vamos a crear un servicio REST `LegumeResource` con un solo método que devuelva la lista de legumbres."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This method returns a `Response` and not a list of `Legume`."
msgstr "Este método devuelve un `Response` y no una lista de `Legume`."

#: _guides/resteasy.adoc
msgid ""
"Now, let us add a simple web page to display our list of legumes.\n"
"In the `src/main/resources/META-INF/resources` directory, add a `legumes.html` file with the content from this\n"
"{quickstarts-blob-url}/rest-json-quickstart/src/main/resources/META-INF/resources/legumes.html[legumes.html] file in it."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Open a browser to http://localhost:8080/legumes.html, and you will see our list of legumes."
msgstr "Abra un navegador a  http://localhost:8080/legumes.html  y verá nuestra lista de legumbres."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "The interesting part starts when running the application as a native executable:"
msgstr "La parte interesante comienza cuando se ejecuta la aplicación como un ejecutable nativo:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "create the native executable with:"
msgstr "crear el ejecutable nativo con:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "execute it with `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"
msgstr "ejecutarlo con `./target/rest-json-quickstart-1.0.0-SNAPSHOT-runner`"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "open a browser and go to http://localhost:8080/legumes.html"
msgstr "abra un navegador y vaya a  http://localhost:8080/legumes.html"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "There are no legumes there."
msgstr "Allí no hay legumbres."

#: _guides/resteasy.adoc
msgid ""
"As mentioned above, the issue is that Quarkus could not determine the `Legume` class, which will require some reflection by analyzing the REST endpoints.\n"
"The JSON serialization library tries to get the list of fields of `Legume` and gets an empty list, so it does not serialize the fields' data."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"At the moment, when JSON-B or Jackson tries to get the list of fields of a class, if the class is not registered for reflection, no exception will be thrown.\n"
"GraalVM will return an empty list of fields."
msgstr ""

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "Hopefully, this will change in the future and make the error more obvious."
msgstr "Esperemos que esto cambie en el futuro y que el error sea más evidente."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "We can register `Legume` for reflection manually by adding the `@RegisterForReflection` annotation on our `Legume` class:"
msgstr "Podemos registrar `Legume` para la reflexión manualmente añadiendo la anotación `@RegisterForReflection` en nuestra clase `Legume`:"

#: _guides/resteasy.adoc
msgid ""
"The `@RegisterForReflection` annotation instructs Quarkus to keep the class and its members during the native compilation.\n"
"More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Let us do that and follow the same steps as before:"
msgstr "Hagámoslo y sigamos los mismos pasos que antes:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "hit `Ctrl+C` to stop the application"
msgstr "pulse `Ctrl+C` para detener la aplicación"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This time, you can see our list of legumes."
msgstr "Esta vez, puedes ver nuestra lista de legumbres."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Being reactive"
msgstr "Ser reactivo"

#. type: delimited block =
#: _guides/resteasy.adoc
#, fuzzy
msgid "For reactive workloads, please always use xref:resteasy-reactive.adoc[RESTEasy Reactive]."
msgstr "Para las cargas de trabajo reactivas, utilice siempre  link:resteasy-reactive.html[RESTEasy Reactive]."

#: _guides/resteasy.adoc
msgid ""
"You can return _reactive types_ to handle asynchronous processing.\n"
"Quarkus recommends the usage of https://smallrye.io/smallrye-mutiny[Mutiny] to write reactive and asynchronous code."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "To integrate Mutiny and RESTEasy, you need to add the `quarkus-resteasy-mutiny` dependency to your project:"
msgstr "Para integrar Mutiny y RESTEasy, debe añadir la dependencia de `quarkus-resteasy-mutiny` a su proyecto:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Then, your endpoint can return `Uni` or `Multi` instances:"
msgstr "Entonces, su punto final puede devolver instancias de `Uni` o `Multi`:"

#: _guides/resteasy.adoc
msgid ""
"Use `Uni` when you have a single result.\n"
"Use `Multi` when you have multiple items that may be emitted asynchronously."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can use `Uni` and `Response` to return asynchronous HTTP responses: `Uni<Response>`."
msgstr "Puede utilizar `Uni` y `Response` para devolver respuestas HTTP asíncronas: `Uni&amp;lt;Response&amp;gt;`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "More details about Mutiny can be found in xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Puede encontrar más detalles sobre Mutiny en  link:mutiny-primer.html[Mutiny - an intuitive reactive programming library]."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "HTTP filters and interceptors"
msgstr "Filtros e interceptores HTTP"

#: _guides/resteasy.adoc
msgid ""
"Both HTTP request and response can be intercepted by providing `ContainerRequestFilter` or `ContainerResponseFilter`\n"
"implementations respectively.\n"
"These filters are suitable for processing the metadata associated with a message: HTTP headers, query parameters, media type, and other metadata.\n"
"They also can abort the request processing, for instance, when the user does not have permission to access the endpoint."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Let's use `ContainerRequestFilter` to add logging capability to our service. We can do that by implementing `ContainerRequestFilter` and annotating it with the `@Provider` annotation:"
msgstr "Vamos a utilizar `ContainerRequestFilter` para añadir la capacidad de registro a nuestro servicio. Podemos hacerlo implementando `ContainerRequestFilter` y anotándolo con la anotación `@Provider`:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Now, whenever a REST method is invoked, the request will be logged into the console:"
msgstr "Ahora, cada vez que se invoque un método REST, la petición se registrará en la consola:"

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "CORS filter"
msgstr "Filtro CORS"

#: _guides/resteasy.adoc
msgid ""
"link:https://en.wikipedia.org/wiki/Cross-origin_resource_sharing[Cross-origin resource sharing] (CORS) is a mechanism that\n"
"allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource\n"
"was served."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"Quarkus includes a CORS filter at the HTTP layer level.\n"
"For more information about the CORS filters and their usage, see the xref:security-cors.adoc#cors-filter[CORS filter] section of the Quarkus \"Cross-origin resource sharing\" guide."
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "GZip Support"
msgstr "Soporte GZip"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus comes with GZip support (even though it is not enabled by default). The following configuration knobs allow to configure GZip support."
msgstr "Quarkus viene con soporte GZip (aunque no está habilitado por defecto). Los siguientes mandos de configuración permiten configurar el soporte de GZip."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Enable Gzip support."
msgstr "Activar el soporte de Gzip."

#: _guides/resteasy.adoc
msgid ""
"Configure the upper limit on the deflated request body.\n"
"This is useful to mitigate potential attacks by limiting their reach. The default value is `10M`.\n"
"This configuration option would recognize strings in this format (shown as a regular expression): `[0-9]+[KkMmGgTtPpEeZzYy]?`.\n"
"If no suffix is given, assume bytes."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Once GZip support has been enabled, you can use it on an endpoint by adding the `@org.jboss.resteasy.annotations.GZIP` annotation to your endpoint method."
msgstr "Una vez habilitado el soporte de GZip, puede utilizarlo en un endpoint añadiendo la anotación `@org.jboss.resteasy.annotations.GZIP` a su método de endpoint."

#: _guides/resteasy.adoc
msgid ""
"There is also the `quarkus.http.enable-compression` configuration property, which enables HTTP response compression globally.\n"
"If enabled, a response body is compressed if the `Content-Type` HTTP header is set and the value is a compressed media type configured via the `quarkus.http.compress-media-types` configuration property."
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Multipart Support"
msgstr "Soporte multiparte"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "RESTEasy supports multipart via the https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."
msgstr "RESTEasy admite el uso de multipartes a través del  link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Quarkus provides an extension called `quarkus-resteasy-multipart` to make things easier for you."
msgstr "Quarkus proporciona una extensión llamada `quarkus-resteasy-multipart` para facilitarte las cosas."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "This extension slightly differs from the RESTEasy default behavior as the default charset (if none is specified in your request) is UTF-8 rather than US-ASCII."
msgstr "Esta extensión difiere ligeramente del comportamiento por defecto de RESTEasy, ya que el conjunto de caracteres por defecto (si no se especifica ninguno en su solicitud) es UTF-8 en lugar de US-ASCII."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "You can configure this behavior with the following configuration properties:"
msgstr "Puede configurar este comportamiento con las siguientes propiedades de configuración:"

#: _guides/resteasy.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Servlet compatibility"
msgstr "Compatibilidad con servlets"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "In Quarkus, RESTEasy can either run directly on top of the Vert.x HTTP server, or on top of Undertow if you have any servlet dependency."
msgstr "En Quarkus, RESTEasy puede ejecutarse directamente sobre el servidor HTTP Vert.x, o sobre Undertow si tiene alguna dependencia de servlets."

#: _guides/resteasy.adoc
msgid ""
"As a result, certain classes, such as `HttpServletRequest` are not always available for injection.\n"
"Most use cases for this particular class are covered by Jakarta REST equivalents, except for getting the remote client's IP."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"RESTEasy comes with a replacement API that you can inject:\n"
"https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html[`HttpRequest`], which has the methods\n"
"https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteAddress--[`getRemoteAddress()`]\n"
"and https://docs.jboss.org/resteasy/docs/4.5.6.Final/javadocs/org/jboss/resteasy/spi/HttpRequest.html#getRemoteHost--[`getRemoteHost()`]\n"
"to solve this problem."
msgstr ""

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "RESTEasy and REST Client interactions"
msgstr "Interacciones entre RESTEasy y el cliente REST"

#: _guides/resteasy.adoc
msgid ""
"In Quarkus, the RESTEasy extension and xref:rest-client.adoc[the REST Client extension] share the same infrastructure.\n"
"One important consequence of this consideration is that they share the same list of providers (in the Jakarta REST meaning of the word)."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"For instance, if you declare a `WriterInterceptor`, it will, by default, intercept both the servers calls and the client calls,\n"
"which might not be the desired behavior."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "Sin embargo, se puede cambiar este comportamiento por defecto y restringir un proveedor a:"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider;"
msgstr "sólo considera las llamadas *al servidor* añadiendo la anotación `@ConstrainedTo(RuntimeType.SERVER)` a su proveedor;"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider."
msgstr "sólo considera las llamadas *del cliente* añadiendo la anotación `@ConstrainedTo(RuntimeType.CLIENT)` a su proveedor."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "What's Different from Jakarta EE Development"
msgstr "¿Qué es diferente del desarrollo de Jakarta EE?"

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "No Need for `Application` Class"
msgstr "No es necesario `Application` Class"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Configuration via an application-supplied subclass of `Application` is supported but not required."
msgstr "Se admite la configuración a través de una subclase de `Application` proporcionada por la aplicación, pero no es necesaria."

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Only a single Jakarta REST application"
msgstr "Sólo una aplicación JAX-RS"

#: _guides/resteasy.adoc
msgid ""
"In contrast to Jakarta REST (and RESTeasy) running in a standard servlet container, Quarkus only supports the deployment of a single Jakarta REST application.\n"
"If multiple Jakarta REST `Application` classes are defined, the build will fail with the message `Multiple classes have been annotated with @ApplicationPath which is currently not supported`."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"If multiple Jakarta REST applications are defined, the property `quarkus.resteasy.ignore-application-classes=true` can be used to ignore all explicit `Application` classes.\n"
"This makes all resource-classes available via the application-path as defined by `quarkus.resteasy.path` (default: `/`)."
msgstr ""

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Support limitations of Jakarta REST application"
msgstr "Apoyar las limitaciones de la aplicación JAX-RS"

#: _guides/resteasy.adoc
msgid ""
"The RESTEasy extension doesn't support the method `getProperties()` of the class `jakarta.ws.rs.core.Application`.\n"
"Moreover, it only relies on the methods `getClasses()` and `getSingletons()` to filter out the annotated resource, provider, and feature classes.\n"
"It does not filter out the built-in resource, provider, and feature classes and also the resource, provider, and feature classes registered by the other extensions.\n"
"Finally, the objects returned by the method `getSingletons()` are ignored, only the classes are taken into account to filter out the resource, provider and feature classes, in other words the method `getSingletons()` is managed the same way as `getClasses()`."
msgstr ""

#. type: Title ===
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Lifecycle of Resources"
msgstr "Ciclo de vida de los recursos"

#: _guides/resteasy.adoc
msgid ""
"In Quarkus, all Jakarta REST resources are treated as CDI beans.\n"
"It's possible to inject other beans via `@Inject`, bind interceptors using bindings such as `@Transactional`, define `@PostConstruct` callbacks, etc."
msgstr ""

#: _guides/resteasy.adoc
msgid ""
"If no scope annotation is declared on the resource class, then the scope is defaulted.\n"
"The `quarkus.resteasy.singleton-resources` property can control the default scope."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "If set to `true` (default), then a *single instance* of a resource class is created to service all requests (as defined by `@jakarta.inject.Singleton`)."
msgstr "Si se establece en `true` (por defecto), se crea una *única instancia* de una clase de recurso para dar servicio a todas las solicitudes (tal y como se define en `@jakarta.inject.Singleton`)."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "If set to `false`, then a *new instance* of the resource class is created per each request."
msgstr "Si se establece en `false`, se crea una *nueva instancia* de la clase de recurso por cada solicitud."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "An explicit CDI scope annotation (`@RequestScoped`, `@ApplicationScoped`, etc.) always overrides the default behavior and specifies the lifecycle of resource instances."
msgstr "Una anotación explícita de ámbito CDI ( `@RequestScoped`, `@ApplicationScoped`, etc.) siempre anula el comportamiento predeterminado y especifica el ciclo de vida de las instancias de recursos."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Include/Exclude Jakarta REST classes with build time conditions"
msgstr "Incluir/excluir clases JAX-RS con condiciones de tiempo de construcción"

#: _guides/resteasy.adoc
msgid ""
"Quarkus enables the inclusion or exclusion of Jakarta REST Resources, Providers and Features directly thanks to build time conditions in the same that it does for CDI beans.\n"
"Thus, the various Jakarta REST classes can be annotated with profile conditions (`@io.quarkus.arc.profile.IfBuildProfile` or `@io.quarkus.arc.profile.UnlessBuildProfile`) and/or with property conditions (`io.quarkus.arc.properties.IfBuildProperty` or `io.quarkus.arc.properties.UnlessBuildProperty`) to indicate to Quarkus at build time under which conditions these Jakarta REST classes should be included."
msgstr ""

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "In the following example, Quarkus includes the endpoint `sayHello` if and only if the build profile `app1` has been enabled."
msgstr "En el siguiente ejemplo, Quarkus incluye el punto final `sayHello` si y sólo si se ha habilitado el perfil de construcción `app1`."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Please note that if a Jakarta REST Application has been detected and the method `getClasses()` and/or `getSingletons()` has/have been overridden, Quarkus will ignore the build time conditions and consider only what has been defined in the Jakarta REST Application."
msgstr "Tenga en cuenta que si se ha detectado una Aplicación JAX-RS y el método `getClasses()` y/o `getSingletons()` ha sido anulado, Quarkus ignorará las condiciones de tiempo de compilación y considerará sólo lo que se ha definido en la Aplicación JAX-RS."

#. type: Title ==
#: _guides/resteasy.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusión"

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "Creating JSON REST services with Quarkus is easy as it relies on proven and well-known technologies."
msgstr "Crear servicios JSON REST con Quarkus es fácil, ya que se basa en tecnologías probadas y bien conocidas."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "As usual, Quarkus further simplifies things under the hood when running your application as a native executable."
msgstr "Como es habitual, Quarkus simplifica aún más las cosas bajo el capó cuando se ejecuta su aplicación como un ejecutable nativo."

#. type: Plain text
#: _guides/resteasy.adoc
#, fuzzy
msgid "There is only one thing to remember: if you use `Response` and Quarkus cannot determine the beans that are serialized, you need to annotate them with `@RegisterForReflection`."
msgstr "Sólo hay que recordar una cosa: si usas `Response` y Quarkus no puede determinar los beans que se serializan, tienes que anotarlos con `@RegisterForReflection`."
