# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-04-26 15:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-jpa-concept.adoc:2
#, fuzzy, no-wrap
msgid "Quarkus Security with Jakarta Persistence"
msgstr "Seguridad Quarkus con Jakarta Persistence"

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:7
#, fuzzy
msgid "Quarkus provides a Jakarta Persistence (formerly known as JPA) identity provider, similar to the xref:security-jdbc.adoc[JDBC identity provider], suitable for use with the xref:security-basic-authentication-concept.adoc[Basic] and xref:security-authentication-mechanisms-concept.adoc#form-auth[Form-based] Quarkus Security mechanisms, which require a combination of username and password credentials."
msgstr "Quarkus proporciona un proveedor de identidad Jakarta Persistence (anteriormente conocido como JPA), similar al  link:security-jdbc.html[proveedor de identidad JDBC], adecuado para su uso con los mecanismos de seguridad Quarkus  link:security-basic-authentication-concept.html[Basic] y  link:security-authentication-mechanisms-concept.html#form-auth[Form-based], que requieren una combinación de credenciales de nombre de usuario y contraseña."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:9
#, fuzzy
msgid "The Jakarta Persistence `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr "Jakarta Persistence `IdentityProvider` crea una instancia `SecurityIdentity`, que se utiliza durante la autenticación del usuario para verificar y autorizar las solicitudes de acceso haciendo que su aplicación Quarkus sea segura."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:11
#, fuzzy
msgid "For an example of practical use of Basic authentication and Jakarta Persistence, see the xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence] tutorial."
msgstr "Para un ejemplo de uso práctico de la autenticación Básica y  link:security-basic-authentication-tutorial.html[Jakarta Persistence], véase el tutorial  link:security-basic-authentication-tutorial.html[Asegurar una aplicación Quarkus con autenticación Básica y Jakarta Persistence]."

#. type: Title ==
#: upstream/_guides/security-jpa-concept.adoc:13
#, fuzzy, no-wrap
msgid "Jakarta Persistence entity specification"
msgstr "Especificación de la entidad Jakarta Persistence"

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:16
#, fuzzy
msgid "Quarkus security offers a Jakarta Persistence integration to collect usernames, passwords, and roles, and store them into Jakarta Persistence database entities."
msgstr "Quarkus security ofrece una integración con Jakarta Persistence para recopilar nombres de usuario, contraseñas y roles, y almacenarlos en entidades de base de datos de Jakarta Persistence."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:18
#, fuzzy
msgid "The following Jakarta Persistence entity specification demonstrates how users' information needs to be stored in a Jakarta Persistence entity and properly mapped so that Quarkus can retrieve this information from a database."
msgstr "La siguiente especificación de entidad Jakarta Persistence demuestra cómo debe almacenarse la información de los usuarios en una entidad Jakarta Persistence y asignarse adecuadamente para que Quarkus pueda recuperar esta información de una base de datos."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:21
#, fuzzy
msgid "The `@UserDefinition` annotation must be present on a Jakarta Persistence entity, regardless of whether link:https://quarkus.io/guides/hibernate-orm-panache[simplified Hibernate ORM with Panache] is used or not."
msgstr "La anotación `@UserDefinition` debe estar presente en una entidad Jakarta Persistence, independientemente de si se utiliza o no  link:https://quarkus.io/guides/hibernate-orm-panache[Hibernate ORM simplificado con Panache]."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:23
#, fuzzy
msgid "The `@Username` and `@Password` field types are always `String`."
msgstr "Los tipos de campo `@Username` y `@Password` son siempre `String`."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:25
#, fuzzy
msgid "The `@Roles` field must either be `String`, `Collection<String>`, or a `Collection<X>`, where `X` is an entity class with a single `String` field annotated as `@RolesValue`."
msgstr "El campo `@Roles` debe ser `String`, `Collection&amp;lt;String&amp;gt;`, o un `Collection&amp;lt;X&amp;gt;`, donde `X` es una clase de entidad con un único campo `String` anotado como `@RolesValue`."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:27
#, fuzzy
msgid "Each `String` role element type is parsed as a comma-separated list of roles."
msgstr "Cada tipo de elemento de rol `String` se analiza como una lista de roles separados por comas."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:29
#, fuzzy
msgid "The following example demonstrates storing security information by adding annotations to the `user` entity:"
msgstr "El siguiente ejemplo muestra cómo almacenar información de seguridad añadiendo anotaciones a la entidad `user`:"

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:33
#, no-wrap
msgid "package org.acme.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:36
#, no-wrap
msgid ""
"import jakarta.persistence.Entity;\n"
"import jakarta.persistence.Table;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:43
#, no-wrap
msgid ""
"import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
"import io.quarkus.elytron.security.common.BcryptUtil;\n"
"import io.quarkus.security.jpa.Password;\n"
"import io.quarkus.security.jpa.Roles;\n"
"import io.quarkus.security.jpa.UserDefinition;\n"
"import io.quarkus.security.jpa.Username;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:54
#, no-wrap
msgid ""
"@Entity\n"
"@Table(name = \"test_user\")\n"
"@UserDefinition <1>\n"
"public class User extends PanacheEntity {\n"
"    @Username <2>\n"
"    public String username;\n"
"    @Password <3>\n"
"    public String password;\n"
"    @Roles <4>\n"
"    public String role;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:69
#, no-wrap
msgid ""
"    /**\n"
"     * Adds a new user to the database\n"
"     * @param username the username\n"
"     * @param password the unencrypted password (it will be encrypted with bcrypt)\n"
"     * @param role the comma-separated roles\n"
"     */\n"
"    public static void add(String username, String password, String role) { <5>\n"
"        User user = new User();\n"
"        user.username = username;\n"
"        user.password = BcryptUtil.bcryptHash(password);\n"
"        user.role = role;\n"
"        user.persist();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:73
#, fuzzy
msgid "The `security-jpa` extension initializes only if a single entity is annotated with `@UserDefinition`."
msgstr "La extensión `security-jpa` sólo se inicializa si una única entidad está anotada con `@UserDefinition`."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:75
#, fuzzy
msgid "The `@UserDefinition` annotation must be present on a single entity, either a regular Hibernate ORM entity or a Hibernate ORM with a Panache entity."
msgstr "La anotación `@UserDefinition` debe estar presente en una única entidad, ya sea una entidad Hibernate ORM normal o una entidad Hibernate ORM con Panache."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:76
#, fuzzy
msgid "Indicates the field used for the username."
msgstr "Indica el campo utilizado para el nombre de usuario."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:78
#, fuzzy
msgid "Indicates the field used for the password.  By default, `security-jpa` uses bcrypt-hashed passwords, or you can configure plain text or custom passwords instead."
msgstr "Indica el campo utilizado para la contraseña. Por defecto, `security-jpa` utiliza contraseñas cifradas con bcrypt, pero puedes configurar contraseñas de texto plano o personalizadas."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:79
#, fuzzy
msgid "This indicates the comma-separated list of roles added to the target principal representation attributes."
msgstr "Indica la lista separada por comas de funciones añadidas a los atributos de representación de la entidad de seguridad de destino."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:80
#, fuzzy
msgid "This method allows you to add users while hashing passwords with the proper `bcrypt` hash."
msgstr "Este método le permite añadir usuarios mientras hace hash de las contraseñas con el hash apropiado `bcrypt`."

#. type: Title ==
#: upstream/_guides/security-jpa-concept.adoc:82
#, fuzzy, no-wrap
msgid "Jakarta Persistence entity as storage of roles"
msgstr "Entidad Jakarta Persistence como almacenamiento de roles"

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:85
#, fuzzy
msgid "Use the following example to store roles inside another Jakarta Persistence entity:"
msgstr "Utilice el siguiente ejemplo para almacenar roles dentro de otra entidad Jakarta Persistence:"

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:94
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class User extends PanacheEntity {\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:97
#, no-wrap
msgid ""
"    @Password\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:102
#, no-wrap
msgid ""
"    @ManyToMany\n"
"    @Roles\n"
"    public List<Role> roles = new ArrayList<>();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:105
#, no-wrap
msgid ""
"@Entity\n"
"public class Role extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:108
#, no-wrap
msgid ""
"    @ManyToMany(mappedBy = \"roles\")\n"
"    public List<ExternalRolesUserEntity> users;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:112
#, no-wrap
msgid ""
"    @RolesValue\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-jpa-concept.adoc:114
#, fuzzy, no-wrap
msgid "Password storage and hashing"
msgstr "Almacenamiento de contraseñas y hashing"

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:117
#, fuzzy
msgid "When developing applications with Quarkus, you can decide how to manage password storage and hashing. You can choose to keep the default password and hashing settings of Quarkus, or you can hash passwords manually."
msgstr "Cuando se desarrollan aplicaciones con Quarkus, se puede decidir cómo gestionar el almacenamiento de contraseñas y el hash. Puede optar por mantener la configuración predeterminada de Quarkus para las contraseñas y el hash, o puede hacer el hash de las contraseñas manualmente."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:122
#, fuzzy
msgid "With the default option, passwords are stored and hashed with https://en.wikipedia.org/wiki/Bcrypt[bcrypt] under the https://en.wikipedia.org/wiki/Crypt_(C)[Modular Crypt Format] (MCF).  While using MCF, the hashing algorithm, iteration count, and salt are stored as a part of the hashed value.  As such, we do not need dedicated columns to keep them."
msgstr "Con la opción por defecto, las contraseñas se almacenan y se convierten en hash con  link:https://en.wikipedia.org/wiki/Bcrypt[bcrypt] bajo el  link:https://en.wikipedia.org/wiki/Crypt_©[formato Modular Crypt Format] (MCF). Al utilizar MCF, el algoritmo de hash, el recuento de iteraciones y la sal se almacenan como parte del valor hash. Por lo tanto, no necesitamos columnas específicas para guardarlos."

#. type: delimited block =
#: upstream/_guides/security-jpa-concept.adoc:126
#, fuzzy
msgid "In cryptography, a salt is a name for random data used as an additional input to a one-way function that hashes data, a password, or a passphrase."
msgstr "En criptografía, una sal es un nombre para los datos aleatorios utilizados como entrada adicional a una función unidireccional que encripta datos, una contraseña o una frase de contraseña."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:129
#, fuzzy
msgid "For manual password hashing, create a class that implements the `CustomPasswordProvider`as shown in the example below."
msgstr "Para el hash manual de contraseñas, cree una clase que implemente el `CustomPasswordProvider` como se muestra en el siguiente ejemplo."

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:131
#, fuzzy
msgid "The following snippet shows how to set a custom password provider that uses the SHA256 hashing algorithm."
msgstr "El siguiente fragmento muestra cómo configurar un proveedor de contraseñas personalizado que utilice el algoritmo hash SHA256."

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:141
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class CustomPasswordUserEntity {\n"
"    @Id\n"
"    @GeneratedValue\n"
"    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:145
#, no-wrap
msgid ""
"    @Column(name = \"username\")\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:149
#, no-wrap
msgid ""
"    @Column(name = \"password\")\n"
"    @Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:153
#, no-wrap
msgid ""
"    @Roles\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-jpa-concept.adoc:161
#, no-wrap
msgid ""
"public class CustomPasswordProvider implements PasswordProvider {\n"
"    @Override\n"
"    public Password getPassword(String pass) {\n"
"        byte[] digest = DatatypeConverter.parseHexBinary(pass);\n"
"        return SimpleDigestPassword.createRaw(SimpleDigestPassword.ALGORITHM_SIMPLE_DIGEST_SHA_256, digest);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-jpa-concept.adoc:167
#, fuzzy
msgid "For quick creation of a hashed password, use `String BcryptUtil.bcryptHash(String password)`, which defaults to creating a random salt and hashing in ten iterations.  This method also allows specifying the desired amount of iterations and the salt used."
msgstr "Para crear rápidamente una contraseña con hash, utilice `String BcryptUtil.bcryptHash(String password)`, que por defecto crea una sal aleatoria y realiza el hash en diez iteraciones. Este método también permite especificar la cantidad deseada de iteraciones y la sal utilizada."

#. type: delimited block =
#: upstream/_guides/security-jpa-concept.adoc:172
#, fuzzy
msgid "For applications running in a production environment, do not store passwords as plain text."
msgstr "Para las aplicaciones que se ejecutan en un entorno de producción, no almacene las contraseñas como texto sin formato."

#. type: delimited block =
#: upstream/_guides/security-jpa-concept.adoc:174
#, fuzzy
msgid "However, it is possible to store passwords as plain text with the `@Password(PasswordType.CLEAR)` annotation when operating in a test environment."
msgstr "Sin embargo, es posible almacenar contraseñas como texto sin formato con la anotación `@Password(PasswordType.CLEAR)` cuando se opera en un entorno de prueba."

#. type: Title ==
#: upstream/_guides/security-jpa-concept.adoc:176
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:179
#, fuzzy
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
msgstr "link:security-basic-authentication-tutorial.html[Proteger una aplicación Quarkus con autenticación básica y Jakarta Persistence]"

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:180
#, fuzzy
msgid "xref:security-identity-providers-concept.adoc[Identity providers]"
msgstr "link:security-identity-providers-concept.html[Proveedores de identidad]"

#. type: Plain text
#: upstream/_guides/security-jpa-concept.adoc:180
#, fuzzy
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr "link:security-overview-concept.html[Visión general de Quarkus Security]"
