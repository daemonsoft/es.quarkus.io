# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-10-29 08:10+0000\n"
"PO-Revision-Date: 2022-05-10 08:58+0200\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/funqy-knative-events.adoc:6
#, no-wrap
msgid "Funqy Knative Events Binding"
msgstr "Vinculación de los eventos de Funqy Knative"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:16
msgid "Quarkus Funqy link:https://knative.dev/docs/eventing[Knative Events] builds off of the xref:funqy-http.adoc[Funqy HTTP] extension to allow you to route and process Knative Events within a Funqy function."
msgstr "Quarkus Funqy link:https://knative.dev/docs/eventing[Knative Events] se basa en la extensión xref:funqy-http.html[Funqy HTTP] para permitirle enrutar y procesar Knative Events dentro de una función Funqy."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:19
msgid "The guide walks through quickstart code to show you how you can deploy and invoke on Funqy functions with Knative Events."
msgstr "La guía recorre el código de inicio rápido para mostrarte cómo puedes desplegar e invocar en funciones Funqy con Knative Events."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:20
#, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:26
msgid "Read about xref:funqy.adoc[Funqy Basics].  This is a short read!"
msgstr "Lea sobre xref:funqy.html[los fundamentos de Funqy]. Esta es una lectura corta!"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:27
#, fuzzy
msgid "Have gone through the link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[Knative Tutorial], specifically link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/eventing/eventing-trigger-broker.html[Brokers and Triggers]"
msgstr "Han pasado por el link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[Tutorial de Knative], específicamente los link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial-eventing/eventing-trigger-broker.html[Brokers y Triggers]"

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:28
#, no-wrap
msgid "Setting up Knative"
msgstr "Configuración de Knative"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:33
msgid "Setting up Knative locally in a Minikube environment is beyond the scope of this guide.  It is advised to follow https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[this] Knative Tutorial put together by Red Hat.  It walks through how to set up Knative on Minikube or OpenShift in a local environment."
msgstr "Configurar Knative localmente en un entorno Minikube está más allá del alcance de esta guía. Se recomienda seguir https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/index.html[este] tutorial de Knative elaborado por Red Hat. Se trata de cómo configurar Knative en Minikube u OpenShift en un entorno local."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:36
#, fuzzy
msgid "Specifically you should run the link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial/eventing/eventing-trigger-broker.html[Brokers and Triggers] tutorial as this guide requires that you can invoke on a Broker to trigger the quickstart code."
msgstr "Específicamente debes ejecutar el tutorial de link:https://redhat-developer-demos.github.io/knative-tutorial/knative-tutorial-eventing/eventing-trigger-broker.html[Brokers y Triggers] ya que esta guía requiere que puedas invocar en un Broker para activar el código de inicio rápido."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:37
#, no-wrap
msgid "Read about Cloud Events"
msgstr "Lea sobre los eventos en la nube"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:40
msgid "The Cloud Event link:https://cloudevents.io/[specification] is a good read to give you an even greater understanding of Knative Events."
msgstr "La link:https://cloudevents.io/[especificación de] los eventos en la nube es una buena lectura para que comprenda mejor los eventos de Knative."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:41
#, no-wrap
msgid "The Quickstart"
msgstr "El inicio rápido"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:44
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:46
#, fuzzy
msgid "The solution is located in the `funqy-knative-events-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart[directory]."
msgstr "La solución se encuentra en `funqy-knative-events-quickstart` {quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:47
#, no-wrap
msgid "The Quickstart Flow"
msgstr "El flujo de inicio rápido"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:53
msgid "The quickstart works by manually sending an HTTP request containing a Cloud Event to the Knative Broker using `curl`.  The Knative Broker receives the request and triggers the startup of the Funqy container built by the quickstart.  The event triggers the invocation of a chain of Funqy functions.  The output of one function triggers the invocation of another Funqy function."
msgstr "El quickstart funciona enviando manualmente una petición HTTP que contiene un Cloud Event al Knative Broker usando `curl`. El Broker Knative recibe la petición y desencadena el inicio del contenedor Funqy construido por el quickstart. El evento desencadena la invocación de una cadena de funciones Funqy. La salida de una función desencadena la invocación de otra función Funqy."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:54
#, no-wrap
msgid "Funqy and Cloud Events"
msgstr "Eventos de Funqy y Cloud"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:61
msgid "When living within a Knative Events environment, Funqy functions are triggered by a specific Cloud Event type.  You can have multiple Funqy functions within a single application/deployment, but they must be triggered by a specific Cloud Event Type.  The exception to this rule is if there is only one Funqy function in the application.  In that case, the event is pushed to that function irregardless of the Cloud Event type."
msgstr "Cuando viven dentro de un entorno de Knative Events, las funciones de Funqy son activadas por un tipo de Evento de la Nube específico. Puede tener múltiples funciones Funqy dentro de una sola aplicación/despliegue, pero deben ser activadas por un Tipo de Evento de la Nube específico. La excepción a esta regla es si sólo hay una función Funqy en la aplicación. En ese caso, el evento es empujado a esa función independientemente del tipo de Evento en la Nube."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:65
msgid "Currently, Funqy can only consume JSON-based data.  It supports both Binary and Structured mode of execution, but the data component of the Cloud Event message must be JSON.  This JSON must also be marshallable to and from the Java parameters and return types of your functions."
msgstr "Actualmente, Funqy sólo puede consumir datos basados en JSON. Soporta tanto el modo de ejecución Binario como el Estructurado, pero el componente de datos del mensaje de Evento en la Nube debe ser JSON. Este JSON también debe ser marshallable hacia y desde los parámetros Java y los tipos de retorno de sus funciones."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:66
#, no-wrap
msgid "The Code"
msgstr "El Código"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:70
#, fuzzy
msgid "Let's start looking at our quickstart code so that you can understand how Knative Events map to Funqy.  Open up link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/java/org/acme/funqy/SimpleFunctionChain.java[SimpleFunctionChain.java]"
msgstr "Empecemos a ver nuestro código de inicio rápido para que puedas entender cómo los eventos Knative se asignan a Funqy. Abre {quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/java/org/acme/funqy/SimpleFunctionChain.java[SimpleFunctionChain.java]."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:72
msgid "The first function we'll look at is `defaultChain`."
msgstr "La primera función que veremos es `defaultChain`."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:76
#: upstream/_guides/funqy-knative-events.adoc:99
#, no-wrap
msgid "import io.quarkus.funqy.Funq;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:83
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    public String defaultChain(String input) {\n"
"        log.info(\"*** defaultChain ***\");\n"
"        return input + \"::\" + \"defaultChain\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:89
msgid "As is, a Funqy function has a default Cloud Event mapping.  By default, the Cloud Event type must match the function name for the function to trigger.  If the function returns output, the response is converted into a Cloud Event and returned to the Broker to be routed to other triggers.  The default Cloud Event type for this response is the function name + `.output`.  The default Cloud Event source is the function name."
msgstr "Tal y como está, una función Funqy tiene un mapeo de Eventos en la Nube por defecto. Por defecto, el tipo de Cloud Event debe coincidir con el nombre de la función para que esta se active. Si la función devuelve una salida, la respuesta se convierte en un Evento en la Nube y se devuelve al Broker para que se dirija a otros activadores. El tipo de evento en la nube por defecto para esta respuesta es el nombre de la función + `.output`. La fuente de eventos en la nube por defecto es el nombre de la función."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:92
msgid "So, for the `defaultChain` function, the Cloud Event type that triggers the function is `defaultChain`.  It generates a response that triggers a new Cloud Event whose type is `defaultChain.output` and the event source is `defaultChain`."
msgstr "Así, para la función `defaultChain`, el tipo de Evento en la Nube que desencadena la función es `defaultChain`. Genera una respuesta que desencadena un nuevo Evento en la Nube cuyo tipo es `defaultChain.output` y el origen del evento es `defaultChain`."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:95
msgid "While the default mapping is simple, it might not always be feasible.  You can change this default mapping through configuration.  Let's look at the next function:"
msgstr "Aunque la asignación por defecto es sencilla, puede que no siempre sea factible. Puedes cambiar esta asignación por defecto a través de la configuración. Veamos la siguiente función:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:106
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    public String configChain(String input) {\n"
"        log.info(\"*** configChain ***\");\n"
"        return input + \"::\" + \"configChain\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:109
#, fuzzy
msgid "The `configChain` function has its Cloud Event mapping changed by configuration within link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/resources/application.properties[application.properties]."
msgstr "La función `configChain` tiene su mapeo de eventos en la nube cambiado por la configuración dentro de {quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/resources/application.properties[application.properties]."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:116
#, no-wrap
msgid ""
"quarkus.funqy.knative-events.mapping.configChain.trigger=defaultChain.output\n"
"quarkus.funqy.knative-events.mapping.configChain.response-type=annotated\n"
"quarkus.funqy.knative-events.mapping.configChain.response-source=configChain\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:120
msgid "In this case, the configuration maps the incoming Cloud Event type `defaultChain.output` to the `configChain` function.  The `configChain` function maps its response to the `annotated` Cloud Event type, and the Cloud Event source `configChain`."
msgstr "En este caso, la configuración asigna el tipo de evento en la nube entrante `defaultChain.output` a la función `configChain`. La función `configChain` asigna su respuesta al tipo de Evento en la Nube `annotated`, y la fuente de Evento en la Nube `configChain`."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:122
msgid "`quarkus.funqy.knative-events.mapping.{function name}.trigger` sets the Cloud Event type that triggers a specific function. It is possible to use the special value `*` as a catch-all value. The function will in this case be used for all event types."
msgstr "`quarkus.funqy.knative-events.mapping.{function name}.trigger` establece el tipo de Evento de Nube que desencadena una función específica. Es posible utilizar el valor especial `*` como valor general. En este caso, la función se utilizará para todos los tipos de eventos."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:123
msgid "`quarkus.funqy.knative-events.mapping.{function name}.response-type` sets the Cloud Event type of the response"
msgstr "`quarkus.funqy.knative-events.mapping.{function name}.response-type` establece el tipo de evento de nube de la respuesta"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:124
msgid "`quarkus.funqy.knative-events.mapping.{function name}.resource-source` sets the Cloud Event source of the response"
msgstr "`quarkus.funqy.knative-events.mapping.{function name}.resource-source` establece la fuente de eventos de la nube de la respuesta"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:127
msgid "The Funqy Knative Events extension also has annotations to do this Cloud Event mapping to your functions.  Take a look at the `annotatedChain` method"
msgstr "La extensión Funqy Knative Events también tiene anotaciones para hacer este mapeo de Cloud Event a sus funciones. Echa un vistazo al método `annotatedChain`"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:132
#, no-wrap
msgid ""
"import io.quarkus.funqy.Funq;\n"
"import io.quarkus.funqy.knative.events.CloudEventMapping;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:140
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    @CloudEventMapping(trigger = \"annotated\", responseSource = \"annotated\", responseType = \"lastChainLink\")\n"
"    public String annotatedChain(String input) {\n"
"        log.info(\"*** annotatedChain ***\");\n"
"        return input + \"::\" + \"annotatedChain\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:146
msgid "If you use the `@CloudEventMapping` annotation on your function you can map the Cloud Event type trigger and the Cloud Event response.  In this example the `annotatedChain` function will be triggered by the `annotated` Cloud Event type and the response will be mapped to a `lastChainLink` type and `annotated` Cloud Event source."
msgstr "Si utilizas la anotación `@CloudEventMapping` en tu función, puedes asignar el desencadenamiento del tipo de Evento en la Nube y la respuesta del Evento en la Nube. En este ejemplo, la función `annotatedChain` será activada por el tipo de evento en la nube `annotated` y la respuesta se asignará a un tipo `lastChainLink` y a una fuente de evento en la nube `annotated`."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:149
#, fuzzy
msgid "So, if you look at all the functions defined within `SimpleFunctionChain` you'll notice that one function triggers the next.  The last function that is triggered is `lastChainLink`."
msgstr "Así pues, si observamos todas las funciones definidas en `SimpleFunctionChain` nos daremos cuenta de que una función desencadena la siguiente. La última función que se activa es `lastChainLink`."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:154
#, no-wrap
msgid ""
"import io.quarkus.funqy.Context;\n"
"import io.quarkus.funqy.Funq;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:162
#, no-wrap
msgid ""
"public class SimpleFunctionChain {\n"
"    @Funq\n"
"    public void lastChainLink(String input, @Context CloudEvent event) {\n"
"        log.info(\"*** lastChainLink ***\");\n"
"        log.info(input + \"::\" + \"lastChainLink\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:166
msgid "There are two things to notice about this function.  One, it has no output.  Your functions are not required to return output.  Second, there is an additional `event` parameter to the function."
msgstr "Hay dos cosas que hay que tener en cuenta sobre esta función. Una, no tiene salida. Sus funciones no están obligadas a devolver salida. Segundo, hay un parámetro adicional `event` a la función."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:170
msgid "If you want to know additional information about the incoming Cloud Event, you can inject the `io.quarkus.funqy.knative.events.CloudEvent` interface using the Funqy `@Context` annotation.  The `CloudEvent` interface exposes information about the triggering event."
msgstr "Si desea conocer información adicional sobre el evento entrante de la nube, puede inyectar la interfaz `io.quarkus.funqy.knative.events.CloudEvent` utilizando la anotación Funqy `@Context`. La interfaz `CloudEvent` expone información sobre el evento desencadenante."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:180
#, no-wrap
msgid ""
"public interface CloudEvent {\n"
"    String id();\n"
"    String specVersion();\n"
"    String source();\n"
"    String subject();\n"
"    OffsetDateTime time();\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:182
#, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:186
#, fuzzy
msgid "If you look at the link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/pom.xml[POM], you'll see that it is a typical Quarkus POM that pulls in one Funqy dependency:"
msgstr "Si miras el {quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/pom.xml[POM], verás que es un típico POM de Quarkus que trae una dependencia de Funqy:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:193
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-funqy-knative-events</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:195
#, no-wrap
msgid "Dev mode and Testing"
msgstr "Modo de desarrollo y pruebas"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:201
msgid "Funqy Knative Events support dev mode and unit testing using RestAssured.  You can invoke on Funqy Knative Events functions using the same invocation model as xref:funqy-http.adoc[Funqy HTTP] using normal HTTP requests, or Cloud Event Binary mode, or Structured Mode.  All invocation modes are supported at the same time."
msgstr "Funqy Knative Events soporta el modo dev y las pruebas unitarias utilizando RestAssured. Puede invocar en las funciones de Funqy Knative Events usando el mismo modelo de invocación que xref:funqy-http.html[Funqy HTTP] usando peticiones HTTP normales, o el modo binario de Cloud Event, o el modo estructurado. Todos los modos de invocación están soportados al mismo tiempo."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:204
#, fuzzy
msgid "So, if you open up the unit test code in link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java] you'll see that its simply using RestAssured to make HTTP invocations to test the functions."
msgstr "Así, si abres el código de la prueba unitaria en {quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java] verás que simplemente utiliza RestAssured para hacer invocaciones HTTP para probar las funciones."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:206
msgid "Funqy also works with Quarkus Dev mode!"
msgstr "¡Funqy también funciona con el modo Quarkus Dev!"

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:207
#, no-wrap
msgid "Build the Project"
msgstr "Construir el proyecto"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:210
msgid "First build the Java artifacts:"
msgstr "Primero construya los artefactos Java:"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:214
msgid "Next, a docker image is required by Knative, so you'll need to build that next:"
msgstr "A continuación, Knative necesita una imagen docker, así que tendrás que construirla:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:218
#, no-wrap
msgid "docker build -f src/main/docker/Dockerfile.jvm -t yourAccountName/funqy-knative-events-quickstart .\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:222
msgid "Make sure to replace `yourAccountName` with your docker or quay account name when you run `docker build`.  The Dockerfile is a standard Quarkus dockerfile.  No special Knative magic."
msgstr "Asegúrese de reemplazar `yourAccountName` con su nombre de cuenta docker o quay cuando ejecute `docker build`. El Dockerfile es un dockerfile estándar de Quarkus. No hay magia especial de Knative."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:224
msgid "Push your image to docker hub or quay"
msgstr "Envíe su imagen a docker hub o quay"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:228
#, no-wrap
msgid "docker push yourAccountName/funqy-knative-events-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:231
msgid "Again, make sure to replace `yourAccountName` with your docker or quay account name when you run `docker push`."
msgstr "De nuevo, asegúrese de sustituir `yourAccountName` por el nombre de su cuenta docker o quay cuando ejecute `docker push`."

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:232
#, no-wrap
msgid "Deploy to Kubernetes/OpenShift"
msgstr "Despliegue en Kubernetes/OpenShift"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:236
#, fuzzy
msgid "The first step is to set up the broker in our namespace.  Following is an example command from the Knative cli."
msgstr "El primer paso es configurar el broker en nuestro espacio de nombres. A continuación se muestra un ejemplo de comando desde el cli de Knative."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:241
#, no-wrap
msgid ""
"kn broker create default \\\n"
"  --namespace knativetutorial\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:245
msgid "The broker we have created is called `default`, this broker will receive the cloud events.  The broker is also referenced in the function YAML files."
msgstr "El broker que hemos creado se llama `default`, este broker recibirá los eventos de la nube. El broker también está referenciado en los archivos YAML de la función."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:248
#, fuzzy
msgid "The second step is to define a Kubernetes/OpenShift service to point to the Docker image you created and pushed during build. Take a look at link:{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/funqy-service.yaml[funqy-service.yaml]"
msgstr "El segundo paso es definir un servicio Kubernetes/OpenShift que apunte a la imagen Docker que creaste y empujaste durante la construcción. Echa un vistazo a {quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/funqy-service.yaml[funqy-service.yaml]."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:264
#, no-wrap
msgid ""
"apiVersion: serving.knative.dev/v1\n"
"kind: Service\n"
"metadata:\n"
"  name: funqy-knative-events-quickstart\n"
"spec:\n"
"  template:\n"
"    metadata:\n"
"      name: funqy-knative-events-quickstart-v1\n"
"      annotations:\n"
"        autoscaling.knative.dev/target: \"1\"\n"
"    spec:\n"
"      containers:\n"
"        - image: docker.io/yourAccountName/funqy-knative-events-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:267
msgid "This is a standard Kubernetes service definition YAML file."
msgstr "Se trata de un archivo YAML estándar de definición de servicios de Kubernetes."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:269
msgid "Make sure you change the image URL to point to the image you built and pushed earlier!"
msgstr "Asegúrate de cambiar la URL de la imagen para que apunte a la imagen que construiste y subiste antes!"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:273
msgid "For our quickstart, one Kubernetes service will contain all functions. There's no reason you couldn't break up this quickstart into multiple different projects and deploy a service for each function.  For simplicity, and to show that you don't have to have a deployment per function, the quickstart combines everything into one project, image, and service."
msgstr "Para nuestro inicio rápido, un servicio de Kubernetes contendrá todas las funciones. No hay ninguna razón por la que no se pueda dividir este inicio rápido en varios proyectos diferentes y desplegar un servicio para cada función. Para simplificar, y para mostrar que no es necesario tener un despliegue por función, el inicio rápido combina todo en un proyecto, imagen y servicio."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:275
msgid "Deploy the service:"
msgstr "Despliegue el servicio:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:279
#, no-wrap
msgid "kubectl apply -n knativetutorial -f src/main/k8s/funqy-service.yaml\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:284
msgid "The next step is to deploy Knative Event triggers for each of the event types. As noted in the code section, each Funqy function is mapped to a specific Cloud Event type.  You must create Knative Event triggers that map a Cloud Event and route it to a specific Kubernetes service.  We have 4 different triggers."
msgstr "El siguiente paso es desplegar los activadores de Knative Event para cada uno de los tipos de eventos. Como se ha indicado en la sección de código, cada función de Funqy se asigna a un tipo de evento de la nube específico. Debes crear desencadenantes Knative Event que mapeen un Cloud Event y lo dirijan a un servicio Kubernetes específico. Tenemos 4 disparadores diferentes."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:287
msgid "{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/defaultChain-trigger.yaml[defaultChain-trigger.yaml]"
msgstr "{quickstarts-tree-url}/funqy-quickstarts/funqy-knative-events-quickstart/src/main/k8s/defaultChain-trigger.yaml[defaultChain-trigger.yaml]"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:303
#, no-wrap
msgid ""
"apiVersion: eventing.knative.dev/v1alpha1\n"
"kind: Trigger\n"
"metadata:\n"
"  name: defaultchain\n"
"spec:\n"
"  broker: default\n"
"  filter:\n"
"    attributes:\n"
"      type: defaultChain\n"
"  subscriber:\n"
"    ref:\n"
"      apiVersion: serving.knative.dev/v1\n"
"      kind: Service\n"
"      name: funqy-knative-events-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:307
msgid "The `spec:filter:attributes:type` maps a Cloud Event type to the Kubernetes service defined in `spec:subscriber:ref`.  When a Cloud Event is pushed to the Broker, it will trigger the spin up of the service mapped to that event."
msgstr "`spec:filter:attributes:type` asigna un tipo de evento de nube al servicio de Kubernetes definido en `spec:subscriber:ref`. Cuando se envía un evento de la nube al corredor, se activará el giro del servicio asignado a ese evento."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:309
msgid "There's a trigger YAML file for each of our 4 Funqy functions.  Deploy them all:"
msgstr "Hay un archivo YAML de activación para cada una de nuestras 4 funciones Funqy. Despliégalos todos:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:316
#, no-wrap
msgid ""
"kubectl apply -n knativetutorial -f src/main/k8s/defaultChain-trigger.yaml\n"
"kubectl apply -n knativetutorial -f src/main/k8s/configChain-trigger.yaml\n"
"kubectl apply -n knativetutorial -f src/main/k8s/annotatedChain-trigger.yaml\n"
"kubectl apply -n knativetutorial -f src/main/k8s/lastChainLink-trigger.yaml\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-knative-events.adoc:318
#, no-wrap
msgid "Run the demo"
msgstr "Ejecutar la demo"

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:322
#, fuzzy
msgid "You'll need two different terminal windows.  One to do a curl request to the Broker, the other to watch the pod log files, so you can see the messages flowing through the Funqy function event chain."
msgstr "Necesitará dos ventanas de terminal diferentes. Una para hacer una petición curl al Broker, la otra para ver los archivos de registro del pod y así poder ver los mensajes que fluyen a través de la cadena de eventos de la función Funqy."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:325
msgid "Make sure you have the `stern` tool installed.  See the Knative Tutorial setup for information on that.  Run stern to look for logs outputted by our Funqy deployment"
msgstr "Asegúrese de que tiene instalada la herramienta `stern`. Consulta la configuración del Tutorial Knative para obtener información al respecto. Ejecuta stern para buscar los registros emitidos por nuestro despliegue de Funqy"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:329
#, no-wrap
msgid "stern funq user-container\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:332
msgid "Open a separate terminal.  You'll first need to learn the URL of the broker.  Execute this command to find it."
msgstr "Abra un terminal independiente. Primero tendrás que conocer la URL del broker. Ejecuta este comando para encontrarlo."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:336
#, no-wrap
msgid "kubectl get broker default -o jsonpath='{.status.address.url}'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:339
msgid "This will provide you a URL similar to e.g.: `http://broker-ingress.knative-eventing.svc.cluster.local/knativetutorial/default`. Remember this URL."
msgstr "Esto le proporcionará una URL similar a, por ejemplo `http://broker-ingress.knative-eventing.svc.cluster.local/knativetutorial/default`. Recuerde esta URL."

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:342
#, fuzzy
msgid "Next thing we need to do is ssh into our Kubernetes cluster so that we can send a curl request to our broker.  The following command will create a simple OS pod so we can curl into our functions."
msgstr "Lo siguiente que tenemos que hacer es ssh en nuestro clúster Kubernetes para que podamos enviar una solicitud curl a nuestro broker. El siguiente comando creará un simple pod OS para que podamos curl en nuestras funciones."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:346
#, no-wrap
msgid "kubectl -n knativetutorial apply -f src/main/k8s/curler.yaml\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:349
msgid "You might need to wait a couple of seconds until the curler pod comes up. Run the following to get bash access to the curler pod:"
msgstr "Puede que tengas que esperar un par de segundos hasta que aparezca el pod. Ejecute lo siguiente para obtener acceso bash al pod:"

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:353
#, no-wrap
msgid "kubectl -n knativetutorial exec -it curler -- /bin/bash\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:357
msgid "You will now be in a shell within the Kubernetes cluster.  Within the shell, execute this curl command , the broker address is an example and might differ based on your project or broker name."
msgstr "Ahora estarás en un shell dentro del cluster de Kubernetes. Dentro del shell, ejecute este comando curl , la dirección del broker es un ejemplo y puede diferir según el nombre de su proyecto o broker."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:368
#, no-wrap
msgid ""
"curl -v \"http://default-broker.knativetutorial.svc.cluster.local\" \\\n"
"-X POST \\\n"
"-H \"Ce-Id: 1234\" \\\n"
"-H \"Ce-Specversion: 1.0\" \\\n"
"-H \"Ce-Type: defaultChain\" \\\n"
"-H \"Ce-Source: curl\" \\\n"
"-H \"Content-Type: application/json\" \\\n"
"-d '\"Start\"'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-knative-events.adoc:374
msgid "This posts a Knative Event to the broker, which will trigger the `defaultChain` function.  As discussed earlier, the output of `defaultChain` triggers an event that is posted to `configChain` which triggers an event posted to `annotatedChain` then finally to the `lastChainLink` function.  You can see this flow in your `stern` window.  Something like this should be outputted."
msgstr "Esto envía un Evento Knative al broker, que activará la función `defaultChain`. Como se ha comentado anteriormente, la salida de `defaultChain` desencadena un evento que se publica en `configChain`, que desencadena un evento publicado en `annotatedChain` y finalmente en la función `lastChainLink`. Puede ver este flujo en su ventana `stern`. Algo como esto debería salir."

#. type: delimited block -
#: upstream/_guides/funqy-knative-events.adoc:382
#, no-wrap
msgid ""
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,256 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-1) *** defaultChain ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,365 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-2) *** configChain ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,394 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-1) *** annotatedChain ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,466 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-2) *** lastChainLink ***\n"
"funqy-knative-events-quickstart-v1-deployment-59bb88bcf4-9jwdx user-container 2020-05-12 13:44:02,467 INFO  [org.acm.fun.SimpleFunctionChain] (executor-thread-2) Start::defaultChain::configChain::annotatedChain::lastChainLink\n"
msgstr ""
