# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 08:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/mongodb.adoc:6
#, fuzzy, no-wrap
msgid "Using the MongoDB Client"
msgstr "Uso del cliente MongoDB"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:14
#, fuzzy
msgid "MongoDB is a well known NoSQL Database that is widely used."
msgstr "MongoDB es una base de datos NoSQL muy conocida y ampliamente utilizada."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:16
#, fuzzy
msgid "In this guide, we see how you can get your REST services to use the MongoDB database."
msgstr "En esta guía, vemos cómo puedes hacer que tus servicios REST utilicen la base de datos MongoDB."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:17
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:21
#, fuzzy
msgid "MongoDB installed or Docker installed"
msgstr "MongoDB instalado o Docker instalado"

#. type: Title ==
#: upstream/_guides/mongodb.adoc:22
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:25
#, fuzzy
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "La aplicación construida en esta guía es bastante sencilla: el usuario puede añadir elementos en una lista mediante un formulario y la lista se actualiza."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:27
#, fuzzy
msgid "All the information between the browser and the server is formatted as JSON."
msgstr "Toda la información entre el navegador y el servidor se formatea como JSON."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:29
#, fuzzy
msgid "The elements are stored in MongoDB."
msgstr "Los elementos se almacenan en MongoDB."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:30
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:34
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:36
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:38
#, fuzzy
msgid "The solution is located in the `mongodb-quickstart` link:{quickstarts-tree-url}/mongodb-quickstart[directory]."
msgstr "La solución se encuentra en el `mongodb-quickstart` {quickstarts-tree-url}/mongodb-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:39
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:42
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:49
#, fuzzy
msgid "This command generates a Maven structure importing the RESTEasy Reactive Jackson and MongoDB Client extensions.  After this, the `quarkus-mongodb-client` extension has been added to your build file."
msgstr "Este comando genera una estructura Maven que importa las extensiones RESTEasy Reactive Jackson y MongoDB Client. Después de esto, la extensión `quarkus-mongodb-client` se ha añadido a su archivo de construcción."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:52
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `mongodb-client` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `mongodb-client` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:57
#, fuzzy
msgid "This will add the following to your `pom.xml`:"
msgstr "Esto añadirá lo siguiente a su `pom.xml`:"

#. type: Block title
#: upstream/_guides/mongodb.adoc:59 upstream/_guides/mongodb.adoc:661
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:65
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-mongodb-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/mongodb.adoc:68 upstream/_guides/mongodb.adoc:670
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:71
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-mongodb-client\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mongodb.adoc:73
#, fuzzy, no-wrap
msgid "Creating your first JSON REST service"
msgstr "Creación de su primer servicio JSON REST"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:76
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "En este ejemplo, crearemos una aplicación para gestionar una lista de frutas."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:78
#, fuzzy
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "En primer lugar, vamos a crear el frijol `Fruit` de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:82 upstream/_guides/mongodb.adoc:148
#: upstream/_guides/mongodb.adoc:350 upstream/_guides/mongodb.adoc:394
#: upstream/_guides/mongodb.adoc:540
#, no-wrap
msgid "package org.acme.mongodb;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:84
#, no-wrap
msgid "import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:86
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:90
#, no-wrap
msgid ""
"    private String name;\n"
"    private String description;\n"
"    private String id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:93
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:98
#, no-wrap
msgid ""
"    public Fruit(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:102
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:106
#, no-wrap
msgid ""
"    public void setName(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:110
#, no-wrap
msgid ""
"    public String getDescription() {\n"
"        return description;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:114
#, no-wrap
msgid ""
"    public void setDescription(String description) {\n"
"        this.description = description;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:120
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object obj) {\n"
"        if (!(obj instanceof Fruit)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:122
#, no-wrap
msgid "        Fruit other = (Fruit) obj;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:125
#, no-wrap
msgid ""
"        return Objects.equals(other.name, this.name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:130
#, no-wrap
msgid ""
"    @Override\n"
"    public int hashCode() {\n"
"        return Objects.hash(this.name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:134
#, no-wrap
msgid ""
"    public void setId(String id) {\n"
"        this.id = id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:139
#, no-wrap
msgid ""
"    public String getId() {\n"
"        return id;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:142
#, fuzzy
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "No es nada del otro mundo. Una cosa importante a tener en cuenta es que tener un constructor por defecto es requerido por la capa de serialización JSON."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:144
#, fuzzy
msgid "Now create a `org.acme.mongodb.FruitService` that will be the business layer of our application and store/load the fruits from the mongoDB database."
msgstr "Ahora creamos un `org.acme.mongodb.FruitService` que será la capa de negocio de nuestra aplicación y almacenará/cargará los frutos de la base de datos mongoDB."

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:153
#, no-wrap
msgid ""
"import com.mongodb.client.MongoClient;\n"
"import com.mongodb.client.MongoCollection;\n"
"import com.mongodb.client.MongoCursor;\n"
"import org.bson.Document;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:158 upstream/_guides/mongodb.adoc:549
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.inject.Inject;\n"
"import java.util.ArrayList;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:161
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class FruitService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:163 upstream/_guides/mongodb.adoc:554
#, no-wrap
msgid "    @Inject MongoClient mongoClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:167
#, no-wrap
msgid ""
"    public List<Fruit> list(){\n"
"        List<Fruit> list = new ArrayList<>();\n"
"        MongoCursor<Document> cursor = getCollection().find().iterator();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:181
#, no-wrap
msgid ""
"        try {\n"
"            while (cursor.hasNext()) {\n"
"                Document document = cursor.next();\n"
"                Fruit fruit = new Fruit();\n"
"                fruit.setName(document.getString(\"name\"));\n"
"                fruit.setDescription(document.getString(\"description\"));\n"
"                list.add(fruit);\n"
"            }\n"
"        } finally {\n"
"            cursor.close();\n"
"        }\n"
"        return list;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:188
#, no-wrap
msgid ""
"    public void add(Fruit fruit){\n"
"        Document document = new Document()\n"
"                .append(\"name\", fruit.getName())\n"
"                .append(\"description\", fruit.getDescription());\n"
"        getCollection().insertOne(document);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:193
#, no-wrap
msgid ""
"    private MongoCollection getCollection(){\n"
"        return mongoClient.getDatabase(\"fruit\").getCollection(\"fruit\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:196
#, fuzzy
msgid "Now, create the `org.acme.mongodb.FruitResource` class as follows:"
msgstr "Ahora, cree la clase `org.acme.mongodb.FruitResource` como sigue:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:201
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:203
#, no-wrap
msgid "    @Inject FruitService fruitService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:208
#, no-wrap
msgid ""
"    @GET\n"
"    public List<Fruit> list() {\n"
"        return fruitService.list();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:215
#, no-wrap
msgid ""
"    @POST\n"
"    public List<Fruit> add(Fruit fruit) {\n"
"        fruitService.add(fruit);\n"
"        return list();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:218
#, fuzzy
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations and use the `FruitService` to list/add new fruits."
msgstr "La implementación es bastante sencilla y sólo tiene que definir sus puntos finales utilizando las anotaciones JAX-RS y utilizar el `FruitService` para listar/añadir nuevos frutos."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:219
#, fuzzy, no-wrap
msgid "Configuring the MongoDB database"
msgstr "Configuración de la base de datos MongoDB"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:221
#, fuzzy
msgid "The main property to configure is the URL to access to MongoDB. Almost all configuration can be included in the connection URI, so we advise you to do so. You can find more information in the MongoDB documentation: https://docs.mongodb.com/manual/reference/connection-string/"
msgstr "La principal propiedad a configurar es la URL de acceso a MongoDB, casi toda la configuración se puede incluir en la URI de conexión por lo que aconsejamos hacerlo, puedes encontrar más información en la documentación de MongoDB:  https://docs.mongodb.com/manual/reference/connection-string/"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:223
#, fuzzy
msgid "A sample configuration should look like this:"
msgstr "Un ejemplo de configuración debería ser el siguiente:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:228
#, no-wrap
msgid ""
"# configure the mongoDB client for a replica set of two nodes\n"
"quarkus.mongodb.connection-string = mongodb://mongo1:27017,mongo2:27017\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:231
#, fuzzy
msgid "In this example, we are using a single instance running on localhost:"
msgstr "En este ejemplo, estamos utilizando una única instancia que se ejecuta en localhost:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:236
#, no-wrap
msgid ""
"# configure the mongoDB client for a single instance on localhost\n"
"quarkus.mongodb.connection-string = mongodb://localhost:27017\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:239
#, fuzzy
msgid "If you need more configuration properties, there is a full list at the end of this guide."
msgstr "Si necesita más propiedades de configuración, hay una lista completa al final de esta guía."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:242
#, fuzzy
msgid "By default, Quarkus will restrict the use of JNDI within an application, as a precaution to try and mitigate any future vulnerabilities similar to Log4Shell.  Because the `mongo+srv` protocol often used to connect to MongoDB requires JNDI, this protection is automatically disabled when using the MongoDB client extension."
msgstr "Por defecto Quarkus restringirá el uso de JNDI dentro de una aplicación, como precaución para intentar mitigar cualquier vulnerabilidad futura similar a log4shell. Debido a que el protocolo `mongo+srv` que se utiliza a menudo para conectarse a MongoDB requiere JNDI, esta protección se desactiva automáticamente cuando se utiliza la extensión de cliente de MongoDB."

#. type: Title ===
#: upstream/_guides/mongodb.adoc:244
#, fuzzy, no-wrap
msgid "Dev Services (Configuration Free Databases)"
msgstr "Servicios de desarrollo (bases de datos libres de configuración)"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:249
#, fuzzy
msgid "Quarkus supports a feature called Dev Services that allows you to create various datasources without any config. In the case of MongoDB this support extends to the default MongoDB connection.  What that means practically, is that if you have not configured `quarkus.mongodb.connection-string`, Quarkus will automatically start a MongoDB container when running tests or in dev mode, and automatically configure the connection."
msgstr "Quarkus soporta una característica llamada Dev Services que permite crear varias fuentes de datos sin ninguna configuración. En el caso de MongoDB este soporte se extiende a la conexión por defecto de MongoDB. Lo que esto significa prácticamente, es que si no has configurado `quarkus.mongodb.connection-string` Quarkus iniciará automáticamente un contenedor MongoDB cuando ejecute pruebas o modo dev, y configurará automáticamente la conexión."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:251
#, fuzzy
msgid "MongoDB Dev Services is based on link:https://www.testcontainers.org/modules/databases/mongodb/[Testcontainers MongoDB module] that will start a single node replicaset."
msgstr "MongoDB Dev Services se basa en el  link:https://www.testcontainers.org/modules/databases/mongodb/[módulo Testcontainers MongoDB] que iniciará un conjunto de réplicas de un solo nodo."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:254
#, fuzzy
msgid "When running the production version of the application, the MongoDB connection need to be configured as normal, so if you want to include a production database config in your `application.properties` and continue to use Dev Services we recommend that you use the `%prod.` profile to define your MongoDB settings."
msgstr "Cuando se ejecuta la versión de producción de la aplicación, la conexión a MongoDB debe configurarse de forma normal, por lo que si quieres incluir una configuración de base de datos de producción en tu `application.properties` y seguir utilizando los servicios de desarrollo, te recomendamos que utilices el perfil `%prod.` para definir tu configuración de MongoDB."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:257
#, fuzzy, no-wrap
msgid "Multiple MongoDB Clients"
msgstr "Múltiples clientes de MongoDB"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:261
#, fuzzy
msgid "MongoDB allows you to configure multiple clients.  Using several clients works the same way as having a single client."
msgstr "MongoDB permite configurar varios clientes. El uso de varios clientes funciona de la misma manera que tener un solo cliente."

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:265
#, no-wrap
msgid "quarkus.mongodb.connection-string = mongodb://login:pass@mongo1:27017/database\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:268
#, no-wrap
msgid ""
"quarkus.mongodb.users.connection-string = mongodb://mongo2:27017/userdb\n"
"quarkus.mongodb.inventory.connection-string = mongodb://mongo3:27017/invdb,mongo4:27017/invdb\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:273
#, fuzzy
msgid "Notice there's an extra bit in the key (the `users` and `inventory` segments).  The syntax is as follows: `quarkus.mongodb.[optional name.][mongo connection property]`.  If the name is omitted, it configures the default client."
msgstr "Observe que hay un bit extra en la clave (los segmentos `users` y `inventory` ). La sintaxis es la siguiente `quarkus.mongodb.[optional name.][mongo connection property]`. Si se omite el nombre, se configura el cliente por defecto."

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:280
#, fuzzy
msgid "The use of multiple MongoDB clients enables multi-tenancy for MongoDB by allowing to connect to multiple MongoDB clusters. + If you want to connect to multiple databases inside the same cluster, multiple clients are **not** necessary as a single client is able to access all databases in the same cluster (as a JDBC connection is able to access to multiple schemas inside the same database)."
msgstr "El uso de múltiples clientes MongoDB permite la multi-tenencia de MongoDB al permitir la conexión a múltiples clusters MongoDB. + Si desea conectarse a varias bases de datos dentro del mismo clúster, *no* es necesario utilizar varios clientes, ya que un solo cliente puede acceder a todas las bases de datos del mismo clúster (al igual que una conexión JDBC puede acceder a varios esquemas dentro de la misma base de datos)."

#. type: Title ===
#: upstream/_guides/mongodb.adoc:282
#, fuzzy, no-wrap
msgid "Named Mongo client Injection"
msgstr "Inyección de clientes Mongo con nombre"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:286
#, fuzzy
msgid "When using multiple clients, each `MongoClient`, you can select the client to inject using the `io.quarkus.mongodb.MongoClientName` qualifier.  Using the above properties to configure three different clients, you can also inject each one as follows:"
msgstr "Cuando se utilizan varios clientes, cada uno de ellos `MongoClient`, se puede seleccionar el cliente a inyectar utilizando el calificador `io.quarkus.mongodb.MongoClientName`. Utilizando las propiedades anteriores para configurar tres clientes diferentes, también puede inyectar cada uno de ellos de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:291
#, no-wrap
msgid ""
"@Inject\n"
"MongoClient defaultMongoClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:295
#, no-wrap
msgid ""
"@Inject\n"
"@MongoClientName(\"users\")\n"
"MongoClient mongoClient1;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:299
#, no-wrap
msgid ""
"@Inject\n"
"@MongoClientName(\"inventory\")\n"
"ReactiveMongoClient mongoClient2;\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mongodb.adoc:301
#, fuzzy, no-wrap
msgid "Running a MongoDB Database"
msgstr "Ejecución de una base de datos MongoDB"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:303
#, fuzzy
msgid "As by default, `MongoClient` is configured to access a local MongoDB database on port 27017 (the default MongoDB port), if you have a local running database on this port, there is nothing more to do before being able to test it!"
msgstr "Como por defecto, `MongoClient` está configurado para acceder a una base de datos local de MongoDB en el puerto 27017 (el puerto por defecto de MongoDB), si tienes una base de datos local en funcionamiento en este puerto, ¡no hay nada más que hacer para poder probarlo!"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:305
#, fuzzy
msgid "If you want to use Docker to run a MongoDB database, you can use the following command to launch one:"
msgstr "Si quieres usar Docker para ejecutar una base de datos MongoDB, puedes usar el siguiente comando para lanzar una:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:308
#, no-wrap
msgid "docker run -ti --rm -p 27017:27017 mongo:4.4\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:313
#, fuzzy
msgid "If you use xref:dev-services[Dev Services], launching the container manually is not necessary."
msgstr "Si utiliza  link:#dev-services[los servicios de desarrollo], no es necesario lanzar el contenedor manualmente."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:316
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "Creación de un frontend"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:321
#, fuzzy
msgid "Now let's add a simple web page to interact with our `FruitResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/mongodb-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr "Ahora vamos a añadir una simple página web para interactuar con nuestro `FruitResource`. Quarkus sirve automáticamente recursos estáticos ubicados en el directorio `META-INF/resources`. En el directorio `src/main/resources/META-INF/resources`, añade un archivo `fruits.html` con el contenido de este archivo {quickstarts-blob-url}/mongodb-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html]."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:323
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "Ahora puede interactuar con su servicio REST:"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:327
#, fuzzy
msgid "start Quarkus with:"
msgstr "con el que empezar a Quarkus:"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:330
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "abrir un navegador para `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:331
#, fuzzy
msgid "add new fruits to the list via the form"
msgstr "añadir nuevas frutas a la lista a través del formulario"

#. type: Title ==
#: upstream/_guides/mongodb.adoc:335
#, fuzzy, no-wrap
msgid "Reactive MongoDB Client"
msgstr "Cliente MongoDB reactivo"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:339
#, fuzzy
msgid "A reactive MongoDB Client is included in Quarkus.  Using it is as easy as using the classic MongoDB Client.  You can rewrite the previous example to use it like the following."
msgstr "En Quarkus se incluye un Cliente MongoDB reactivo. Usarlo es tan fácil como usar el Cliente MongoDB clásico. Puedes reescribir el ejemplo anterior para usarlo de la siguiente manera."

#. type: Block title
#: upstream/_guides/mongodb.adoc:341
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motín"

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:345
#, fuzzy
msgid "The MongoDB reactive client uses Mutiny reactive types.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "El cliente reactivo de MongoDB utiliza los tipos reactivos de Mutiny. Si no está familiarizado con Mutiny, consulte  link:mutiny-primer.html[Mutiny - una biblioteca de programación reactiva intuitiva]."

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:355
#, no-wrap
msgid ""
"import io.quarkus.mongodb.reactive.ReactiveMongoClient;\n"
"import io.quarkus.mongodb.reactive.ReactiveMongoCollection;\n"
"import io.smallrye.mutiny.Uni;\n"
"import org.bson.Document;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:359
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.inject.Inject;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:362
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class ReactiveFruitService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:365
#, no-wrap
msgid ""
"    @Inject\n"
"    ReactiveMongoClient mongoClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:375
#, no-wrap
msgid ""
"    public Uni<List<Fruit>> list() {\n"
"        return getCollection().find()\n"
"                .map(doc -> {\n"
"                    Fruit fruit = new Fruit();\n"
"                    fruit.setName(doc.getString(\"name\"));\n"
"                    fruit.setDescription(doc.getString(\"description\"));\n"
"                    return fruit;\n"
"                }).collect().asList();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:383
#, no-wrap
msgid ""
"    public Uni<Void> add(Fruit fruit) {\n"
"        Document document = new Document()\n"
"                .append(\"name\", fruit.getName())\n"
"                .append(\"description\", fruit.getDescription());\n"
"        return getCollection().insertOne(document)\n"
"                .onItem().ignore().andContinueWithNull();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:388
#, no-wrap
msgid ""
"    private ReactiveMongoCollection<Document> getCollection() {\n"
"        return mongoClient.getDatabase(\"fruit\").getCollection(\"fruit\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:396
#, no-wrap
msgid "import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:398
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:406
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.Consumes;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:411
#, no-wrap
msgid ""
"@Path(\"/reactive_fruits\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class ReactiveFruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:414
#, no-wrap
msgid ""
"    @Inject\n"
"    ReactiveFruitService fruitService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:419
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<List<Fruit>> list() {\n"
"        return fruitService.list();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:426
#, no-wrap
msgid ""
"    @POST\n"
"    public Uni<List<Fruit>> add(Fruit fruit) {\n"
"        return fruitService.add(fruit)\n"
"                .onItem().ignore().andSwitchTo(this::list);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mongodb.adoc:428
#, fuzzy, no-wrap
msgid "Simplifying MongoDB Client usage using BSON codec"
msgstr "Simplificando el uso del cliente MongoDB usando el códec BSON"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:431
#, fuzzy
msgid "By using a Bson `Codec`, the MongoDB Client will take care of the transformation of your domain object to/from a MongoDB `Document` automatically."
msgstr "Al utilizar un Bson `Codec`, el Cliente MongoDB se encargará de la transformación de su objeto de dominio a/desde un MongoDB `Document` automáticamente."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:435
#, fuzzy
msgid "First you need to create a Bson `Codec` that will tell Bson how to transform your entity to/from a MongoDB `Document`.  Here we use a `CollectibleCodec` as our object is retrievable from the database (it has a MongoDB identifier), if not we would have used a `Codec` instead.  More information in the codec documentation: https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/data-formats/codecs/."
msgstr "Primero necesitas crear un Bson `Codec` que le dirá a Bson cómo transformar tu entidad a/desde un MongoDB `Document`. Aquí usamos un `CollectibleCodec` ya que nuestro objeto es recuperable desde la base de datos (tiene un identificador MongoDB), si no hubiéramos usado un `Codec` en su lugar. Más información en la documentación del códec:  https://mongodb.github.io/mongo-java-driver/3.10/bson/codecs ."

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:439 upstream/_guides/mongodb.adoc:513
#, no-wrap
msgid "package org.acme.mongodb.codec;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:451
#, no-wrap
msgid ""
"import com.mongodb.MongoClientSettings;\n"
"import org.acme.mongodb.Fruit;\n"
"import org.bson.Document;\n"
"import org.bson.BsonWriter;\n"
"import org.bson.BsonValue;\n"
"import org.bson.BsonReader;\n"
"import org.bson.BsonString;\n"
"import org.bson.codecs.Codec;\n"
"import org.bson.codecs.CollectibleCodec;\n"
"import org.bson.codecs.DecoderContext;\n"
"import org.bson.codecs.EncoderContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:453
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:455
#, no-wrap
msgid "public class FruitCodec implements CollectibleCodec<Fruit> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:457
#, no-wrap
msgid "    private final Codec<Document> documentCodec;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:461
#, no-wrap
msgid ""
"    public FruitCodec() {\n"
"        this.documentCodec = MongoClientSettings.getDefaultCodecRegistry().get(Document.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:469
#, no-wrap
msgid ""
"    @Override\n"
"    public void encode(BsonWriter writer, Fruit fruit, EncoderContext encoderContext) {\n"
"        Document doc = new Document();\n"
"        doc.put(\"name\", fruit.getName());\n"
"        doc.put(\"description\", fruit.getDescription());\n"
"        documentCodec.encode(writer, doc, encoderContext);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:474
#, no-wrap
msgid ""
"    @Override\n"
"    public Class<Fruit> getEncoderClass() {\n"
"        return Fruit.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:482
#, no-wrap
msgid ""
"    @Override\n"
"    public Fruit generateIdIfAbsentFromDocument(Fruit document) {\n"
"        if (!documentHasId(document)) {\n"
"            document.setId(UUID.randomUUID().toString());\n"
"        }\n"
"        return document;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:487
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean documentHasId(Fruit document) {\n"
"        return document.getId() != null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:492
#, no-wrap
msgid ""
"    @Override\n"
"    public BsonValue getDocumentId(Fruit document) {\n"
"        return new BsonString(document.getId());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:505
#, no-wrap
msgid ""
"    @Override\n"
"    public Fruit decode(BsonReader reader, DecoderContext decoderContext) {\n"
"        Document document = documentCodec.decode(reader, decoderContext);\n"
"        Fruit fruit = new Fruit();\n"
"        if (document.getString(\"id\") != null) {\n"
"            fruit.setId(document.getString(\"id\"));\n"
"        }\n"
"        fruit.setName(document.getString(\"name\"));\n"
"        fruit.setDescription(document.getString(\"description\"));\n"
"        return fruit;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:509
#, fuzzy
msgid "Then you need to create a `CodecProvider` to link this `Codec` to the `Fruit` class."
msgstr "A continuación, hay que crear un `CodecProvider` para vincular este `Codec` a la clase `Fruit`."

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:518
#, no-wrap
msgid ""
"import org.acme.mongodb.Fruit;\n"
"import org.bson.codecs.Codec;\n"
"import org.bson.codecs.configuration.CodecProvider;\n"
"import org.bson.codecs.configuration.CodecRegistry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:527
#, no-wrap
msgid ""
"public class FruitCodecProvider implements CodecProvider {\n"
"    @Override\n"
"    public <T> Codec<T> get(Class<T> clazz, CodecRegistry registry) {\n"
"        if (clazz.equals(Fruit.class)) {\n"
"            return (Codec<T>) new FruitCodec();\n"
"        }\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:529
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:532
#, fuzzy
msgid "Quarkus takes care of registering the `CodecProvider` for you as a CDI bean of `@Singleton` scope."
msgstr "Quarkus se encarga de registrar el `CodecProvider` por usted como un frijol CDI de alcance `@Singleton`."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:534
#, fuzzy
msgid "Finally, when getting the `MongoCollection` from the database you can use directly the `Fruit` class instead of the `Document` one, the codec will automatically map the `Document` to/from your `Fruit` class."
msgstr "Por último, al obtener el `MongoCollection` de la base de datos puede utilizar directamente la clase `Fruit` en lugar de la `Document`, el códec asignará automáticamente el `Document` a/desde su clase `Fruit`."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:536
#, fuzzy
msgid "Here is an example of using a `MongoCollection` with the `FruitCodec`."
msgstr "Este es un ejemplo de utilización de un `MongoCollection` con el `FruitCodec`."

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:544
#, no-wrap
msgid ""
"import com.mongodb.client.MongoClient;\n"
"import com.mongodb.client.MongoCollection;\n"
"import com.mongodb.client.MongoCursor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:552
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CodecFruitService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:558
#, no-wrap
msgid ""
"    public List<Fruit> list(){\n"
"        List<Fruit> list = new ArrayList<>();\n"
"        MongoCursor<Fruit> cursor = getCollection().find().iterator();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:568
#, no-wrap
msgid ""
"        try {\n"
"            while (cursor.hasNext()) {\n"
"                list.add(cursor.next());\n"
"            }\n"
"        } finally {\n"
"            cursor.close();\n"
"        }\n"
"        return list;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:572
#, no-wrap
msgid ""
"    public void add(Fruit fruit){\n"
"        getCollection().insertOne(fruit);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:577
#, no-wrap
msgid ""
"    private MongoCollection<Fruit> getCollection(){\n"
"        return mongoClient.getDatabase(\"fruit\").getCollection(\"fruit\", Fruit.class);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mongodb.adoc:579
#, fuzzy, no-wrap
msgid "The POJO Codec"
msgstr "El códec POJO"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:583
#, fuzzy
msgid "The link:https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/data-formats/document-data-format-pojo/[POJO Codec] provides a set of annotations that enable the customization of the way a POJO is mapped to a MongoDB collection and this codec is initialized automatically by Quarkus"
msgstr "El  link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[códec POJO] proporciona un conjunto de anotaciones que permiten la personalización de la forma en que un POJO se asigna a una colección de MongoDB y este códec se inicializa automáticamente por Quarkus"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:586
#, fuzzy
msgid "One of these annotations is the `@BsonDiscriminator` annotation that allows to storage multiple Java types in a single MongoDB collection by adding a discriminator field inside the document. It can be useful when working with abstract types or interfaces."
msgstr "Una de estas anotaciones es la anotación `@BsonDiscriminator` que permite almacenar múltiples tipos Java en una única colección de MongoDB añadiendo un campo discriminador dentro del documento. Puede ser útil cuando se trabaja con tipos abstractos o interfaces."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:588
#, fuzzy
msgid "Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` with the POJO codec."
msgstr "Quarkus registrará automáticamente todas las clases anotadas con `@BsonDiscriminator` con el códec POJO."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:592
#, fuzzy
msgid "The POJO Codec have enhanced generic support via `PropertyCodecProvider`, Quarkus will automatically register any `PropertyCodecProvider` with the POJO Codec (these classes are automatically made CDI beans of `@Singleton` scope).  When building native executables and using generic types, you might need to register the type arguments for reflection."
msgstr "El códec POJO ha mejorado el soporte genérico a través de `PropertyCodecProvider`, Quarkus registrará automáticamente cualquier `PropertyCodecProvider` con el códec POJO (estas clases se convierten automáticamente en beans CDI de ámbito `@Singleton` ). Cuando se construyan ejecutables nativos y se utilicen tipos genéricos, puede ser necesario registrar los argumentos de tipo para la reflexión."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:593
#, fuzzy, no-wrap
msgid "Simplifying MongoDB with Panache"
msgstr "Simplificando MongoDB con Panache"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:596
#, fuzzy
msgid "The xref:mongodb-panache.adoc[MongoDB with Panache] extension facilitates the usage of MongoDB by providing active record style entities (and repositories) like you have in xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] and focuses on making your entities trivial and fun to write in Quarkus."
msgstr "La extensión  link:mongodb-panache.html[MongoDB] con Panache facilita el uso de MongoDB proporcionando entidades de estilo de registro activo (y repositorios) como las que tiene  link:hibernate-orm-panache.html[Hibernate ORM con Panache] y se centra en hacer que sus entidades sean triviales y divertidas de escribir en Quarkus."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:597
#, fuzzy, no-wrap
msgid "Schema migration with Liquibase"
msgstr "Migración de esquemas con Liquibase"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:601
#, fuzzy
msgid "The xref:liquibase-mongodb.adoc[Liquibase MongoDB] extension facilitates the initialization of a MongoDB database including indices and initial data.  It implements the same schema migration facilities that Liquibase offers for SQL databases."
msgstr "La extensión Liquibase  link:liquibase-mongodb.html[MongoDB] facilita la inicialización de una base de datos MongoDB incluyendo índices y datos iniciales. Implementa las mismas facilidades de migración de esquemas que Liquibase ofrece para las bases de datos SQL."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:602
#, fuzzy, no-wrap
msgid "Connection Health Check"
msgstr "Comprobación de la salud de la conexión"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:606
#, fuzzy
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-mongodb-client` will automatically add a readiness health check to validate the connection to the cluster."
msgstr "Si está utilizando la extensión `quarkus-smallrye-health`, `quarkus-mongodb-client` añadirá automáticamente una comprobación de estado de preparación para validar la conexión con el clúster."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:608
#, fuzzy
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr "Así, cuando acceda al endpoint `/q/health/ready` de su aplicación tendrá información sobre el estado de validación de la conexión."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:610
#, fuzzy
msgid "This behavior can be disabled by setting the `quarkus.mongodb.health.enabled` property to `false` in your `application.properties`."
msgstr "Este comportamiento puede desactivarse estableciendo la propiedad `quarkus.mongodb.health.enabled` en `false` en su `application.properties`."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:611
#, fuzzy, no-wrap
msgid "Metrics"
msgstr "Métrica"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:615
#, fuzzy
msgid "If you are using the `quarkus-micrometer` or `quarkus-smallrye-metrics` extension, `quarkus-mongodb-client` can provide metrics about the connection pools.  This behavior must first be enabled by setting the `quarkus.mongodb.metrics.enabled` property to `true` in your `application.properties`."
msgstr "Si está utilizando la extensión `quarkus-micrometer` o `quarkus-smallrye-metrics`, `quarkus-mongodb-client` puede proporcionar métricas sobre los grupos de conexiones. Este comportamiento debe ser habilitado primero estableciendo la propiedad `quarkus.mongodb.metrics.enabled` a `true` en su `application.properties`."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:618
#, fuzzy
msgid "So when you access the `/q/metrics` endpoint of your application you will have information about the connection pool status.  When using xref:smallrye-metrics.adoc[SmallRye Metrics], connection pool metrics will be available under the `vendor` scope."
msgstr "Así, cuando acceda al endpoint `/q/metrics` de su aplicación tendrá información sobre el estado del pool de conexiones. Al utilizar  link:smallrye-metrics.html[SmallRye Metrics], las métricas del pool de conexiones estarán disponibles en el ámbito `vendor`."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:619
#, fuzzy, no-wrap
msgid "Testing helpers"
msgstr "Ayudantes de pruebas"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:622
#, fuzzy
msgid "xref:#dev-services[Dev Services for MongoDB] is your best option to start a MongoDB database for your unit tests."
msgstr "link:#dev-services[Dev Services for MongoDB] es su mejor opción para iniciar una base de datos MongoDB para sus pruebas unitarias."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:625
#, fuzzy
msgid "But if you can't use it, you can start a MongoDB database using one of the two `QuarkusTestResourceLifecycleManager` that Quarkus provides.  They rely on link:https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo[Flapdoodle embedded MongoDB]."
msgstr "Para iniciar una base de datos MongoDB para sus pruebas unitarias, Quarkus proporciona dos `QuarkusTestResourceLifecycleManager` que se basa en  link:https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo[Flapdoodle incrustado MongoDB]."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:627
#, fuzzy
msgid "`io.quarkus.test.mongodb.MongoTestResource` will start a single instance on port 27017."
msgstr "`io.quarkus.test.mongodb.MongoTestResource` iniciará una única instancia en el puerto 27017."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:628
#, fuzzy
msgid "`io.quarkus.test.mongodb.MongoReplicaSetTestResource` will start a replicaset with two instances, one on port 27017 and the other on port 27018."
msgstr "`io.quarkus.test.mongodb.MongoReplicaSetTestResource` iniciará un conjunto de réplicas con dos instancias, una en el puerto 27017 y la otra en el puerto 27018."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:630
#, fuzzy
msgid "To use them, you need to add the `io.quarkus:quarkus-test-mongodb` dependency to your pom.xml."
msgstr "Para utilizarlos, debe añadir la dependencia de `io.quarkus:quarkus-test-mongodb` a su pom.xml."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:632
#, fuzzy
msgid "For more information about the usage of a `QuarkusTestResourceLifecycleManager` please read xref:getting-started-testing.adoc#quarkus-test-resource[Quarkus test resource]."
msgstr "Para más información sobre el uso de un `QuarkusTestResourceLifecycleManager` por favor lea el  link:getting-started-testing.html#quarkus-test-resource[recurso de prueba Quarkus]."

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:636
#, fuzzy
msgid "To set the desired port MongoDB will listen to when it is launched, the following code should be used:"
msgstr "Para establecer el puerto deseado en el que MongoDB escuchará cuando se lance, se debe utilizar el siguiente código:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:640
#, no-wrap
msgid "@QuarkusTestResource(value = MongoTestResource.class, initArgs = @ResourceArg(name = MongoTestResource.PORT, value = \"27017\"))\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:643
#, fuzzy
msgid "To set the desired MongoDB version that will be launched, the following code should be used:"
msgstr "Para establecer la versión deseada de MongoDB que se lanzará, se debe utilizar el siguiente código:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:647
#, no-wrap
msgid "@QuarkusTestResource(value = MongoTestResource.class, initArgs = @ResourceArg(name = MongoTestResource.VERSION, value = \"V5_0\"))\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:651
#, fuzzy
msgid "The string value used can be any of one of the `de.flapdoodle.embed.mongo.distribution.Version` or `de.flapdoodle.embed.mongo.distribution.Version.Main` enums.  If no version is specified, `Version.Main.V4_0` is used by default."
msgstr "El valor de la cadena utilizada puede ser cualquiera de los enums `de.flapdoodle.embed.mongo.distribution.Version` o `de.flapdoodle.embed.mongo.distribution.Version.Main`. Si no se especifica ninguna versión, se utiliza por defecto `Version.Main.V4_0`."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:653
#, fuzzy, no-wrap
msgid "The legacy client"
msgstr "El cliente heredado"

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:657
#, fuzzy
msgid "We don't include the legacy MongoDB client by default. It contains the now retired MongoDB Java API (DB, DBCollection,... )  and the `com.mongodb.MongoClient` that is now superseded by `com.mongodb.client.MongoClient`."
msgstr "No incluimos el cliente MongoDB heredado por defecto. Contiene la ya retirada API Java de MongoDB (DB, DBCollection,... ) y el `com.mongodb.MongoClient` que ahora es sustituido por `com.mongodb.client.MongoClient`."

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:659
#, fuzzy
msgid "If you want to use the legacy API, you need to add the following dependency to your build file:"
msgstr "Si desea utilizar la API heredada, debe añadir la siguiente dependencia a su archivo de compilación:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:667
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.mongodb</groupId>\n"
"    <artifactId>mongodb-driver-legacy</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:673
#, no-wrap
msgid "implementation(\"org.mongodb:mongodb-driver-legacy\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mongodb.adoc:675
#, fuzzy, no-wrap
msgid "Building a native executable"
msgstr "Construir un ejecutable nativo"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:678
#, fuzzy
msgid "You can use the MongoDB client in a native executable."
msgstr "Puedes utilizar el cliente MongoDB en un ejecutable nativo."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:680
#, fuzzy
msgid "If you want to use SSL/TLS encryption, you need to add these properties in your `application.properties`:"
msgstr "Si desea utilizar el cifrado SSL/TLS, debe añadir estas propiedades en su `application.properties`:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:685
#, no-wrap
msgid ""
"quarkus.mongodb.tls=true\n"
"quarkus.mongodb.tls-insecure=true # only if TLS certificate cannot be validated\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:688
#, fuzzy
msgid "You can then build a native executable with the usual command:"
msgstr "A continuación, puede construir un ejecutable nativo con el comando habitual:"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:692
#, fuzzy
msgid "Running it is as simple as executing `./target/mongodb-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "Ejecutarlo es tan sencillo como ejecutar `./target/mongodb-quickstart-1.0.0-SNAPSHOT-runner`."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:694
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "A continuación, puede dirigir su navegador a `&lt;a href=\"http://localhost:8080/fruits.html\" class=\"bare\"&gt;http://localhost:8080/fruits.html&lt;/a&gt;` y utilizar su aplicación."

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:698
#, fuzzy
msgid "Currently, Quarkus doesn't support link:https://docs.mongodb.com/manual/core/security-client-side-encryption/[Client-Side Field Level Encryption] in native mode."
msgstr "Actualmente, Quarkus no admite el  link:https://docs.mongodb.com/manual/core/security-client-side-encryption/[cifrado de nivel de campo del lado del cliente] en modo nativo."

#. type: delimited block =
#: upstream/_guides/mongodb.adoc:706
#, fuzzy
msgid "If you encounter the following error when running your application in native mode: + `Failed to encode 'MyObject'. Encoding 'myVariable' errored with: Can't find a codec for class org.acme.MyVariable.` + This means that the `org.acme.MyVariable` class is not known to GraalVM, the remedy is to add the `@RegisterForReflection` annotation to your `MyVariable class`.  More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "Si encuentra el siguiente error al ejecutar su aplicación en modo nativo: + `Failed to encode 'MyObject'. Encoding 'myVariable' errored with: Can’t find a codec for class org.acme.MyVariable.` + Esto significa que la clase `org.acme.MyVariable` no es conocida por GraalVM, el remedio es añadir la anotación `@RegisterForReflection` a su `MyVariable class`. Puedes encontrar más detalles sobre la anotación `@RegisterForReflection` en la página  link:writing-native-applications-tips.html#registerForReflection[de consejos para aplicaciones] nativas."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:708
#, fuzzy, no-wrap
msgid "Using mongo+srv:// urls"
msgstr "Uso de mongo+srv:// urls"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:712
#, fuzzy
msgid "`mongo+srv://` urls are supported out of the box in JVM mode.  However, in native, the default DNS resolver, provided by the MongoDB client, uses JNDI and does not work in native mode."
msgstr "`mongo+srv://` están soportadas fuera de la caja en modo JVM. Sin embargo, en el modo nativo, el resolver DNS por defecto, proporcionado por el cliente de MongoDB, utiliza JNDI y no funciona en el modo nativo."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:715
#, fuzzy
msgid "If you need to use `mongo+srv://` in native mode, you can configure an alternative DNS resolver.  This feature is **experimental** and may introduce a difference between JVM applications and native applications."
msgstr "Si necesita utilizar `mongo+srv://` en modo nativo, puede configurar un resolver DNS alternativo. Esta función es *experimental* y puede introducir una diferencia entre las aplicaciones JVM y las aplicaciones nativas."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:717
#, fuzzy
msgid "To enable the alternative DNS resolver, use:"
msgstr "Para habilitar el resolver DNS alternativo, utilice:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:721
#, no-wrap
msgid "quarkus.mongodb.native.dns.use-vertx-dns-resolver=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:726
#, fuzzy
msgid "As indicated in the property name, it uses Vert.x to retrieve the DNS records.  By default, it tries to read the first `nameserver` from `/etc/resolv.conf`, if this file exists.  You can also configure your DNS server:"
msgstr "Como se indica en el nombre de la propiedad, utiliza Vert.x para recuperar los registros DNS. Por defecto, intenta leer el primer `nameserver` de `/etc/resolv.conf`, si este archivo existe. También puede configurar su servidor DNS:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:732
#, no-wrap
msgid ""
"quarkus.mongodb.native.dns.use-vertx-dns-resolver=true\n"
"quarkus.mongodb.native.dns.server-host=10.0.0.1\n"
"quarkus.mongodb.native.dns.server-port=53 # 53 is the default port\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:735
#, fuzzy
msgid "Also, you can configure the lookup timeout using:"
msgstr "Además, puedes configurar el tiempo de espera de la búsqueda utilizando:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:740
#, no-wrap
msgid ""
"quarkus.mongodb.native.dns.use-vertx-dns-resolver=true\n"
"quarkus.mongodb.native.dns.lookup-timeout=10s # the default is 5s\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mongodb.adoc:742
#, fuzzy, no-wrap
msgid "Customize the Mongo client configuration programmatically"
msgstr "Personalizar la configuración del cliente Mongo mediante programación"

#. type: Plain text
#: upstream/_guides/mongodb.adoc:745
#, fuzzy
msgid "If you need to customize the Mongo client configuration programmatically, you need to implement the `io.quarkus.mongodb.runtime.MongoClientCustomizer` interface and expose it as a CDI _application scoped_ bean:"
msgstr "Si necesita personalizar la configuración del cliente Mongo mediante programación, deberá implementar la interfaz `io.quarkus.mongodb.runtime.MongoClientCustomizer` y exponerla como un bean _de ámbito de aplicación_ CDI:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:750
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyCustomizer implements MongoClientCustomizer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:756
#, no-wrap
msgid ""
"    @Override\n"
"    public MongoClientSettings.Builder customize(MongoClientSettings.Builder builder) {\n"
"        return builder.applicationName(\"my-app\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:762
#, fuzzy
msgid "The bean can customize a specific client using the `@MongoClientName` qualifier to indicate the client name.  When there is no qualifier, it customizes the default client.  At most one customizer can be used per client.  If multiple customizers targeting the same client are detected, an exception is thrown at build time."
msgstr "El bean puede personalizar un cliente específico utilizando el calificador `@MongoClientName` para indicar el nombre del cliente. Cuando no hay calificador, personaliza el cliente por defecto. Como máximo se puede utilizar un personalizador por cliente. Si se detectan varios personalizadores dirigidos al mismo cliente, se lanza una excepción en tiempo de compilación."

#. type: Plain text
#: upstream/_guides/mongodb.adoc:765
#, fuzzy
msgid "This feature can be used to configure client-side field level encryption (CSFLE).  Follows the instructions from https://www.mongodb.com/docs/manual/core/csfle/[the Mongo web site] to configure CSFLE:"
msgstr "Esta función puede utilizarse para configurar el cifrado a nivel de campo del lado del cliente (CSFLE). Sigue las instrucciones  link:https://www.mongodb.com/docs/manual/core/csfle/[del sitio web de Mongo] para configurar CSFLE:"

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:775
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyCustomizer implements MongoClientCustomizer {\n"
"    @Override\n"
"    public MongoClientSettings.Builder customize(MongoClientSettings.Builder builder) {\n"
"        Map<String, Map<String, Object>> kmsProviders = getKmsProviders();\n"
"        String dek = getDataEncryptionKey();\n"
"        Map<String, BsonDocument> schema = getSchema(dek);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:778
#, no-wrap
msgid ""
"        Map<String, Object> extraOptions = new HashMap<>();\n"
"        extraOptions.put(\"cryptSharedLibPath\", \"<path to crypt shared library>\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mongodb.adoc:787
#, no-wrap
msgid ""
"        return builder.autoEncryptionSettings(AutoEncryptionSettings.builder()\n"
"                .keyVaultNamespace(KEY_VAULT_NAMESPACE)\n"
"                .kmsProviders(kmsProviders)\n"
"                .schemaMap(schemaMap)\n"
"                .extraOptions(extraOptions)\n"
"                .build());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mongodb.adoc:790
#, fuzzy
msgid "Client-side field level encryption, and feature relying on https://github.com/mongodb/libmongocrypt[Mongo Crypt] in general, are not supported in native mode."
msgstr "El cifrado a nivel de campo del lado del cliente, y las características que dependen de  link:https://github.com/mongodb/libmongocrypt[Mongo Crypt] en general, no están soportadas en modo nativo."

#. type: Title ==
#: upstream/_guides/mongodb.adoc:791
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#, fuzzy
#~ msgid "Tracing"
#~ msgstr "Rastreando"

#, fuzzy
#~ msgid "If you are using the `quarkus-smallrye-opentracing` extension, `quarkus-mongodb-client` can register traces about the commands executed.  This behavior must be enabled by setting the `quarkus.mongodb.tracing.enabled` property to `true` in your `application.properties` and adding the dependency `io.opentracing.contrib:opentracing-mongo-common` to your pom.xml (for more info read the xref:opentracing.adoc#mongodb-client[OpenTracing - MongoDB client] section)."
#~ msgstr "Si está utilizando la extensión `quarkus-smallrye-opentracing`, `quarkus-mongodb-client` puede registrar trazas sobre los comandos ejecutados. Este comportamiento debe ser habilitado estableciendo la propiedad `quarkus.mongodb.tracing.enabled` a `true` en su `application.properties` y añadiendo la dependencia `io.opentracing.contrib:opentracing-mongo-common` a su pom.xml (para más información lea la sección  link:opentracing.html#mongodb-client[OpenTracing - MongoDB client] )."

#, fuzzy
#~ msgid "Read the xref:opentracing.adoc[OpenTracing] guide, for how to configure OpenTracing and how to use the Jaeger tracer."
#~ msgstr "Lea la guía de  link:opentracing.html[OpenTracing], para saber cómo configurar OpenTracing y cómo utilizar el trazador Jaeger."

#, fuzzy
#~ msgid "Deprecation"
#~ msgstr "Depreciación"

#, fuzzy
#~ msgid "The `io.quarkus.mongodb.ReactiveMongoClient` client is deprecated and will be removed in the future.  It is recommended to switch to the `io.quarkus.mongodb.reactive.ReactiveMongoClient` client providing the `Mutiny` API."
#~ msgstr "El cliente `io.quarkus.mongodb.ReactiveMongoClient` está obsoleto y será eliminado en el futuro. Se recomienda cambiar al cliente `io.quarkus.mongodb.reactive.ReactiveMongoClient` que proporciona la API `Mutiny`."
