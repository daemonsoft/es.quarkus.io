msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "AWS Lambda with Quarkus REST, Undertow, or Reactive Routes"
msgstr "AWS Lambda con Quarkus REST, Undertow o Rutas Reactivas"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"With Quarkus you can deploy your favorite Java HTTP frameworks as AWS Lambda's using either the https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api.html[AWS Gateway HTTP API]\n"
"or https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-rest-api.html[AWS Gateway REST API].  This means that you can deploy your microservices written with Quarkus REST (our Jakarta REST implementation),\n"
"Undertow (servlet), Reactive Routes, xref:funqy-http.adoc[Funqy HTTP] or any other Quarkus HTTP framework as an AWS Lambda."
msgstr "Con Quarkus puede implementar sus marcos Java HTTP favoritos como AWS Lambda utilizando link:https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api.html[HTTP API de AWS Gateway] o la link:https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-rest-api.html[API REST de AWS Gateway]. Esto significa que puede implementar sus microservicios escritos con Quarkus REST (nuestra implementación de Jakarta REST), Undertow (servlet), Reactive Routes, xref:funqy-http.adoc[Funqy HTTP] o cualquier otro marco HTTP de Quarkus como una AWS Lambda."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "You should only use single HTTP framework together with AWS Lambda extension to avoid unexpected conflicts and errors."
msgstr "Sólo debe utilizar un único marco HTTP junto con la extensión AWS Lambda para evitar conflictos y errores inesperados."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"You can deploy your Lambda as a pure Java jar, or you can compile your project to a native image and deploy that for a smaller\n"
"memory footprint and startup time.  Our integration also generates SAM deployment files that can be consumed by https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[Amazon's SAM framework]."
msgstr "Puede desplegar su Lambda como un jar de Java puro, o puede compilar su proyecto en una imagen nativa y desplegarla para reducir la huella de memoria y el tiempo de inicio. Nuestra integración también genera archivos de despliegue SAM que pueden ser consumidos por el marco de trabajo link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[SAM de Amazon]."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Quarkus has a different extension for each Gateway API.  The HTTP Gateway API is implemented within the `quarkus-amazon-lambda-http` extension.\n"
"The REST Gateway API is implemented within the `quarkus-amazon-lambda-rest` extension.  If you are confused on which Gateway product to use,\n"
"Amazon has a https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html[great guide] to help you navigate this decision."
msgstr "Quarkus tiene una extensión diferente para cada Gateway API. La API HTTP Gateway se implementa dentro de la extensión `quarkus-amazon-lambda-http`. La API REST Gateway se implementa dentro de la extensión `quarkus-amazon-lambda-rest`. Si está confundido sobre qué producto Gateway utilizar, Amazon tiene una link:https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html[gran guía] para ayudarle a tomar esta decisión."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Like most Quarkus extensions, the Quarkus AWS Lambda HTTP/REST extensions support Live Coding."
msgstr "Como la mayoría de las extensiones de Quarkus, las extensiones HTTP/REST de Quarkus AWS Lambda admiten Live Coding."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Prerequisites"
msgstr "Requisitos previos"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "https://aws.amazon.com[An Amazon AWS account]"
msgstr "link:https://aws.amazon.com[Una cuenta de Amazon AWS]"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]"
msgstr "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Getting Started"
msgstr "Primeros pasos"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"This guide walks you through generating an example Java project via a Maven archetype.  Later on, it walks through the structure\n"
"of the project so you can adapt any existing projects you have to use AWS Lambda."
msgstr "Esta guía le lleva a través de la generación de un proyecto Java de ejemplo mediante un arquetipo de Maven. Más adelante, recorre la estructura del proyecto para que pueda adaptar cualquier proyecto existente que tenga para utilizar AWS Lambda."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Installing AWS bits"
msgstr "Instalación de los bits de AWS"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Installing all the AWS bits is probably the most difficult thing about this guide.  Make sure that you follow all the steps\n"
"for installing AWS SAM CLI."
msgstr "Instalar todos los bits de AWS es probablemente lo más difícil de esta guía. Asegúrese de seguir todos los pasos para instalar AWS SAM CLI."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Creating the Maven Deployment Project"
msgstr "Creación del proyecto de Maven"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Create the Quarkus AWS Lambda Maven project using our Maven Archetype."
msgstr "Crea el proyecto Quarkus AWS Lambda Maven utilizando nuestro Arquetipo Maven."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "If you want to use the AWS Gateway HTTP API, generate your project with this script:"
msgstr "Si desea utilizar la API HTTP de AWS Gateway, genere su proyecto con este script:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "If you want to use the AWS Gateway REST API, generate your project with this script:"
msgstr "Si desea utilizar la API REST de AWS Gateway, genere su proyecto con este script:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Build and Deploy"
msgstr "Construir y desplegar"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Build the project:"
msgstr "Construye el proyecto:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"This will compile the code and run the unit tests included within the generated project.\n"
"Unit testing is the same as any other Java project and does not require running on Amazon.  Quarkus dev mode is also\n"
"available with this extension."
msgstr "Esto compilará el código y ejecutará las pruebas unitarias incluidas en el proyecto generado. Las pruebas unitarias son las mismas que en cualquier otro proyecto Java y no requieren ser ejecutadas en Amazon. El modo dev de Quarkus también está disponible con esta extensión."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you want to build a native executable, make sure you have GraalVM installed correctly and just add a `native` property\n"
"to the build"
msgstr "Si desea construir un ejecutable nativo, asegúrese de que tiene GraalVM instalado correctamente y sólo tiene que añadir una propiedad `native` a la construcción"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you are building on a non-Linux system, you will need to also pass in a property instructing quarkus to use a Docker build as Amazon\n"
"Lambda requires Linux binaries.  You can do this by passing `-Dquarkus.native.container-build=true` to your build command.\n"
"This requires you to have Docker installed locally, however."
msgstr "Si está construyendo en un sistema que no sea Linux, necesitará también pasar una propiedad indicando a quarkus que utilice una construcción Docker ya que Amazon Lambda requiere binarios Linux. Puede hacerlo pasando `-Dquarkus.native.container-build=true` a su comando de compilación. Esto requiere que usted tenga Docker instalado localmente, sin embargo."

#: _versions/3.27/guides/aws-lambda-http.adoc
#, fuzzy
msgid ""
"According to the https://docs.aws.amazon.com/linux/al2023/ug/system-requirements.html#system-requirements-cpu-x86-64[AWS documentation], AL2023\n"
"x86-64 binaries are built for the x86-64-**v2** revision of the x86-64 architecture.\n"
"In Quarkus, the default value of xref:building-native-image.adoc#quarkus-core_quarkus-native-march[quarkus.native.march] is x86-64-**v3**.\n"
"This could cause\n"
"https://repost.aws/questions/QUBVnl6hn-Toe1LPr1qjOXzg/lambda-failed-with-java-compiled-into-machine-code[issues] if AWS Lambda provisions older\n"
"hardware.\n"
"To maximize Lambda compatibility, you can set `quarkus.native.march` to `x86-64-v2`.\n"
"See the xref:native-reference.adoc#work-around-missing-cpu-features[Native Reference] guide for more information."
msgstr "Según link:https://docs.aws.amazon.com/linux/al2023/ug/system-requirements.html#system-requirements-cpu-x86-64[la documentación de AWS] , los binarios AL2023 x86-64 se construyen para la revisión *x86-64-v2* de la arquitectura x86-64. En Quarkus, el valor por defecto de xref:building-native-image.adoc#quarkus-core_quarkus-native-march[quarkus.native.march] es *x86-64-v3* . Esto podría causar link:https://repost.aws/questions/QUBVnl6hn-Toe1LPr1qjOXzg/lambda-failed-with-java-compiled-into-machine-code[problemas] si AWS Lambda aprovisiona hardware más antiguo. Para maximizar la compatibilidad con Lambda, puede establecer `quarkus.native.march` en `x86-64-v2` . Consulte la guía de xref:native-reference.adoc#work-around-missing-cpu-features[referencia] nativa para obtener más información."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Extra Build Generated Files"
msgstr "Archivos extra generados por la compilación"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"After you run the build, there are a few extra files generated by the Quarkus lambda extension you are using.  These files\n"
"are in the build directory:  `target/` for Maven, `build/` for Gradle."
msgstr "Después de ejecutar la construcción, hay algunos archivos adicionales generados por la extensión lambda de Quarkus que estás utilizando. Estos archivos están en el directorio de construcción: `target/` para Maven, `build/` para Gradle."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`function.zip` - lambda deployment file"
msgstr "`function.zip` - archivo de despliegue de lambda"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`sam.jvm.yaml` - sam cli deployment script"
msgstr "`sam.jvm.yaml` - sam cli script de despliegue"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`sam.native.yaml` - sam cli deployment script for native"
msgstr "`sam.native.yaml` - sam cli script de despliegue para nativos"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Live Coding and Simulating AWS Lambda Environment Locally"
msgstr "Codificación en vivo y simulación local del entorno de AWS Lambda"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"In dev and test mode, Quarkus will start a mock AWS Lambda event server\n"
"that will convert HTTP requests to the corresponding API Gateway event types and post them to the underlying\n"
"Quarkus HTTP lambda environment for processing.  This simulates the AWS Lambda environment\n"
"as much as possible locally without requiring tools like Docker and SAM CLI."
msgstr "En los modos desarrollo y test, Quarkus iniciará un servidor de eventos AWS Lambda simulado que convertirá las solicitudes HTTP en los tipos de eventos API Gateway correspondientes y los enviará al entorno lambda HTTP subyacente de Quarkus para su procesamiento. Esto simula el entorno AWS Lambda tanto como sea posible localmente sin requerir herramientas como Docker y SAM CLI."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"When using Quarkus Dev Mode just invoke HTTP requests on `http://localhost:8080`\n"
"as you normally would when testing your REST endpoints.  This request will hit the Mock Event Server and will\n"
"be converted to the API Gateway json message that is consumed by the Quarkus Lambda Poll loop."
msgstr "Cuando utilice el modo desarrollo de Quarkus sólo tiene que invocar peticiones HTTP en `http://localhost:8080` como haría normalmente al probar sus puntos finales REST. Esta solicitud llegará al Servidor de Eventos Mock y se convertirá en el mensaje json API Gateway que es consumido por el bucle de sondeo Lambda de Quarkus."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"For testing, Quarkus starts up a separate Mock Event server under port 8081.  The default port for Rest Assured is\n"
"automatically set to 8081 by Quarkus, so you don't have to worry about setting this up."
msgstr "Para las pruebas, Quarkus pone en marcha un servidor Mock Event independiente en el puerto 8081. El puerto por defecto para Rest Assured es configurado automáticamente a 8081 por Quarkus, por lo que no tiene que preocuparse de configurarlo."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you want to simulate more complex\n"
"API Gateway events in your tests, then manually do an HTTP POST to `http://localhost:8080/\\_lambda_` (port 8081 in test mode) with\n"
"the raw API Gateway json events.  These events will be placed directly on the Quarkus Lambda poll loop\n"
"for processing.  Here's an example of that:"
msgstr "Si desea simular eventos API Gateway más complejos en sus pruebas, entonces haga manualmente un POST HTTP a `http://localhost:8080/_lambda_` (puerto 8081 en modo de prueba) con los eventos json de API Gateway sin procesar. Estos eventos se colocarán directamente en el bucle de sondeo Lambda de Quarkus para su procesamiento. He aquí un ejemplo de ello:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "The above example simulates sending a Cognito principal with an HTTP request to your HTTP Lambda."
msgstr "El ejemplo anterior simula el envío de una entidad de seguridad Cognito con una solicitud HTTP a su Lambda HTTP."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you want to hand code raw events for the AWS HTTP API, the AWS Lambda library has the request event type which is\n"
"`com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent` and the response event type\n"
"of `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPResponse`.  This corresponds\n"
"to the `quarkus-amazon-lambda-http` extension and the AWS HTTP API."
msgstr "Si desea codificar a mano eventos sin procesar para la API HTTP de AWS, la biblioteca AWS Lambda tiene el tipo de evento de solicitud que es `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent` y el tipo de evento de respuesta de `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPResponse`. Esto corresponde a la extensión `quarkus-amazon-lambda-http` y a la API HTTP de AWS."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you want to hand code raw events for the AWS REST API, Quarkus has its own implementation:  `io.quarkus.amazon.lambda.http.model.AwsProxyRequest`\n"
"and `io.quarkus.amazon.lambda.http.model.AwsProxyResponse`.  This corresponds\n"
"to `quarkus-amazon-lambda-rest` extension and the AWS REST API."
msgstr "Si desea codificar a mano eventos sin procesar para la API REST de AWS, Quarkus tiene su propia implementación: `io.quarkus.amazon.lambda.http.model.AwsProxyRequest` y `io.quarkus.amazon.lambda.http.model.AwsProxyResponse`. Esto corresponde a la extensión `quarkus-amazon-lambda-rest` y a la API REST de AWS."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"The mock event server is also started for `@QuarkusIntegrationTest` tests so will work\n"
"with native binaries too.  All this provides similar functionality to the SAM CLI local testing, without the overhead of Docker."
msgstr "El servidor de eventos simulados también se inicia para las pruebas de `@NativeImageTest` y `@QuarkusIntegrationTest`, por lo que también funcionará con binarios nativos. Todo esto proporciona una funcionalidad similar a las pruebas locales de SAM CLI, sin la sobrecarga de Docker."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Finally, if port 8080 or port 8081 is not available on your computer, you can modify the dev\n"
"and test mode ports with application.properties"
msgstr "Por último, si el puerto 8080 o el puerto 8081 no están disponibles en su ordenador, puede modificar los puertos de los modos dev y test con application.properties"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "A port value of zero will result in a randomly assigned port."
msgstr "Un valor de puerto de cero resultará en un puerto asignado aleatoriamente."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "To turn off the mock event server:"
msgstr "Para desactivar el servidor de eventos simulado:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Simulate AWS Lambda Deployment with SAM CLI"
msgstr "Simular la implementación de AWS Lambda con SAM CLI"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"The AWS SAM CLI allows you to run your lambda's locally on your laptop in a simulated Lambda environment.  This requires Docker to be installed.\n"
"After you have built your Maven project, execute this command:"
msgstr "La CLI SAM de AWS le permite ejecutar sus Lambda localmente en su portátil en un entorno Lambda simulado. Para ello es necesario tener instalado Docker. Después de haber construido su proyecto Maven, ejecute este comando:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"This will start a Docker container that mimics Amazon's Lambda's deployment environment. Once the environment\n"
"is started you can invoke the example lambda in your browser by going to:"
msgstr "Esto iniciará un contenedor Docker que imita el entorno de despliegue de Amazon Lambda. Una vez iniciado el entorno, puede invocar la lambda de ejemplo en su navegador dirigiéndose a:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "http://127.0.0.1:3000/hello"
msgstr "http://127.0.0.1:3000/hello"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"In the console you'll see startup messages from the lambda.  This particular deployment starts a JVM and loads your\n"
"lambda as pure Java."
msgstr "En la consola verá los mensajes de inicio de la lambda. Este despliegue en particular inicia una JVM y carga su lambda como Java puro."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Deploy to AWS"
msgstr "Implementación en AWS"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Answer all the questions and your lambda will be deployed and the necessary hooks to the API Gateway will be set up. If\n"
"everything deploys successfully, the root URL of your microservice will be output to the console.  Something like this:"
msgstr "Responda a todas las preguntas y su lambda se desplegará y se configurarán los ganchos necesarios a la API Gateway. Si todo se despliega correctamente, la URL raíz de su microservicio se mostrará en la consola. Algo como esto:"

#: _versions/3.27/guides/aws-lambda-http.adoc
#, fuzzy
msgid ""
"Key                 LambdaHttpApi\n"
"Description         URL for application\n"
"Value               https://234asdf234as.execute-api.us-east-1.amazonaws.com/"
msgstr "Clave LambdaHttpApi Descripción URL para la aplicación Valor https://234asdf234as.execute-api.us-east-1.amazonaws.com/"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "The `Value` attribute is the root URL for your lambda. Copy it to your browser and add `hello` at the end."
msgstr "El atributo `Value` es la URL raíz de tu lambda. Cópialo en tu navegador y añade `hello` al final."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Responses for binary types will be automatically encoded with base64.  This is different from the behavior using\n"
"`quarkus:dev` which will return the raw bytes.  Amazon's API has additional restrictions requiring the base64 encoding.\n"
"In general, client code will automatically handle this encoding but in certain custom situations, you should be aware\n"
"you may need to manually manage that encoding."
msgstr "Las respuestas para los tipos binarios se codificarán automáticamente con base64. Esto es diferente al comportamiento usando `quarkus:dev` que devolverá los bytes sin procesar. La API de Amazon tiene restricciones adicionales que requieren la codificación base64. En general, el código del cliente manejará automáticamente esta codificación, pero en ciertas situaciones personalizadas, debes tener en cuenta que puedes necesitar manejar manualmente esa codificación."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Deploying a native executable"
msgstr "Despliegue de un ejecutable nativo"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "To deploy a native executable, you must build it with GraalVM."
msgstr "Para desplegar un ejecutable nativo, debes construirlo con GraalVM."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "You can then test the executable locally with sam local"
msgstr "A continuación, puede probar el ejecutable localmente con sam local"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "To deploy to AWS Lambda:"
msgstr "Para implementar en AWS Lambda:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Examine the POM"
msgstr "Examinar el POM"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"There is nothing special about the POM other than the inclusion of the `quarkus-amazon-lambda-http` extension\n"
"(if you are deploying an AWS Gateway HTTP API) or the `quarkus-amazon-lambda-rest` extension (if you are deploying an AWS Gateway REST API).\n"
"These extensions automatically generate everything you might need for your lambda deployment."
msgstr "No hay nada especial en el POM aparte de la inclusión de la extensión `quarkus-amazon-lambda-http` (si está implementando una API HTTP de AWS Gateway) o la extensión `quarkus-amazon-lambda-rest` (si está implementando una API REST de AWS Gateway). Estas extensiones generan automáticamente todo lo que pueda necesitar para su implementación de Lambda."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Also, at least in the generated Maven archetype `pom.xml`, the `quarkus-rest`, `quarkus-reactive-routes`, and `quarkus-undertow`\n"
"dependencies are all optional.  Pick which HTTP framework(s) you want to use (Jakarta REST, Reactive Routes, and/or Servlet) and\n"
"remove the other dependencies to shrink your deployment."
msgstr "Además, al menos en el arquetipo de Maven generado `pom.xml`, las dependencias `quarkus-rest`,  `quarkus-reactive-routes`, y `quarkus-undertow` son todas opcionales. Elija qué framework(s) HTTP desea utilizar (Jakarta REST, Reactive Routes, y/o Servlet) y elimine las demás dependencias para reducir su despliegue."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Examine sam.yaml"
msgstr "Examinar sam.yaml"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"The `sam.yaml` syntax is beyond the scope of this document.  There's a couple of things that must be highlighted just in case you are\n"
"going to craft your own custom `sam.yaml` deployment files."
msgstr "La sintaxis de `sam.yaml` está fuera del alcance de este documento. Hay un par de cosas que deben resaltarse en caso de que vaya a elaborar sus propios archivos de despliegue personalizados de `sam.yaml`."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"The first thing to note is that for pure Java lambda deployments require a specific handler class.\n"
"Do not change the Lambda handler name."
msgstr "Lo primero que hay que tener en cuenta es que para los despliegues lambda puramente Java se requiere una clase manejadora específica. No cambie el nombre del manejador Lambda."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "This handler is a bridge between the lambda runtime and the Quarkus HTTP framework you are using (Jakarta REST, Servlet, etc.)"
msgstr "Este manejador es un puente entre el tiempo de ejecución de lambda y el framework HTTP de Quarkus que estés utilizando (Jakarta REST, Servlet, etc.)"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you want to go native, there's an environment variable that must be set for native GraalVM deployments.  If you look at `sam.native.yaml`\n"
"you'll see this:"
msgstr "Si desea ir nativo, hay una variable de entorno que se debe establecer para las implementaciones nativas de GraalVM. Si mira en `sam.native.yaml` verá esto:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "This environment variable resolves some incompatibilities between Quarkus and the AWS Lambda Custom Runtime environment."
msgstr "Esta variable de entorno resuelve algunas incompatibilidades entre Quarkus y el entorno de ejecución personalizado de AWS Lambda."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Finally, there is one specific thing for AWS Gateway REST API deployments.\n"
"That API assumes that HTTP response bodies are text unless you explicitly tell it which media types are\n"
"binary through configuration.  To make things easier, the Quarkus extension forces a binary (base 64) encoding of all\n"
"HTTP response messages and the `sam.yaml` file must configure the API Gateway to assume all media types are binary:"
msgstr "Por último, hay algo específico para las implementaciones de la API REST de AWS Gateway. Esa API asume que los cuerpos de respuesta HTTP son texto, a menos que se le indique explícitamente qué tipos de medios son binarios mediante la configuración. Para facilitar las cosas, la extensión Quarkus fuerza una codificación binaria (base 64) de todos los mensajes de respuesta HTTP y el archivo `sam.yaml` debe configurar la API Gateway para que asuma que todos los tipos de medios son binarios:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Injectable AWS Context Variables"
msgstr "Variables de contexto de AWS inyectables"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you are using Quarkus REST and Jakarta REST, you can inject various AWS Context variables into your Jakarta REST resource classes\n"
"using the Jakarta REST `@Context` annotation or anywhere else with the CDI `@Inject` annotation."
msgstr "Si utiliza Quarkus REST y Jakarta REST, puede inyectar diversas variables de contexto de AWS en sus clases de recursos Jakarta REST utilizando la anotación Jakarta REST `@Context` o en cualquier otro lugar con la anotación CDI `@Inject`."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"For the AWS HTTP API you can inject the AWS variables `com.amazonaws.services.lambda.runtime.Context` and\n"
"`com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent`.  Here is an example:"
msgstr "Para la API HTTP de AWS puede inyectar las variables de AWS `com.amazonaws.services.lambda.runtime.Context` y `com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent`. He aquí un ejemplo:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"For the AWS REST API you can inject the AWS variables `com.amazonaws.services.lambda.runtime.Context` and\n"
"`io.quarkus.amazon.lambda.http.model.AwsProxyRequestContext`.  Here is an example:"
msgstr "Para la API REST de AWS puede inyectar las variables de AWS `com.amazonaws.services.lambda.runtime.Context` y `io.quarkus.amazon.lambda.http.model.AwsProxyRequestContext`. He aquí un ejemplo:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Tracing with AWS XRay and GraalVM"
msgstr "Rastreo con AWS XRay y GraalVM"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you are building native images, and want to use https://aws.amazon.com/xray[AWS X-Ray Tracing] with your lambda\n"
"you will need to include `quarkus-amazon-lambda-xray` as a dependency in your pom.  The AWS X-Ray\n"
"library is not fully compatible with GraalVM, so we had to do some integration work to make this work."
msgstr "Si estás construyendo imágenes nativas, y quieres usar link:https://aws.amazon.com/xray[AWS X-Ray Tracing] con tu lambda necesitarás incluir `quarkus-amazon-lambda-xray` como una dependencia en tu pom. La biblioteca de AWS X-Ray no es totalmente compatible con GraalVM, por lo que hemos tenido que hacer un trabajo de integración para que funcione."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Security Integration"
msgstr "Integración de la seguridad"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"When you invoke an HTTP request on the API Gateway, the Gateway turns that HTTP request into a JSON event document that is\n"
"forwarded to a Quarkus Lambda.  The Quarkus Lambda parses this json and converts in into an internal representation of an HTTP\n"
"request that can be consumed by any HTTP framework Quarkus supports (Jakarta REST, servlet, Reactive Routes)."
msgstr "Cuando se invoca una solicitud HTTP en API Gateway, el gateway convierte esa solicitud HTTP en un documento de evento JSON que se reenvía a un Quarkus Lambda. La Lambda de Quarkus analiza este json y lo convierte en una representación interna de una solicitud HTTP que puede ser consumida por cualquier marco HTTP que Quarkus admita (JAX-RS, servlet, Rutas Reactivas)."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"API Gateway supports many ways to securely invoke on your HTTP endpoints that are backed by Lambda and Quarkus.\n"
"If you enable it, Quarkus will automatically parse relevant parts of the https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html[event json document]\n"
"and look for security based metadata and register a `java.security.Principal` internally that can be looked up in Jakarta REST\n"
"by injecting a `jakarta.ws.rs.core.SecurityContext`, via `HttpServletRequest.getUserPrincipal()` in servlet, and `RouteContext.user()` in Reactive Routes.\n"
"If you want more security information, the `Principal` object can be typecast to\n"
"a class that will give you more information."
msgstr "API Gateway admite muchas formas diferentes de invocar de forma segura en sus puntos finales HTTP que están respaldados por Lambda y Quarkus. Si lo habilitas, Quarkus analizará automáticamente las partes relevantes del link:https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html[documento json] del evento y buscará metadatos basados en la seguridad y registrará un `java.security.Principal` internamente que puede ser buscado en JAX-RS inyectando un `javax.ws.rs.core.SecurityContext`, a través de `HttpServletRequest.getUserPrincipal()` en servlet, y `RouteContext.user()` en Reactive Routes. Si quieres más información de seguridad, el objeto `Principal` puede ser typecast a una clase que te dará más información."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "To enable this security feature, add this to your `application.properties` file:"
msgstr "Para activar esta función de seguridad, añada esto a su archivo `application.properties`:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "quarkus.lambda-http.enable-security=true"
msgstr "quarkus.lambda-http.enable-security=true"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Here's how its mapped:"
msgstr "Aquí está cómo está mapeado:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "HTTP `quarkus-amazon-lambda-http`"
msgstr "HTTP `quarkus-amazon-lambda-http`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Auth Type"
msgstr "Tipo de autorización"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Principal Class"
msgstr "Clase principal"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Json path of Principal Name"
msgstr "Ruta Json del nombre principal"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Cognito JWT"
msgstr "Cognito JWT"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`io.quarkus.amazon.lambda.http.CognitoPrincipal`"
msgstr "`io.quarkus.amazon.lambda.http.CognitoPrincipal`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`requestContext.authorizer.jwt.claims.cognito:username`"
msgstr "`requestContext.authorizer.jwt.claims.cognito:username`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "IAM"
msgstr "IAM"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`io.quarkus.amazon.lambda.http.IAMPrincipal`"
msgstr "`io.quarkus.amazon.lambda.http.IAMPrincipal`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`requestContext.authorizer.iam.userId`"
msgstr "`requestContext.authorizer.iam.userId`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Custom Lambda"
msgstr "Lambda personalizado"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`io.quarkus.amazon.lambda.http.CustomPrincipal`"
msgstr "`io.quarkus.amazon.lambda.http.CustomPrincipal`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`requestContext.authorizer.lambda.principalId`"
msgstr "`requestContext.authorizer.lambda.principalId`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "REST `quarkus-amazon-lambda-rest`"
msgstr "REST `quarkus-amazon-lambda-rest`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Cognito"
msgstr "Cognito"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`requestContext.authorizer.claims.cognito:username`"
msgstr "`requestContext.authorizer.claims.cognito:username`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`requestContext.identity.user`"
msgstr "`requestContext.identity.user`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "`requestContext.authorizer.principalId`"
msgstr "`requestContext.authorizer.principalId`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If the `cognito:groups` claim is present, then Quarkus will extract and map those groups\n"
"to Quarkus roles which can then be used in authorization with annotations like `@RolesAllowed`.\n"
"If you do not want to map `cognito:groups` to Quarkus roles, then you must explicitly disable it\n"
"in configuration:"
msgstr "Si el reclamo `cognito:groups` está presente, entonces Quarkus extraerá y mapeará esos grupos a los roles de Quarkus que luego pueden ser usados en la autorización con anotaciones como `@RolesAllowed`. Si no desea asignar `cognito:groups` a los roles de Quarkus, entonces debe desactivarlo explícitamente en la configuración:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "quarkus.lambda-http.map-cognito-to-roles=false"
msgstr "quarkus.lambda-http.map-cognito-to-roles=false"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "You can also specify a different Cognito claim to extract roles from:"
msgstr "También puede especificar una demanda de Cognito diferente de la que extraer los roles:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "quarkus.lambda-http.cognito-role-claim=cognito:roles"
msgstr "quarkus.lambda-http.cognito-role-claim=cognito:roles"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"By default, it expects roles in a space delimited list enclosed in brackets i.e. `[ user admin ]`.\n"
"You can specify the regular expression to use to find individual roles in the claim string too:"
msgstr "Por defecto, espera los roles en una lista delimitada por espacios y encerrada entre paréntesis, es decir, `[ user admin ]`. También puede especificar la expresión regular que se utilizará para encontrar roles individuales en la cadena de reclamación:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "quarkus.lambda-http.cognito-claim-matcher=[^\\[\\] \\t]+"
msgstr "quarkus.lambda-http.cognito-claim-matcher=[^\\[\\] \\t]+"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Custom Security Integration"
msgstr "Integración de seguridad personalizada"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"The default support for AWS security only maps the principal name to Quarkus security\n"
"APIs and does nothing to map claims or roles or permissions.  You have full control on\n"
"how security metadata in the lambda HTTP event is mapped to Quarkus Security APIs using\n"
"implementations of the `io.quarkus.amazon.lambda.http.LambdaIdentityProvider`\n"
"interface.  By implementing this interface, you can do things like define role mappings for your principal\n"
"or publish additional attributes provided by IAM or Cognito or your Custom Lambda security integration."
msgstr "El soporte por defecto para la seguridad de AWS sólo asigna el nombre principal a las API de seguridad de Quarkus y no hace nada para asignar reclamaciones, funciones o permisos. Usted puede controlar completamente cómo se asignan los metadatos de seguridad en el evento HTTP lambda a las API de seguridad de Quarkus utilizando implementaciones de la interfaz `io.quarkus.amazon.lambda.http.LambdaIdentityProvider`. Al implementar esta interfaz, puede hacer cosas como definir asignaciones de roles para su director o publicar atributos adicionales proporcionados por IAM o Cognito o su integración de seguridad Lambda personalizada."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"For HTTP, the important method to override is `LambdaIdentityProvider.authenticate(APIGatewayV2HTTPEvent event)`.  From this\n"
"you will allocate a SecurityIdentity based on how you want to map security data from `APIGatewayV2HTTPEvent`"
msgstr "Para HTTP, el método importante a sobreescribir es `LambdaIdentityProvider.authenticate(APIGatewayV2HTTPEvent event)`. A partir de él asignará una SecurityIdentity en función de cómo desee asignar los datos de seguridad de `APIGatewayV2HTTPEvent`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"For REST, the important method to override is `LambdaIdentityProvider.authenticate(AwsProxyRequest event)`.  From this\n"
"you will allocate a SecurityIdentity based on how you want to map security data from `AwsProxyRequest`."
msgstr "Para REST, el método importante a sobreescribir es `LambdaIdentityProvider.authenticate(AwsProxyRequest event)`. A partir de él, asignará una SecurityIdentity en función de cómo desee asignar los datos de seguridad de `AwsProxyRequest`."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Your implemented provider must be a CDI bean.  Here's an example:"
msgstr "Su proveedor implementado debe ser un bean CDI. He aquí un ejemplo:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Here's the same example, but with the AWS Gateway REST API:"
msgstr "He aquí el mismo ejemplo, pero con la API REST de AWS Gateway:"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"Quarkus should automatically discover this implementation and use it instead of the default implementation\n"
"discussed earlier."
msgstr "Quarkus debería descubrir automáticamente esta implementación y utilizarla en lugar de la implementación por defecto comentada anteriormente."

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "Simple SAM Local Principal"
msgstr "Simple SAM Local Principal"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid ""
"If you are testing your application with `sam local` you can\n"
"hardcode a principal name to use when your application runs by setting\n"
"the `QUARKUS_AWS_LAMBDA_FORCE_USER_NAME` environment variable"
msgstr "Si está probando su aplicación con `sam local` puede codificar un nombre de entidad de seguridad para utilizarlo cuando se ejecute su aplicación estableciendo la variable de entorno `QUARKUS_AWS_LAMBDA_FORCE_USER_NAME`"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "SnapStart"
msgstr "SnapStart"

#: _versions/3.27/guides/aws-lambda-http.adoc
msgid "To optimize your application for Lambda SnapStart, check xref:aws-lambda-snapstart.adoc[the SnapStart Configuration Documentation]."
msgstr "Para optimizar su aplicación para Lambda SnapStart, consulte la link:amazon-snapstart.html[documentación de configuración de SnapStart]."
