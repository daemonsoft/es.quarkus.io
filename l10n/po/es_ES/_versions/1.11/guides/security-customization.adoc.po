# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/security-customization.adoc:6
#, no-wrap
msgid "Quarkus - Security Tips and Tricks"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-customization.adoc:10
#, fuzzy, no-wrap
msgid "HttpAuthenticationMechanism Customization"
msgstr "Personalización de HttpAuthenticationMechanism"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:14
#, fuzzy
msgid "One can customize `HttpAuthenticationMechanism` by registering a CDI implementation bean.  In the example below the custom authenticator delegates to `JWTAuthMechanism` provided by `quarkus-smallrye-jwt`:"
msgstr "Se puede personalizar `HttpAuthenticationMechanism` registrando un bean de implementación CDI. En el ejemplo siguiente, el autenticador personalizado delega en `JWTAuthMechanism` proporcionado por `quarkus-smallrye-jwt` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:21
#, no-wrap
msgid ""
"@Alternative\n"
"@Priority(1)\n"
"@ApplicationScoped\n"
"public class CustomAwareJWTAuthMechanism implements HttpAuthenticationMechanism {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:23
#, no-wrap
msgid "\tprivate static final Logger LOG = LoggerFactory.getLogger(CustomAwareJWTAuthMechanism.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:26
#, no-wrap
msgid ""
"\t@Inject\n"
"\tJWTAuthMechanism delegate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:32
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<SecurityIdentity> authenticate(RoutingContext context, IdentityProviderManager identityProviderManager) {\n"
"\t    // do some custom action and delegate\t\n"
"            return delegate.authenticate(context, identityProviderManager);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:37
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Uni<ChallengeData> getChallenge(RoutingContext context) {\n"
"\t\treturn delegate.getChallenge(context);\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:42
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Set<Class<? extends AuthenticationRequest>> getCredentialTypes() {\n"
"\t\treturn delegate.getCredentialTypes();\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:47
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic HttpCredentialTransport getCredentialTransport() {\n"
"\t\treturn delegate.getCredentialTransport();\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:49
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-customization.adoc:52
#, fuzzy, no-wrap
msgid "Security Identity Customization"
msgstr "Personalización de la identidad de seguridad"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:55
#, fuzzy
msgid "Internally, the identity providers create and update an instance of the `io.quarkus.security.identity.SecurityIdentity` class which holds the principal, roles, credentials which were used to authenticate the client (user) and other security attributes. An easy option to customize `SecurityIdentity` is to register a custom `SecurityIdentityAugmentor`. For example, the augmentor below adds an addition role:"
msgstr "Internamente, los proveedores de identidad crean y actualizan una instancia de la clase `io.quarkus.security.identity.SecurityIdentity` que contiene el principal, los roles, las credenciales que se utilizaron para autenticar al cliente (usuario) y otros atributos de seguridad. Una opción fácil para personalizar `SecurityIdentity` es registrar un `SecurityIdentityAugmentor` personalizado. Por ejemplo, el aumentador de abajo añade un rol adicional:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:63
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:66
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:69
#: upstream/_versions/1.11/guides/security-customization.adoc:111
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class RolesAugmentor implements SecurityIdentityAugmentor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:73
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        return Uni.createFrom().item(build(identity));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:77
#, no-wrap
msgid ""
"        // Do 'return context.runBlocking(build(identity));'\n"
"        // if a blocking call is required to customize the identity\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:84
#, no-wrap
msgid ""
"    private Supplier<SecurityIdentity> build(SecurityIdentity identity) {\n"
"        if(identity.isAnonymous()) {\n"
"            return () -> identity;\n"
"        } else {\n"
"            // create a new builder and copy principal, attributes, credentials and roles from the original identity\n"
"            QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:91
#, no-wrap
msgid ""
"            // add custom role source here\n"
"            builder.addRole(\"dummy\");\n"
"            return builder::build;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:94
msgid "Here is another example showing how to use the client certificate available in the current link:security-built-in-authentication#mutual-tls[Mutual TLS] request to add more roles:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:104
#, no-wrap
msgid ""
"import java.security.cert.X509Certificate;\n"
"import io.quarkus.security.credential.CertificateCredential;\n"
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:108
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import java.util.function.Supplier;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:116
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        return Uni.createFrom().item(build(identity));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:120
#, no-wrap
msgid ""
"    private Supplier<SecurityIdentity> build(SecurityIdentity identity) {\n"
"        // create a new builder and copy principal, attributes, credentials and roles from the original identity\n"
"        QuarkusSecurityIdentity.Builder builder = QuarkusSecurityIdentity.builder(identity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:127
#, no-wrap
msgid ""
"        CertificateCredential certificate = identity.getCredential(CertificateCredential.class);\n"
"        if (certificate != null) {\n"
"            builder.addRoles(extractRoles(certificate.getCertificate()));\n"
"        }\n"
"        return builder::build;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:130
#, no-wrap
msgid ""
"    private Set<String> extractRoles(X509Certificate certificate) {\n"
"        String name = certificate.getSubjectX500Principal().getName();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:141
#, no-wrap
msgid ""
"        switch (name) {\n"
"            case \"CN=client\":\n"
"                return Collections.singleton(\"user\");\n"
"            case \"CN=guest-client\":\n"
"                return Collections.singleton(\"guest\");\n"
"            default:\n"
"                return Collections.emptySet();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:144
#, fuzzy, no-wrap
msgid "===\n"
msgstr "==="

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:147
#, no-wrap
msgid ""
"If more than one custom `SecurityIdentityAugmentor` is registered then they will be considered equal candidates and invoked in random order.\n"
"You can enforce the order by implementing a default `SecurityIdentityAugmentor#priority` method. Augmentors with higher priorities will be invoked first.\n"
"===\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-customization.adoc:149
#, fuzzy, no-wrap
msgid "Custom JAX-RS SecurityContext"
msgstr "Contexto de seguridad JAX-RS personalizado"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:152
#, fuzzy
msgid "If you use JAX-RS `ContainerRequestFilter` to set a custom JAX-RS `SecurityContext` then make sure `ContainerRequestFilter` runs in the JAX-RS pre-match phase by adding a `@PreMatching` annotation to it for this custom security context to be linked with Quarkus `SecurityIdentity`, for example:"
msgstr "Si utiliza JAX-RS `ContainerRequestFilter` para establecer un JAX-RS personalizado `SecurityContext` entonces asegúrese de que `ContainerRequestFilter` se ejecuta en la fase de precomparación de JAX-RS añadiéndole una anotación `@PreMatching` para que este contexto de seguridad personalizado se vincule con Quarkus `SecurityIdentity` , por ejemplo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:156
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:162
#, no-wrap
msgid ""
"import javax.ws.rs.container.ContainerRequestContext;\n"
"import javax.ws.rs.container.ContainerRequestFilter;\n"
"import javax.ws.rs.container.PreMatching;\n"
"import javax.ws.rs.core.SecurityContext;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:181
#, no-wrap
msgid ""
"@Provider\n"
"@PreMatching\n"
"public class SecurityOverrideFilter implements ContainerRequestFilter {\n"
"    @Override\n"
"    public void filter(ContainerRequestContext requestContext) throws IOException {\n"
"        String user = requestContext.getHeaders().getFirst(\"User\");\n"
"        String role = requestContext.getHeaders().getFirst(\"Role\");\n"
"        if (user != null && role != null) {\n"
"            requestContext.setSecurityContext(new SecurityContext() {\n"
"                @Override\n"
"                public Principal getUserPrincipal() {\n"
"                    return new Principal() {\n"
"                        @Override\n"
"                        public String getName() {\n"
"                            return user;\n"
"                        }\n"
"                    };\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:186
#, no-wrap
msgid ""
"                @Override\n"
"                public boolean isUserInRole(String r) {\n"
"                    return role.equals(r);\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:191
#, no-wrap
msgid ""
"                @Override\n"
"                public boolean isSecure() {\n"
"                    return false;\n"
"                }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:198
#, no-wrap
msgid ""
"                @Override\n"
"                public String getAuthenticationScheme() {\n"
"                    return \"basic\";\n"
"                }\n"
"            });\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:201
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-customization.adoc:203
#, fuzzy, no-wrap
msgid "Disabling Authorization"
msgstr "Desactivación de la autorización"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:206
#, fuzzy
msgid "If you have a good reason to disable the authorization (for example, when testing) then you can register a custom `AuthorizationController`:"
msgstr "Si tiene una buena razón para desactivar la autorización (por ejemplo, al realizar pruebas), entonces puede registrar un `AuthorizationController` personalizado:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:215
#, no-wrap
msgid ""
"@Alternative\n"
"@Priority(Interceptor.Priority.LIBRARY_AFTER)\n"
"@ApplicationScoped\n"
"public class DisabledAuthController extends AuthorizationController {\n"
"    @ConfigProperty(name = \"disable.authorization\", defaultValue = \"false\")\n"
"    boolean disableAuthorization;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:221
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isAuthorizationEnabled() {\n"
"        return !disableAuthorization;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-customization.adoc:223
#, fuzzy, no-wrap
msgid "Registering Security Providers"
msgstr "Registro de proveedores de seguridad"

#. type: Title ===
#: upstream/_versions/1.11/guides/security-customization.adoc:225
#, fuzzy, no-wrap
msgid "Default providers"
msgstr "Proveedores por defecto"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:231
#, fuzzy
msgid "When running in native mode, the default behavior for GraalVM native executable generation is to only include the main \"SUN\" provider unless you have enabled SSL, in which case all security providers are registered. If you are not using SSL, then you can selectively register security providers by name using the `quarkus.security.security-providers` property. The following example illustrates configuration to register the \"SunRsaSign\" and \"SunJCE\" security providers:"
msgstr "Cuando se ejecuta en modo nativo, el comportamiento por defecto para la generación de ejecutables nativos de GraalVM es incluir sólo el proveedor principal \"SUN\" a menos que haya habilitado SSL, en cuyo caso se registran todos los proveedores de seguridad. Si no utiliza SSL, puede registrar selectivamente los proveedores de seguridad por nombre utilizando la propiedad `quarkus.security.security-providers` . El siguiente ejemplo ilustra la configuración para registrar los proveedores de seguridad \"SunRsaSign\" y \"SunJCE\":"

#. type: Block title
#: upstream/_versions/1.11/guides/security-customization.adoc:232
#, fuzzy, no-wrap
msgid "Example Security Providers Configuration"
msgstr "Ejemplo de configuración de proveedores de seguridad"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:236
#, no-wrap
msgid "quarkus.security.security-providers=SunRsaSign,SunJCE\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-customization.adoc:238
#, fuzzy, no-wrap
msgid "BouncyCastle"
msgstr "BouncyCastle"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:241
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jce.provider.BouncyCastleProvider` JCE provider then please set a `BC` provider name:"
msgstr "Si necesita registrar un proveedor de JCE en `org.bouncycastle.jce.provider.BouncyCastleProvider`, establezca un nombre de proveedor en `BC`:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-customization.adoc:242
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle Configuration"
msgstr "Ejemplo de configuración de proveedores de seguridad BouncyCastle"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:246
#, no-wrap
msgid "quarkus.security.security-providers=BC\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:249
#, fuzzy
msgid "and add the BouncyCastle provider dependency:"
msgstr "y añadir la dependencia del proveedor BouncyCastle:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:256
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>org.bouncycastle</groupId>\n"
"  <artifactId>bcprov-jdk15on</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-customization.adoc:258
#, fuzzy, no-wrap
msgid "BouncyCastle JSSE"
msgstr "BouncyCastle JSSE"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:261
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it instead of the default SunJSSE provider then please set a `BCJSSE` provider name:"
msgstr "Si necesita registrar un proveedor JSSE de `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` y utilizarlo en lugar del proveedor SunJSSE predeterminado, establezca un nombre de proveedor de `BCJSSE`:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-customization.adoc:262
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle JSSE Configuration"
msgstr "Ejemplo de proveedores de seguridad Configuración de BouncyCastle JSSE"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:266
#, no-wrap
msgid "quarkus.security.security-providers=BCJSSE\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:268
#: upstream/_versions/1.11/guides/security-customization.adoc:315
#, no-wrap
msgid "quarkus.http.ssl.client-auth=REQUIRED\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:273
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks\n"
"quarkus.http.ssl.certificate.key-store-password=password\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks\n"
"quarkus.http.ssl.certificate.trust-store-password=password\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:276
#, fuzzy
msgid "and add the BouncyCastle TLS dependency:"
msgstr "y añadir la dependencia de BouncyCastle TLS:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:283
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>org.bouncycastle</groupId>\n"
"  <artifactId>bctls-jdk15on</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-customization.adoc:285
#, fuzzy, no-wrap
msgid "BouncyCastle FIPS"
msgstr "BouncyCastle FIPS"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:288
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` JCE provider then please set a `BCFIPS` provider name:"
msgstr "Si necesita registrar un proveedor de JCE en `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider`, establezca un nombre de proveedor en `BCFIPS`:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-customization.adoc:289
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle FIPS Configuration"
msgstr "Ejemplo de proveedores de seguridad Configuración FIPS de BouncyCastle"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:293
#, no-wrap
msgid "quarkus.security.security-providers=BCFIPS\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:296
#, fuzzy
msgid "and add the BouncyCastle FIPS provider dependency:"
msgstr "y añadir la dependencia del proveedor BouncyCastle FIPS:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:303
#: upstream/_versions/1.11/guides/security-customization.adoc:339
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>org.bouncycastle</groupId>\n"
"  <artifactId>bc-fips</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-customization.adoc:305
#, fuzzy, no-wrap
msgid "BouncyCastle JSSE FIPS"
msgstr "BouncyCastle JSSE FIPS"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:308
#, fuzzy
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it in combination with `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` instead of the default SunJSSE provider then please set a `BCFIPSJSSE` provider name:"
msgstr "Si necesita registrar un proveedor JSSE de `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` y utilizarlo en combinación con `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` en lugar del proveedor SunJSSE predeterminado, establezca un nombre de proveedor `BCFIPSJSSE`:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-customization.adoc:309
#, fuzzy, no-wrap
msgid "Example Security Providers BouncyCastle FIPS JSSE Configuration"
msgstr "Ejemplo de configuración de proveedores de seguridad BouncyCastle FIPS JSSE"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:313
#, no-wrap
msgid "quarkus.security.security-providers=BCFIPSJSSE\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:324
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks\n"
"quarkus.http.ssl.certificate.key-store-password=password\n"
"quarkus.http.ssl.certificate.key-store-file-type=BCFKS\n"
"quarkus.http.ssl.certificate.key-store-provider=BCFIPS\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks\n"
"quarkus.http.ssl.certificate.trust-store-password=password\n"
"quarkus.http.ssl.certificate.trust-store-file-type=BCFKS\n"
"quarkus.http.ssl.certificate.trust-store-provider=BCFIPS\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:327
#, fuzzy
msgid "and the BouncyCastle TLS dependency optimized for using the BouncyCastle FIPS provider:"
msgstr "y la dependencia de BouncyCastle TLS optimizada para utilizar el proveedor BouncyCastle FIPS:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:334
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>org.bouncycastle</groupId>\n"
"  <artifactId>bctls-fips</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:343
#, fuzzy
msgid "Note that the keystore and truststore type and provider are set to `BCFKS` and `BCFIPS`.  One can generate a keystore with this type and provider like this:"
msgstr "Tenga en cuenta que el tipo y el proveedor del almacén de claves y del almacén de confianza están configurados como `BCFKS` y `BCFIPS` . Se puede generar un almacén de claves con este tipo y proveedor de la siguiente manera:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:347
#, no-wrap
msgid "keytool -genkey -alias server -keyalg RSA -keystore server-keystore.jks -keysize 2048 -keypass password -provider org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider -providerpath $PATH_TO_BC_FIPS_JAR -storetype BCFKS\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-customization.adoc:349
#, fuzzy, no-wrap
msgid "Reactive Security"
msgstr "Seguridad reactiva"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:352
#, fuzzy
msgid "If you are going to use security in a reactive environment, you will likely need SmallRye Context Propagation:"
msgstr "Si va a utilizar la seguridad en un entorno reactivo, es probable que necesite SmallRye Context Propagation:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-customization.adoc:359
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-smallrye-context-propagation</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:365
msgid "This will allow you to propagate the identity throughout the reactive callbacks. You also need to make sure you are using an executor that is capable of propagating the identity (e.g. no `CompletableFuture.supplyAsync`), to make sure that Quarkus can propagate it. For more information see the link:context-propagation[Context Propagation Guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-customization.adoc:366
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-customization.adoc:368
msgid "link:security[Quarkus Security]"
msgstr ""
