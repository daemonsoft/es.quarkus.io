# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:6
#, no-wrap
msgid "Quarkus - Command Mode Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:11
#, fuzzy
msgid "This reference covers how to write applications that run and then exit."
msgstr "Esta referencia cubre cómo escribir aplicaciones que se ejecutan y luego salen."

#. type: Title ==
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:12
#, fuzzy, no-wrap
msgid "Writing Command Mode Applications"
msgstr "Escritura de aplicaciones en modo comando"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:16
#, fuzzy
msgid "There are two different approaches that can be used to implement applications that exit."
msgstr "Existen dos enfoques diferentes que pueden utilizarse para implementar aplicaciones que salen."

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:18
#, fuzzy
msgid "Implement `QuarkusApplication` and have Quarkus run this method automatically"
msgstr "Implementar `QuarkusApplication` y hacer que Quarkus ejecute este método automáticamente"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:19
#, fuzzy
msgid "Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus"
msgstr "Implementar `QuarkusApplication` y un método principal Java, y utilizar el método principal Java para lanzar Quarkus"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:22
#, fuzzy
msgid "In this document the `QuarkusApplication` instance is referred to as the application main, and a class with a Java main method is the Java main."
msgstr "En este documento se hace referencia a la instancia `QuarkusApplication` como el main de la aplicación, y a una clase con un método main de Java como el main de Java."

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:24
#, fuzzy
msgid "The simplest possible command mode application with access to Quarkus API's might appear as follows:"
msgstr "La aplicación en modo comando más sencilla posible con acceso a las API de Quarkus podría ser la siguiente:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:29
#, no-wrap
msgid ""
"import io.quarkus.runtime.QuarkusApplication;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:38
#, no-wrap
msgid ""
"@QuarkusMain    // <.>\n"
"public class HelloWorldMain implements QuarkusApplication {\n"
"  @Override\n"
"  public int run(String... args) throws Exception {   // <.>\n"
"    System.out.println(\"Hello World\");\n"
"    return 10;\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:41
msgid "<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.  <.> The `run` method is invoked once Quarkus starts, and the application stops when it finishes."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:42
#, fuzzy, no-wrap
msgid "Contexts"
msgstr "Contextos"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:46
msgid "To get access to your application beans and services, be aware that a `@QuarkusMain` instance is an application scoped bean by default. It has access to singletons, application and dependent scoped beans. If you want to interact with beans that requires a request scope put a `@ActivateRequestContext` on your `run()` method."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:48
msgid "This let `run()` have access to methods like `listAll()` and `query*` methods on a Panache Entity. Without it you will eventually get a `ContextNotActiveException` when accessing such classes/beans."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:49
#, fuzzy, no-wrap
msgid "Main method"
msgstr "Método principal"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:51
#, fuzzy
msgid "If we want to use a Java main to run the application main it would look like:"
msgstr "Si queremos utilizar un main de Java para ejecutar el main de la aplicación se vería así:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:56
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:59
#, no-wrap
msgid ""
"@QuarkusMain\n"
"public class JavaMain {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:64
#, no-wrap
msgid ""
"    public static void main(String... args) {\n"
"        Quarkus.run(HelloWorldMain.class, args);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:68
#, fuzzy
msgid "This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can be run from the IDE."
msgstr "Esto es efectivamente lo mismo que ejecutar directamente la aplicación main de `HelloWorldMain` , pero tiene la ventaja de que puede ejecutarse desde el IDE."

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:70
#, fuzzy
msgid "If a class that implements `QuarkusApplication` and has a Java main then the Java main will be run."
msgstr "Si una clase que implementa `QuarkusApplication` y tiene un main de Java, se ejecutará el main de Java."

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:75
#, fuzzy
msgid "It is recommended that a Java main perform very little logic, and just launch the application main. In development mode the Java main will run in a different ClassLoader to the main application, so may not behave as you would expect."
msgstr "Se recomienda que un Java main realice muy poca lógica y se limite a lanzar la aplicación principal. En el modo de desarrollo, el Java main se ejecutará en un ClassLoader diferente al de la aplicación principal, por lo que puede no comportarse como cabría esperar."

#. type: Title ====
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:76
#, fuzzy, no-wrap
msgid "Multiple Main Methods"
msgstr "Múltiples métodos principales"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:82
#, fuzzy
msgid "It is possible to have multiple main methods in an application, and select between them at build time.  The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the main to run using the `quarkus.package.main-class` build time configuration option. If you don't want to use annotations this can also be used to specify the fully qualified name of a main class."
msgstr "Es posible tener varios métodos main en una aplicación, y seleccionar entre ellos en tiempo de compilación. La anotación `@QuarkusMain` toma un parámetro opcional 'name', y éste puede utilizarse para seleccionar el main a ejecutar utilizando la opción de configuración en tiempo de compilación `quarkus.package.main-class` . Si no desea utilizar anotaciones, también puede emplearse para especificar el nombre completo de una clase principal."

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:86
#, fuzzy
msgid "By default the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class that just runs the application."
msgstr "Por defecto se utilizará `@QuarkusMain` sin nombre (es decir, la cadena vacía), y si no está presente y no se especifica `quarkus.package.main-class` , Quarkus generará automáticamente una clase principal que se limitará a ejecutar la aplicación."

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:90
#, fuzzy
msgid "The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not unique."
msgstr "El `name` de `@QuarkusMain` debe ser único (incluido el valor por defecto de la cadena vacía). Si tiene varias anotaciones `@QuarkusMain` en su aplicación, la compilación fallará si los nombres no son únicos."

#. type: Title ===
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:91
#, fuzzy, no-wrap
msgid "The command mode lifecycle"
msgstr "El ciclo de vida del modo comando"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:94
#, fuzzy
msgid "When running a command mode application the basic lifecycle is as follows:"
msgstr "Cuando se ejecuta una aplicación en modo comando, el ciclo de vida básico es el siguiente:"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:96
#, fuzzy
msgid "Start Quarkus"
msgstr "Iniciar Quarkus"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:97
#, fuzzy
msgid "Run the `QuarkusApplication` main method"
msgstr "Ejecute el método principal `QuarkusApplication`"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:98
#, fuzzy
msgid "Shut down Quarkus and exit the JVM after the main method returns"
msgstr "Apagar Quarkus y salir de la JVM después de que el método principal regrese"

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:102
#, fuzzy
msgid "Shutdown is always initiated by the application main thread returning. If you want to run some logic on startup, and then run like a normal application (i.e. not exit) then you should call `Quarkus.waitForExit` from the main thread (A non-command mode application is essentially just running an application that just calls `waitForExit`)."
msgstr "El cierre siempre se inicia con el retorno del hilo principal de la aplicación. Si desea ejecutar alguna lógica en el arranque, y luego ejecutar como una aplicación normal (es decir, no salir) entonces debe llamar a `Quarkus.waitForExit` desde el hilo principal (Una aplicación en modo no comando es esencialmente sólo ejecutar una aplicación que sólo llama a `waitForExit` )."

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:105
#, fuzzy
msgid "If you want to shut down a running application and you are not in the main thread then you should call `Quarkus.asyncExit` in order to unblock the main thread and initiate the shutdown process."
msgstr "Si desea cerrar una aplicación en ejecución y no se encuentra en el hilo principal, deberá llamar a `Quarkus.asyncExit` para desbloquear el hilo principal e iniciar el proceso de cierre."

#. type: Title ===
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:106
#, no-wrap
msgid "Dev mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:109
msgid "Also for command mode applications the dev mode is supported. When running `mvn compile quarkus:dev`, the command mode application is executed and on press of the Enter key, is restarted."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:111
msgid "As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:114
#, no-wrap
msgid "mvn compile quarkus:dev -Dquarkus.args='--help'\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:117
msgid "The same can be achieved with Gradle:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/command-mode-reference.adoc:120
#, no-wrap
msgid "./gradlew quarkusDev --quarkus-args='--help'\n"
msgstr ""
