# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/security-jwt.adoc:6
#, no-wrap
msgid "Quarkus - Using JWT RBAC"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:13
msgid "This guide explains how your Quarkus application can utilize MicroProfile JWT (MP JWT) to verify https://tools.ietf.org/html/rfc7519[JSON Web Token]s, represent them as MP JWT `org.eclipse.microprofile.jwt.JsonWebToken` and provide secured access to the Quarkus HTTP endpoints using Bearer Token Authorization and https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:16
msgid "Quarkus OpenId Connect extension also supports Bearer Token Authorization and uses `smallrye-jwt` to represent the bearer tokens as `JsonWebToken`, please read the link:security-openid-connect[Using OpenID Connect to Protect Service Applications] guide for more information.  OpenId Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow, please read link:security-openid-connect-web-authentication[Using OpenID Connect to Protect Web Applications] guide for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:17
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:21
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can skip right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede pasar directamente al ejemplo completado."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:23
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:25
#, fuzzy
msgid "The solution is located in the `security-jwt-quickstart` {quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr "La solución se encuentra en `security-jwt-quickstart` {quickstarts-tree-url}/security-jwt-quickstart[directory]."

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:26
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:29
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:39
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=security-jwt-quickstart \\\n"
"    -DclassName=\"org.acme.security.jwt.TokenSecuredResource\" \\\n"
"    -Dpath=\"/secured\" \\\n"
"    -Dextensions=\"resteasy,resteasy-jackson,smallrye-jwt,smallrye-jwt-build\"\n"
"cd security-jwt-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:42
msgid "This command generates the Maven project with a REST endpoint and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:45
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tiene configurado su proyecto Quarkus, puede añadir la extensión `smallrye-jwt` a su proyecto ejecutando el siguiente comando en el directorio base de su proyecto:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:49
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"smallrye-jwt, smallrye-jwt-build\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:52
#, fuzzy
msgid "This will add the following to your `pom.xml`:"
msgstr "Esto añadirá lo siguiente a su `pom.xml`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:63
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-jwt</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-jwt-build</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:65
#, fuzzy, no-wrap
msgid "Examine the JAX-RS resource"
msgstr "Examinar el recurso JAX-RS"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:68
msgid "Open the `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` file and see the following content:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:69
#, no-wrap
msgid "Basic REST Endpoint"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:73
#: upstream/_versions/1.11/guides/security-jwt.adoc:97
#: upstream/_versions/1.11/guides/security-jwt.adoc:211
#: upstream/_versions/1.11/guides/security-jwt.adoc:350
#: upstream/_versions/1.11/guides/security-jwt.adoc:495
#, no-wrap
msgid "package org.acme.security.jwt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:78
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:81
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"public class TokenSecuredResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:88
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:91
#, fuzzy
msgid "This is a basic REST endpoint that does not have any of the {extension-name} specific features, so let's add some."
msgstr "Este es un punto final REST básico que no tiene ninguna de las características específicas de {nombre-de-la-extensión}, así que vamos a añadir algunas."

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:93
#, fuzzy, no-wrap
msgid "REST Endpoint V1"
msgstr "Punto final REST V1"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:99
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:110
#, no-wrap
msgid ""
"import javax.annotation.security.PermitAll;\n"
"import javax.enterprise.context.RequestScoped;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.InternalServerErrorException;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:112
#: upstream/_versions/1.11/guides/security-jwt.adoc:225
#, no-wrap
msgid "import org.eclipse.microprofile.jwt.JsonWebToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:116
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"@RequestScoped // <1>\n"
"public class TokenSecuredResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:119
#, no-wrap
msgid ""
"    @Inject\n"
"    JsonWebToken jwt; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:127
#, no-wrap
msgid ""
"    @GET()\n"
"    @Path(\"permit-all\")\n"
"    @PermitAll // <3>\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@Context SecurityContext ctx) {\n"
"        return getResponseString(ctx); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:143
#, no-wrap
msgid ""
"    private String getResponseString(SecurityContext ctx) {\n"
"        String name;\n"
"        if (ctx.getUserPrincipal() == null) { // <5>\n"
"            name = \"anonymous\";\n"
"        } else if (!ctx.getUserPrincipal().getName().equals(jwt.getName())) { // <6>\n"
"            throw new InternalServerErrorException(\"Principal and JsonWebToken names do not match\");\n"
"        } else {\n"
"            name = ctx.getUserPrincipal().getName(); // <7>\n"
"        }\n"
"        return String.format(\"hello + %s,\"\n"
"            + \" isHttps: %s,\"\n"
"            + \" authScheme: %s,\"\n"
"            + \" hasJWT: %s\",\n"
"            name, ctx.isSecure(), ctx.getAuthenticationScheme(), hasJwt()); // <8>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:148
#, no-wrap
msgid ""
"    private boolean hasJwt() {\n"
"\treturn jwt.getClaimNames() != null;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:151
msgid "Add a `RequestScoped` as Quarkus uses a default scoping of `ApplicationScoped` and this will produce undesirable behavior since JWT claims are naturally request scoped."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:152
#, fuzzy
msgid "Here we inject the JsonWebToken interface, an extension of the java.security.Principal interface that provides access to the claims associated with the current authenticated token."
msgstr "Aquí inyectamos la interfaz JsonWebToken, una extensión de la interfaz java.security.Principal que proporciona acceso a las reclamaciones asociadas al token autenticado actual."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:153
#, fuzzy
msgid "@PermitAll is a JSR 250 common security annotation that indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr "@PermitAll es una anotación de seguridad común de JSR 250 que indica que el punto final dado es accesible por cualquier persona que llame, autenticada o no."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:154
#, fuzzy
msgid "Here we inject the JAX-RS SecurityContext to inspect the security state of the call and use a `getResponseString()` function to populate a response string."
msgstr "Aquí inyectamos el JAX-RS SecurityContext para inspeccionar el estado de seguridad de la llamada y utilizamos una función `getResponseString()` para rellenar una cadena de respuesta."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:155
msgid "Here we check if the call is insecured by checking the request user/caller `Principal` against null."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:156
#, fuzzy
msgid "Here we check that the Principal and JsonWebToken have the same name since JsonWebToken does represent the current Principal."
msgstr "Aquí comprobamos que el Principal y el JsonWebToken tienen el mismo nombre, ya que el JsonWebToken representa el Principal actual."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:157
#, fuzzy
msgid "Here we get the Principal name."
msgstr "Aquí tenemos el nombre del director."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:158
#, fuzzy
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr "La respuesta que construimos hace uso del nombre de la persona que llama, los estados `isSecure()` y `getAuthenticationScheme()` de la solicitud `SecurityContext`, y si se inyectó un `JsonWebToken` no nulo."

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:159
#, fuzzy, no-wrap
msgid "Run the application"
msgstr "Ejecutar la aplicación"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:162
#, fuzzy
msgid "Now we are ready to run our application. Use:"
msgstr "Ahora estamos listos para ejecutar nuestra aplicación. Usar:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:166
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:169
#, fuzzy
msgid "and you should see output similar to:"
msgstr "y debería ver una salida similar a:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:170
#, fuzzy, no-wrap
msgid "quarkus:dev Output"
msgstr "quarkus:dev Salida"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:184
#, no-wrap
msgid ""
"$ ./mvnw compile quarkus:dev\n"
"[INFO] Scanning for projects...\n"
"[INFO]\n"
"[INFO] ----------------------< org.acme:security-jwt-quickstart >-----------------------\n"
"[INFO] Building security-jwt-quickstart 1.0.0-SNAPSHOT\n"
"[INFO] --------------------------------[ jar ]---------------------------------\n"
"...\n"
"Listening for transport dt_socket at address: 5005\n"
"2020-07-15 16:09:50,883 INFO  [io.quarkus] (Quarkus Main Thread) security-jwt-quickstart 1.0.0-SNAPSHOT on JVM (powered by Quarkus 999-SNAPSHOT) started in 1.073s. Listening on: http://0.0.0.0:8080\n"
"2020-07-15 16:09:50,885 INFO  [io.quarkus] (Quarkus Main Thread) Profile dev activated. Live Coding activated.\n"
"2020-07-15 16:09:50,885 INFO  [io.quarkus] (Quarkus Main Thread) Installed features: [cdi, mutiny, resteasy, resteasy-jackson, security, smallrye-context-propagation, smallrye-jwt, vertx, vertx-web]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:187
#, fuzzy
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "Ahora que el punto final REST se está ejecutando, podemos acceder a él utilizando una herramienta de línea de comandos como curl:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:188
#, fuzzy, no-wrap
msgid "curl command for /secured/permit-all"
msgstr "comando curl para /secured/permit-all"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:193
#, no-wrap
msgid ""
"$ curl http://127.0.0.1:8080/secured/permit-all; echo\n"
"hello + anonymous, isHttps: false, authScheme: null, hasJWT: false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:197
#, fuzzy
msgid "We have not provided any JWT in our request, so we would not expect that there is any security state seen by the endpoint, and the response is consistent with that:"
msgstr "No hemos proporcionado ningún JWT en nuestra solicitud, por lo que no cabe esperar que haya ningún estado de seguridad visto por el punto final, y la respuesta es coherente con ello:"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:199
#, fuzzy
msgid "user name is anonymous"
msgstr "el nombre de usuario es anónimo"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:200
#, fuzzy
msgid "isHttps is false as https is not used"
msgstr "isHttps es falso ya que no se utiliza https"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:201
#, fuzzy
msgid "authScheme is null"
msgstr "authScheme es null"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:202
#, fuzzy
msgid "hasJWT is false"
msgstr "hasJWT es falso"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:204
#, fuzzy
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr "Utilice Ctrl-C para detener el servidor Quarkus."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:206
#, fuzzy
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "Así que ahora vamos a asegurar algo. Echa un vistazo al nuevo método de punto final `helloRolesAllowed` en lo siguiente:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:207
#, fuzzy, no-wrap
msgid "REST Endpoint V2"
msgstr "Punto final REST V2"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:223
#: upstream/_versions/1.11/guides/security-jwt.adoc:507
#, no-wrap
msgid ""
"import javax.annotation.security.PermitAll;\n"
"import javax.annotation.security.RolesAllowed;\n"
"import javax.enterprise.context.RequestScoped;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.InternalServerErrorException;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:229
#: upstream/_versions/1.11/guides/security-jwt.adoc:515
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"@RequestScoped\n"
"public class TokenSecuredResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:232
#, no-wrap
msgid ""
"    @Inject\n"
"    JsonWebToken jwt; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:240
#: upstream/_versions/1.11/guides/security-jwt.adoc:529
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"permit-all\")\n"
"    @PermitAll\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@Context SecurityContext ctx) {\n"
"        return getResponseString(ctx);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:248
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"roles-allowed\") // <2>\n"
"    @RolesAllowed({ \"User\", \"Admin\" }) // <3>\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String helloRolesAllowed(@Context SecurityContext ctx) {\n"
"        return getResponseString(ctx) + \", birthdate: \" + jwt.getClaim(\"birthdate\").toString(); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:264
#: upstream/_versions/1.11/guides/security-jwt.adoc:561
#, no-wrap
msgid ""
"    private String getResponseString(SecurityContext ctx) {\n"
"        String name;\n"
"        if (ctx.getUserPrincipal() == null) {\n"
"            name = \"anonymous\";\n"
"        } else if (!ctx.getUserPrincipal().getName().equals(jwt.getName())) {\n"
"            throw new InternalServerErrorException(\"Principal and JsonWebToken names do not match\");\n"
"        } else {\n"
"            name = ctx.getUserPrincipal().getName();\n"
"        }\n"
"        return String.format(\"hello + %s,\"\n"
"            + \" isHttps: %s,\"\n"
"            + \" authScheme: %s,\"\n"
"            + \" hasJWT: %s\",\n"
"            name, ctx.isSecure(), ctx.getAuthenticationScheme(), hasJwt());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:269
#: upstream/_versions/1.11/guides/security-jwt.adoc:566
#, no-wrap
msgid ""
"    private boolean hasJwt() {\n"
"        return jwt.getClaimNames() != null;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:271
#, fuzzy
msgid "Here we inject `JsonWebToken`"
msgstr "Aquí inyectamos `JsonWebToken`"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:272
#, fuzzy
msgid "This new endpoint will be located at /secured/roles-allowed"
msgstr "Este nuevo punto final se ubicará en /secured/roles-allowed"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:274
#, fuzzy
msgid "@RolesAllowed is a JSR 250 common security annotation that indicates that the given endpoint is accessible by a caller if they have either a \"User\" or \"Admin\" role assigned."
msgstr "@RolesAllowed es una anotación de seguridad común JSR 250 que indica que el punto final dado es accesible por una persona que llama si tiene asignado el rol \"Usuario\" o \"Admin\"."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:275
#, fuzzy
msgid "Here we build the reply the same way as in the `hello` method but also add a value of the JWT `birthdate` claim by directly calling the injected `JsonWebToken`."
msgstr "Aquí construimos la respuesta de la misma manera que en el método `hello` pero también añadimos un valor de la demanda JWT `birthdate` llamando directamente al inyectado `JsonWebToken`."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:277
#, fuzzy
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw compile quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint. Your output should be:"
msgstr "Después de hacer esta adición a su `TokenSecuredResource` , vuelva a ejecutar el comando `./mvnw compile quarkus:dev` , y luego intente `curl -v http://127.0.0.1:8080/secured/roles-allowed ; echo` intentar acceder al nuevo punto final. Su salida debería ser:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:278
#, fuzzy, no-wrap
msgid "curl command for /secured/roles-allowed"
msgstr "comando curl para /secured/roles-allowed"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:298
#, no-wrap
msgid ""
"$ curl -v http://127.0.0.1:8080/secured/roles-allowed; echo\n"
"*   Trying 127.0.0.1...\n"
"* TCP_NODELAY set\n"
"* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n"
"> GET /secured/roles-allowed HTTP/1.1\n"
"> Host: 127.0.0.1:8080\n"
"> User-Agent: curl/7.54.0\n"
"> Accept: */*\n"
">\n"
"< HTTP/1.1 401 Unauthorized\n"
"< Connection: keep-alive\n"
"< Content-Type: text/html;charset=UTF-8\n"
"< Content-Length: 14\n"
"< Date: Sun, 03 Mar 2019 16:32:34 GMT\n"
"<\n"
"* Connection #0 to host 127.0.0.1 left intact\n"
"Not authorized\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:301
#, fuzzy
msgid "Excellent, we have not provided any JWT in the request, so we should not be able to access the endpoint, and we were not. Instead we received an HTTP 401 Unauthorized error. We need to obtain and pass in a valid JWT to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate a JWT, and 2) generating a matching JWT with the appropriate claims."
msgstr "Excelente, no hemos proporcionado ningún JWT en la solicitud, por lo que no deberíamos poder acceder al endpoint, y no fue así. En su lugar recibimos un error HTTP 401 No Autorizado. Necesitamos obtener y pasar un JWT válido para acceder a ese endpoint. Hay dos pasos para esto, 1) configurar nuestra extensión {extension-name} con información sobre cómo validar un JWT, y 2) generar un JWT coincidente con las reclamaciones apropiadas."

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:302
#, fuzzy, no-wrap
msgid "Configuring the {extension-name} Extension Security Information"
msgstr "Configuración de la información de seguridad de la extensión {extension-name}"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:305
#, fuzzy
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr "Cree un `security-jwt-quickstart/src/main/resources/application.properties` con el siguiente contenido:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:306
#, fuzzy, no-wrap
msgid "application.properties for TokenSecuredResource"
msgstr "application.properties para TokenSecuredResource"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:311
#, no-wrap
msgid ""
"mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem #<1>\n"
"mp.jwt.verify.issuer=https://example.com/issuer #<2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:313
msgid "We are setting public key location to point to a classpath publicKey.pem resource location. We will add this key in part B, <<Adding a Public Key>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:314
#, fuzzy
msgid "We are setting the issuer to the URL string `https://example.com/issuer`."
msgstr "Estamos estableciendo el emisor a la cadena URL `&lt;a href=\"https://example.com/issuer\" class=\"bare\"&gt;https://example.com/issuer&lt;/a&gt;`."

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:315
#, fuzzy, no-wrap
msgid "Adding a Public Key"
msgstr "Añadir una clave pública"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:323
msgid "The https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.  The {mp-jwt} specification requires that JWTs that are signed with the RSA-256 signature algorithm. This in turn requires a RSA public key pair. On the REST endpoint server side, you need to configure the location of the RSA public key to use to verify the JWT sent along with requests. The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured previously expects that the public key is available on the classpath as `publicKey.pem`. To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/META-INF/resources/publicKey.pem` file."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:325
msgid "Adding `publicKey.pem` to `resources/META-INF/resources` ensures that it is available in the native image without having to provide a GraalVM resource file."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:326
#, fuzzy, no-wrap
msgid "RSA Public Key PEM Content"
msgstr "Clave pública RSA Contenido PEM"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:338
#, no-wrap
msgid ""
"-----BEGIN PUBLIC KEY-----\n"
"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlivFI8qB4D0y2jy0CfEq\n"
"Fyy46R0o7S8TKpsx5xbHKoU1VWg6QkQm+ntyIv1p4kE1sPEQO73+HY8+Bzs75XwR\n"
"TYL1BmR1w8J5hmjVWjc6R2BTBGAYRPFRhor3kpM6ni2SPmNNhurEAHw7TaqszP5e\n"
"UF/F9+KEBWkwVta+PZ37bwqSE4sCb1soZFrVz/UT/LF4tYpuVYt3YbqToZ3pZOZ9\n"
"AX2o1GCG3xwOjkc4x0W7ezbQZdC9iftPxVHR8irOijJRRjcPDtA6vPKpzLl6CyYn\n"
"sIYPd99ltwxTHjr3npfv/3Lw50bAkbT4HeLFxTx4flEoZLKO/g0bAoV2uqBhkA9x\n"
"nQIDAQAB\n"
"-----END PUBLIC KEY-----\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:340
#, fuzzy, no-wrap
msgid "Generating a JWT"
msgstr "Generación de un JWT"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:343
msgid "Often one obtains a JWT from an identity manager like https://www.keycloak.org/[Keycloak], but for this quickstart we will generate our own using the JWT generation API provided by `smallrye-jwt` (see <<generate-jwt-tokens, Generate JWT tokens with SmallRye JWT>> for more information)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:345
#, fuzzy
msgid "Take the code from the following listing and place into `security-jwt-quickstart/src/main/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr "Tome el código del siguiente listado y colóquelo en `security-jwt-quickstart/src/main/java/org/acme/security/jwt/GenerateToken.java` :"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:346
#, fuzzy, no-wrap
msgid "GenerateToken main Driver Class"
msgstr "Clase de controlador principal GenerateToken"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:353
#, no-wrap
msgid ""
"import java.util.Arrays;\n"
"import java.util.HashSet;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:355
#, no-wrap
msgid "import org.eclipse.microprofile.jwt.Claims;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:357
#, no-wrap
msgid "import io.smallrye.jwt.build.Jwt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:372
#, no-wrap
msgid ""
"public class GenerateToken {\n"
"    /**\n"
"     * Generate JWT token\n"
"     */\n"
"    public static void main(String[] args) {\n"
"        String token =\n"
"           Jwt.issuer(\"https://example.com/issuer\") // <1>\n"
"             .upn(\"jdoe@quarkus.io\") // <2>\n"
"             .groups(new HashSet<>(Arrays.asList(\"User\", \"Admin\"))) // <3>\n"
"             .claim(Claims.birthdate.name(), \"2001-07-13\") // <4>\n"
"           .sign();\n"
"        System.out.println(token);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:376
#, fuzzy
msgid "The `iss` claim is the issuer of the JWT. This needs to match the server side `mp.jwt.verify.issuer`.  in order for the token to be accepted as valid."
msgstr "El reclamo `iss` es el emisor del JWT. Esto tiene que coincidir con el lado del servidor `mp.jwt.verify.issuer` . para que el token sea aceptado como válido."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:378
#, fuzzy
msgid "The `upn` claim is defined by the {mp-jwt} spec as preferred claim to use for the `Principal` seen via the container security APIs."
msgstr "La reivindicación `upn` está definida por la especificación {mp-jwt} como la reivindicación preferida a utilizar para la `Principal` vista a través de las API de seguridad del contenedor."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:379
#, fuzzy
msgid "The `group` claim provides the groups and top-level roles associated with the JWT bearer."
msgstr "La reivindicación `group` proporciona los grupos y roles de alto nivel asociados al portador JWT."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:380
msgid "The `birthday` claim. It can be considered to be a sensitive claim so you may want to consider encrypting the claims, see <<generate-jwt-tokens, Generate JWT tokens with SmallRye JWT>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:382
#, fuzzy
msgid "Note for this code to work we need the content of the RSA private key that corresponds to the public key we have in the TokenSecuredResource application. Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr "Nota para que este código funcione necesitamos el contenido de la clave privada RSA que corresponde a la clave pública que tenemos en la aplicación TokenSecuredResource. Toma el siguiente contenido PEM y colócalo en `security-jwt-quickstart/src/test/resources/privateKey.pem`:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:383
#, fuzzy, no-wrap
msgid "RSA Private Key PEM Content"
msgstr "Clave privada RSA Contenido PEM"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:414
#, no-wrap
msgid ""
"-----BEGIN PRIVATE KEY-----\n"
"MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCWK8UjyoHgPTLa\n"
"PLQJ8SoXLLjpHSjtLxMqmzHnFscqhTVVaDpCRCb6e3Ii/WniQTWw8RA7vf4djz4H\n"
"OzvlfBFNgvUGZHXDwnmGaNVaNzpHYFMEYBhE8VGGiveSkzqeLZI+Y02G6sQAfDtN\n"
"qqzM/l5QX8X34oQFaTBW1r49nftvCpITiwJvWyhkWtXP9RP8sXi1im5Vi3dhupOh\n"
"nelk5n0BfajUYIbfHA6ORzjHRbt7NtBl0L2J+0/FUdHyKs6KMlFGNw8O0Dq88qnM\n"
"uXoLJiewhg9332W3DFMeOveel+//cvDnRsCRtPgd4sXFPHh+UShkso7+DRsChXa6\n"
"oGGQD3GdAgMBAAECggEAAjfTSZwMHwvIXIDZB+yP+pemg4ryt84iMlbofclQV8hv\n"
"6TsI4UGwcbKxFOM5VSYxbNOisb80qasb929gixsyBjsQ8284bhPJR7r0q8h1C+jY\n"
"URA6S4pk8d/LmFakXwG9Tz6YPo3pJziuh48lzkFTk0xW2Dp4SLwtAptZY/+ZXyJ6\n"
"96QXDrZKSSM99Jh9s7a0ST66WoxSS0UC51ak+Keb0KJ1jz4bIJ2C3r4rYlSu4hHB\n"
"Y73GfkWORtQuyUDa9yDOem0/z0nr6pp+pBSXPLHADsqvZiIhxD/O0Xk5I6/zVHB3\n"
"zuoQqLERk0WvA8FXz2o8AYwcQRY2g30eX9kU4uDQAQKBgQDmf7KGImUGitsEPepF\n"
"KH5yLWYWqghHx6wfV+fdbBxoqn9WlwcQ7JbynIiVx8MX8/1lLCCe8v41ypu/eLtP\n"
"iY1ev2IKdrUStvYRSsFigRkuPHUo1ajsGHQd+ucTDf58mn7kRLW1JGMeGxo/t32B\n"
"m96Af6AiPWPEJuVfgGV0iwg+HQKBgQCmyPzL9M2rhYZn1AozRUguvlpmJHU2DpqS\n"
"34Q+7x2Ghf7MgBUhqE0t3FAOxEC7IYBwHmeYOvFR8ZkVRKNF4gbnF9RtLdz0DMEG\n"
"5qsMnvJUSQbNB1yVjUCnDAtElqiFRlQ/k0LgYkjKDY7LfciZl9uJRl0OSYeX/qG2\n"
"tRW09tOpgQKBgBSGkpM3RN/MRayfBtmZvYjVWh3yjkI2GbHA1jj1g6IebLB9SnfL\n"
"WbXJErCj1U+wvoPf5hfBc7m+jRgD3Eo86YXibQyZfY5pFIh9q7Ll5CQl5hj4zc4Y\n"
"b16sFR+xQ1Q9Pcd+BuBWmSz5JOE/qcF869dthgkGhnfVLt/OQzqZluZRAoGAXQ09\n"
"nT0TkmKIvlza5Af/YbTqEpq8mlBDhTYXPlWCD4+qvMWpBII1rSSBtftgcgca9XLB\n"
"MXmRMbqtQeRtg4u7dishZVh1MeP7vbHsNLppUQT9Ol6lFPsd2xUpJDc6BkFat62d\n"
"Xjr3iWNPC9E9nhPPdCNBv7reX7q81obpeXFMXgECgYEAmk2Qlus3OV0tfoNRqNpe\n"
"Mb0teduf2+h3xaI1XDIzPVtZF35ELY/RkAHlmWRT4PCdR0zXDidE67L6XdJyecSt\n"
"FdOUH8z5qUraVVebRFvJqf/oGsXc4+ex1ZKUTbY0wqY1y9E39yvB3MaTmZFuuqk8\n"
"f3cg+fr8aou7pr9SHhJlZCU=\n"
"-----END PRIVATE KEY-----\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:417
msgid "We will use a `smallrye.jwt.sign.key-location` property to point to this private signing key."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:419
#, fuzzy, no-wrap
msgid "Generating Keys with OpenSSL"
msgstr "Generación de claves con OpenSSL"

#. type: delimited block =
#: upstream/_versions/1.11/guides/security-jwt.adoc:422
#, fuzzy
msgid "It is also possible to generate a public and private key pair using the OpenSSL command line tool."
msgstr "También es posible generar un par de claves públicas y privadas utilizando la herramienta de línea de comandos OpenSSL."

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:423
#, fuzzy, no-wrap
msgid "openssl commands for generating keys"
msgstr "comandos openssl para generar claves"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:428
#, no-wrap
msgid ""
"openssl genrsa -out rsaPrivateKey.pem 2048\n"
"openssl rsa -pubout -in rsaPrivateKey.pem -out publicKey.pem\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:431
#, fuzzy
msgid "An additional step is needed for generating the private key for converting it into the PKCS#8 format."
msgstr "Se necesita un paso adicional para generar la clave privada y convertirla en el formato PKCS#8."

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:432
#, fuzzy, no-wrap
msgid "openssl command for converting private key"
msgstr "comando openssl para convertir la clave privada"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:436
#, no-wrap
msgid "openssl pkcs8 -topk8 -nocrypt -inform pem -in rsaPrivateKey.pem -outform pem -out privateKey.pem\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:439
#, fuzzy
msgid "You can use the generated pair of keys instead of the keys used in this quickstart."
msgstr "Puede utilizar el par de claves generado en lugar de las claves utilizadas en este inicio rápido."

#. type: delimited block =
#: upstream/_versions/1.11/guides/security-jwt.adoc:442
#, fuzzy
msgid "Now we can generate a JWT to use with `TokenSecuredResource` endpoint. To do this, run the following command:"
msgstr "Ahora podemos generar un JWT para utilizarlo con el endpoint `TokenSecuredResource`. Para ello, ejecuta el siguiente comando:"

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:443
#, no-wrap
msgid "Command to Generate JWT"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:445
#, fuzzy, no-wrap
msgid "Sample JWT Generation Output"
msgstr "Ejemplo de generación de JWT"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:449
#, no-wrap
msgid "$ mvn exec:java -Dexec.mainClass=org.acme.security.jwt.GenerateToken -Dexec.classpathScope=test -Dsmallrye.jwt.sign.key-location=privateKey.pem\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:451
#, no-wrap
msgid "eyJraWQiOiJcL3ByaXZhdGVLZXkucGVtIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJqZG9lLXVzaW5nLWp3dC1yYmFjIiwiYXVkIjoidXNpbmctand0LXJiYWMiLCJ1cG4iOiJqZG9lQHF1YXJrdXMuaW8iLCJiaXJ0aGRhdGUiOiIyMDAxLTA3LTEzIiwiYXV0aF90aW1lIjoxNTUxNjU5Njc2LCJpc3MiOiJodHRwczpcL1wvcXVhcmt1cy5pb1wvdXNpbmctand0LXJiYWMiLCJyb2xlTWFwcGluZ3MiOnsiZ3JvdXAyIjoiR3JvdXAyTWFwcGVkUm9sZSIsImdyb3VwMSI6Ikdyb3VwMU1hcHBlZFJvbGUifSwiZ3JvdXBzIjpbIkVjaG9lciIsIlRlc3RlciIsIlN1YnNjcmliZXIiLCJncm91cDIiXSwicHJlZmVycmVkX3VzZXJuYW1lIjoiamRvZSIsImV4cCI6MTU1MTY1OTk3NiwiaWF0IjoxNTUxNjU5Njc2LCJqdGkiOiJhLTEyMyJ9.O9tx_wNNS4qdpFhxeD1e7v4aBNWz1FCq0UV8qmXd7dW9xM4hA5TO-ZREk3ApMrL7_rnX8z81qGPIo_R8IfHDyNaI1SLD56gVX-NaOLS2OjfcbO3zOWJPKR_BoZkYACtMoqlWgIwIRC-wJKUJU025dHZiNL0FWO4PjwuCz8hpZYXIuRscfFhXKrDX1fh3jDhTsOEFfu67ACd85f3BdX9pe-ayKSVLh_RSbTbBPeyoYPE59FW7H5-i8IE-Gqu838Hz0i38ksEJFI25eR-AJ6_PSUD0_-TV3NjXhF3bFIeT4VSaIZcpibekoJg0cQm-4ApPEcPLdgTejYHA-mupb8hSwg\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:455
#, fuzzy
msgid "The JWT string is the Base64 URL encoded string that has 3 parts separated by '.' characters.  First part - JWT headers, second part - JWT claims, third part - JWT signature."
msgstr "La cadena JWT es la cadena codificada en Base64 URL que tiene 3 partes separadas por caracteres '.'. Primera parte - cabeceras JWT, segunda parte - reivindicaciones JWT, tercera parte - firma JWT."

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:456
#, fuzzy, no-wrap
msgid "Finally, Secured Access to /secured/roles-allowed"
msgstr "Por último, el acceso asegurado a /secured/roles-allowed"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:458
msgid "Now let's use this to make a secured request to the /secured/roles-allowed endpoint. Make sure you have the Quarkus server running using the `./mvnw compile quarkus:dev` command, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:462
#, no-wrap
msgid "curl -H \"Authorization: Bearer eyJraWQiOiJcL3ByaXZhdGVLZXkucGVtIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJqZG9lLXVzaW5nLWp3dC1yYmFjIiwiYXVkIjoidXNpbmctand0LXJiYWMiLCJ1cG4iOiJqZG9lQHF1YXJrdXMuaW8iLCJiaXJ0aGRhdGUiOiIyMDAxLTA3LTEzIiwiYXV0aF90aW1lIjoxNTUxNjUyMDkxLCJpc3MiOiJodHRwczpcL1wvcXVhcmt1cy5pb1wvdXNpbmctand0LXJiYWMiLCJyb2xlTWFwcGluZ3MiOnsiZ3JvdXAyIjoiR3JvdXAyTWFwcGVkUm9sZSIsImdyb3VwMSI6Ikdyb3VwMU1hcHBlZFJvbGUifSwiZ3JvdXBzIjpbIkVjaG9lciIsIlRlc3RlciIsIlN1YnNjcmliZXIiLCJncm91cDIiXSwicHJlZmVycmVkX3VzZXJuYW1lIjoiamRvZSIsImV4cCI6MTU1MTY1MjM5MSwiaWF0IjoxNTUxNjUyMDkxLCJqdGkiOiJhLTEyMyJ9.aPA4Rlc4kw7n_OZZRRk25xZydJy_J_3BRR8ryYLyHTO1o68_aNWWQCgpnAuOW64svPhPnLYYnQzK-l2vHX34B64JySyBD4y_vRObGmdwH_SEufBAWZV7mkG3Y4mTKT3_4EWNu4VH92IhdnkGI4GJB6yHAEzlQI6EdSOa4Nq8Gp4uPGqHsUZTJrA3uIW0TbNshFBm47-oVM3ZUrBz57JKtr0e9jv0HjPQWyvbzx1HuxZd6eA8ow8xzvooKXFxoSFCMnxotd3wagvYQ9ysBa89bgzL-lhjWtusuMFDUVYwFqADE7oOSOD4Vtclgq8svznBQ-YpfTHfb9QEcofMlpyjNA\" http://127.0.0.1:8080/secured/roles-allowed; echo\n"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:464
#, fuzzy, no-wrap
msgid "curl Command for /secured/roles-allowed With JWT"
msgstr "Comando curl para /secured/roles-allowed con JWT"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:469
#, no-wrap
msgid ""
"$ curl -H \"Authorization: Bearer eyJraWQ...\" http://127.0.0.1:8080/secured/roles-allowed; echo\n"
"hello + jdoe@quarkus.io, isHttps: false, authScheme: Bearer, hasJWT: true, birthdate: 2001-07-13\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:472
#, fuzzy
msgid "Success! We now have:"
msgstr "¡Éxito! Ahora tenemos:"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:474
#, fuzzy
msgid "a non-anonymous caller name of jdoe@quarkus.io"
msgstr "un nombre de llamada no anónimo de  link:mailto:jdoe@quarkus.io[jdoe@quarkus.io]"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:475
#, fuzzy
msgid "an authentication scheme of Bearer"
msgstr "un esquema de autenticación del portador"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:476
#, fuzzy
msgid "a non-null JsonWebToken"
msgstr "un JsonWebToken no nulo"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:477
#, fuzzy
msgid "birthdate claim value"
msgstr "fecha de nacimiento valor de la reclamación"

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:478
#, fuzzy, no-wrap
msgid "Using the JsonWebToken and Claim Injection"
msgstr "Uso de JsonWebToken y Claim Injection"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:485
#, fuzzy
msgid "Now that we can generate a JWT to access our secured REST endpoints, let's see what more we can do with the `JsonWebToken` interface and the JWT claims. The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal` interface, and is in fact the type of the object that is returned by the `javax.ws.rs.core.SecurityContext#getUserPrincipal()` call we used previously. This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr "Ahora que podemos generar un JWT para acceder a nuestros puntos finales REST seguros, veamos qué más podemos hacer con la interfaz `JsonWebToken` y las demandas JWT. La interfaz `org.eclipse.microprofile.jwt.JsonWebToken` amplía la interfaz `java.security.Principal` , y es de hecho el tipo del objeto que devuelve la llamada a `javax.ws.rs.core.SecurityContext#getUserPrincipal()` que utilizamos anteriormente. Esto significa que el código que no utiliza CDI pero que sí tiene acceso al contenedor REST `SecurityContext` puede hacerse con la interfaz `JsonWebToken` de la llamada mediante el casting de la interfaz `SecurityContext#getUserPrincipal()` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:488
#, fuzzy
msgid "The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT. It provides accessors for common claims that are required by the {mp-jwt} specification as well as arbitrary claims that may exist in the JWT."
msgstr "La interfaz `JsonWebToken` define métodos para acceder a las reclamaciones en el JWT subyacente. Proporciona accesores para reclamaciones comunes que son requeridas por la especificación {mp-jwt} así como reclamaciones arbitrarias que puedan existir en el JWT."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:491
#, fuzzy
msgid "All the JWT claims can also be injected. Let's expand our `TokenSecuredResource` with another endpoint /secured/roles-allowed-admin which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr "Todas las reclamaciones JWT también pueden inyectarse. Ampliemos nuestro `TokenSecuredResource` con otro endpoint /secured/roles-allowed-admin que utiliza la reivindicación inyectada `birthdate` (en lugar de obtenerla de `JsonWebToken` ):"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:511
#, no-wrap
msgid ""
"import org.eclipse.microprofile.jwt.Claim;\n"
"import org.eclipse.microprofile.jwt.Claims;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:521
#, no-wrap
msgid ""
"    @Inject\n"
"    JsonWebToken jwt;\n"
"    @Inject\n"
"    @Claim(standard = Claims.birthdate)\n"
"    String birthdate; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:537
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"roles-allowed\")\n"
"    @RolesAllowed({ \"User\", \"Admin\" })\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String helloRolesAllowed(@Context SecurityContext ctx) {\n"
"        return getResponseString(ctx) + \", birthdate: \" + jwt.getClaim(\"birthdate\").toString();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:545
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"roles-allowed-admin\")\n"
"    @RolesAllowed(\"Admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String helloRolesAllowedAdmin(@Context SecurityContext ctx) {\n"
"        return getResponseString(ctx) + \", birthdate: \" + birthdate; // <2>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:568
msgid "Here we use the injected `birthday` claim."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:569
#, fuzzy
msgid "Here we use the injected `birthday` claim to build the final reply."
msgstr "Aquí utilizamos la reclamación inyectada `birthday` para construir la respuesta final."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:571
#, fuzzy
msgid "Now generate the token again and run:"
msgstr "Ahora genere el token de nuevo y ejecútelo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:575
#, no-wrap
msgid "curl -H \"Authorization: Bearer eyJraWQiOiJcL3ByaXZhdGVLZXkucGVtIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJqZG9lLXVzaW5nLWp3dC1yYmFjIiwiYXVkIjoidXNpbmctand0LXJiYWMiLCJ1cG4iOiJqZG9lQHF1YXJrdXMuaW8iLCJiaXJ0aGRhdGUiOiIyMDAxLTA3LTEzIiwiYXV0aF90aW1lIjoxNTUxNjUyMDkxLCJpc3MiOiJodHRwczpcL1wvcXVhcmt1cy5pb1wvdXNpbmctand0LXJiYWMiLCJyb2xlTWFwcGluZ3MiOnsiZ3JvdXAyIjoiR3JvdXAyTWFwcGVkUm9sZSIsImdyb3VwMSI6Ikdyb3VwMU1hcHBlZFJvbGUifSwiZ3JvdXBzIjpbIkVjaG9lciIsIlRlc3RlciIsIlN1YnNjcmliZXIiLCJncm91cDIiXSwicHJlZmVycmVkX3VzZXJuYW1lIjoiamRvZSIsImV4cCI6MTU1MTY1MjM5MSwiaWF0IjoxNTUxNjUyMDkxLCJqdGkiOiJhLTEyMyJ9.aPA4Rlc4kw7n_OZZRRk25xZydJy_J_3BRR8ryYLyHTO1o68_aNWWQCgpnAuOW64svPhPnLYYnQzK-l2vHX34B64JySyBD4y_vRObGmdwH_SEufBAWZV7mkG3Y4mTKT3_4EWNu4VH92IhdnkGI4GJB6yHAEzlQI6EdSOa4Nq8Gp4uPGqHsUZTJrA3uIW0TbNshFBm47-oVM3ZUrBz57JKtr0e9jv0HjPQWyvbzx1HuxZd6eA8ow8xzvooKXFxoSFCMnxotd3wagvYQ9ysBa89bgzL-lhjWtusuMFDUVYwFqADE7oOSOD4Vtclgq8svznBQ-YpfTHfb9QEcofMlpyjNA\" http://127.0.0.1:8080/secured/roles-allowed-admin; echo\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:581
#, no-wrap
msgid ""
"$ curl -H \"Authorization: Bearer eyJraWQ...\" http://127.0.0.1:8080/secured/roles-allowed-admin; echo\n"
"hello + jdoe@quarkus.io, isHttps: false, authScheme: Bearer, hasJWT: true, birthdate: 2001-07-13\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:583
#, fuzzy, no-wrap
msgid "Package and run the application"
msgstr "Empaquetar y ejecutar la aplicación"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:585
msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `-runner.jar` file:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:585
#, fuzzy, no-wrap
msgid "Runner jar Example"
msgstr "Ejemplo de jarra corredora"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:592
#, no-wrap
msgid ""
"$ ./mvnw clean package\n"
"[INFO] Scanning for projects...\n"
"...\n"
"[INFO] [io.quarkus.creator.phase.runnerjar.RunnerJarPhase] Building jar: /Users/starksm/Dev/JBoss/Protean/starksm64-quarkus-quickstarts/security-jwt-quickstart/target/security-jwt-quickstart-runner.jar\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:596
#, no-wrap
msgid ""
"$ java -jar target/security-jwt-quickstart-runner.jar\n"
"2019-03-28 14:27:48,839 INFO  [io.quarkus] (main) Quarkus 0.12.0 started in 0.796s. Listening on: http://[::]:8080\n"
"2019-03-28 14:27:48,841 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jackson, security, smallrye-jwt]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:599
msgid "You can also generate the native executable with `./mvnw clean package -Pnative`."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/security-jwt.adoc:599
#, fuzzy, no-wrap
msgid "Native Executable Example"
msgstr "Ejemplo de ejecutable nativo"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:619
#, no-wrap
msgid ""
"$ ./mvnw clean package -Pnative\n"
"[INFO] Scanning for projects...\n"
"...\n"
"[security-jwt-quickstart-runner:25602]     universe:     493.17 ms\n"
"[security-jwt-quickstart-runner:25602]      (parse):     660.41 ms\n"
"[security-jwt-quickstart-runner:25602]     (inline):   1,431.10 ms\n"
"[security-jwt-quickstart-runner:25602]    (compile):   7,301.78 ms\n"
"[security-jwt-quickstart-runner:25602]      compile:  10,542.16 ms\n"
"[security-jwt-quickstart-runner:25602]        image:   2,797.62 ms\n"
"[security-jwt-quickstart-runner:25602]        write:     988.24 ms\n"
"[security-jwt-quickstart-runner:25602]      [total]:  43,778.16 ms\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Total time:  51.500 s\n"
"[INFO] Finished at: 2019-03-28T14:30:56-07:00\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:623
#, no-wrap
msgid ""
"$ ./target/security-jwt-quickstart-runner\n"
"2019-03-28 14:31:37,315 INFO  [io.quarkus] (main) Quarkus 0.12.0 started in 0.006s. Listening on: http://[::]:8080\n"
"2019-03-28 14:31:37,316 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jackson, security, smallrye-jwt]\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:625
#, fuzzy, no-wrap
msgid "Explore the Solution"
msgstr "Explorar la solución"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:631
#, fuzzy
msgid "The solution repository located in the `security-jwt-quickstart` {quickstarts-tree-url}/security-jwt-quickstart[directory] contains all of the versions we have worked through in this quickstart guide as well as some additional endpoints that illustrate subresources with injection of ``JsonWebToken``s and their claims into those using the CDI APIs. We suggest that you check out the quickstart solutions and explore the `security-jwt-quickstart` directory to learn more about the {extension-name} extension features."
msgstr "El repositorio de soluciones ubicado en `security-jwt-quickstart` {quickstarts-tree-url}/security-jwt-quickstart[directory] contiene todas las versiones con las que hemos trabajado en esta guía de inicio rápido, así como algunos puntos finales adicionales que ilustran subrecursos con inyección de `JsonWebToken` s y sus reclamaciones en los que se utilizan las API de CDI. Le sugerimos que consulte las soluciones de inicio rápido y explore el directorio `security-jwt-quickstart` para obtener más información sobre las características de la extensión {extension-name}."

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:633
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:635
#, fuzzy, no-wrap
msgid "Quarkus configuration"
msgstr "Configuración de Quarkus"

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:639
#, fuzzy, no-wrap
msgid "MicroProfile JWT configuration"
msgstr "Configuración del microperfil JWT"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:643
#: upstream/_versions/1.11/guides/security-jwt.adoc:667
#: upstream/_versions/1.11/guides/security-jwt.adoc:943
#, no-wrap
msgid "Property Nam"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:643
#: upstream/_versions/1.11/guides/security-jwt.adoc:667
#: upstream/_versions/1.11/guides/security-jwt.adoc:943
#, fuzzy, no-wrap
msgid "Default"
msgstr "Por defecto"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:644
#: upstream/_versions/1.11/guides/security-jwt.adoc:668
#: upstream/_versions/1.11/guides/security-jwt.adoc:944
#, fuzzy, no-wrap
msgid "Description"
msgstr "Descripción"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:644
#, fuzzy, no-wrap
msgid "mp.jwt.verify.publickey"
msgstr "mp.jwt.verify.publickey"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:644
#: upstream/_versions/1.11/guides/security-jwt.adoc:645
#: upstream/_versions/1.11/guides/security-jwt.adoc:646
#: upstream/_versions/1.11/guides/security-jwt.adoc:674
#: upstream/_versions/1.11/guides/security-jwt.adoc:677
#: upstream/_versions/1.11/guides/security-jwt.adoc:678
#: upstream/_versions/1.11/guides/security-jwt.adoc:680
#: upstream/_versions/1.11/guides/security-jwt.adoc:681
#: upstream/_versions/1.11/guides/security-jwt.adoc:682
#: upstream/_versions/1.11/guides/security-jwt.adoc:684
#: upstream/_versions/1.11/guides/security-jwt.adoc:688
#: upstream/_versions/1.11/guides/security-jwt.adoc:689
#: upstream/_versions/1.11/guides/security-jwt.adoc:690
#: upstream/_versions/1.11/guides/security-jwt.adoc:692
#: upstream/_versions/1.11/guides/security-jwt.adoc:947
#, no-wrap
msgid "non"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:645
#, fuzzy, no-wrap
msgid "The `mp.jwt.verify.publickey` config property allows the Public Key text itself to be supplied as a string.  The Public Key will be parsed from the supplied string in the order defined in section <<Supported Public Key Formats>>."
msgstr "La propiedad `mp.jwt.verify.publickey` config permite que el propio texto de la clave pública se suministre como una cadena. La clave pública se analizará a partir de la cadena suministrada en el orden definido en la sección <<Supported Public Key Formats>> ."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:645
#, fuzzy, no-wrap
msgid "mp.jwt.verify.publickey.location"
msgstr "mp.jwt.verify.publickey.location"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:646
#, no-wrap
msgid "Config property allows for an external or internal location of Public Key to be specified.  The value may be a relative path or a URL. If the value points to an HTTPS based JWK set then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`, see link:native-and-ssl[Using SSL With Native Executables] for more details."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:646
#, fuzzy, no-wrap
msgid "mp.jwt.verify.issuer"
msgstr "mp.jwt.verify.issuer"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:648
#, no-wrap
msgid ""
"Config property specifies the value of the `iss` (issuer)\n"
"                           claim of the JWT that the server will accept as valid."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:650
#, fuzzy, no-wrap
msgid "Supported Public Key Formats"
msgstr "Formatos de clave pública admitidos"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:654
#, fuzzy
msgid "Public Keys may be formatted in any of the following formats, specified in order of precedence:"
msgstr "Las claves públicas pueden formatearse en cualquiera de los siguientes formatos, especificados por orden de precedencia:"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:656
#, fuzzy
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr "Normas de criptografía de clave pública #8 (PKCS#8) PEM"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:657
#, fuzzy
msgid "JSON Web Key (JWK)"
msgstr "Clave web JSON (JWK)"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:658
#, fuzzy
msgid "JSON Web Key Set (JWKS)"
msgstr "Conjunto de claves web JSON (JWKS)"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:659
#, fuzzy
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr "Clave web JSON (JWK) URL codificada en Base64"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:660
#, fuzzy
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr "Conjunto de claves web JSON (JWKS) con codificación URL Base64"

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:661
#, fuzzy, no-wrap
msgid "Additional SmallRye JWT configuration"
msgstr "Configuración adicional de SmallRye JWT"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:664
#, fuzzy
msgid "SmallRye JWT provides more properties which can be used to customize the token processing:"
msgstr "SmallRye JWT proporciona más propiedades que se pueden utilizar para personalizar el procesamiento de tokens:"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:668
#, fuzzy, no-wrap
msgid "smallrye.jwt.verify.key.location"
msgstr "smallrye.jwt.verify.key.location"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:668
#, fuzzy, no-wrap
msgid "NONE"
msgstr "NONE"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:669
#, fuzzy, no-wrap
msgid "Location of the verification key which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' will be ignored if this property is set."
msgstr "Ubicación de la clave de verificación que puede apuntar tanto a las claves públicas como a las secretas. Las claves secretas sólo pueden estar en formato JWK. Tenga en cuenta que 'mp.jwt.verify.publickey.location' se ignorará si se establece esta propiedad."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:669
#, no-wrap
msgid "smallrye.jwt.verify.algorith"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:669
#, fuzzy, no-wrap
msgid "`RS256`"
msgstr "`RS256`"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:670
#, fuzzy, no-wrap
msgid "Signature algorithm. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr "Algoritmo de firma. Establézcalo en `ES256` para admitir el algoritmo de firma de curva elíptica."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:670
#, fuzzy, no-wrap
msgid "smallrye.jwt.verify.key-format"
msgstr "smallrye.jwt.verify.key-format"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:670
#, fuzzy, no-wrap
msgid "`ANY`"
msgstr "`ANY`"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:671
#, fuzzy, no-wrap
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr "Establezca esta propiedad a un formato de clave específico como `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` o `JWK_BASE64URL` para optimizar la forma en que se carga la clave de verificación."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:671
#, fuzzy, no-wrap
msgid "smallrye.jwt.verify.relax-key-validation"
msgstr "smallrye.jwt.verify.relax-key-validation"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:671
#: upstream/_versions/1.11/guides/security-jwt.adoc:672
#: upstream/_versions/1.11/guides/security-jwt.adoc:675
#, no-wrap
msgid "fals"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:672
#, fuzzy, no-wrap
msgid "Relax the validation of the verification keys, setting this property to `true` will allow public RSA keys with the length less than 2048 bit."
msgstr "Relaje la validación de las claves de verificación, estableciendo esta propiedad a `true` permitirá claves públicas RSA con una longitud inferior a 2048 bits."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:672
#, fuzzy, no-wrap
msgid "smallrye.jwt.verify.certificate-thumbprint"
msgstr "smallrye.jwt.verify.certificate-thumbprint"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:673
#, fuzzy, no-wrap
msgid "If this property is enabled then a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats in this case. JWK keys must have a 'x5c' (Base64-encoded X509Certificate) property set."
msgstr "Si esta propiedad está activada, los tokens firmados deben contener cabeceras de huella digital de X509Certificate 'x5t' o 'x5t#S256'. En este caso, las claves de verificación sólo pueden estar en formatos de clave de certificado JWK o PEM. Las claves JWK deben tener una propiedad 'x5c' (X509Certificate codificado en Base64)."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:673
#, fuzzy, no-wrap
msgid "smallrye.jwt.token.header"
msgstr "smallrye.jwt.token.header"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:673
#, fuzzy, no-wrap
msgid "`Authorization`"
msgstr "`Authorization`"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:674
#, fuzzy, no-wrap
msgid "Set this property if another header such as `Cookie` is used to pass the token."
msgstr "Establezca esta propiedad si se utiliza otra cabecera como `Cookie` para pasar el token."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:674
#, no-wrap
msgid "smallrye.jwt.token.cooki"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:675
#, no-wrap
msgid "Name of the cookie containing a token. This property will be effective only if  `smallrye.jwt.token.header` is set to `Cookie`."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:675
#, fuzzy, no-wrap
msgid "smallrye.jwt.always-check-authorization"
msgstr "smallrye.jwt.always-check-authorization"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:676
#, fuzzy, no-wrap
msgid "Set this property to `true` for `Authorization` header be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr "Establezca esta propiedad en `true` para que se compruebe el encabezamiento de `Authorization` incluso si `smallrye.jwt.token.header` está establecido en `Cookie` pero no existe ninguna cookie con un nombre `smallrye.jwt.token.cookie`."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:676
#, no-wrap
msgid "smallrye.jwt.token.scheme"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:676
#, fuzzy, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:677
#, fuzzy, no-wrap
msgid "Comma-separated list containing an alternative single or multiple schemes, for example, `DPoP`."
msgstr "Lista separada por comas que contiene uno o varios esquemas alternativos, por ejemplo, `DPoP`."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:677
#, no-wrap
msgid "smallrye.jwt.token.ki"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:678
#, fuzzy, no-wrap
msgid "Key identifier. If it is set then the verification JWK key as well every JWT token must have a matching `kid` header."
msgstr "Identificador de clave. Si se establece, la clave JWK de verificación, así como cada token JWT, debe tener una cabecera `kid` que coincida."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:678
#, no-wrap
msgid "smallrye.jwt.time-to-liv"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:679
#, no-wrap
msgid "The maximum number of seconds that a JWT may be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:679
#, no-wrap
msgid "smallrye.jwt.require.named-principa"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:679
#, no-wrap
msgid "`false`"
msgstr "`false`"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:680
#, fuzzy, no-wrap
msgid "If an application relies on `java.security.Principal` returning a name then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property will result in SmallRye JWT throwing an exception if none of these claims is available for the application code to reliably deal with a non-null `Principal` name."
msgstr "Si una aplicación depende de que `java.security.Principal` devuelva un nombre, entonces un token debe tener un claim `upn` o `preferred_username` o `sub` establecido. Si se establece esta propiedad, SmallRye JWT lanzará una excepción si ninguna de estas afirmaciones está disponible para que el código de la aplicación pueda tratar de forma fiable un nombre no nulo de `Principal`."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:680
#, fuzzy, no-wrap
msgid "smallrye.jwt.path.sub"
msgstr "smallrye.jwt.path.sub"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:681
#, fuzzy, no-wrap
msgid "Path to the claim containing the subject name. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "Ruta de acceso a la declaración que contiene el nombre del sujeto. Comienza desde el objeto JSON de nivel superior y puede contener múltiples segmentos en los que cada segmento representa únicamente un nombre de objeto JSON, ejemplo: `realms/subject`. Esta propiedad se puede utilizar si un token no tiene una reivindicación \"sub\" pero tiene el asunto establecido en una reivindicación diferente. Utilice comillas dobles con las reivindicaciones calificadas como espacio de nombres."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:681
#, fuzzy, no-wrap
msgid "smallrye.jwt.claims.sub"
msgstr "smallrye.jwt.claims.sub"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:682
#, fuzzy, no-wrap
msgid "This property can be used to set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively this property can be used to customize `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr "Esta propiedad se puede utilizar para establecer un valor de sub-reclamación por defecto cuando el token actual no tiene ninguna reivindicación estándar o personalizada `sub` disponible. En efecto, esta propiedad puede utilizarse para personalizar el nombre de `java.security.Principal` si no se ha establecido ninguna reivindicación `upn` o `preferred_username` o `sub`."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:682
#, no-wrap
msgid "smallrye.jwt.path.group"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:683
#, fuzzy, no-wrap
msgid "Path to the claim containing the groups. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "Ruta de acceso a la demanda que contiene los grupos. Comienza desde el objeto JSON de nivel superior y puede contener múltiples segmentos en los que cada segmento representa únicamente un nombre de objeto JSON, ejemplo: `realm/groups`. Esta propiedad se puede utilizar si un token no tiene una reivindicación 'groups' pero tiene los grupos establecidos en una reivindicación diferente. Utilice comillas dobles con las reivindicaciones calificadas por el espacio de nombres."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:683
#, fuzzy, no-wrap
msgid "smallrye.jwt.groups-separator"
msgstr "smallrye.jwt.groups-separator"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:683
#, fuzzy, no-wrap
msgid "' '"
msgstr "' '"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:684
#, fuzzy, no-wrap
msgid "Separator for splitting a string which may contain multiple group values. It will only be used if the `smallrye.jwt.path.groups` property points to a custom claim whose value is a string. The default value is a single space because a standard OAuth2 `scope` claim may contain a space separated sequence."
msgstr "Separador para dividir una cadena que puede contener varios valores de grupo. Sólo se utilizará si la propiedad `smallrye.jwt.path.groups` apunta a una reclamación personalizada cuyo valor es una cadena. El valor por defecto es un solo espacio porque una reclamación estándar de OAuth2 `scope` puede contener una secuencia separada por espacios."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:684
#, no-wrap
msgid "smallrye.jwt.claims.group"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:685
#, fuzzy, no-wrap
msgid "This property can be used to set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr "Esta propiedad se puede utilizar para establecer un valor de reclamación de grupos por defecto cuando el token actual no tiene ninguna reclamación de grupos estándar o personalizada disponible."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:685
#, no-wrap
msgid "smallrye.jwt.jwks.refresh-interva"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:685
#: upstream/_versions/1.11/guides/security-jwt.adoc:687
#, fuzzy, no-wrap
msgid "60"
msgstr "60"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:686
#, no-wrap
msgid "JWK cache refresh interval in minutes. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTPS URL based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:686
#, no-wrap
msgid "smallrye.jwt.jwks.forced-refresh-interva"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:686
#, fuzzy, no-wrap
msgid "30"
msgstr "30"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:687
#, no-wrap
msgid "Forced JWK cache refresh interval in minutes which is used to restrict the frequency of the forced refresh attempts which may happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTPS URL based JWK set."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:687
#, no-wrap
msgid "smallrye.jwt.expiration.grac"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:688
#, fuzzy, no-wrap
msgid "Expiration grace in seconds. By default an expired token will still be accepted if the current time is no more than 1 min after the token expiry time."
msgstr "Gracia de expiración en segundos. Por defecto, una ficha caducada seguirá siendo aceptada si la hora actual no es posterior en más de 1 min a la hora de caducidad de la ficha."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:688
#, no-wrap
msgid "smallrye.jwt.verify.au"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:689
#, fuzzy, no-wrap
msgid "Comma separated list of the audiences that a token `aud` claim may contain."
msgstr "Lista separada por comas de los públicos que puede contener una solicitud de token `aud`."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:689
#, no-wrap
msgid "smallrye.jwt.required.claim"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:690
#, fuzzy, no-wrap
msgid "Comma separated list of the claims that a token must contain."
msgstr "Lista separada por comas de las declaraciones que debe contener un token."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:690
#, fuzzy, no-wrap
msgid "smallrye.jwt.decrypt.key.location"
msgstr "smallrye.jwt.decrypt.key.location"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:691
#, fuzzy, no-wrap
msgid "Config property allows for an external or internal location of Private Decryption Key to be specified."
msgstr "La propiedad Config permite especificar una ubicación externa o interna de la clave de descifrado privada."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:691
#, no-wrap
msgid "smallrye.jwt.decrypt.algorith"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:691
#, fuzzy, no-wrap
msgid "`RSA_OAEP`"
msgstr "`RSA_OAEP`"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:692
#, fuzzy, no-wrap
msgid "Decryption algorithm."
msgstr "Algoritmo de descifrado."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:692
#, no-wrap
msgid "smallrye.jwt.token.decryption.ki"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:693
#, fuzzy, no-wrap
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr "Identificador de la clave de descifrado. Si se establece, la clave JWK de descifrado, así como cada token JWT, debe tener una cabecera `kid` que coincida."

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:695
#, no-wrap
msgid "Create JsonWebToken with JWTParser"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:698
#, fuzzy
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr "Si el token JWT no puede ser inyectado, por ejemplo, si está incrustado en la carga útil de la solicitud de servicio o el punto final del servicio lo adquiere fuera de banda, entonces se puede utilizar `JWTParser`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:705
#, no-wrap
msgid ""
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import io.smallrye.jwt.auth.principal.JWTParser;\n"
"...\n"
"@Inject JWTParser parser;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:707
#, no-wrap
msgid "String token = getTokenFromOidcServer();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:710
#, no-wrap
msgid ""
"// Parse and verify the token\n"
"JsonWebToken jwt = parser.parse(token);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:713
#, fuzzy
msgid "You can also use it to customize the way the token is verified or decrypted. For example, one can supply a local `SecretKey`:"
msgstr "También se puede utilizar para personalizar la forma en que se verifica o descifra el token. Por ejemplo, se puede suministrar un local `SecretKey`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:723
#, no-wrap
msgid ""
"import javax.crypto.SecretKey;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.core.NewCookie;\n"
"import javax.ws.rs.core.Response;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import io.smallrye.jwt.auth.principal.JWTParser;\n"
"import io.smallrye.jwt.build.Jwt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:728
#, no-wrap
msgid ""
"@Path(\"/secured\")\n"
"public class SecuredResource {\n"
"  @Inject JWTParser parser;\n"
"  private String secret = \"AyM1SysPpbyDfgZld3umj1qzKObwVMko\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:747
#, no-wrap
msgid ""
"  @GET\n"
"  @Produces(\"text/plain\")\n"
"  public Response getUserName(@CookieParam(\"jwt\") String jwtCookie) {\n"
"    Response response = null;\n"
"    if (jwtCookie == null) {\n"
"        // Create a JWT token signed using the 'HS256' algorithm\n"
"        String newJwtCookie = Jwt.upn(\"Alice\").signWithSecret(secret);\n"
"        // or create a JWT token encrypted using the 'A256KW' algorithm\n"
"        // Jwt.upn(\"alice\").encryptWithSecret(secret);\n"
"        return Response.ok(\"Alice\").cookie(new NewCookie(\"jwt\", newJwtCookie)).build();\n"
"    } else {\n"
"        // All mp.jwt and smallrye.jwt properties are still effective, only the verification key is customized.\n"
"        JsonWebToken jwt = parser.verify(jwtCookie, secret);\n"
"        // or jwt = parser.decrypt(jwtCookie, secret);\n"
"        return Response.ok(jwt.getName()).build();\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:749
#, fuzzy, no-wrap
msgid "Token Decryption"
msgstr "Desencriptación de tokens"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:753
msgid "If your application needs to accept the tokens with the encrypted claims or with the encrypted inner signed claims then all you have to do is to set `smallrye.jwt.decrypt.key-location` pointing to the decryption key."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:757
#, fuzzy
msgid "If this is the only key property which is set then the incoming token is expected to contain the encrypted claims only.  If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set then the incoming token is expected to contain the encrypted inner-signed token."
msgstr "Si ésta es la única propiedad de clave que se establece, entonces se espera que el testigo entrante contenga únicamente las declaraciones cifradas. Si también se definen las propiedades de verificación `mp.jwt.verify.publickey` o `mp.jwt.verify.publickey.location` , se espera que el código entrante contenga el código cifrado con firma interna."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:759
msgid "See <<generate-jwt-tokens, Generate JWT tokens with SmallRye JWT>> and learn how to generate the encrypted or inner-signed and then encrypted tokens fast."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:760
#, fuzzy, no-wrap
msgid "How to check the errors in the logs"
msgstr "Cómo comprobar los errores en los registros"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:763
msgid "Set `quarkus.log.category.\"io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator\".level=TRACE` and `quarkus.log.category.\"io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator\".min-level=TRACE` to see more details about the token verification or decryption errors."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:764
#, fuzzy, no-wrap
msgid "Custom Factories"
msgstr "Fábricas a medida"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:768
#, fuzzy
msgid "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is used by default to parse and verify JWT tokens and convert them to `JsonWebToken` principals.  It uses `MP JWT` and `smallrye-jwt` properties listed in the `Configuration` section to verify and customize JWT tokens."
msgstr "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` se utiliza por defecto para analizar y verificar los tokens JWT y convertirlos en principales de `JsonWebToken` . Utiliza las propiedades `MP JWT` y `smallrye-jwt` enumeradas en la sección `Configuration` para verificar y personalizar los tokens JWT."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:770
#, fuzzy
msgid "If you need to provide your own factory, for example, to avoid verifying the tokens again which have already been verified by the firewall, then you can either use a `ServiceLoader` mechanism by providing a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource or simply have an `Alternative` CDI bean implementation like this one:"
msgstr "Si necesita proporcionar su propia fábrica, por ejemplo, para evitar verificar de nuevo los tokens que ya han sido verificados por el cortafuegos, entonces puede utilizar un mecanismo de `ServiceLoader` proporcionando un recurso `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` o simplemente tener una implementación de bean CDI `Alternative` como ésta:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:785
#, no-wrap
msgid ""
"import java.nio.charset.StandardCharsets;\n"
"import java.util.Base64;\n"
"import javax.annotation.Priority;\n"
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.enterprise.inject.Alternative;\n"
"import org.jose4j.jwt.JwtClaims;\n"
"import org.jose4j.jwt.consumer.InvalidJwtException;\n"
"import io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipal;\n"
"import io.smallrye.jwt.auth.principal.JWTAuthContextInfo;\n"
"import io.smallrye.jwt.auth.principal.JWTCallerPrincipal;\n"
"import io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory;\n"
"import io.smallrye.jwt.auth.principal.ParseException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:790
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@Alternative\n"
"@Priority(1)\n"
"public class TestJWTCallerPrincipalFactory extends JWTCallerPrincipalFactory {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:802
#, no-wrap
msgid ""
"    @Override\n"
"    public JWTCallerPrincipal parse(String token, JWTAuthContextInfo authContextInfo) throws ParseException {\n"
"        try {\n"
"            // Token has already been verified, parse the token claims only\n"
"            String json = new String(Base64.getUrlDecoder().decode(token.split(\"\\\\.\")[1]), StandardCharsets.UTF_8);\n"
"            return new DefaultJWTCallerPrincipal(JwtClaims.parse(json));\n"
"        } catch (InvalidJwtException ex) {\n"
"            throw new ParseException(ex.getMessage());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:805
#, no-wrap
msgid "Generate JWT tokens with SmallRye JWT"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:811
msgid "JWT claims can be signed or encrypted or signed first and the nested JWT token encrypted.  Signing the claims is used most often to secure the claims. What is known today as a JWT token is typically produced by signing the claims in a JSON format using the steps described in the link:https://tools.ietf.org/html/rfc7515[JSON Web Signature] specification.  However, when the claims are sensitive, their confidentiality can be guaranteed by following the steps described in the link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption] specification to produce a JWT token with the encrypted claims.  Finally both the confidentiality and integrity of the claims can be further enforced by signing them first and then encrypting the nested JWT token."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:813
msgid "SmallRye JWT provides an API for securing the JWT claims using all of these options."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:814
#, no-wrap
msgid "Maven dependency"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:822
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkus</groupId>\n"
"  <artifactId>quarkus-smallrye-jwt-build</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:826
msgid "Note you can use Smallrye JWT Build API without having to create MP JWT endpoints.  It can also be excluded from `quarkus-smallrye-jwt` if MP JWT endpoints do not need to generate JWT tokens."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:827
#, fuzzy, no-wrap
msgid "Create JwtClaimsBuilder and set the claims"
msgstr "Crear JwtClaimsBuilder y establecer las reclamaciones"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:830
#, fuzzy
msgid "The first step is to initialize a `JwtClaimsBuilder` using one of the options below and add some claims to it:"
msgstr "El primer paso es inicializar un `JwtClaimsBuilder` utilizando una de las opciones siguientes y añadirle algunas reclamaciones:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:845
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import javax.json.Json;\n"
"import javax.json.JsonObject;\n"
"import io.smallrye.jwt.build.Jwt;\n"
"import io.smallrye.jwt.build.JwtClaimsBuilder;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"...\n"
"// Create an empty builder and add some claims\n"
"JwtClaimsBuilder builder1 = Jwt.claims();\n"
"builder1.claim(\"customClaim\", \"custom-value\").issuer(\"https://issuer.org\");\n"
"// Or start typing the claims immediately:\n"
"// JwtClaimsBuilder builder1 = Jwt.upn(\"Alice\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:848
#, no-wrap
msgid ""
"// Builder created from the existing claims\n"
"JwtClaimsBuilder builder2 = Jwt.claims(\"/tokenClaims.json\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:851
#, no-wrap
msgid ""
"// Builder created from a map of claims\n"
"JwtClaimsBuilder builder3 = Jwt.claims(Collections.singletonMap(\"customClaim\", \"custom-value\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:857
#, no-wrap
msgid ""
"// Builder created from JsonObject\n"
"JsonObject userName = Json.createObjectBuilder().add(\"username\", \"Alice\").build();\n"
"JsonObject userAddress = Json.createObjectBuilder().add(\"city\", \"someCity\").add(\"street\", \"someStreet\").build();\n"
"JsonObject json = Json.createObjectBuilder(userName).add(\"address\", userAddress).build();\n"
"JwtClaimsBuilder builder4 = Jwt.claims(json);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:861
#, no-wrap
msgid ""
"// Builder created from JsonWebToken\n"
"@Inject JsonWebToken token;\n"
"JwtClaimsBuilder builder5 = Jwt.claims(token);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:864
#, fuzzy
msgid "The API is fluent so the builder initialization can be done as part of the fluent API sequence."
msgstr "La API es fluida, por lo que la inicialización del constructor puede realizarse como parte de la secuencia de la API fluida."

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:867
msgid "The builder will also set `iat` (issued at) to the current time, `exp` (expires at) to 5 minutes away from the current time (it can be customized with the `smallrye.jwt.new-token.lifespan` property) and `jti` (unique token identifier) claims if they have not already been set.  One can also configure `smallrye.jwt.new-token.issuer` property and skip setting the issuer directly with the builder API."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:869
#, fuzzy
msgid "The next step is to decide how to secure the claims."
msgstr "El siguiente paso es decidir cómo asegurar las reclamaciones."

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:870
#, fuzzy, no-wrap
msgid "Sign the claims"
msgstr "Firmar las reclamaciones"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:873
#, fuzzy
msgid "The claims can be signed immediately or after the `JSON Web Signature` headers have been set:"
msgstr "Las reclamaciones pueden firmarse inmediatamente o después de que se hayan establecido las cabeceras de `JSON Web Signature`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:878
#: upstream/_versions/1.11/guides/security-jwt.adoc:898
#: upstream/_versions/1.11/guides/security-jwt.adoc:915
#, no-wrap
msgid ""
"import io.smallrye.jwt.build.Jwt;\n"
"...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:882
#, no-wrap
msgid ""
"// Sign the claims using the private key loaded from the location set with a 'smallrye.jwt.sign.key-location' property.\n"
"// No 'jws()' transition is necessary.\n"
"String jwt1 = Jwt.claims(\"/tokenClaims.json\").sign();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:885
#, no-wrap
msgid ""
"// Set the headers and sign the claims with an RSA private key loaded in the code (the implementation of this method is omitted). Note a 'jws()' transition to a 'JwtSignatureBuilder'.\n"
"String jwt2 = Jwt.claims(\"/tokenClaims.json\").jws().keyId(\"kid1\").header(\"custom-header\", \"custom-value\").sign(getPrivateKey());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:888
msgid "Note the `alg` (algorithm) header is set to `RS256` by default."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:889
#, fuzzy, no-wrap
msgid "Encrypt the claims"
msgstr "Cifrar las reclamaciones"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:893
msgid "The claims can be encrypted immediately or after the `JSON Web Encryption` headers have been set the same way as they can be signed.  The only minor difference is that encrypting the claims always requires a `jwe()` `JwtEncryptionBuilder` transition:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:901
#, no-wrap
msgid ""
"// Encrypt the claims using the public key loaded from the location set with a 'smallrye.jwt.encrypt.key-location' property.\n"
"String jwt1 = Jwt.claims(\"/tokenClaims.json\").jwe().encrypt();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:904
#, no-wrap
msgid ""
"// Set the headers and encrypt the claims with an RSA public key loaded in the code (the implementation of this method is omitted).\n"
"String jwt2 = Jwt.claims(\"/tokenClaims.json\").jwe().header(\"custom-header\", \"custom-value\").encrypt(getPublicKey());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:907
msgid "Note the `alg` (key management algorithm) header is set to `RSA-OAEP-256` (it will be changed to `RSA-OAEP` in a future version of smallrye-jwt) and the `enc` (content encryption header) is set to `A256GCM` by default."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:908
#, fuzzy, no-wrap
msgid "Sign the claims and encrypt the nested JWT token"
msgstr "Firmar las reclamaciones y cifrar el token JWT anidado"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:911
#, fuzzy
msgid "The claims can be signed and then the nested JWT token encrypted by combining the sign and encrypt steps."
msgstr "Las reclamaciones pueden ser firmadas y luego el token JWT anidado encriptado combinando los pasos de firmar y encriptar."

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:918
#, no-wrap
msgid ""
"// Sign the claims and encrypt the nested token using the private and public keys loaded from the locations set with the 'smallrye.jwt.sign.key-location' and 'smallrye.jwt.encrypt.key-location' properties respectively.\n"
"String jwt = Jwt.claims(\"/tokenClaims.json\").innerSign().encrypt();\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:920
#, fuzzy, no-wrap
msgid "Fast JWT Generation"
msgstr "Generación rápida de JWT"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:923
msgid "If `smallrye.jwt.sign.key-location` or/and `smallrye.jwt.encrypt.key-location` properties are set then one can secure the existing claims (resources, maps, JsonObjects) with a single call:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:928
#, no-wrap
msgid ""
"// More compact than Jwt.claims(\"/claims.json\").sign();\n"
"Jwt.sign(\"/claims.json\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:931
#, no-wrap
msgid ""
"// More compact than Jwt.claims(\"/claims.json\").jwe().encrypt();\n"
"Jwt.encrypt(\"/claims.json\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/security-jwt.adoc:934
#, no-wrap
msgid ""
"// More compact than Jwt.claims(\"/claims.json\").innerSign().encrypt();\n"
"Jwt.signAndEncrypt(\"/claims.json\");\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:936
msgid "As mentioned above, `iat`, `exp`, `jti` and `iss` claims will be added if needed."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security-jwt.adoc:937
#, fuzzy, no-wrap
msgid "SmallRye JWT Builder configuration"
msgstr "Configuración de SmallRye JWT Builder"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:940
msgid "SmallRye JWT supports the following properties which can be used to customize the way claims are signed and encrypted:"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:944
#, no-wrap
msgid "smallrye.jwt.sign.key-location"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:944
#: upstream/_versions/1.11/guides/security-jwt.adoc:945
#, fuzzy, no-wrap
msgid "`none`"
msgstr "`none`"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:945
#, fuzzy, no-wrap
msgid "Location of a private key which will be used to sign the claims when either a no-argument `sign()` or `innerSign()` method is called."
msgstr "Ubicación de una clave privada que se utilizará para firmar las reclamaciones cuando se llame a un método sin argumentos `sign()` o `innerSign()`."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:945
#, no-wrap
msgid "smallrye.jwt.encrypt.key-location"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:946
#, fuzzy, no-wrap
msgid "Location of a public key which will be used to encrypt the claims or inner JWT when a no-argument `encrypt()` method is called."
msgstr "Ubicación de una clave pública que se utilizará para cifrar las reclamaciones o el JWT interno cuando se llame a un método sin argumentos `encrypt()`."

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:946
#, fuzzy, no-wrap
msgid "smallrye.jwt.new-token.lifespan"
msgstr "smallrye.jwt.new-token.lifespan"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:946
#, fuzzy, no-wrap
msgid "300"
msgstr "300"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:947
#, no-wrap
msgid "Token lifespan in seconds which will be used to calculate an exp (expiry) claim value if this claim has not already been set."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:947
#, fuzzy, no-wrap
msgid "smallrye.jwt.new-token.issuer"
msgstr "smallrye.jwt.new-token.issuer"

#. type: Table
#: upstream/_versions/1.11/guides/security-jwt.adoc:948
#, no-wrap
msgid "Token issuer which can be used to set an iss (issuer) claim value if this claim has not already been set."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security-jwt.adoc:950
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:953
msgid "link:https://github.com/eclipse/microprofile-jwt-auth/releases/download/1.1.1/microprofile-jwt-auth-spec.html[MP JWT 1.1.1 HTML]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:954
msgid "link:https://github.com/eclipse/microprofile-jwt-auth/releases/download/1.1.1/microprofile-jwt-auth-spec.pdf[MP JWT 1.1.1 PDF]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:955
#, fuzzy
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:956
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[Token web JSON]"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:957
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[Firma web JSON]"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:958
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[Cifrado web JSON]"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:959
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[Algoritmos web JSON]"

#. type: Plain text
#: upstream/_versions/1.11/guides/security-jwt.adoc:959
msgid "link:security[Quarkus Security]"
msgstr ""
