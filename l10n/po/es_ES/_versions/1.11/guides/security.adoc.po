# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/security.adoc:6
#, no-wrap
msgid "Quarkus - Security Architecture and Guides"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:11
#, fuzzy
msgid "Quarkus Security provides the architecture, multiple authentication and authorization mechanisms, and other tools for the developers to build a production-quality security for their Quarkus applications."
msgstr "Quarkus Security proporciona la arquitectura, múltiples mecanismos de autenticación y autorización, y otras herramientas para que los desarrolladores construyan una seguridad de calidad de producción para sus aplicaciones Quarkus."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:13
msgid "This document provides a brief overview of Quarkus Security and links to the individual guides."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:14
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:17
#, fuzzy
msgid "`HttpAuthenticationMechanism` is the main entry into Quarkus HTTP Security."
msgstr "`HttpAuthenticationMechanism` es la entrada principal de Quarkus HTTP Security."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:20
#, fuzzy
msgid "Quarkus Security Manager uses `HttpAuthenticationMechanism` to extract the authentication credentials from the HTTP request and delegates to `IdentityProvider` to complete the conversion of these credentials to `SecurityIdentity`."
msgstr "Quarkus Security Manager utiliza `HttpAuthenticationMechanism` para extraer las credenciales de autenticación de la solicitud HTTP y delega en `IdentityProvider` para completar la conversión de estas credenciales a `SecurityIdentity` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:22
msgid "For example, the credentials may be coming with the HTTP `Authorization` header, client HTTPS certificates or cookies."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:24
#, fuzzy
msgid "`IdentityProvider` verifies the authentication credentials and maps them to `SecurityIdentity` which contains the username, roles, the original authentication credentials, and other attributes."
msgstr "`IdentityProvider` verifica las credenciales de autenticación y las asigna a `SecurityIdentity` , que contiene el nombre de usuario, los roles, las credenciales de autenticación originales y otros atributos."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:26
#, fuzzy
msgid "For every authenticated resource, you can inject a `SecurityIdentity` instance to get the authenticated identity information."
msgstr "Para cada recurso autenticado, puede inyectar una instancia de `SecurityIdentity` para obtener la información de la identidad autenticada."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:29
#, fuzzy
msgid "In some other contexts you may have other parallel representations of the same information (or parts of it) such as `SecurityContext` for JAX-RS or `JsonWebToken` for JWT."
msgstr "En algunos otros contextos puede tener otras representaciones paralelas de la misma información (o partes de ella) como `SecurityContext` para JAX-RS o `JsonWebToken` para JWT."

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:30
#, fuzzy, no-wrap
msgid "Authentication mechanisms"
msgstr "Mecanismos de autenticación"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:33
msgid "Quarkus supports several sources to load authentication information from."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:34
#, fuzzy, no-wrap
msgid "Basic and Form Authentication Mechanisms"
msgstr "Mecanismos de autenticación básica y de formulario"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:38
msgid "Basic and Form HTTP-based authentication mechanisms are the core authentication mechanisms supported in Quarkus.  Please see link:security-built-in-authentication#basic-auth[Basic HTTP Authentication] and link:security-built-in-authentication#form-auth[Form HTTP Authentication] for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:39
#, fuzzy, no-wrap
msgid "Mutual TLS Authentication"
msgstr "Autenticación mutua TLS"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:42
#, fuzzy
msgid "Quarkus provides Mutual TLS authentication so that you can authenticate users based on their X.509 certificates."
msgstr "Quarkus proporciona autenticación mutua TLS para que pueda autenticar a los usuarios basándose en sus certificados X.509."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:44
msgid "Please see link:security-built-in-authentication#mutual-tls[Mutual TLS Authentication] for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:45
#, fuzzy, no-wrap
msgid "OpenId Connect"
msgstr "OpenId Connect"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:48
msgid "`quarkus-oidc` extension provides a reactive, interoperable, multi-tenant enabled OpenId Connect adapter which supports `Bearer Token` and `Authorization Code Flow` authentication mechanisms."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:51
msgid "`Bearer Token` mechanism extracts the token from HTTP `Authorization` header.  `Authorization Code Flow` mechanism uses OpenId Connect Authorization Code flow. It redirects the user to IDP to authenticate and completes the authentication process after the user has been redirected back to Quarkus by exchanging the provided code grant for ID, access and refresh tokens."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:53
#, fuzzy
msgid "ID and access `JWT` tokens are verified with the refreshable `JWK` key set but both JWT and opaque (binary) tokens can be introspected remotely."
msgstr "Los tokens de identificación y acceso `JWT` se verifican con el conjunto de claves actualizables `JWK` pero tanto los tokens JWT como los opacos (binarios) pueden ser introspeccionados a distancia."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:55
msgid "See the link:security-openid-connect[Using OpenID Connect to Protect Service Applications] guide for more information about `Bearer Token` authentication mechanism."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:57
msgid "See the link:security-openid-connect-web-authentication[Using OpenID Connect to Protect Web Application] guide for more information about `Authorization Code Flow` authentication mechanism."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/security.adoc:61
#, fuzzy
msgid "Both `quarkus-oidc` `Bearer` and `Authorization Code Flow` Authentication mechanisms use <<smallrye-jwt, SmallRye JWT>> to represent JWT tokens as Microprofile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "Tanto `quarkus-oidc` `Bearer` como `Authorization Code Flow` Los mecanismos de autenticación utilizan xref:smallrye-jwt[SmallRye JWT] para representar tokens JWT como Microprofile JWT `org.eclipse.microprofile.jwt.JsonWebToken` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:64
msgid "See link:security-openid-connect-multitenancy[Using OpenID Connect Multi-Tenancy] for more information about multiple tenants which can support `Bearer` or `Authorization Code Flow` authentication mechanism and configured statically or dynamically."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/security.adoc:69
msgid "If you would like to have Quarkus OIDC extension enabled at runtime then set `quarkus.oidc.tenant-enabled=false` at build time and re-enable it at runtime using a system property.  See also link:security-openid-connect-multitenancy#disable-tenant[Disabling Tenant Configurations] for more information about managing the individual tenant configurations in the multi-tenant OIDC deployments."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:72
msgid "If you use Keycloak and Bearer tokens then also see the link:security-keycloak-authorization[Using Keycloak to Centralize Authorization] guide."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/security.adoc:76
#, fuzzy
msgid "If you need to configure Keycloak programmatically then consider using https://www.keycloak.org/docs/latest/server_development/#admin-rest-api[Keycloak Admin REST API] with the help of the `quarkus-keycloak-admin-client` extension."
msgstr "Si necesita configurar Keycloak mediante programación, considere la posibilidad de utilizar link:https://www.keycloak.org/docs/latest/server_development/#admin-rest-api[la API REST de Keycloak Admin] con la ayuda de la extensión `quarkus-keycloak-admin-client` ."

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:78
#, no-wrap
msgid "OpenId Connect Client and Filters"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:81
msgid "`quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenId Connect and OAuth2 providers which support `client-credentials`, `password` and `refresh_token` token grants."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:83
msgid "`quarkus-oidc-client-filter` extension depends on the `quarkus-oidc-client` extension and provides JAX-RS `OidcClientRequestFilter` which sets the access token acquired by `OidcClient` as an HTTP `Authorization` header's `Bearer` scheme value. This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint but it is not related to the authentication requirements of this service endpoint. For example, it can be a public endpoint or it can be protected with MTLS - the important point is that this Quarkus endpoint does not have to be protected itself with the Quarkus OpenId Connect adapter."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:85
msgid "`quarkus-oidc-token-propagation` extension depends on the `quarkus-oidc` extension and provides JAX-RS `TokenCredentialRequestFilter` which sets the OpenId Connect Bearer or Authorization Code Flow access token as an HTTP `Authorization` header's `Bearer` scheme value. This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint and the Quarkus endpoint must be protected itself with the Quarkus OpenId Connect adapter. This filter can be used to propagate the access token to the downstream services."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:87
msgid "See the link:security-openid-connect-client[Using OpenID Connect and OAuth2 Client] guide for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:89
#, fuzzy, no-wrap
msgid "SmallRye JWT"
msgstr "SmallRye JWT"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:92
#, fuzzy
msgid "`quarkus-smallrye-jwt` provides Microprofile JWT 1.1.1 implementation and many more options to verify signed and encrypted `JWT` tokens and represent them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "`quarkus-smallrye-jwt` proporciona la implementación de Microprofile JWT 1.1.1 y muchas más opciones para verificar los tokens firmados y encriptados de `JWT` y representarlos como `org.eclipse.microprofile.jwt.JsonWebToken` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:94
msgid "It provides an alternative to `quarkus-oidc` Bearer Token Authentication Mechanism. It can currently verify only `JWT` tokens using the PEM keys or refreshable `JWK` key set."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:96
#, fuzzy
msgid "Additionally it provides `JWT Generation API` for creating `signed`, `inner-signed` and/or `encrypted` `JWT` tokens with ease."
msgstr "Además, proporciona `JWT Generation API` para crear fichas `signed` , `inner-signed` y/o `encrypted` `JWT` con facilidad."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:98
msgid "See the link:security-jwt[Using SmallRye JWT] guide for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:99
#, no-wrap
msgid "OAuth2"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:102
#, fuzzy
msgid "`quarkus-elytron-security-oauth2` provides an alternative to `quarkus-oidc` Bearer Token Authentication Mechanism. It is based on `Elytron` and is primarily meant for introspecting the opaque tokens remotely."
msgstr "`quarkus-elytron-security-oauth2` proporciona una alternativa al mecanismo de autenticación por token portador de `quarkus-oidc` . Se basa en `Elytron` y está pensado principalmente para introspeccionar los tokens opacos de forma remota."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:104
msgid "See the link:security-oauth2[Using OAuth2] guide for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:105
#, no-wrap
msgid "LDAP"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:108
msgid "Please see the link:security-ldap[Authenticate with LDAP] guide for more information about LDAP authentication mechanism."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:110
#, fuzzy, no-wrap
msgid "Identity Providers"
msgstr "Proveedores de identidad"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:113
#, fuzzy
msgid "`IdentityProvider` converts the authentication credentials provided by `HttpAuthenticationMechanism` to `SecurityIdentity`."
msgstr "`IdentityProvider` convierte las credenciales de autenticación proporcionadas por `HttpAuthenticationMechanism` en `SecurityIdentity` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:116
#, fuzzy
msgid "Some extensions such as `OIDC`, `OAuth2`, `SmallRye JWT`, `LDAP` have the inlined `IdentityProvider` implementations which are specific to the supported authentication flow.  For example, `quarkus-oidc` uses its own `IdentityProvider` to convert a token to `SecurityIdentity`."
msgstr "Algunas extensiones como `OIDC` , `OAuth2` , `SmallRye JWT` , `LDAP` tienen las implementaciones inlined `IdentityProvider` que son específicas para el flujo de autenticación soportado. Por ejemplo, `quarkus-oidc` utiliza su propio `IdentityProvider` para convertir un token en `SecurityIdentity` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:118
#, fuzzy
msgid "If you use `Basic` or `Form` HTTP-based authentication then you have to add an `IdentityProvider` which can convert a user name and password to `SecurityIdentity`."
msgstr "Si utiliza la autenticación basada en HTTP `Basic` o `Form` , deberá añadir un `IdentityProvider` que pueda convertir un nombre de usuario y una contraseña en `SecurityIdentity` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:121
msgid "See link:security-jpa[JPA IdentityProvider] and link:security-jdbc[JDBC IdentityProvider] for more information.  You can also use link:security-testing#configuring-user-information[User Properties IdentityProvider] for testing."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:122
#, fuzzy, no-wrap
msgid "Combining Authentication Mechanisms"
msgstr "Combinación de mecanismos de autenticación"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:126
#, fuzzy
msgid "One can combine multiple authentication mechanisms if they get the authentication credentials from the different sources.  For example, combining built-in `Basic` and `quarkus-oidc` `Bearer` authentication mechanisms is allowed, but combining `quarkus-oidc` `Bearer` and `smallrye-jwt` authentication mechanisms is not allowed because both will attempt to verify the token extracted from the HTTP `Authorization Bearer` scheme."
msgstr "Se pueden combinar varios mecanismos de autenticación si obtienen las credenciales de autenticación de las distintas fuentes. Por ejemplo, se permite combinar los mecanismos de autenticación incorporados `Basic` y `quarkus-oidc` `Bearer` , pero no se permite combinar los mecanismos de autenticación `quarkus-oidc` `Bearer` y `smallrye-jwt` porque ambos intentarán verificar el token extraído del esquema HTTP `Authorization Bearer` ."

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:127
#, fuzzy, no-wrap
msgid "Proactive Authentication"
msgstr "Autenticación proactiva"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:131
#, fuzzy
msgid "By default, Quarkus does what we call proactive authentication. This means that if an incoming request has a credential then that request will always be authenticated (even if the target page does not require authentication)."
msgstr "Por defecto, Quarkus hace lo que llamamos autenticación proactiva. Esto significa que si una solicitud entrante tiene una credencial, entonces esa solicitud siempre será autenticada (incluso si la página de destino no requiere autenticación)."

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:133
msgid "See link:security-built-in-authentication#proactive-authentication[Proactive Authentication] for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:134
#, fuzzy, no-wrap
msgid "Authorization"
msgstr "Autorización"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:137
msgid "See link:security-authorization[Security Authorization] for more information about Role Based Access Control and other authorization options."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:138
#, no-wrap
msgid "Customization and other useful tips"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:141
msgid "Quarkus Security is highly customizable. One can register custom ``HttpAuthenticationMechanism``s, ``IdentityProvider``s and ``SecurityidentityAugmentor``s."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:143
msgid "See link:security-customization[Security Customization] for more information about customizing Quarkus Security and other useful tips about the reactive security, registering the security providers, etc."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:144
#, fuzzy, no-wrap
msgid "Secure connections with SSL"
msgstr "Conexiones seguras con SSL"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:147
msgid "See the link:http-reference#ssl[Supporting secure connections with SSL] guide for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:148
#, fuzzy, no-wrap
msgid "Cross-Origin Resource Sharing"
msgstr "Compartir recursos entre orígenes"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:151
msgid "If you plan to make your Quarkus application accessible to another application running on a different domain, you will need to configure CORS (Cross-Origin Resource Sharing). Please read the link:http-reference#cors-filter[HTTP CORS documentation] for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:152
#, fuzzy, no-wrap
msgid "SameSite cookies"
msgstr "Cookies de SameSite"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:155
msgid "Please see link:vertx#same-site-cookie[SameSite cookies] for information about adding a https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite[SameSite] cookie property to any of the cookies set by a Quarkus endpoint."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:156
#, fuzzy, no-wrap
msgid "Testing"
msgstr "Probando"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:159
msgid "See link:security-testing[Security Testing] for more information about testing Quarkus Security."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/security.adoc:160
#, fuzzy, no-wrap
msgid "Secret Engines"
msgstr "Motores secretos"

#. type: Title ===
#: upstream/_versions/1.11/guides/security.adoc:161
#, fuzzy, no-wrap
msgid "Vault"
msgstr "Bóveda"

#. type: Plain text
#: upstream/_versions/1.11/guides/security.adoc:162
msgid "Quarkus provides a very comprehensive HashiCorp Vault support, please see the link:vault[Quarkus and HashiCorp Vault] documentation for more information."
msgstr ""
