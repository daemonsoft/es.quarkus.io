# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:6
#, no-wrap
msgid "Quarkus - GraphQL"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:12
msgid "This guide demonstrates how your Quarkus application can utilize the **Eclipse MicroProfile GraphQL** specification through the SmallRye GraphQL extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:14
#, fuzzy
msgid "As the https://www.graphql.org/[GraphQL] specification website states:"
msgstr "Tal y como indica el sitio web de la especificación  link:https://www.graphql.org/[GraphQL]"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:20
#, fuzzy
msgid "GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.  GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools."
msgstr "GraphQL es un lenguaje de consulta para API y un tiempo de ejecución para satisfacer esas consultas con sus datos existentes. GraphQL proporciona una descripción completa y comprensible de los datos de su API, da a los clientes el poder de pedir exactamente lo que necesitan y nada más, facilita la evolución de las API a lo largo del tiempo y habilita potentes herramientas para desarrolladores."

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:23
#, fuzzy, no-wrap
msgid ""
"**GraphQL** was originally developed by **Facebook** in 2012 and has been\n"
"an open standard since 2015.\n"
msgstr "*GraphQL* fue desarrollado originalmente por *Facebook* en 2012 y es un estándar abierto desde 2015."

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:26
#, fuzzy
msgid "GraphQL is not a replacement for REST API specification but merely an alternative. Unlike REST, GraphQL API's have the ability to benefit the client by:"
msgstr "GraphQL no es un sustituto de la especificación REST API, sino simplemente una alternativa. A diferencia de REST, las API GraphQL tienen la capacidad de beneficiar al cliente mediante:"

#. type: Labeled list
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:27
#, fuzzy, no-wrap
msgid "Preventing Over-fetching and Under-fetching"
msgstr "Prevención de la sobrecarga y la infracarga"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:33
#, fuzzy
msgid "REST API's are server-driven fixed data responses that cannot be determined by the client. Although the client does not require all the fields the client must retrieve all the data hence `Over-fetching`. A client may also require multiple REST API calls according to the first call (HATEOAS) to retrieve all the data that is required thereby `Under-fetching`."
msgstr "Las API REST son respuestas de datos fijos dirigidas por el servidor que el cliente no puede determinar. Aunque el cliente no requiera todos los campos el cliente debe recuperar todos los datos de ahí `Over-fetching` . Un cliente también puede requerir múltiples llamadas a la API REST según la primera llamada (HATEOAS) para recuperar todos los datos que se requieren de ahí `Under-fetching` ."

#. type: Labeled list
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:34
#, fuzzy, no-wrap
msgid "API Evolution"
msgstr "Evolución de la API"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:38
#, fuzzy
msgid "Since GraphQL API's returns data that are requested by the client adding additional fields and capabilities to existing API will not create breaking changes to existing clients."
msgstr "Dado que las API GraphQL devuelven datos que son solicitados por el cliente, añadir campos y capacidades adicionales a las API existentes no creará cambios de ruptura en los clientes existentes."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:39
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:42
#, fuzzy
msgid "To complete this guide, you need:"
msgstr "Para completar esta guía, necesitas:"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:44
#, fuzzy
msgid "less than 15 minutes"
msgstr "menos de 15 minutos"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:45
#, fuzzy
msgid "an IDE"
msgstr "un IDE"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:46
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:47
#, fuzzy
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {versión de Maven}"

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:48
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:52
#, fuzzy
msgid "In this guide, we build a simple GraphQL application that exposes a GraphQL API at `/graphql`."
msgstr "En esta guía, construimos una aplicación GraphQL sencilla que expone una API GraphQL en `/graphql` ."

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:54
#, fuzzy
msgid "This example was inspired by a popular GraphQL API."
msgstr "Este ejemplo está inspirado en una popular API GraphQL."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:55
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:59
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:61
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:63
#, fuzzy
msgid "The solution is located in the `microprofile-graphql-quickstart` {quickstarts-tree-url}/microprofile-graphql-quickstart[directory]."
msgstr "La solución se encuentra en `microprofile-graphql-quickstart` {quickstarts-tree-url}/microprofile-graphql-quickstart[directory]."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:64
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Creación del proyecto Maven"

#. type: quote
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:67
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:76
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=microprofile-graphql-quickstart \\\n"
"    -DclassName=\"org.acme.microprofile.graphql.FilmResource\" \\\n"
"    -Dextensions=\"resteasy,graphql\"\n"
"cd microprofile-graphql-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:79
msgid "This command generates a Maven project, importing the `smallrye-graphql` extension which is an implementation of the MicroProfile GraphQL specification used in Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:82
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `smallrye-graphql` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tiene configurado su proyecto Quarkus, puede añadir la extensión `smallrye-graphql` a su proyecto ejecutando el siguiente comando en el directorio base de su proyecto:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:86
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"graphql\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:89
#, fuzzy
msgid "This will add the following to your `pom.xml`:"
msgstr "Esto añadirá lo siguiente a su `pom.xml`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:96
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-graphql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:98
#, fuzzy, no-wrap
msgid "Preparing an Application: GraphQL API"
msgstr "Preparación de una aplicación: API GraphQL"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:101
#, fuzzy
msgid "In this section we will start creating the GraphQL API."
msgstr "En esta sección comenzaremos a crear la API GraphQL."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:103
#, fuzzy
msgid "First, create the following entities representing a film from a galaxy far far away:"
msgstr "En primer lugar, cree las siguientes entidades que representan una película de una galaxia muy muy lejana:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:107
#, no-wrap
msgid "package org.acme.microprofile.graphql;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:109
#, no-wrap
msgid "public class Film {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:114
#, no-wrap
msgid ""
"    private String title;\n"
"    private Integer episodeID;\n"
"    private String director;\n"
"    private LocalDate releaseDate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:118
#, no-wrap
msgid ""
"    public String getTitle() {\n"
"        return title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:122
#, no-wrap
msgid ""
"    public void setTitle(String title) {\n"
"        this.title = title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:126
#, no-wrap
msgid ""
"    public Integer getEpisodeID() {\n"
"        return episodeID;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:130
#, no-wrap
msgid ""
"    public void setEpisodeID(Integer episodeID) {\n"
"        this.episodeID = episodeID;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:134
#, no-wrap
msgid ""
"    public String getDirector() {\n"
"        return director;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:138
#, no-wrap
msgid ""
"    public void setDirector(String director) {\n"
"        this.director = director;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:142
#, no-wrap
msgid ""
"    public LocalDate getReleaseDate() {\n"
"        return releaseDate;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:146
#, no-wrap
msgid ""
"    public void setReleaseDate(LocalDate releaseDate) {\n"
"        this.releaseDate = releaseDate;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:148
#, no-wrap
msgid "}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:150
#, no-wrap
msgid "public class Hero {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:158
#, no-wrap
msgid ""
"    private String name;\n"
"    private String surname;\n"
"    private Double height;\n"
"    private Integer mass;\n"
"    private Boolean darkSide;\n"
"    private LightSaber lightSaber;\n"
"    private List<Integer> episodeIds = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:162
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:166
#, no-wrap
msgid ""
"    public void setName(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:170
#, no-wrap
msgid ""
"    public String getSurname() {\n"
"        return surname;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:174
#, no-wrap
msgid ""
"    public void setSurname(String surname) {\n"
"        this.surname = surname;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:178
#, no-wrap
msgid ""
"    public Double getHeight() {\n"
"        return height;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:182
#, no-wrap
msgid ""
"    public void setHeight(Double height) {\n"
"        this.height = height;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:186
#, no-wrap
msgid ""
"    public Integer getMass() {\n"
"        return mass;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:190
#, no-wrap
msgid ""
"    public void setMass(Integer mass) {\n"
"        this.mass = mass;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:194
#, no-wrap
msgid ""
"    public Boolean getDarkSide() {\n"
"        return darkSide;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:198
#, no-wrap
msgid ""
"    public void setDarkSide(Boolean darkSide) {\n"
"        this.darkSide = darkSide;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:202
#, no-wrap
msgid ""
"    public LightSaber getLightSaber() {\n"
"        return lightSaber;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:206
#, no-wrap
msgid ""
"    public void setLightSaber(LightSaber lightSaber) {\n"
"        this.lightSaber = lightSaber;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:210
#, no-wrap
msgid ""
"    public List<Integer> getEpisodeIds() {\n"
"        return episodeIds;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:215
#, no-wrap
msgid ""
"    public void setEpisodeIds(List<Integer> episodeIds) {\n"
"        this.episodeIds = episodeIds;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:219
#, no-wrap
msgid ""
"enum LightSaber {\n"
"    RED, BLUE, GREEN\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:223
#, fuzzy
msgid "The classes we have just created describe the GraphQL schema which is a set of possible data (objects, fields, relationships) that a client can access."
msgstr "Las clases que acabamos de crear describen el esquema GraphQL, que es un conjunto de datos posibles (objetos, campos, relaciones) a los que puede acceder un cliente."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:225
#, fuzzy
msgid "Let's continue with an example CDI bean, that would work as a repository:"
msgstr "Continuemos con un ejemplo de frijol CDI, que funcionaría como repositorio:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:230
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class GalaxyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:232
#, no-wrap
msgid "    private List<Hero> heroes = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:234
#, no-wrap
msgid "    private List<Film> films = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:236
#, no-wrap
msgid "    public GalaxyService() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:242
#, no-wrap
msgid ""
"        Film aNewHope = new Film();\n"
"        aNewHope.setTitle(\"A New Hope\");\n"
"        aNewHope.setReleaseDate(LocalDate.of(1977, Month.MAY, 25));\n"
"        aNewHope.setEpisodeID(4);\n"
"        aNewHope.setDirector(\"George Lucas\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:248
#, no-wrap
msgid ""
"        Film theEmpireStrikesBack = new Film();\n"
"        theEmpireStrikesBack.setTitle(\"The Empire Strikes Back\");\n"
"        theEmpireStrikesBack.setReleaseDate(LocalDate.of(1980, Month.MAY, 21));\n"
"        theEmpireStrikesBack.setEpisodeID(5);\n"
"        theEmpireStrikesBack.setDirector(\"George Lucas\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:254
#, no-wrap
msgid ""
"        Film returnOfTheJedi = new Film();\n"
"        returnOfTheJedi.setTitle(\"Return Of The Jedi\");\n"
"        returnOfTheJedi.setReleaseDate(LocalDate.of(1983, Month.MAY, 25));\n"
"        returnOfTheJedi.setEpisodeID(6);\n"
"        returnOfTheJedi.setDirector(\"George Lucas\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:258
#, no-wrap
msgid ""
"        films.add(aNewHope);\n"
"        films.add(theEmpireStrikesBack);\n"
"        films.add(returnOfTheJedi);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:267
#, no-wrap
msgid ""
"        Hero luke = new Hero();\n"
"        luke.setName(\"Luke\");\n"
"        luke.setSurname(\"Skywalker\");\n"
"        luke.setHeight(1.7);\n"
"        luke.setMass(73);\n"
"        luke.setLightSaber(LightSaber.GREEN);\n"
"        luke.setDarkSide(false);\n"
"        luke.getEpisodeIds().addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:275
#, no-wrap
msgid ""
"        Hero leia = new Hero();\n"
"        leia.setName(\"Leia\");\n"
"        leia.setSurname(\"Organa\");\n"
"        leia.setHeight(1.5);\n"
"        leia.setMass(51);\n"
"        leia.setDarkSide(false);\n"
"        leia.getEpisodeIds().addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:285
#, no-wrap
msgid ""
"        Hero vader = new Hero();\n"
"        vader.setName(\"Darth\");\n"
"        vader.setSurname(\"Vader\");\n"
"        vader.setHeight(1.9);\n"
"        vader.setMass(89);\n"
"        vader.setDarkSide(true);\n"
"        vader.setLightSaber(LightSaber.RED);\n"
"        vader.getEpisodeIds().addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:289
#, no-wrap
msgid ""
"        heroes.add(luke);\n"
"        heroes.add(leia);\n"
"        heroes.add(vader);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:291
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:295
#, no-wrap
msgid ""
"    public List<Film> getAllFilms() {\n"
"        return films;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:299
#, no-wrap
msgid ""
"    public Film getFilm(int id) {\n"
"        return films.get(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:305
#, no-wrap
msgid ""
"    public List<Hero> getHeroesByFilm(Film film) {\n"
"        return heroes.stream()\n"
"                .filter(hero -> hero.getEpisodeIds().contains(film.getEpisodeID()))\n"
"                .collect(Collectors.toList());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:309
#, no-wrap
msgid ""
"    public void addHero(Hero hero) {\n"
"        heroes.add(hero);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:313
#, no-wrap
msgid ""
"    public Hero deleteHero(int id) {\n"
"        return heroes.remove(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:320
#, no-wrap
msgid ""
"    public List<Hero> getHeroesBySurname(String surname) {\n"
"        return heroes.stream()\n"
"                .filter(hero -> hero.getSurname().equals(surname))\n"
"                .collect(Collectors.toList());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:323
#, fuzzy
msgid "Now, let's create our first GraphQL API."
msgstr "Ahora, vamos a crear nuestra primera API GraphQL."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:325
#, fuzzy
msgid "Edit the `org.acme.microprofile.graphql.FilmResource` class as following:"
msgstr "Edite la clase `org.acme.microprofile.graphql.FilmResource` como sigue:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:330
#, no-wrap
msgid ""
"@GraphQLApi // <1>\n"
"public class FilmResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:333
#, no-wrap
msgid ""
"    @Inject\n"
"    GalaxyService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:340
#, no-wrap
msgid ""
"    @Query(\"allFilms\") // <2>\n"
"    @Description(\"Get all Films from a galaxy far far away\") // <3>\n"
"    public List<Film> getAllFilms() {\n"
"        return service.getAllFilms();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:343
#, fuzzy
msgid "`@GraphQLApi` annotation indicates that the CDI bean will be a GraphQL endpoint"
msgstr "`@GraphQLApi` indica que el bean CDI será un punto final de GraphQL"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:344
#, fuzzy
msgid "`@Query` annotation defines that this method will be queryable with the name `allFilms`"
msgstr "`@Query` define que este método será consultable con el nombre `allFilms`"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:345
#, fuzzy
msgid "Documentation of the queryable method"
msgstr "Documentación del método queryable"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:348
#, fuzzy
msgid "The value of the `@Query` annotation is optional and would implicitly be defaulted to the method name if absent."
msgstr "El valor de la anotación `@Query` es opcional y se asignaría implícitamente por defecto al nombre del método si estuviera ausente."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:350
#, fuzzy
msgid "This way we have created our first queryable API which we will later expand."
msgstr "De esta manera hemos creado nuestra primera API consultable que luego ampliaremos."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:351
#, fuzzy, no-wrap
msgid "Launch"
msgstr "Lanzamiento"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:354
msgid "Launch the quarkus app:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:357
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:359
#, fuzzy, no-wrap
msgid "Introspect"
msgstr "Introspección"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:362
#, fuzzy
msgid "The full schema of the GraphQL API can be retrieved by calling the following:"
msgstr "El esquema completo de la API GraphQL puede recuperarse llamando a lo siguiente:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:366
#, no-wrap
msgid "curl http://localhost:8080/graphql/schema.graphql\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:369
#, fuzzy
msgid "The server will return the complete schema of the GraphQL API."
msgstr "El servidor devolverá el esquema completo de la API GraphQL."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:370
#, fuzzy, no-wrap
msgid "GraphiQL UI"
msgstr "GraphiQL UI"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:373
#, fuzzy
msgid "Experimental - not included in the MicroProfile specification"
msgstr "Experimental: no se incluye en la especificación del Microperfil"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:375
#, fuzzy
msgid "GraphiQL UI is a great tool permitting easy interaction with your GraphQL APIs."
msgstr "GraphiQL UI es una gran herramienta que permite una fácil interacción con sus APIs GraphQL."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:378
#, fuzzy
msgid "The Quarkus `smallrye-graphql` extension ships with `GraphiQL` and enables it by default in `dev` and `test` modes, but it can also be explicitly configured for `production` mode as well."
msgstr "La extensión `smallrye-graphql` de Quarkus se suministra con `GraphiQL` y la habilita por defecto en los modos `dev` y `test` , pero también puede configurarse explícitamente para el modo `production` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:380
msgid "GraphiQL can be accessed from http://localhost:8080/graphql-ui/ ."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:382
#, fuzzy
msgid "image:graphql-ui-screenshot01.png[alt=GraphQL UI]"
msgstr "image:graphql-ui-screenshot01.png[alt=GraphQL UI]"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:384
#, fuzzy
msgid "Have a look at the link:security-authorization[Authorization of Web Endpoints] Guide on how to add/remove security for the GraphQL UI."
msgstr "Eche un vistazo a la Guía de link:security-authorization[Autorización de Puntos Finales Web] sobre cómo añadir/eliminar seguridad para la GraphQL UI."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:385
#, fuzzy, no-wrap
msgid "Query the GraphQL API"
msgstr "Consulta de la API GraphQL"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:388
#, fuzzy
msgid "Now visit the GraphiQL page that has been deployed in `dev` mode."
msgstr "Ahora visite la página GraphiQL que ha sido desplegada en modo `dev` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:390
#, fuzzy
msgid "Enter the following query to GraphiQL and press the `play` button:"
msgstr "Introduzca la siguiente consulta en GraphiQL y pulse el botón `play` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:401
#, no-wrap
msgid ""
"query allFilms {\n"
"  allFilms {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:407
#, fuzzy
msgid "Since our query contains all the fields in the `Film` class we will retrieve all the fields in our response. Since GraphQL API responses are client determined, the client can choose which fields it will require."
msgstr "Dado que nuestra consulta contiene todos los campos de la clase `Film` , recuperaremos todos los campos en nuestra respuesta. Dado que las respuestas de la API GraphQL están determinadas por el cliente, éste puede elegir qué campos necesitará."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:411
#, fuzzy
msgid "Let's assume that our client only requires `title` and `releaseDate` making the previous call to the API `Over-fetching` of unnecessary data."
msgstr "Supongamos que nuestro cliente sólo necesita `title` y `releaseDate` con lo que la llamada anterior a la API `Over-fetching` de datos innecesarios."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:413
#, fuzzy
msgid "Enter the following query into GraphiQL and hit the `play` button:"
msgstr "Introduzca la siguiente consulta en GraphiQL y pulse el botón `play` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:422
#, no-wrap
msgid ""
"query allFilms {\n"
"  allFilms {\n"
"    title\n"
"    releaseDate\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:426
#, fuzzy
msgid "Notice in the response we have only retrieved the required fields.  Therefore, we have prevented `Over-fetching`."
msgstr "Observe que en la respuesta sólo hemos recuperado los campos obligatorios. Por lo tanto, hemos evitado `Over-fetching` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:429
#, fuzzy
msgid "Let's continue to expand our GraphQL API by adding the following to the `FilmResource` class."
msgstr "Sigamos ampliando nuestra API GraphQL añadiendo lo siguiente a la clase `FilmResource` ."

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:437
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    public Film getFilm(@Name(\"filmId\") int id) {\n"
"        return service.getFilm(id);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:442
#, fuzzy
msgid "Notice how we have excluded the value in the `@Query` annotation.  Therefore, the name of the query is implicitly set as the method name excluding the `get`."
msgstr "Observe cómo hemos excluido el valor en la anotación `@Query` . Por lo tanto, el nombre de la consulta se establece implícitamente como el nombre del método excluyendo el `get` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:444
msgid "This query will allow the client to retrieve the film by id."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:446
#, fuzzy
msgid "Enter the following into `GraphiQL` and make a request."
msgstr "Introduzca lo siguiente en `GraphiQL` y realice una solicitud."

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:457
#, no-wrap
msgid ""
"query getFilm {\n"
"  film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:462
#, fuzzy
msgid "The `film` query method requested fields can be determined as such in our previous example. This way we can retrieve individual film information."
msgstr "Los campos solicitados por el método de consulta `film` pueden determinarse como en nuestro ejemplo anterior. De esta forma podemos recuperar información individual de la película."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:466
#, fuzzy
msgid "However, say our client requires both films with filmId `0` and `1`.  In a REST API the client would have to make two calls to the API.  Therefore, the client would be `Under-fetching`."
msgstr "Sin embargo, digamos que nuestro cliente necesita las dos películas con filmId `0` y `1` . En una API REST el cliente tendría que hacer dos llamadas a la API. Por lo tanto, el cliente sería `Under-fetching` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:468
#, fuzzy
msgid "In GraphQL it is possible to make multiple queries at once."
msgstr "En GraphQL es posible realizar múltiples consultas a la vez."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:470
#, fuzzy
msgid "Enter the following into GraphiQL to retrieve two films:"
msgstr "Introduzca lo siguiente en GraphiQL para recuperar dos películas:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:487
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:594
#, no-wrap
msgid ""
"query getFilms {\n"
"  film0: film(filmId: 0) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"  film1: film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:490
#, fuzzy
msgid "This enabled the client to fetch the required data in a single request."
msgstr "Esto permitió al cliente obtener los datos necesarios en una sola petición."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:491
#, fuzzy, no-wrap
msgid "Expanding the API"
msgstr "Ampliación de la API"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:495
#, fuzzy
msgid "Until now, we have created a GraphQL API to retrieve film data.  We now want to enable the clients to retrieve the `Hero` data of the `Film`."
msgstr "Hasta ahora, hemos creado una API GraphQL para recuperar los datos de las películas. Ahora queremos que los clientes puedan recuperar los datos de `Hero` de la `Film` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:497
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:603
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:666
#, fuzzy
msgid "Add the following to our `FilmResource` class:"
msgstr "Añade lo siguiente a nuestra clase `FilmResource`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:503
#, no-wrap
msgid ""
"    public List<Hero> heroes(@Source Film film) { // <1>\n"
"        return service.getHeroesByFilm(film);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:506
#, fuzzy
msgid "Enable `List<Hero>` data to be added to queries that respond with `Film`"
msgstr "Permitir que los datos de `List&amp;lt;Hero&amp;gt;` se añadan a las consultas que responden con `Film`"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:510
#, fuzzy
msgid "By adding this method we have effectively changed the schema of the GraphQL API.  Although the schema has changed the previous queries will still work.  Since we only expanded the API to be able to retrieve the `Hero` data of the `Film`."
msgstr "Al añadir este método hemos cambiado efectivamente el esquema de la API GraphQL. Aunque el esquema haya cambiado las consultas anteriores seguirán funcionando. Dado que sólo hemos ampliado la API para poder recuperar los datos de `Hero` del `Film` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:512
#, fuzzy
msgid "Enter the following into GraphiQL to retrieve the film and hero data."
msgstr "Introduzca lo siguiente en GraphiQL para recuperar los datos de la película y del héroe."

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:530
#, no-wrap
msgid ""
"query getFilmHeroes {\n"
"  film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"    heroes {\n"
"      name\n"
"      height\n"
"      mass\n"
"      darkSide\n"
"      lightSaber\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:533
#, fuzzy
msgid "The response now includes the heroes of the film."
msgstr "La respuesta incluye ahora a los héroes de la película."

#. type: Title ===
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:534
#, fuzzy, no-wrap
msgid "Batching"
msgstr "Puesta en marcha"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:538
#, fuzzy
msgid "When you are exposing a `Collection` return like our `getAllFilms`, you might want to use the batch form of the above, to more efficiently fetch the heroes:"
msgstr "Cuando esté exponiendo una devolución de `Collection` como nuestra `getAllFilms` , es posible que desee utilizar la forma por lotes de lo anterior, para obtener los héroes de forma más eficiente:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:544
#, no-wrap
msgid ""
"    public List<List<Hero>> heroes(@Source List<Film> films) { // <1>\n"
"        // Here fetch all hero lists\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:547
#, fuzzy
msgid "Here receive the films as a batch, allowing you to fetch the corresponding heroes."
msgstr "Aquí se reciben las películas como un lote, lo que le permite buscar los héroes correspondientes."

#. type: Title ===
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:548
#, fuzzy, no-wrap
msgid "Reactive"
msgstr "Reactivo"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:551
#, fuzzy
msgid "Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, for example:"
msgstr "Las consultas pueden hacerse reactivas utilizando `Uni` , o `CompletionStage` como tipo de retorno, por ejemplo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:559
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    public Uni<Film> getFilm(@Name(\"filmId\") int id) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:562
#, fuzzy
msgid "Due to the underlying library, graphql-java, `Uni` is creating a `CompletionStage` under the hood."
msgstr "Debido a la biblioteca subyacente, graphql-java, `Uni` está creando un `CompletionStage` bajo el capó."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:564
#, fuzzy
msgid "Or you can use `CompletionStage`:"
msgstr "O puede utilizar `CompletionStage` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:572
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    public CompletionStage<Film> getFilm(@Name(\"filmId\") int id) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:575
#, fuzzy
msgid "Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently."
msgstr "Utilizar `Uni` o `CompletionStage` significa que cuando una solicitud contenga más de una consulta, éstas se ejecutarán de forma concurrente."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:577
#, fuzzy
msgid "For instance, the query below will fetch `film0` and `film1` concurrently:"
msgstr "Por ejemplo, la siguiente consulta recuperará `film0` y `film1` simultáneamente:"

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:596
#, fuzzy, no-wrap
msgid "Mutations"
msgstr "Mutaciones"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:599
#, fuzzy
msgid "Mutations are used when data is created, updated or deleted."
msgstr "Las mutaciones se utilizan cuando se crean, actualizan o eliminan datos."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:601
#, fuzzy
msgid "Let's now add the ability to add and delete heroes to our GraphQL API."
msgstr "Ahora vamos a añadir la capacidad de añadir y eliminar héroes a nuestra API GraphQL."

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:611
#, no-wrap
msgid ""
"    @Mutation\n"
"    public Hero createHero(Hero hero) {\n"
"        service.addHero(hero);\n"
"        return hero;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:616
#, no-wrap
msgid ""
"    @Mutation\n"
"    public Hero deleteHero(int id) {\n"
"        return service.deleteHero(id);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:619
#, fuzzy
msgid "Enter the following into `GraphiQL` to insert a `Hero`:"
msgstr "Introduzca lo siguiente en `GraphiQL` para insertar un `Hero` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:637
#, no-wrap
msgid ""
"mutation addHero {\n"
"  createHero(hero: {\n"
"      name: \"Han\",\n"
"      surname: \"Solo\"\n"
"      height: 1.85\n"
"      mass: 80\n"
"      darkSide: false\n"
"      episodeIds: [4, 5, 6]\n"
"  \t}\n"
"  )\n"
"  {\n"
"    name\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:640
#, fuzzy
msgid "By using this mutation we have created a `Hero` entity in our service."
msgstr "Al utilizar esta mutación hemos creado una entidad `Hero` en nuestro servicio."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:645
#, fuzzy
msgid "Notice how in the response we have retrieved the `name` and `surname` of the created Hero. This is because we selected to retrieve these fields in the response within the `{ }` in the mutation query.  This can easily be a server side generated field that the client may require."
msgstr "Observe cómo en la respuesta hemos recuperado los `name` y `surname` del Héroe creado. Esto se debe a que hemos seleccionado recuperar estos campos en la respuesta dentro de `{ }` en la consulta de mutación. Esto puede ser fácilmente un campo generado del lado del servidor que el cliente pueda requerir."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:647
#, fuzzy
msgid "Let's now try deleting an entry:"
msgstr "Intentemos ahora borrar una entrada:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:655
#, no-wrap
msgid ""
"mutation DeleteHero {\n"
"  deleteHero(id :3){\n"
"    name\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:659
#, fuzzy
msgid "Similar to the `createHero` mutation method we also retrieve the `name` and `surname` of the hero we have deleted which is defined in `{ }`."
msgstr "De forma similar al método de mutación `createHero` también recuperamos los `name` y `surname` del héroe que hemos eliminado y que se define en `{ }` ."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:660
#, fuzzy, no-wrap
msgid "Creating Queries by fields"
msgstr "Creación de consultas por campos"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:664
#, fuzzy
msgid "Queries can also be done on individual fields. For example, let's create a method to query heroes by their last name."
msgstr "Las consultas también pueden realizarse sobre campos individuales. Por ejemplo, creemos un método para consultar a los héroes por su apellido."

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:673
#, no-wrap
msgid ""
"    @Query\n"
"    public List<Hero> getHeroesWithSurname(@DefaultValue(\"Skywalker\") String surname) {\n"
"        return service.getHeroesBySurname(surname);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:677
#, fuzzy
msgid "By using the `@DefaultValue` annotation we have determined that the surname value will be `Skywalker` when the parameter is not provided."
msgstr "Utilizando la anotación `@DefaultValue` hemos determinado que el valor del apellido será `Skywalker` cuando no se proporcione el parámetro."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:679
#, fuzzy
msgid "Test the following queries with GraphiQL:"
msgstr "Pruebe las siguientes consultas con GraphiQL:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:696
#, no-wrap
msgid ""
"query heroWithDefaultSurname {\n"
"  heroesWithSurname{\n"
"    name\n"
"    surname\n"
"    lightSaber\n"
"  }\n"
"}\n"
"query heroWithSurnames {\n"
"  heroesWithSurname(surname: \"Vader\") {\n"
"    name\n"
"    surname\n"
"    lightSaber\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:698
#, fuzzy, no-wrap
msgid "Context"
msgstr "Contexto"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:701
#, fuzzy
msgid "You can get information about the GraphQL request anywhere in your code, using this experimental, SmallRye specific feature:"
msgstr "Puede obtener información sobre la solicitud GraphQL en cualquier parte de su código, utilizando esta función experimental y específica de SmallRye:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:706
#, no-wrap
msgid ""
"@Inject\n"
"Context context;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:709
#, fuzzy
msgid "The context object allows you to get:"
msgstr "El objeto de contexto le permite obtener:"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:711
#, fuzzy
msgid "the original request (Query/Mutation)"
msgstr "la solicitud original (Consulta/Mutación)"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:712
#, fuzzy
msgid "the arguments"
msgstr "los argumentos"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:713
#, fuzzy
msgid "the path"
msgstr "el camino"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:714
#, fuzzy
msgid "the selected fields"
msgstr "los campos seleccionados"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:715
#, fuzzy
msgid "any variables"
msgstr "cualquier variable"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:717
#, fuzzy
msgid "This allows you to optimize the downstream queries to the datastore."
msgstr "Esto permite optimizar las consultas posteriores al almacén de datos."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:719
#, fuzzy
msgid "See the https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] for more details."
msgstr "Consulte el  link:https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] para más detalles."

#. type: Title ===
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:720
#, fuzzy, no-wrap
msgid "GraphQL-Java"
msgstr "GraphQL-Java"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:723
#, fuzzy
msgid "This context object also allows you to fall down to the underlying https://www.graphql-java.com/[graphql-java] features by using the leaky abstraction:"
msgstr "Este objeto de contexto también permite bajar a las características subyacentes  link:https://www.graphql-java.com/[de graphql-java] utilizando la abstracción de fuga:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:727
#, no-wrap
msgid "DataFetchingEnvironment dfe = context.unwrap(DataFetchingEnvironment.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:730
#, fuzzy
msgid "You can also get access to the underlying `graphql-java` during schema generation, to add your own features directly:"
msgstr "También puede acceder a la página web subyacente `graphql-java` durante la generación del esquema, para añadir sus propias características directamente:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:734
#, no-wrap
msgid "public GraphQLSchema.Builder addMyOwnEnum(@Observes GraphQLSchema.Builder builder) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:741
#, no-wrap
msgid ""
"    // Here add your own features directly, example adding an Enum\n"
"    GraphQLEnumType myOwnEnum = GraphQLEnumType.newEnum()\n"
"            .name(\"SomeEnum\")\n"
"            .description(\"Adding some enum type\")\n"
"            .value(\"value1\")\n"
"            .value(\"value2\").build();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:744
#, no-wrap
msgid ""
"    return builder.additionalType(myOwnEnum);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:747
#, fuzzy
msgid "By using the `@Observer` you can add anything to the Schema builder."
msgstr "Utilizando el `@Observer` puede añadir cualquier cosa al constructor de esquemas."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:748
#, fuzzy, no-wrap
msgid "Map to Scalar"
msgstr "Mapa a Scalar"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:752
#, fuzzy
msgid "Another SmallRye specific experimental feature, allows you to map an existing scalar (that is mapped by the implementation to a certain Java type) to another type, or to map complex object, that would typically create a `Type` or `Input` in GraphQL, to an existing scalar."
msgstr "Otra característica experimental específica de SmallRye, le permite mapear un escalar existente (que es mapeado por la implementación a un cierto tipo Java) a otro tipo, o mapear un objeto complejo, que típicamente crearía un `Type` o `Input` en GraphQL, a un escalar existente."

#. type: Title ===
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:753
#, fuzzy, no-wrap
msgid "Mapping an existing Scalar to another type:"
msgstr "Mapeo de un Scalar existente a otro tipo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:758
#, no-wrap
msgid "public class Movie {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:761
#, no-wrap
msgid ""
"    @ToScalar(Scalar.Int.class)\n"
"    Long idLongThatShouldChangeToInt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:764
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:779
#, no-wrap
msgid ""
"    // ....\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:767
#, fuzzy
msgid "Above will map the `Long` java type to an `Int` Scalar type, rather than the https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[default] `BigInteger`."
msgstr "Lo anterior mapeará el tipo java `Long` a un tipo escalar `Int` , en lugar del link:https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[predeterminado] `BigInteger` ."

#. type: Title ===
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:768
#, fuzzy, no-wrap
msgid "Mapping a complex object to a Scalar type:"
msgstr "Asignación de un objeto complejo a un tipo escalar:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:773
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:776
#, no-wrap
msgid ""
"    @ToScalar(Scalar.String.class)\n"
"    Phone phone;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:782
#, fuzzy
msgid "This will, rather than creating a `Type` or `Input` in GraphQL, map to a String scalar."
msgstr "Esto, en lugar de crear un `Type` o `Input` en GraphQL, mapeará a un escalar String."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:786
#, fuzzy
msgid "To be able to do the above, the `Phone` object needs to have a constructor that takes a String (or `Int` / `Date` / etc.), or have a setter method for the String (or `Int` / `Date` / etc.), or have a `fromString` (or `fromInt` / `fromDate` - depending on the Scalar type) static method."
msgstr "Para poder hacer lo anterior, el objeto `Phone` necesita tener un constructor que tome una Cadena (o `Int` / `Date` / etc.), o tener un método setter para la Cadena (o `Int` / `Date` / etc.), o tener un método estático `fromString` (o `fromInt` / `fromDate` - dependiendo del tipo Scalar)."

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:788
#, fuzzy
msgid "For example:"
msgstr "Por ejemplo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:792
#, no-wrap
msgid "public class Phone {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:794
#, no-wrap
msgid "    private String number;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:796
#, no-wrap
msgid "    // Getters and setters....\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:803
#, no-wrap
msgid ""
"    public static Phone fromString(String number) {\n"
"        Phone phone = new Phone();\n"
"        phone.setNumber(number);\n"
"        return phone;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:806
#, fuzzy
msgid "See more about the `@ToScalar` feature in the https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.0.6/index.html?io/smallrye/graphql/api/ToScalar.html[JavaDoc]."
msgstr "Consulte más información sobre la función `@ToScalar` en link:https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.0.6/index.html?io/smallrye/graphql/api/ToScalar.html[el JavaDoc] ."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:807
#, fuzzy, no-wrap
msgid "Error code"
msgstr "Código de error"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:810
#, fuzzy
msgid "You can add an error code on the error output in the GraphQL response by using the (SmallRye specific) `@ErrorCode`:"
msgstr "Puede añadir un código de error en la salida de error en la respuesta GraphQL utilizando el (específico de SmallRye) `@ErrorCode`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:817
#, no-wrap
msgid ""
"@ErrorCode(\"some-business-error-code\")\n"
"public class SomeBusinessException extends RuntimeException {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:820
#, fuzzy
msgid "When `SomeBusinessException` occurs, the error output will contain the Error code:"
msgstr "Cuando se produce `SomeBusinessException`, la salida de error contendrá el código de error:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:847
#, no-wrap
msgid ""
"{\n"
"    \"errors\": [\n"
"        {\n"
"            \"message\": \"Unexpected failure in the system. Jarvis is working to fix it.\",\n"
"            \"locations\": [\n"
"                {\n"
"                    \"line\": 2,\n"
"                    \"column\": 3\n"
"                }\n"
"            ],\n"
"            \"path\": [\n"
"                \"annotatedCustomBusinessException\"\n"
"            ],\n"
"            \"extensions\": {\n"
"                \"exception\": \"io.smallrye.graphql.test.apps.error.api.ErrorApi$AnnotatedCustomBusinessException\",\n"
"                \"classification\": \"DataFetchingException\",\n"
"                \"code\": \"some-business-error-code\" <1>\n"
"            }\n"
"        }\n"
"    ],\n"
"    \"data\": {\n"
"        ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:850
#, fuzzy
msgid "The error code"
msgstr "El código de error"

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:851
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusión"

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:855
msgid "MicroProfile GraphQL enables clients to retrieve the exact data that is required preventing `Over-fetching` and `Under-fetching`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:858
#, fuzzy
msgid "The GraphQL API can be expanded without breaking previous queries enabling easy API `evolution`."
msgstr "La API GraphQL puede ampliarse sin romper las consultas anteriores, lo que facilita la API `evolution` ."

#. type: Title ==
#: upstream/_versions/1.11/guides/microprofile-graphql.adoc:860
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"
