# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:6
#, no-wrap
msgid "Quarkus - Scheduler Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:20
#, fuzzy
msgid "Modern applications often need to run specific tasks periodically.  There are two scheduler extensions in Quarkus.  The `quarkus-scheduler` extension brings the API and a lightweight in-memory scheduler implementation.  The `quarkus-quartz` extension implements the API from the `quarkus-scheduler` extension and contains a scheduler implementation based on the Quartz library.  You will only need `quarkus-quartz` for more advanced scheduling use cases, such as persistent tasks, clustering and programmatic scheduling of jobs."
msgstr "Las aplicaciones modernas a menudo necesitan ejecutar tareas específicas periódicamente. Hay dos extensiones de planificador en Quarkus. La extensión `quarkus-scheduler` aporta la API y una implementación ligera del planificador en memoria. La extensión `quarkus-quartz` implementa la API de la extensión `quarkus-scheduler` y contiene una implementación del planificador basada en la biblioteca Quartz. Sólo necesitará `quarkus-quartz` para los casos de uso de programación más avanzados, como las tareas persistentes, la agrupación en clústeres y la programación programática de trabajos."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:22
#, fuzzy
msgid "If you add the `quarkus-quartz` dependency to your project the lightweight scheduler implementation from the `quarkus-scheduler` extension is automatically disabled."
msgstr "Si añade la dependencia de `quarkus-quartz` a su proyecto, la implementación del programador ligero de la extensión `quarkus-scheduler` se desactiva automáticamente."

#. type: Title ==
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:23
#, fuzzy, no-wrap
msgid "Scheduled Methods"
msgstr "Métodos programados"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:28
#, fuzzy
msgid "If you annotate a method with `@io.quarkus.scheduler.Scheduled` it is automatically scheduled for invocation.  In fact, such a method must be a non-private non-static method of a CDI bean.  As a consequence of being a method of a CDI bean a scheduled method can be annotated with interceptor bindings, such as `@javax.transaction.Transactional` and `@org.eclipse.microprofile.metrics.annotation.Counted`."
msgstr "Si anota un método con `@io.quarkus.scheduler.Scheduled` se programa automáticamente para su invocación. De hecho, dicho método debe ser un método no privado no estático de un frijol CDI. Como consecuencia de ser un método de un bean CDI un método programado puede ser anotado con bindings interceptores, como `@javax.transaction.Transactional` y `@org.eclipse.microprofile.metrics.annotation.Counted` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:30
#, fuzzy
msgid "If there is no CDI scope defined on the declaring class then `@Singleton` is used."
msgstr "Si no hay un ámbito CDI definido en la clase declarante, entonces se utiliza `@Singleton` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:32
#, fuzzy
msgid "Furthermore, the annotated method must return `void` and either declare no parameters or one parameter of type `io.quarkus.scheduler.ScheduledExecution`."
msgstr "Además, el método anotado debe devolver `void` y no declarar ningún parámetro o un parámetro de tipo `io.quarkus.scheduler.ScheduledExecution`."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:34
#, fuzzy
msgid "The annotation is repeatable so a single method could be scheduled multiple times."
msgstr "La anotación es repetible, por lo que un mismo método puede programarse varias veces."

#. type: Title ===
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:35
#, fuzzy, no-wrap
msgid "Triggers"
msgstr "Disparadores"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:40
#, fuzzy
msgid "A trigger is defined either by the `@Scheduled#cron()` or by the `@Scheduled#every()` attributes.  If both are specified, the cron expression takes precedence.  If none is specified, the build fails with an `IllegalStateException`."
msgstr "Un desencadenante se define mediante los atributos `@Scheduled#cron()` o `@Scheduled#every()` . Si se especifican ambos, la expresión cron tiene prioridad. Si no se especifica ninguna, la compilación falla con un `IllegalStateException` ."

#. type: Title ====
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:41
#, fuzzy, no-wrap
msgid "CRON"
msgstr "CRON"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:45
#, fuzzy
msgid "A CRON trigger is defined by a cron-like expression.  For example `\"0 15 10 * * ?\"` fires at 10:15am every day."
msgstr "Un disparador CRON se define mediante una expresión similar a cron. Por ejemplo `\"0 15 10 * * ?\"` dispara a las 10:15 todos los días."

#. type: Block title
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:46
#, fuzzy, no-wrap
msgid "CRON Trigger Example"
msgstr "Ejemplo de activación de CRON"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:51
#, no-wrap
msgid ""
"@Scheduled(cron = \"0 15 10 * * ?\")\n"
"void fireAt10AmEveryDay() { }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:56
#, fuzzy
msgid "The syntax used in CRON expressions is controlled by the `quarkus.scheduler.cron-type` property.  The values can be `cron4j`, `quartz`, `unix` and `spring`.  `quartz` is used by default."
msgstr "La sintaxis utilizada en las expresiones CRON está controlada por la propiedad `quarkus.scheduler.cron-type` . Los valores pueden ser `cron4j` , `quartz` , `unix` y `spring` . `quartz` se utiliza por defecto."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:58
msgid "If a CRON expression starts with `{` and ends with `}` then the scheduler attempts to find a corresponding config property and use the configured value instead."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:59
#, fuzzy, no-wrap
msgid "CRON Config Property Example"
msgstr "Ejemplo de propiedad CRON Config"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:64
#, no-wrap
msgid ""
"@Scheduled(cron = \"{myMethod.cron.expr}\")\n"
"void myMethod() { }\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:66
#, fuzzy, no-wrap
msgid "Intervals"
msgstr "Intervalos"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:72
#, fuzzy
msgid "An interval trigger defines a period between invocations.  The period expression is based on the ISO-8601 duration format `PnDTnHnMn.nS` and the value of `@Scheduled#every()` is parsed with `java.time.Duration#parse(CharSequence)`.  However, if an expression starts with a digit then the `PT` prefix is added automatically.  So for example, `15m` can be used instead of `PT15M` and is parsed as \"15 minutes\"."
msgstr "Un activador de intervalo define un periodo entre invocaciones. La expresión de periodo se basa en el formato de duración ISO-8601 `PnDTnHnMn.nS` y el valor de `@Scheduled#every()` se analiza con `java.time.Duration#parse(CharSequence)` . Sin embargo, si una expresión comienza con un dígito, se añade automáticamente el prefijo `PT` . Así, por ejemplo, se puede utilizar `15m` en lugar de `PT15M` y se interpreta como \"15 minutos\"."

#. type: Block title
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:73
#, fuzzy, no-wrap
msgid "Interval Trigger Example"
msgstr "Ejemplo de disparo a intervalos"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:78
#, no-wrap
msgid ""
"@Scheduled(every = \"15m\")\n"
"void every15Mins() { }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:81
msgid "If a value starts with `{` and ends with `}` then the scheduler attempts to find a corresponding config property and use the configured value instead."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:82
#, fuzzy, no-wrap
msgid "Interval Config Property Example"
msgstr "Ejemplo de propiedad Interval Config"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:87
#, no-wrap
msgid ""
"@Scheduled(every = \"{myMethod.every.expr}\")\n"
"void myMethod() { }\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:89
#, fuzzy, no-wrap
msgid "Identity"
msgstr "Identidad"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:94
#, fuzzy
msgid "By default, a unique id is generated for each scheduled method.  This id is used in log messages and during debugging.  Sometimes a possibility to specify an explicit id may come in handy."
msgstr "Por defecto, se genera un id único para cada método programado. Este id se utiliza en los mensajes de registro y durante la depuración. A veces puede resultar útil la posibilidad de especificar un id explícito."

#. type: Block title
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:95
#, fuzzy, no-wrap
msgid "Identity Example"
msgstr "Ejemplo de identidad"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:100
#, no-wrap
msgid ""
"@Scheduled(identity = \"myScheduledMethod\")\n"
"void myMethod() { }\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:102
#, fuzzy, no-wrap
msgid "Delayed Execution"
msgstr "Ejecución retardada"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:105
#, fuzzy
msgid "`@Scheduled` provides two ways to delay the time a trigger should start firing at."
msgstr "`@Scheduled` proporciona dos maneras de retrasar el momento en que un disparador debe comenzar a disparar."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:107
#, fuzzy
msgid "`@Scheduled#delay()` and `@Scheduled#delayUnit()` form the initial delay together."
msgstr "`@Scheduled#delay()` y `@Scheduled#delayUnit()` forman juntos el retraso inicial."

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:112
#, no-wrap
msgid ""
"@Scheduled(every = \"2s\", delay = 2, delayUnit = TimeUnit.HOUR) <1>\n"
"void everyTwoSeconds() { }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:114
#, fuzzy
msgid "The trigger fires for the first time two hours after the application start."
msgstr "El activador se dispara por primera vez dos horas después del inicio de la aplicación."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:116
#, fuzzy
msgid "The final value is always rounded to full second."
msgstr "El valor final se redondea siempre al segundo completo."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:121
#, fuzzy
msgid "`@Scheduled#delayed()` is a text alternative to the properties above.  The period expression is based on the ISO-8601 duration format `PnDTnHnMn.nS` and the value is parsed with `java.time.Duration#parse(CharSequence)`.  However, if an expression starts with a digit, the `PT` prefix is added automatically.  So for example, `15s` can be used instead of `PT15S` and is parsed as \"15 seconds\"."
msgstr "`@Scheduled#delayed()` es una alternativa textual a las propiedades anteriores. La expresión del periodo se basa en el formato de duración ISO-8601 `PnDTnHnMn.nS` y el valor se analiza con `java.time.Duration#parse(CharSequence)` . Sin embargo, si una expresión comienza con un dígito, el prefijo `PT` se añade automáticamente. Así, por ejemplo, se puede utilizar `15s` en lugar de `PT15S` y se interpreta como \"15 segundos\"."

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:126
#, no-wrap
msgid ""
"@Scheduled(every = \"2s\", delayed = \"2h\")\n"
"void everyTwoSeconds() { }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:129
msgid "If `@Scheduled#delay()` is set to a value greater then zero the value of `@Scheduled#delayed()` is ignored."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:132
msgid "The main advantage over `@Scheduled#delay()` is that the value is configurable.  If the value starts with `{` and ends with `}` then the scheduler attempts to find a corresponding config property and use the configured value instead:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:137
#, no-wrap
msgid ""
"@Scheduled(every = \"2s\", delayed = \"{myMethod.delay.expr}\") <1>\n"
"void everyTwoSeconds() { }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:139
#, fuzzy
msgid "The config property `myMethod.delay.expr` is used to set the delay."
msgstr "La propiedad de configuración `myMethod.delay.expr` se utiliza para establecer el retraso."

#. type: Title ===
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:141
#, fuzzy, no-wrap
msgid "Concurrent Execution"
msgstr "Ejecución concurrente"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:145
#, fuzzy
msgid "By default, a scheduled method can be executed concurrently.  Nevertheless, it is possible to specify the strategy to handle concurrent executions via `@Scheduled#concurrentExecution()`."
msgstr "Por defecto, un método programado puede ejecutarse de forma concurrente. No obstante, es posible especificar la estrategia para manejar las ejecuciones concurrentes a través de `@Scheduled#concurrentExecution()` ."

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:149
#, no-wrap
msgid "import static io.quarkus.scheduler.Scheduled.ConcurrentExecution.SKIP;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:154
#, no-wrap
msgid ""
"@Scheduled(every = \"1s\", concurrentExecution = SKIP) <1>\n"
"void nonConcurrent() {\n"
"  // we can be sure that this method is never executed concurrently\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:156
#, fuzzy
msgid "Concurrent executions are skipped."
msgstr "Se saltan las ejecuciones concurrentes."

#. type: Title ==
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:157
#, fuzzy, no-wrap
msgid "Scheduler"
msgstr "Programador"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:160
msgid "Quarkus provides a built-in bean of type `io.quarkus.scheduler.Scheduler` that can be injected and used to pause/resume the scheduler."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:161
#, fuzzy, no-wrap
msgid "Scheduler Injection Example"
msgstr "Ejemplo de inyección del programador"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:165
#, no-wrap
msgid "import io.quarkus.scheduler.Scheduler;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:167
#, no-wrap
msgid "class MyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:170
#, no-wrap
msgid ""
"   @Inject\n"
"   Scheduler scheduler;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:179
#, no-wrap
msgid ""
"   void ping() {\n"
"      scheduler.pause(); <1>\n"
"      if (scheduler.isRunning()) {\n"
"         throw new IllegalStateException(\"This should never happen!\");\n"
"      }\n"
"      scheduler.resume(); <2>\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:181
#, fuzzy
msgid "Pause all triggers."
msgstr "Poner en pausa todos los activadores."

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:182
#, fuzzy
msgid "Resume the scheduler."
msgstr "Reanudar el programador."

#. type: Title ==
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:183
#, fuzzy, no-wrap
msgid "Programmatic Scheduling"
msgstr "Programación de horarios"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:186
msgid "If you need to schedule a job programmatically you'll need to add the link:quartz[Quartz extension] and use the Quartz API directly."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:187
#, fuzzy, no-wrap
msgid "Programmatic Scheduling with Quartz API"
msgstr "Programación con la API de Quartz"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:191
#, no-wrap
msgid "import org.quartz.Scheduler;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:193
#, no-wrap
msgid "class MyJobs {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:208
#, no-wrap
msgid ""
"    void onStart(@Observes StartupEvent event, Scheduler quartz) throws SchedulerException {\n"
"        JobDetail job = JobBuilder.newJob(SomeJob.class)\n"
"                .withIdentity(\"myJob\", \"myGroup\")\n"
"                .build();\n"
"        Trigger trigger = TriggerBuilder.newTrigger()\n"
"                .withIdentity(\"myTrigger\", \"myGroup\")\n"
"                .startNow()\n"
"                .withSchedule(SimpleScheduleBuilder.simpleSchedule()\n"
"                        .withIntervalInSeconds(1)\n"
"                        .repeatForever())\n"
"                .build();\n"
"        quartz.scheduleJob(job, trigger);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:211
#, fuzzy
msgid "By default, the scheduler is not started unless a `@Scheduled` business method is found. You may need to force the start of the scheduler for \"pure\" programmatic scheduling. See also <<quartz.adoc#quartz-configuration-reference,Quartz Configuration Reference>>."
msgstr "Por defecto, el programador no se inicia a menos que se encuentre un método de negocio `@Scheduled` . Puede que necesite forzar el inicio del planificador para una programación \"puramente\" programática. Consulte también la xref:quartz.adoc#quartz-configuration-reference[Referencia de configuración de Quartz] ."

#. type: Title ==
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:212
#, fuzzy, no-wrap
msgid "Scheduled Methods and Testing"
msgstr "Métodos y pruebas programadas"

#. type: Plain text
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:218
#, fuzzy
msgid "It is often desirable to disable the scheduler when running the tests.  The scheduler can be disabled through the runtime config property `quarkus.scheduler.enabled`.  If set to `false` the scheduler is not started even though the application contains scheduled methods.  You can even disable the scheduler for particular <<getting-started-testing#testing_different_profiles,Test Profiles>>."
msgstr "A menudo es conveniente desactivar el programador cuando se ejecutan las pruebas. El programador puede desactivarse a través de la propiedad de configuración en tiempo de ejecución `quarkus.scheduler.enabled` . Si se establece en `false` , el programador no se inicia aunque la aplicación contenga métodos programados. Incluso puede desactivar el programador para determinados xref:getting-started-testing.adoc#testing_different_profiles[perfiles de prueba] ."

#. type: Title ==
#: upstream/_versions/1.11/guides/scheduler-reference.adoc:219
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"
