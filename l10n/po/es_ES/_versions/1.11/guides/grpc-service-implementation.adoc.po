# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:6
#, fuzzy, no-wrap
msgid "Implementing a gRPC Service"
msgstr "Implementación de un servicio gRPC"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:11
msgid "gRPC service implementations exposed as beans are automatically registered and served by quarkus-grpc."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:14
#, fuzzy
msgid "Implementing a gRPC service requires the gRPC classes to be generated.  Place your `proto` files in `src/main/proto` and run `mvn compile`."
msgstr "La implementación de un servicio gRPC requiere que se generen las clases gRPC. Coloque sus archivos `proto` en `src/main/proto` y ejecute `mvn compile` ."

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:15
#, no-wrap
msgid "Implementation base"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:18
msgid "The generation has created 2 implementation bases:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:20
msgid "One using the default gRPC API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:21
msgid "One using the Mutiny API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:24
msgid "The first classname is structured as follows: `${NAME_OF_THE_SERVICE}Grpc.${NAME_OF_THE_SERVICE}ImplBase`.  The second classname is structured as follows: `Mutiny${NAME_OF_THE_SERVICE}Grpc.${NAME_OF_THE_SERVICE}ImplBase`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:26
msgid "For example, if you use `Greeter` as service name as in:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:32
#, no-wrap
msgid ""
"service Greeter {\n"
"    rpc SayHello (HelloRequest) returns (HelloReply) {}\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:36
msgid "The regular implementation base is: `GreeterGrpc.GreeterImplBase`.  The second implementation base is: `MutinyGreeterGrpc.GreeterImplBase`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:39
msgid "Note that these classes are not interfaces but regular classes.  When extending them, you need to override the service methods defined in the service definition."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:40
#, no-wrap
msgid "Implementing a service with the default gRPC API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:45
msgid "To implement a gRPC service using the default gRPC API, create a class extending the default implementation base.  Then, override the methods defined in the service interface.  Finally, implement the service as a CDI bean using the `@Singleton` annotation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:49
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:73
#, no-wrap
msgid "import javax.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:52
#, no-wrap
msgid ""
"@Singleton\n"
"public class HelloService extends GreeterGrpc.GreeterImplBase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:61
#, no-wrap
msgid ""
"    @Override\n"
"    public void sayHello(HelloRequest request, StreamObserver<HelloReply> responseObserver) {\n"
"        String name = request.getName();\n"
"        String message = \"Hello \" + name;\n"
"        responseObserver.onNext(HelloReply.newBuilder().setMessage(message).build());\n"
"        responseObserver.onCompleted();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:63
#, no-wrap
msgid "Implementing a service with the Mutiny API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:69
msgid "To implement a gRPC service using the Mutiny gRPC API, create a class extending the Mutiny implementation base.  Then, override the methods defined in the service interface.  These methods are using Mutiny types.  Finally, implement the service as a CDI bean using the `@Singleton` annotation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:76
#, no-wrap
msgid ""
"@Singleton\n"
"public class ReactiveHelloService extends MutinyGreeterGrpc.GreeterImplBase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:84
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<HelloReply> sayHello(HelloRequest request) {\n"
"        return Uni.createFrom().item(() ->\n"
"                HelloReply.newBuilder().setMessage(\"Hello \" + request.getName()).build()\n"
"        );\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:86
#, no-wrap
msgid "Blocking service implementation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:91
#, fuzzy
msgid "By default, all the methods from a gRPC service run on the event loop.  As a consequence, you must **not** block.  If your service logic must block, annotate the method with `io.smallrye.common.annotation.Blocking`:"
msgstr "Por defecto, todos los métodos de un servicio gRPC se ejecutan en el bucle de eventos. En consecuencia, *no* deben bloquearse. Si la lógica de su servicio debe bloquearse, anote el método con `io.smallrye.common.annotation.Blocking` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:99
#, no-wrap
msgid ""
"@Override\n"
"@Blocking\n"
"public Uni<HelloReply> sayHelloBlocking(HelloRequest request) {\n"
"    // Do something blocking before returning the Uni\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:101
#, fuzzy, no-wrap
msgid "Handling streams"
msgstr "Manejo de flujos"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:104
#, fuzzy
msgid "gRPC allows receiving and returning streams:"
msgstr "gRPC permite recibir y devolver flujos:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:112
#, no-wrap
msgid ""
"service Streaming {\n"
"    rpc Source(Empty) returns (stream Item) {} // Returns a stream\n"
"    rpc Sink(stream Item) returns (Empty) {}   // Reads a stream\n"
"    rpc Pipe(stream Item) returns (stream Item) {}  // Reads a streams and return a streams\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:115
#, fuzzy
msgid "Using Mutiny, you can implement these as follows:"
msgstr "Usando Mutiny, puedes implementarlos de la siguiente manera:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:120
#, no-wrap
msgid ""
"@Singleton\n"
"public class StreamingService extends MutinyStreamingGrpc.StreamingImplBase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:128
#, no-wrap
msgid ""
"    @Override\n"
"    public Multi<Item> source(Empty request) {\n"
"        // Just returns a stream emitting an item every 2ms and stopping after 10 items.\n"
"        return Multi.createFrom().ticks().every(Duration.ofMillis(2))\n"
"                .transform().byTakingFirstItems(10)\n"
"                .map(l -> Item.newBuilder().setValue(Long.toString(l)).build());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:138
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<Empty> sink(Multi<Item> request) {\n"
"        // Reads the incoming streams, consume all the items.\n"
"        return request\n"
"                .map(Item::getValue)\n"
"                .map(Long::parseLong)\n"
"                .collectItems().last()\n"
"                .map(l -> Empty.newBuilder().build());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:150
#, no-wrap
msgid ""
"    @Override\n"
"    public Multi<Item> pipe(Multi<Item> request) {\n"
"        // Reads the incoming stream, compute a sum and return the cumulative results\n"
"        // in the outbound stream.\n"
"        return request\n"
"                .map(Item::getValue)\n"
"                .map(Long::parseLong)\n"
"                .onItem().scan(() -> 0L, Long::sum)\n"
"                .onItem().transform(l -> Item.newBuilder().setValue(Long.toString(l)).build());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:152
#, no-wrap
msgid "Health check"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:154
#, fuzzy
msgid "For the implemented services, Quarkus gRPC exposes health information in the following format:"
msgstr "Para los servicios implementados, Quarkus gRPC expone la información sanitaria en el siguiente formato:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:157
#, no-wrap
msgid "syntax = \"proto3\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:159
#, no-wrap
msgid "package grpc.health.v1;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:163
#, no-wrap
msgid ""
"message HealthCheckRequest {\n"
"  string service = 1;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:172
#, no-wrap
msgid ""
"message HealthCheckResponse {\n"
"  enum ServingStatus {\n"
"    UNKNOWN = 0;\n"
"    SERVING = 1;\n"
"    NOT_SERVING = 2;\n"
"  }\n"
"  ServingStatus status = 1;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:175
#, no-wrap
msgid ""
"service Health {\n"
"  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:178
#, no-wrap
msgid ""
"  rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:182
#, fuzzy
msgid "Clients can specify the fully qualified service name to get the health status of a specific service or skip specifying the service name to get the general status of the gRPC server."
msgstr "Los clientes pueden especificar el nombre completo del servicio para obtener el estado de salud de un servicio específico u omitir la especificación del nombre del servicio para obtener el estado general del servidor gRPC."

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:185
#, fuzzy
msgid "For more details, check out the https://github.com/grpc/grpc/blob/v1.28.1/doc/health-checking.md[gRPC documentation]"
msgstr "Para más detalles, consulte la link:https://github.com/grpc/grpc/blob/v1.28.1/doc/health-checking.md[documentación de gRPC]"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:188
#, fuzzy
msgid "Additionally, if Quarkus SmallRye Health is added to the application, a readiness check for the state of the gRPC services will be added to the MicroProfile Health endpoint response, that is `/q/health`."
msgstr "Además, si se añade Quarkus SmallRye Health a la aplicación, se añadirá a la respuesta del punto final MicroProfile Health una comprobación del estado de los servicios gRPC, es decir, `/q/health` ."

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:189
#, fuzzy, no-wrap
msgid "Reflection Service"
msgstr "Servicio de Reflexión"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:193
#, fuzzy
msgid "Quarkus gRPC Server implements the https://github.com/grpc/grpc/blob/master/doc/server-reflection.md[reflection service].  This service allows tools like https://github.com/fullstorydev/grpcurl[grpcurl] or https://github.com/gusaul/grpcox[grpcox] to interact with your services."
msgstr "El Servidor gRPC de Quarkus implementa el servicio de link:https://github.com/grpc/grpc/blob/master/doc/server-reflection.md[reflexión] . Este servicio permite a herramientas como link:https://github.com/fullstorydev/grpcurl[grpcurl] o link:https://github.com/gusaul/grpcox[grpcox] interactuar con sus servicios."

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:196
#, fuzzy
msgid "The reflection service is enabled by default in _dev_ mode.  In test or production mode, you need to enable it explicitly by setting `quarkus.grpc.server.enable-reflection-service` to `true`."
msgstr "El servicio de reflexión está habilitado por defecto en modo _dev_ . En modo de prueba o producción, debe habilitarlo explícitamente configurando `quarkus.grpc.server.enable-reflection-service` en `true` ."

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:197
#, fuzzy, no-wrap
msgid "Scaling"
msgstr "Escala"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:199
#, fuzzy
msgid "By default, quarkus-grpc starts a single gRPC server running on a single event loop."
msgstr "Por defecto, quarkus-grpc inicia un único servidor gRPC que se ejecuta en un único bucle de eventos."

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:201
#, fuzzy
msgid "If you wish to scale your server, you can set the number of server instances by setting `quarkus.grpc.server.instances`."
msgstr "Si desea escalar su servidor, puede establecer el número de instancias del servidor configurando `quarkus.grpc.server.instances`."

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:202
#, no-wrap
msgid "Server configuration"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:206
#, no-wrap
msgid "Example of configuration"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:208
#, fuzzy, no-wrap
msgid "Enabling TLS"
msgstr "Activación de TLS"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:211
#, fuzzy
msgid "To enable TLS, use the following configuration."
msgstr "Para habilitar TLS, utilice la siguiente configuración."

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:214
#, fuzzy
msgid "Note that all paths in the configuration may either specify a resource on the classpath (typically from `src/main/resources` or its subfolder) or an external file."
msgstr "Tenga en cuenta que todas las rutas de la configuración pueden especificar un recurso del classpath (normalmente de `src/main/resources` o su subcarpeta) o un archivo externo."

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:219
#, no-wrap
msgid ""
"quarkus.grpc.server.ssl.certificate=tls/server.pem\n"
"quarkus.grpc.server.ssl.key=tls/server.key\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:222
#, fuzzy
msgid "When SSL/TLS is configured, `plain-text` is automatically disabled."
msgstr "Cuando se configura SSL/TLS, `plain-text` se desactiva automáticamente."

#. type: Title ===
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:223
#, fuzzy, no-wrap
msgid "TLS with Mutual Auth"
msgstr "TLS con autentificación mutua"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:226
#, fuzzy
msgid "To use TLS with mutual authentication, use the following configuration:"
msgstr "Para utilizar TLS con autenticación mutua, utilice la siguiente configuración:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:234
#, no-wrap
msgid ""
"quarkus.grpc.server.ssl.certificate=tls/server.pem\n"
"quarkus.grpc.server.ssl.key=tls/server.key\n"
"quarkus.grpc.server.ssl.trust-store=tls/ca.jks\n"
"quarkus.grpc.server.ssl.trust-store-password=*****\n"
"quarkus.grpc.server.ssl.client-auth=REQUIRED\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:236
#, fuzzy, no-wrap
msgid "Server Interceptors"
msgstr "Interceptores de servidores"

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:239
msgid "You can implement a gRPC server interceptor by implementing an `@ApplicationScoped` bean implementing `io.grpc.ServerInterceptor`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:244
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyInterceptor implements ServerInterceptor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:251
#, no-wrap
msgid ""
"    @Override\n"
"    public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(ServerCall<ReqT, RespT> serverCall,\n"
"            Metadata metadata, ServerCallHandler<ReqT, RespT> serverCallHandler) {\n"
"        // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:254
#, fuzzy
msgid "Check the https://grpc.github.io/grpc-java/javadoc/io/grpc/ServerInterceptor.html[ServerInterceptor JavaDoc] to properly implement your interceptor."
msgstr "Consulte el  link:https://grpc.github.io/grpc-java/javadoc/io/grpc/ServerInterceptor.html[JavaDoc de ServerInterceptor] para implementar correctamente su interceptor."

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:256
msgid "When you have multiple server interceptors, you can order them by implementing the `javax.enterprise.inject.spi.Prioritized` interface:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:258
msgid "source, java]"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:261
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyInterceptor implements ServerInterceptor, Prioritized {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:267
#, no-wrap
msgid ""
"    @Override\n"
"    public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(ServerCall<ReqT, RespT> serverCall,\n"
"            Metadata metadata, ServerCallHandler<ReqT, RespT> serverCallHandler) {\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:273
#, no-wrap
msgid ""
"    @Override\n"
"    public int getPriority() {\n"
"        return 10;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/grpc-service-implementation.adoc:277
#, fuzzy
msgid "Interceptors with the highest priority are called first.  The default priority, used if the interceptor does not implement the `Prioritized` interface, is `0`."
msgstr "Los interceptores con la prioridad más alta son llamados en primer lugar. La prioridad por defecto, utilizada si el interceptor no implementa la interfaz `Prioritized` , es `0` ."
