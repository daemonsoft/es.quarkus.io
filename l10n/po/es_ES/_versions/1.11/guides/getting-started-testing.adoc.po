# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:6
#, no-wrap
msgid "Quarkus - Testing Your Application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:23
#, fuzzy
msgid "Learn how to test your Quarkus Application.  This guide covers:"
msgstr "Aprenda a probar su aplicación Quarkus. Esta guía cubre:"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:25
#, fuzzy
msgid "Testing in JVM mode"
msgstr "Pruebas en modo JVM"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:26
#, fuzzy
msgid "Testing in native mode"
msgstr "Pruebas en modo nativo"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:27
#, fuzzy
msgid "Injection of resources into tests"
msgstr "Inyección de recursos en las pruebas"

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:28
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:31
#, fuzzy
msgid "To complete this guide, you need:"
msgstr "Para completar esta guía, necesitas:"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:33
#, fuzzy
msgid "less than 15 minutes"
msgstr "menos de 15 minutos"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:34
#, fuzzy
msgid "an IDE"
msgstr "un IDE"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:35
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:36
#, fuzzy
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {versión de Maven}"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:37
msgid "The completed greeter application from the link:getting-started[Getting Started Guide]"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:38
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:42
#, fuzzy
msgid "In this guide, we expand on the initial test that was created as part of the Getting Started Guide.  We cover injection into tests and also how to test native executables."
msgstr "En esta guía, ampliamos la prueba inicial que se creó como parte de la Guía de introducción. Cubrimos la inyección en las pruebas y también cómo probar ejecutables nativos."

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:43
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:47
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:49
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:51
#, fuzzy
msgid "The solution is located in the `getting-started-testing` {quickstarts-tree-url}/getting-started-testing[directory]."
msgstr "La solución se encuentra en `getting-started-testing` {quickstarts-tree-url}/getting-started-testing[directory]."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:53
#, fuzzy
msgid "This guide assumes you already have the completed application from the `getting-started` directory."
msgstr "Esta guía supone que ya tiene la aplicación completa del directorio `getting-started`."

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:54
#, fuzzy, no-wrap
msgid "Recap of HTTP based Testing in JVM mode"
msgstr "Recapitulación de las pruebas basadas en HTTP en modo JVM"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:58
#, fuzzy
msgid "If you have started from the Getting Started example you should already have a completed test, including the correct `pom.xml` setup."
msgstr "Si ha empezado por el ejemplo de Introducción, ya debería tener una prueba completada, incluida la configuración correcta de `pom.xml` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:60
#, fuzzy
msgid "In the `pom.xml` file you should see 2 test dependencies:"
msgstr "En el archivo `pom.xml` debería ver 2 dependencias de prueba:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:73
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-junit5</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.rest-assured</groupId>\n"
"    <artifactId>rest-assured</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:78
#, fuzzy
msgid "`quarkus-junit5` is required for testing, as it provides the `@QuarkusTest` annotation that controls the testing framework.  `rest-assured` is not required but is a convenient way to test HTTP endpoints, we also provide integration that automatically sets the correct URL so no configuration is required."
msgstr "`quarkus-junit5` es necesario para las pruebas, ya que proporciona la anotación `@QuarkusTest` que controla el marco de pruebas. `rest-assured` no es necesario pero es una forma conveniente de probar los puntos finales HTTP, también proporcionamos integración que establece automáticamente la URL correcta por lo que no se requiere configuración."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:81
#, fuzzy
msgid "Because we are using JUnit 5, the version of the https://maven.apache.org/surefire/maven-surefire-plugin/[Surefire Maven Plugin] must be set, as the default version does not support Junit 5:"
msgstr "Dado que estamos utilizando JUnit 5, es necesario establecer la versión del link:https://maven.apache.org/surefire/maven-surefire-plugin/[plugin Surefire Maven] , ya que la versión por defecto no es compatible con Junit 5:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:94
#, no-wrap
msgid ""
"<plugin>\n"
"    <artifactId>maven-surefire-plugin</artifactId>\n"
"    <version>${surefire-plugin.version}</version>\n"
"    <configuration>\n"
"       <systemPropertyVariables>\n"
"          <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"          <maven.home>${maven.home}</maven.home>\n"
"       </systemPropertyVariables>\n"
"    </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:98
#, fuzzy
msgid "We also set the `java.util.logging.manager` system property to make sure tests will use the correct logmanager and `maven.home` to ensure that custom configuration from `${maven.home}/conf/settings.xml` is applied (if any)."
msgstr "También establecemos la propiedad del sistema `java.util.logging.manager` para asegurarnos de que las pruebas utilizarán el logmanager correcto y `maven.home` para garantizar que se aplica la configuración personalizada de `${maven.home}/conf/settings.xml` (si existe)."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:100
#, fuzzy
msgid "The project should also contain a simple test:"
msgstr "El proyecto también debe contener una prueba sencilla:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:104
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:199
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:274
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:326
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:366
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:452
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:496
#, no-wrap
msgid "package org.acme.getting.started.testing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:107
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:109
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:332
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:112
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:335
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:115
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:857
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:124
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/hello\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:135
#, no-wrap
msgid ""
"    @Test\n"
"    public void testGreetingEndpoint() {\n"
"        String uuid = UUID.randomUUID().toString();\n"
"        given()\n"
"          .pathParam(\"name\", uuid)\n"
"          .when().get(\"/hello/greeting/{name}\")\n"
"          .then()\n"
"            .statusCode(200)\n"
"            .body(is(\"hello \" + uuid));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:137
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:426
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:564
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:874
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:141
#, fuzzy
msgid "This test uses HTTP to directly test our REST endpoint. When the test is run the application will be started before the test is run."
msgstr "Esta prueba utiliza HTTP para probar directamente nuestro punto final REST. Cuando se ejecute la prueba, la aplicación se iniciará antes de que se ejecute la prueba."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:142
#, fuzzy, no-wrap
msgid "Controlling the test port"
msgstr "Control del puerto de pruebas"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:146
#, fuzzy
msgid "While Quarkus will listen on port `8080` by default, when running tests it defaults to `8081`. This allows you to run tests while having the application running in parallel."
msgstr "Aunque Quarkus escuchará en el puerto `8080` por defecto, cuando ejecute pruebas lo hará en `8081` . Esto le permite ejecutar pruebas mientras tiene la aplicación ejecutándose en paralelo."

#. type: Block title
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:148
#, fuzzy, no-wrap
msgid "Changing the test port"
msgstr "Cambiar el puerto de prueba"

#. type: delimited block =
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:151
#, fuzzy
msgid "You can configure the ports used by tests by configuring `quarkus.http.test-port` for HTTP and `quarkus.http.test-ssl-port` for HTTPS in your `application.properties`:"
msgstr "Puede configurar los puertos utilizados por las pruebas configurando `quarkus.http.test-port` para HTTP y `quarkus.http.test-ssl-port` para HTTPS en su `application.properties`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:155
#, no-wrap
msgid ""
"quarkus.http.test-port=8083\n"
"quarkus.http.test-ssl-port=8446\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:157
#, fuzzy
msgid "`0` will result in the use of a random port (assigned by the operating system)."
msgstr "`0` dará lugar a la utilización de un puerto aleatorio (asignado por el sistema operativo)."

#. type: delimited block =
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:161
#, fuzzy
msgid "Quarkus also provides RestAssured integration that updates the default port used by RestAssured before the tests are run, so no additional configuration should be required."
msgstr "Quarkus también proporciona integración con RestAssured que actualiza el puerto predeterminado utilizado por RestAssured antes de que se ejecuten las pruebas, por lo que no debería ser necesaria ninguna configuración adicional."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:162
#, fuzzy, no-wrap
msgid "Controlling HTTP interaction timeout"
msgstr "Controlar el tiempo de espera de la interacción HTTP"

#. type: delimited block =
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:166
#, fuzzy
msgid "When using REST Assured in your test, the connection and response timeouts are set to 30 seconds.  You can override this setting with the `quarkus.http.test-timeout` property:"
msgstr "Al utilizar REST Assured en su prueba, los tiempos de espera de conexión y respuesta se establecen en 30 segundos. Puede anular este ajuste con la propiedad `quarkus.http.test-timeout` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:170
#, no-wrap
msgid "quarkus.http.test-timeout=10s\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:172
#, fuzzy, no-wrap
msgid "Injecting a URI"
msgstr "Inyección de un URI"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:176
#, fuzzy
msgid "It is also possible to directly inject the URL into the test which can make is easy to use a different client. This is done via the `@TestHTTPResource` annotation."
msgstr "También es posible inyectar directamente la URL en la prueba, lo que puede facilitar el uso de un cliente diferente. Esto se hace mediante la anotación `@TestHTTPResource` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:179
#, fuzzy
msgid "Let's write a simple test that shows this off to load some static resources. First create a simple HTML file in `src/main/resources/META-INF/resources/index.html` :"
msgstr "Escribamos una prueba sencilla que lo demuestre para cargar algunos recursos estáticos. Primero cree un archivo HTML simple en `src/main/resources/META-INF/resources/index.html` :"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:191
#, no-wrap
msgid ""
"<html>\n"
"    <head>\n"
"        <title>Testing Guide</title>\n"
"    </head>\n"
"    <body>\n"
"        Information about testing\n"
"    </body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:194
#, fuzzy
msgid "We will create a simple test to ensure that this is being served correctly:"
msgstr "Vamos a crear una prueba sencilla para asegurarnos de que se sirve correctamente:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:205
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:280
#, no-wrap
msgid ""
"import java.io.ByteArrayOutputStream;\n"
"import java.io.IOException;\n"
"import java.io.InputStream;\n"
"import java.net.URL;\n"
"import java.nio.charset.StandardCharsets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:208
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:283
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:371
#, no-wrap
msgid ""
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:211
#, no-wrap
msgid ""
"import io.quarkus.test.common.http.TestHTTPResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:214
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:290
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class StaticContentTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:217
#, no-wrap
msgid ""
"    @TestHTTPResource(\"index.html\") // <1>\n"
"    URL url;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:225
#, no-wrap
msgid ""
"    @Test\n"
"    public void testIndexHtml() throws Exception {\n"
"        try (InputStream in = url.openStream()) {\n"
"            String contents = readStream(in);\n"
"            Assertions.assertTrue(contents.contains(\"<title>Testing Guide</title>\"));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:236
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:313
#, no-wrap
msgid ""
"    private static String readStream(InputStream in) throws IOException {\n"
"        byte[] data = new byte[1024];\n"
"        int r;\n"
"        ByteArrayOutputStream out = new ByteArrayOutputStream();\n"
"        while ((r = in.read(data)) > 0) {\n"
"            out.write(data, 0, r);\n"
"        }\n"
"        return new String(out.toByteArray(), StandardCharsets.UTF_8);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:238
#, fuzzy
msgid "This annotation allows you to directly inject the URL of the Quarkus instance, the value of the annotation will be the path component of the URL"
msgstr "Esta anotación permite inyectar directamente la URL de la instancia de Quarkus, el valor de la anotación será el componente de la ruta de la URL"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:240
#, fuzzy
msgid "For now `@TestHTTPResource` allows you to inject `URI`, `URL` and `String` representations of the URL."
msgstr "Por ahora `@TestHTTPResource` permite inyectar las representaciones de la URL `URI`, `URL` y `String`."

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:241
#, fuzzy, no-wrap
msgid "Testing a specific endpoint"
msgstr "Probar un punto final específico"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:246
#, fuzzy
msgid "Both RESTassured and `@TestHTTPResource` allow you to specify the endpoint class you are testing rather than hard coding a path. This currently supports both JAX-RS endpoints, Servlets and Reactive Routes. This makes it a lot easier to see exactly which endpoints a given test is testing."
msgstr "Tanto RESTassured como `@TestHTTPResource` le permiten especificar la clase de punto final que está probando en lugar de codificar una ruta. Esto soporta actualmente tanto los puntos finales JAX-RS, como los Servlets y las Rutas Reactivas. Esto hace que sea mucho más fácil ver exactamente qué puntos finales está probando una prueba determinada."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:248
#, fuzzy
msgid "For the purposes of these examples I am going to assume we have an endpoint that looks like the following:"
msgstr "Para los propósitos de estos ejemplos voy a asumir que tenemos un punto final que se parece a lo siguiente:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:253
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:260
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:264
#, fuzzy
msgid "This currently does not support the `@ApplicationPath()` annotation to set the JAX-RS context path. Use the `quarkus.resteasy.path` config value instead if you want a custom context path."
msgstr "Actualmente no admite la anotación `@ApplicationPath()` para establecer la ruta del contexto JAX-RS. Utilice en su lugar el valor de configuración `quarkus.resteasy.path` si desea una ruta de contexto personalizada."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:265
#, fuzzy, no-wrap
msgid "TestHTTPResource"
msgstr "TestHTTPResource"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:270
#, fuzzy
msgid "You can the use the `io.quarkus.test.common.http.TestHTTPEndpoint` annotation to specify the endpoint path, and the path will be extracted from the provided endpoint. If you also specify a value for the `TestHTTPResource` endpoint it will be appended to the end of the endpoint path."
msgstr "Puede utilizar la anotación `io.quarkus.test.common.http.TestHTTPEndpoint` para especificar la ruta del punto final, y la ruta se extraerá del punto final proporcionado. Si también especifica un valor para el punto final `TestHTTPResource` , se añadirá al final de la ruta del punto final."

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:287
#, no-wrap
msgid ""
"import io.quarkus.test.common.http.TestHTTPEndpoint;\n"
"import io.quarkus.test.common.http.TestHTTPResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:294
#, no-wrap
msgid ""
"    @TestHTTPEndpoint(GreetingResource.class)  // <1>\n"
"    @TestHTTPResource\n"
"    URL url;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:302
#, no-wrap
msgid ""
"    @Test\n"
"    public void testIndexHtml() throws Exception {\n"
"        try (InputStream in = url.openStream()) {\n"
"            String contents = readStream(in);\n"
"            Assertions.assertTrue(contents.equals(\"hello\"));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:316
#, fuzzy
msgid "Because `GreetingResource` is annotated with `@Path(\"/hello\")` the injected URL will end with `/hello`."
msgstr "Como `GreetingResource` está anotado con `@Path(\"/hello\")` la URL inyectada terminará con `/hello` ."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:317
#, fuzzy, no-wrap
msgid "RESTassured"
msgstr "RESTassured"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:322
#, fuzzy
msgid "To control the RESTassured base path (i.e. the default path that serves as the root for every request) you can use the `io.quarkus.test.common.http.TestHTTPEndpoint` annotation. This can be applied at the class or method level. To test out greeting resource we would do:"
msgstr "Para controlar la ruta base RESTassured (es decir, la ruta por defecto que sirve de raíz para cada solicitud) puede utilizar la anotación `io.quarkus.test.common.http.TestHTTPEndpoint` . Puede aplicarse a nivel de clase o de método. Para probar el recurso de saludo haríamos"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:330
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.common.http.TestHTTPEndpoint;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:339
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@TestHTTPEndpoint(GreetingResource.class) //<1>\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:349
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get()    //<2>\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:351
#, fuzzy
msgid "This tells RESTAssured to prefix all requests with `/hello`."
msgstr "Esto indica a RESTAssured que anteponga a todas las solicitudes `/hello`."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:352
#, fuzzy
msgid "Note we don't need to specify a path here, as `/hello` is the default for this test"
msgstr "Tenga en cuenta que no es necesario especificar una ruta aquí, ya que `/hello` es el valor predeterminado para esta prueba"

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:353
#, fuzzy, no-wrap
msgid "Injection into tests"
msgstr "Inyección en las pruebas"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:357
#, fuzzy
msgid "So far we have only covered integration style tests that test the app via HTTP endpoints, but what if we want to do unit testing and test our beans directly?"
msgstr "Hasta ahora sólo hemos cubierto las pruebas de estilo de integración que prueban la aplicación a través de endpoints HTTP, pero ¿qué pasa si queremos hacer pruebas unitarias y probar nuestros beans directamente?"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:361
#, fuzzy
msgid "Quarkus supports this by allowing you to inject CDI beans into your tests via the `@Inject` annotation (in fact, tests in Quarkus are full CDI beans, so you can use all CDI functionality). Let's create a simple test that tests the greeting service directly without using HTTP:"
msgstr "Quarkus admite esto permitiéndole inyectar beans CDI en sus pruebas mediante la anotación `@Inject` (de hecho, las pruebas en Quarkus son beans CDI completos, por lo que puede utilizar toda la funcionalidad CDI). Vamos a crear una prueba sencilla que pruebe el servicio de saludo directamente sin utilizar HTTP:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:368
#, no-wrap
msgid "import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:373
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:376
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingServiceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:379
#, no-wrap
msgid ""
"    @Inject // <1>\n"
"    GreetingService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:385
#, no-wrap
msgid ""
"    @Test\n"
"    public void testGreetingService() {\n"
"        Assertions.assertEquals(\"hello Quarkus\", service.greeting(\"Quarkus\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:387
#, fuzzy
msgid "The `GreetingService` bean will be injected into the test"
msgstr "La judía `GreetingService` se inyectará en la prueba"

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:388
#, fuzzy, no-wrap
msgid "Applying Interceptors to Tests"
msgstr "Aplicación de interceptores a las pruebas"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:393
#, fuzzy
msgid "As mentioned above Quarkus tests are actually full CDI beans, and as such you can apply CDI interceptors as you would normally. As an example, if you want a test method to run within the context of a transaction you can simply apply the `@Transactional` annotation to the method and the transaction interceptor will handle it."
msgstr "Como ya se ha mencionado, las pruebas de Quarkus son en realidad beans CDI completos y, como tales, puede aplicar interceptores CDI como lo haría normalmente. Por ejemplo, si desea que un método de prueba se ejecute en el contexto de una transacción, basta con aplicar la anotación `@Transactional` al método y el interceptor de transacciones se encargará de ello."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:396
#, fuzzy
msgid "In addition to this you can also create your own test stereotypes. For example we could create a `@TransactionalQuarkusTest` as follows:"
msgstr "Además, también puede crear sus propios estereotipos de prueba. Por ejemplo, podríamos crear un `@TransactionalQuarkusTest` como el siguiente:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:406
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@Stereotype\n"
"@Transactional\n"
"@Retention(RetentionPolicy.RUNTIME)\n"
"@Target(ElementType.TYPE)\n"
"public @interface TransactionalQuarkusTest {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:410
#, fuzzy
msgid "If we then apply this annotation to a test class it will act as if we had applied both the `@QuarkusTest` and `@Transactional` annotations, e.g.:"
msgstr "Si a continuación aplicamos esta anotación a una clase de prueba, actuará como si hubiéramos aplicado las anotaciones `@QuarkusTest` y `@Transactional` , por ejemplo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:416
#, no-wrap
msgid ""
"@TransactionalQuarkusTest\n"
"public class TestStereotypeTestCase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:419
#, no-wrap
msgid ""
"    @Inject\n"
"    UserTransaction userTransaction;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:424
#, no-wrap
msgid ""
"    @Test\n"
"    public void testUserTransaction() throws Exception {\n"
"        Assertions.assertEquals(Status.STATUS_ACTIVE, userTransaction.getStatus());\n"
"    }\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:428
#, fuzzy, no-wrap
msgid "Tests and Transactions"
msgstr "Pruebas y transacciones"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:434
#, fuzzy
msgid "You can use the standard Quarkus `@Transactional` annotation on tests, but this means that the changes your test makes to the database will be persistent. If you want any changes made to be rolled back at the end of the test you can use the `io.quarkus.test.TestTransaction` annotation. This will run the test method in a transaction, but roll it back once the test method is complete to revert any database changes."
msgstr "Puede utilizar la anotación estándar de Quarkus `@Transactional` en las pruebas, pero esto significa que los cambios que su prueba realice en la base de datos serán persistentes. Si desea que los cambios realizados se reviertan al final de la prueba, puede utilizar la anotación `io.quarkus.test.TestTransaction` . Esto ejecutará el método de prueba en una transacción, pero lo revertirá una vez que el método de prueba haya finalizado para revertir cualquier cambio en la base de datos."

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:435
#, fuzzy, no-wrap
msgid "Enrichment via QuarkusTest*Callback"
msgstr "Enriquecimiento mediante QuarkusTest*Callback"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:438
#, fuzzy
msgid "Alternatively or additionally to an interceptor, you can enrich *all* your `@QuarkusTest` classes by implementing the following callback interfaces:"
msgstr "Alternativa o adicionalmente a un interceptor, puedes enriquecer *todas* tus clases de `@QuarkusTest` implementando las siguientes interfaces de devolución de llamada:"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:440
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeClassCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeClassCallback`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:441
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterConstructCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterConstructCallback`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:442
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:443
#, fuzzy
msgid "`io.quarkus.test.junit.callback.QuarkusTestAfterEachCallback`"
msgstr "`io.quarkus.test.junit.callback.QuarkusTestAfterEachCallback`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:445
msgid "`io.quarkus.test.junit.callback.QuarkusTestBeforeAllCallback` has been deprecated in favor of `io.quarkus.test.junit.callback.QuarkusTestAfterConstructCallback` and will be removed in future releases of Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:447
#, fuzzy
msgid "Such a callback implementation has to be registered as a \"service provider\" as defined by `java.util.ServiceLoader`."
msgstr "Dicha implementación de la devolución de llamada tiene que estar registrada como \"proveedor de servicios\", tal y como se define en `java.util.ServiceLoader`."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:449
#, fuzzy
msgid "E.g. the following sample callback:"
msgstr "Por ejemplo, el siguiente ejemplo de devolución de llamada:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:455
#, no-wrap
msgid ""
"import io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback;\n"
"import io.quarkus.test.junit.callback.QuarkusTestMethodContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:457
#, no-wrap
msgid "public class MyQuarkusTestBeforeEachCallback implements QuarkusTestBeforeEachCallback {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:463
#, no-wrap
msgid ""
"    @Override\n"
"    public void beforeEach(QuarkusTestMethodContext context) {\n"
"        System.out.println(\"Executing \" + context.getTestMethod());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:465
#, fuzzy
msgid "has to be registered via `src/main/resources/META-INF/services/io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback` as follows:"
msgstr "tiene que ser registrado a través de `src/main/resources/META-INF/services/io.quarkus.test.junit.callback.QuarkusTestBeforeEachCallback` como sigue:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:468
#, no-wrap
msgid "org.acme.getting.started.testing.MyQuarkusTestBeforeEachCallback\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:471
#, fuzzy
msgid "It is possible to read annotations from the test class or method to control what the callback shall be doing."
msgstr "Es posible leer las anotaciones de la clase o método de prueba para controlar lo que debe hacer el callback."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:474
#, no-wrap
msgid ""
"While it is possible to use JUnit Jupiter callback interfaces like `BeforeEachCallback`, you might run into classloading issues because Quarkus has\n"
"         to run tests in a custom classloader which JUnit is not aware of.\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:476
#, fuzzy, no-wrap
msgid "Testing Different Profiles"
msgstr "Probar diferentes perfiles"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:481
#, fuzzy
msgid "So far in all our examples we only start Quarkus once for all tests. Before the first test is run Quarkus will boot, then all tests will run, then Quarkus will shutdown at the end. This makes for a very fast testing experience however it is a bit limited as you can't test different configurations."
msgstr "Hasta ahora en todos nuestros ejemplos sólo arrancamos Quarkus una vez para todas las pruebas. Antes de que se ejecute la primera prueba Quarkus arrancará, después se ejecutarán todas las pruebas y al final Quarkus se apagará. Esto hace que la experiencia de prueba sea muy rápida, sin embargo es un poco limitada ya que no se pueden probar diferentes configuraciones."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:485
#, fuzzy
msgid "To get around this Quarkus supports the idea of a test profile. If a test has a different profile to the previously run test then Quarkus will be shut down and started with the new profile before running the tests. This is obviously a bit slower, as it adds a shutdown/startup cycle to the test time, but gives a great deal of flexibility."
msgstr "Para evitar esto, Quarkus admite la idea de un perfil de prueba. Si una prueba tiene un perfil diferente al de la prueba ejecutada anteriormente, entonces Quarkus se apagará y se iniciará con el nuevo perfil antes de ejecutar las pruebas. Esto es obviamente un poco más lento, ya que añade un ciclo de apagado/arranque al tiempo de la prueba, pero proporciona una gran flexibilidad."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:488
msgid "In order to reduce the amount of times Quarkus needs to restart it is recommended that you place all tests that need a specific profile into their own package, and then run tests alphabetically."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:489
#, fuzzy, no-wrap
msgid "Writing a Profile"
msgstr "Escribir un perfil"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:492
#, fuzzy
msgid "To implement a test profile we need to implement `io.quarkus.test.junit.QuarkusTestProfile`:"
msgstr "Para implementar un perfil de prueba necesitamos implementar `io.quarkus.test.junit.QuarkusTestProfile`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:501
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.List;\n"
"import java.util.Map;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:504
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTestProfile;\n"
"import io.quarkus.test.junit.QuarkusTestProfile.TestResourceEntry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:506
#, no-wrap
msgid "public class MockGreetingProfile implements QuarkusTestProfile {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:511
#, no-wrap
msgid ""
"    @Override\n"
"    public Map<String, String> getConfigOverrides() { <1>\n"
"        return Collections.singletonMap(\"quarkus.resteasy.path\",\"/api\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:516
#, no-wrap
msgid ""
"    @Override\n"
"    public Set<Class<?>> getEnabledAlternatives() { <2>\n"
"        return Collections.singleton(MockGreetingService.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:522
#, no-wrap
msgid ""
"    @Override\n"
"    public String getConfigProfile() { <3>\n"
"        return \"test\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:528
#, no-wrap
msgid ""
"    @Override\n"
"    public List<TestResourceEntry> testResources() { <4>\n"
"        return Collections.singletonList(new TestResourceEntry(CustomWireMockServerManager.class));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:530
msgid "This method allows us to override configuration properties. Here we are changing the JAX-RS root path."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:531
msgid "This method allows us to enable CDI `@Alternative` beans. This makes it easy to mock out certain beans functionality."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:532
msgid "This can be used to change the config profile. As this default is `test` this does nothing, but is included for completeness."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:535
msgid "This method allows us to apply **additional** `QuarkusTestResourceLifecycleManager` classes, specific for this profile only. If this method is not overridden, then only the `QuarkusTestResourceLifecycleManager` classes enabled via the `@QuarkusTestResource` class annotation will be used for the tests using this profile (which is the same behavior as tests that don't use a profile at all)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:537
msgid "Now we have defined our profile we need to include it on our test class. We do this with `@TestProfile(MockGreetingProfile.class)`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:540
msgid "All the test profile config is stored in a single class, which makes it easy to tell if the previous test ran with the same configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:542
#, fuzzy, no-wrap
msgid "Mock Support"
msgstr "Apoyo a la simulación"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:546
#, fuzzy
msgid "Quarkus supports the use of mock objects using two different approaches. You can either use CDI alternatives to mock out a bean for all test classes, or use `QuarkusMock` to mock out beans on a per test basis."
msgstr "Quarkus admite el uso de objetos simulados utilizando dos enfoques diferentes. Puede utilizar alternativas CDI para simular un frijol para todas las clases de prueba, o utilizar `QuarkusMock` para simular frijoles en función de cada prueba."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:547
#, fuzzy, no-wrap
msgid "CDI `@Alternative` mechanism."
msgstr "CDI `@Alternative` mecanismo."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:553
#, fuzzy
msgid "To use this simply override the bean you wish to mock with a class in the `src/test/java` directory, and put the `@Alternative` and `@Priority(1)` annotations on the bean.  Alternatively, a convenient `io.quarkus.test.Mock` stereotype annotation could be used.  This built-in stereotype declares `@Alternative`, `@Priority(1)` and `@Dependent`.  For example if I have the following service:"
msgstr "Para utilizarlo, sólo tiene que sobrescribir el bean que desea simular con una clase del directorio `src/test/java` , y poner las anotaciones `@Alternative` y `@Priority(1)` en el bean. Como alternativa, podría utilizarse la anotación de estereotipo `io.quarkus.test.Mock` . Este estereotipo incorporado declara `@Alternative` , `@Priority(1)` y `@Dependent` . Por ejemplo, si tengo el siguiente servicio"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:558
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class ExternalService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:562
#, no-wrap
msgid ""
"    public String service() {\n"
"        return \"external\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:567
#, fuzzy
msgid "I could mock it with the following class in `src/test/java`:"
msgstr "Podría simularlo con la siguiente clase en `src/test/java`:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:573
#, no-wrap
msgid ""
"@Mock\n"
"@ApplicationScoped // <1>\n"
"public class MockExternalService extends ExternalService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:579
#, no-wrap
msgid ""
"    @Override\n"
"    public String service() {\n"
"        return \"mock\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:581
#, fuzzy
msgid "Overrides the `@Dependent` scope declared on the `@Mock` stereotype."
msgstr "Anula el ámbito `@Dependent` declarado en el estereotipo `@Mock`."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:584
#, fuzzy
msgid "It is important that the alternative be present in the `src/test/java` directory rather than `src/main/java`, as otherwise it will take effect all the time, not just when testing."
msgstr "Es importante que la alternativa esté presente en el directorio `src/test/java` y no en `src/main/java` , ya que de lo contrario tendrá efecto todo el tiempo, no sólo cuando se esté probando."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:587
#, fuzzy
msgid "Note that at present this approach does not work with native image testing, as this would required the test alternatives to be baked into the native image."
msgstr "Tenga en cuenta que, en la actualidad, este enfoque no funciona con las pruebas de imagen nativa, ya que para ello sería necesario que las alternativas de prueba se incorporaran a la imagen nativa."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:589
#, fuzzy, no-wrap
msgid "Mocking using QuarkusMock"
msgstr "Mocking usando QuarkusMock"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:594
#, fuzzy
msgid "The `io.quarkus.test.junit.QuarkusMock` class can be used to temporarily mock out any normal scoped bean. If you use this method in a `@BeforeAll` method the mock will take effect for all tests on the current class, while if you use this in a test method the mock will only take effect for the duration of the current test."
msgstr "La clase `io.quarkus.test.junit.QuarkusMock` puede utilizarse para burlarse temporalmente de cualquier frijol de ámbito normal. Si utiliza este método en un método de `@BeforeAll` , el simulacro tendrá efecto para todas las pruebas de la clase actual, mientras que si lo utiliza en un método de prueba, el simulacro sólo tendrá efecto mientras dure la prueba actual."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:597
#, fuzzy
msgid "This method can be used for any normal scoped CDI bean (e.g. `@ApplicationScoped`, `@RequestScoped` etc, basically every scope except `@Singleton` and `@Dependent`)."
msgstr "Este método puede utilizarse para cualquier frijol CDI de ámbito normal (por ejemplo, `@ApplicationScoped` , `@RequestScoped` etc, básicamente todos los ámbitos excepto `@Singleton` y `@Dependent` )."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:599
#, fuzzy
msgid "An example usage could look like:"
msgstr "Un ejemplo de uso podría ser así:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:604
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:672
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class MockTestCase {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:607
#, no-wrap
msgid ""
"    @Inject\n"
"    MockableBean1 mockableBean1;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:610
#, no-wrap
msgid ""
"    @Inject\n"
"    MockableBean2 mockableBean2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:617
#, no-wrap
msgid ""
"    @BeforeAll\n"
"    public static void setup() {\n"
"        MockableBean1 mock = Mockito.mock(MockableBean1.class);\n"
"        Mockito.when(mock.greet(\"Stuart\")).thenReturn(\"A mock for Stuart\");\n"
"        QuarkusMock.installMockForType(mock, MockableBean1.class);  // <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:623
#, no-wrap
msgid ""
"    @Test\n"
"    public void testBeforeAll() {\n"
"        Assertions.assertEquals(\"A mock for Stuart\", mockableBean1.greet(\"Stuart\"));\n"
"        Assertions.assertEquals(\"Hello Stuart\", mockableBean2.greet(\"Stuart\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:630
#, no-wrap
msgid ""
"    @Test\n"
"    public void testPerTestMock() {\n"
"        QuarkusMock.installMockForInstance(new BonjourGreeter(), mockableBean2); // <2>\n"
"        Assertions.assertEquals(\"A mock for Stuart\", mockableBean1.greet(\"Stuart\"));\n"
"        Assertions.assertEquals(\"Bonjour Stuart\", mockableBean2.greet(\"Stuart\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:633
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:699
#, no-wrap
msgid ""
"    @ApplicationScoped\n"
"    public static class MockableBean1 {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:638
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:646
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:704
#, no-wrap
msgid ""
"        public String greet(String name) {\n"
"            return \"Hello \" + name;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:641
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:707
#, no-wrap
msgid ""
"    @ApplicationScoped\n"
"    public static class MockableBean2 {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:654
#, no-wrap
msgid ""
"    public static class BonjourGreeter extends MockableBean2 {\n"
"        @Override\n"
"        public String greet(String name) {\n"
"            return \"Bonjour \" + name;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:656
#, fuzzy
msgid "As the injected instance is not available here we use `installMockForType`, this mock is used for both test methods"
msgstr "Como la instancia inyectada no está disponible aquí utilizamos `installMockForType`, este mock se utiliza para ambos métodos de prueba"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:657
#, fuzzy
msgid "We use `installMockForInstance` to replace the injected bean, this takes effect for the duration of the test method."
msgstr "Usamos `installMockForInstance` para reemplazar la judía inyectada, esto tiene efecto durante la duración del método de prueba."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:660
#, fuzzy
msgid "Note that there is no dependency on Mockito, you can use any mocking library you like, or even manually override the objects to provide the behaviour you require."
msgstr "Tenga en cuenta que no hay dependencia de Mockito, puede utilizar cualquier biblioteca de mocking que desee, o incluso anular manualmente los objetos para proporcionar el comportamiento que necesite."

#. type: Title ====
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:661
#, fuzzy, no-wrap
msgid "Further simplification with `@InjectMock`"
msgstr "Una mayor simplificación con `@InjectMock`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:665
#, fuzzy
msgid "Building on the features provided by `QuarkusMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for mocking the beans supported by `QuarkusMock`.  This functionality is available via the `@io.quarkus.test.junit.mockito.InjectMock` annotation which is available in the `quarkus-junit5-mockito` dependency."
msgstr "Sobre la base de las características proporcionadas por `QuarkusMock` , Quarkus también permite a los usuarios aprovechar sin esfuerzo link:https://site.mockito.org/[Mockito] para burlarse de las judías soportadas por `QuarkusMock` . Esta funcionalidad está disponible a través de la anotación `@io.quarkus.test.junit.mockito.InjectMock` que está disponible en la dependencia `quarkus-junit5-mockito` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:667
#, fuzzy
msgid "Using `@InjectMock`, the previous example could be written as follows:"
msgstr "Utilizando `@InjectMock`, el ejemplo anterior podría escribirse como sigue:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:675
#, no-wrap
msgid ""
"    @InjectMock\n"
"    MockableBean1 mockableBean1; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:678
#, no-wrap
msgid ""
"    @InjectMock\n"
"    MockableBean2 mockableBean2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:683
#, no-wrap
msgid ""
"    @BeforeEach\n"
"    public void setup() {\n"
"        Mockito.when(mockableBean1.greet(\"Stuart\")).thenReturn(\"A mock for Stuart\"); // <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:689
#, no-wrap
msgid ""
"    @Test\n"
"    public void firstTest() {\n"
"        Assertions.assertEquals(\"A mock for Stuart\", mockableBean1.greet(\"Stuart\"));\n"
"        Assertions.assertEquals(null, mockableBean2.greet(\"Stuart\")); // <3>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:696
#, no-wrap
msgid ""
"    @Test\n"
"    public void secondTest() {\n"
"        Mockito.when(mockableBean2.greet(\"Stuart\")).thenReturn(\"Bonjour Stuart\"); // <4>\n"
"        Assertions.assertEquals(\"A mock for Stuart\", mockableBean1.greet(\"Stuart\"));\n"
"        Assertions.assertEquals(\"Bonjour Stuart\", mockableBean2.greet(\"Stuart\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:713
#, no-wrap
msgid ""
"        public String greet(String name) {\n"
"            return \"Hello \" + name;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:715
#, fuzzy
msgid "`@InjectMock` results in a mock being and is available in test methods of the test class (other test classes are *not* affected by this)"
msgstr "`@InjectMock` da lugar a un ser simulado y está disponible en los métodos de prueba de la clase de prueba (otras clases de prueba *no* se ven afectadas por esto)"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:716
#, fuzzy
msgid "The `mockableBean1` is configured here for every test method of the class"
msgstr "El `mockableBean1` se configura aquí para cada método de prueba de la clase"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:717
#, fuzzy
msgid "Since the `mockableBean2` mock has not been configured, it will return the default Mockito response."
msgstr "Como el mock `mockableBean2` no ha sido configurado, devolverá la respuesta por defecto de Mockito."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:718
#, fuzzy
msgid "In this test the `mockableBean2` is configured, so it returns the configured response."
msgstr "En esta prueba el `mockableBean2` está configurado, por lo que devuelve la respuesta configurada."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:722
#, fuzzy
msgid "Although the test above is good for showing the capabilities of `@InjectMock`, it is not a good representation of a real test. In a real test we would most likely configure a mock, but then test a bean that uses the mocked bean.  Here is an example:"
msgstr "Aunque la prueba anterior es buena para mostrar las capacidades de `@InjectMock` , no es una buena representación de una prueba real. En una prueba real lo más probable es que configuremos un mock, pero luego probemos un bean que utilice el bean mocked. He aquí un ejemplo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:727
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class MockGreetingServiceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:730
#, no-wrap
msgid ""
"    @InjectMock\n"
"    GreetingService greetingService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:740
#, no-wrap
msgid ""
"    @Test\n"
"    public void testGreeting() {\n"
"        when(greetingService.greet()).thenReturn(\"hi\");\n"
"        given()\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"hi\")); // <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:743
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:807
#, no-wrap
msgid ""
"    @Path(\"greeting\")\n"
"    public static class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:745
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:809
#, no-wrap
msgid "        final GreetingService greetingService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:749
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:813
#, no-wrap
msgid ""
"        public GreetingResource(GreetingService greetingService) {\n"
"            this.greetingService = greetingService;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:756
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:820
#, no-wrap
msgid ""
"        @GET\n"
"        @Produces(\"text/plain\")\n"
"        public String greet() {\n"
"            return greetingService.greet();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:764
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:828
#, no-wrap
msgid ""
"    @ApplicationScoped\n"
"    public static class GreetingService {\n"
"        public String greet(){\n"
"            return \"hello\";\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:766
#, fuzzy
msgid "Since we configured `greetingService` as a mock, the `GreetingResource` which uses the `GreetingService` bean, we get the mocked response instead of the response of the regular `GreetingService` bean"
msgstr "Como hemos configurado `greetingService` como un simulacro, el `GreetingResource` que utiliza el bean `GreetingService`, obtenemos la respuesta del simulacro en lugar de la respuesta del bean normal `GreetingService`"

#. type: Title ====
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:767
#, fuzzy, no-wrap
msgid "Using Spies instead of Mocks with `@InjectSpy`"
msgstr "Utilizar espías en lugar de burlas con `@InjectSpy`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:771
#, fuzzy
msgid "Building on the features provided by `InjectMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for spying on the beans supported by `QuarkusMock`.  This functionality is available via the `@io.quarkus.test.junit.mockito.InjectSpy` annotation which is available in the `quarkus-junit5-mockito` dependency."
msgstr "Basándose en las funcionalidades proporcionadas por `InjectMock` , Quarkus también permite a los usuarios aprovechar sin esfuerzo link:https://site.mockito.org/[Mockito] para espiar los beans soportados por `QuarkusMock` . Esta funcionalidad está disponible a través de la anotación `@io.quarkus.test.junit.mockito.InjectSpy` que está disponible en la dependencia `quarkus-junit5-mockito` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:775
#, fuzzy
msgid "Sometimes when testing you only need to verify that a certain logical path was taken, or you only need to stub out a single method's response while still executing the rest of the methods on the Spied clone. Please see link:https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#spy-T-[Mockito documentation] for more details on Spy partial mocks.  In either of those situations a Spy of the object is preferable.  Using `@InjectSpy`, the previous example could be written as follows:"
msgstr "A veces, al realizar pruebas, sólo necesita verificar que se ha seguido un determinado camino lógico, o sólo necesita stub out de la respuesta de un único método mientras sigue ejecutando el resto de los métodos en el clon Spied. Consulte link:https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#spy-T-[la documentación de Mockito] para obtener más detalles sobre los mocks parciales de Spy. En cualquiera de esas situaciones es preferible un Spy del objeto. Utilizando `@InjectSpy` , el ejemplo anterior podría escribirse como sigue:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:780
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class SpyGreetingServiceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:783
#, no-wrap
msgid ""
"    @InjectSpy\n"
"    GreetingService greetingService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:791
#, no-wrap
msgid ""
"    @Test\n"
"    public void testDefaultGreeting() {\n"
"        given()\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"hello\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:794
#, no-wrap
msgid ""
"        Mockito.verify(greetingService, Mockito.times(1)).greet(); <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:804
#, no-wrap
msgid ""
"    @Test\n"
"    public void testOverrideGreeting() {\n"
"        when(greetingService.greet()).thenReturn(\"hi\"); <2>\n"
"        given()\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"hi\")); <3>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:830
#, fuzzy
msgid "Instead of overriding the value, we just want to ensure that the greet method on our `GreetingService` was called by this test."
msgstr "En lugar de sobreescribir el valor, sólo queremos asegurarnos de que el método greet en nuestro `GreetingService` fue llamado por esta prueba."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:831
#, fuzzy
msgid "Here we are telling the Spy to return \"hi\" instead of \"hello\". When the `GreetingResource` requests the greeting from `GreetingService` we get the mocked response instead of the response of the regular `GreetingService` bean"
msgstr "Aquí le estamos diciendo al espía que devuelva \"hola\" en lugar de \"hola\". Cuando el `GreetingResource` solicita el saludo a `GreetingService` obtenemos la respuesta burlada en lugar de la respuesta del frijol normal `GreetingService` "

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:832
#, fuzzy
msgid "We are verifying that we get the mocked response from the Spy."
msgstr "Estamos verificando que recibimos la respuesta burlada del Espía."

#. type: Title ====
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:833
#, fuzzy, no-wrap
msgid "Using `@InjectMock` with `@RestClient`"
msgstr "Utilizando `@InjectMock` con `@RestClient`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:836
#, fuzzy
msgid "The `@RegisterRestClient` registers the implementation of the rest-client at runtime, and because the bean needs to be a regular scope, you have to annotate your interface with `@ApplicationScoped`."
msgstr "El `@RegisterRestClient` registra la implementación del rest-client en tiempo de ejecución, y como el bean tiene que ser un ámbito regular, hay que anotar su interfaz con `@ApplicationScoped`."

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:843
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"@ApplicationScoped\n"
"@RegisterRestClient\n"
"public interface GreetingService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:849
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/hello\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    String hello();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:852
#, fuzzy
msgid "For the test class here is an example:"
msgstr "Para la clase de prueba aquí hay un ejemplo:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:861
#, no-wrap
msgid ""
"    @InjectMock\n"
"    @RestClient // <1>\n"
"    GreetingService greetingService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:865
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        Mockito.when(greetingService.hello()).thenReturn(\"hello from mockito\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:872
#, no-wrap
msgid ""
"        given()\n"
"          .when().get(\"/hello\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello from mockito\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:876
#, fuzzy
msgid "Indicate that this injection point is meant to use an instance of `RestClient`."
msgstr "Indica que este punto de inyección está destinado a utilizar una instancia de `RestClient`."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:877
#, fuzzy, no-wrap
msgid "Mocking with Panache"
msgstr "Burlarse con garbo"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:880
msgid "If you are using the `quarkus-hibernate-orm-panache` or `quarkus-mongodb-panache` extensions, check out the link:hibernate-orm-panache#mocking[Hibernate ORM with Panache Mocking] and link:mongodb-panache#mocking[MongoDB with Panache Mocking] documentation for the easiest way to mock your data access."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:881
#, fuzzy, no-wrap
msgid "Testing Security"
msgstr "Pruebas de seguridad"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:884
msgid "If you are using Quarkus Security, check out the link:security-testing[Testing Security] section for information on how to easily test security features of the application."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:886
#, fuzzy, no-wrap
msgid "Starting services before the Quarkus application starts"
msgstr "Iniciar los servicios antes de que se inicie la aplicación Quarkus"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:889
#, fuzzy
msgid "A very common need is to start some services on which your Quarkus application depends, before the Quarkus application starts for testing. To address this need, Quarkus provides `@io.quarkus.test.common.QuarkusTestResource` and `io.quarkus.test.common.QuarkusTestResourceLifecycleManager`."
msgstr "Una necesidad muy común es iniciar algunos servicios de los que depende su aplicación Quarkus, antes de que la aplicación Quarkus se inicie para las pruebas. Para atender esta necesidad, Quarkus proporciona `@io.quarkus.test.common.QuarkusTestResource` y `io.quarkus.test.common.QuarkusTestResourceLifecycleManager`."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:892
msgid "By simply annotating any test in the test suite with `@QuarkusTestResource`, Quarkus will run the corresponding `QuarkusTestResourceLifecycleManager` before any tests are run.  A test suite is also free to utilize multiple `@QuarkusTestResource` annotations, in which case all the corresponding `QuarkusTestResourceLifecycleManager` objects will be run before the tests."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:897
msgid "Quarkus provides a few implementations of `QuarkusTestResourceLifecycleManager` out of the box (see `io.quarkus.test.h2.H2DatabaseTestResource` which starts an H2 database, or `io.quarkus.test.kubernetes.client.KubernetesMockServerTestResource` which starts a mock Kubernetes API server), but it is common to create custom implementations to address specific application needs.  Common cases include starting docker containers using https://www.testcontainers.org/[Testcontainers] (an example of which can be found https://github.com/quarkusio/quarkus-quickstarts/blob/main/kafka-quickstart/src/test/java/org/acme/kafka/KafkaResource.java[here]), or starting a mock HTTP server using http://wiremock.org/[Wiremock] (an example of which can be found https://github.com/geoand/quarkus-test-demo/blob/master/src/test/java/org/acme/getting/started/country/WiremockCountries.java[here])."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:898
#, fuzzy, no-wrap
msgid "Native Executable Testing"
msgstr "Prueba de ejecutables nativos"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:902
#, fuzzy
msgid "It is also possible to test native executables using `@NativeImageTest`. This supports all the features mentioned in this guide except injecting into tests (and the native executable runs in a separate non-JVM process this is not really possible)."
msgstr "También es posible probar ejecutables nativos utilizando `@NativeImageTest` . Esto soporta todas las características mencionadas en esta guía excepto la inyección en las pruebas (y el ejecutable nativo se ejecuta en un proceso separado no JVM esto no es realmente posible)."

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:905
msgid "This is covered in the link:building-native-image[Native Executable Guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:907
#, fuzzy, no-wrap
msgid "Running `@QuarkusTest` from an IDE"
msgstr "Ejecutar `@QuarkusTest` desde un IDE"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:910
msgid "Most IDEs offer the possibility to run a selected class as JUnit test directly. For this you should set a few properties in the settings of your chosen IDE:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:912
msgid "`java.util.logging.manager` (see link:logging[Logging Guide])"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:914
msgid "`maven.home` (only if there are any custom settings in `${maven.home}/conf/settings.xml`, see link:maven-tooling[Maven Guide])"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:916
#, fuzzy
msgid "`maven.settings` (in case a custom version of `settings.xml` file should be used for the tests)"
msgstr "`maven.settings` (en caso de que se utilice una versión personalizada del archivo `settings.xml` para las pruebas)"

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:917
#, fuzzy, no-wrap
msgid "Eclipse separate JRE definition"
msgstr "Definición de JRE independiente de Eclipse"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:920
#, fuzzy
msgid "Copy your current \"Installed JRE\" definition into a new one, where you will add the properties as a new VM arguments:"
msgstr "Copie su definición actual de \"JRE instalado\" en una nueva, donde añadirá las propiedades como nuevos argumentos de la VM:"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:922
#, fuzzy
msgid "`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`"
msgstr "`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:924
#, fuzzy
msgid "`-Dmaven.home=<path-to-your-maven-installation>`"
msgstr "`-Dmaven.home=&amp;lt;path-to-your-maven-installation&amp;gt;`"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:926
#, fuzzy
msgid "Use this JRE definition as your Quarkus project targeted runtime and the workaround will be applied to any \"Run as JUnit\" configuration."
msgstr "Utiliza esta definición de JRE como tiempo de ejecución objetivo de tu proyecto Quarkus y la solución se aplicará a cualquier configuración \"Run as JUnit\"."

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:927
#, fuzzy, no-wrap
msgid "VSCode \"run with\" configuration"
msgstr "Configuración de VSCode \"run with\" (ejecutar con)"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:930
msgid "The `settings.json` placed in the root of your project directory or in the workspace will need the workaround in your test configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:940
#, no-wrap
msgid ""
"\"java.test.config\": [\n"
"    {\n"
"        \"name\": \"quarkusConfiguration\",\n"
"        \"vmargs\": [ \"-Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dmaven.home=<path-to-your-maven-installation> ...\" ],\n"
"        ...\n"
"    },\n"
"  ...\n"
"]\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:942
#, fuzzy, no-wrap
msgid "IntelliJ JUnit template"
msgstr "Plantilla JUnit de IntelliJ"

#. type: Plain text
#: upstream/_versions/1.11/guides/getting-started-testing.adoc:944
#, fuzzy
msgid "Nothing needed in IntelliJ because the IDE will pick the `systemPropertyVariables` from the surefire plugin configuration in `pom.xml`."
msgstr "No se necesita nada en IntelliJ porque el IDE recogerá el `systemPropertyVariables` de la configuración del plugin de surefire en `pom.xml` ."
