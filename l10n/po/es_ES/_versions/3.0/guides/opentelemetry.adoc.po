# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-20 14:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/opentelemetry.adoc:6
#, fuzzy, no-wrap
msgid "Using OpenTelemetry"
msgstr "Uso de OpenTelemetry"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:13
#, fuzzy
msgid "This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] to provide distributed tracing for interactive web applications."
msgstr "Esta guía explica cómo su aplicación Quarkus puede utilizar link:https://opentelemetry.io/[OpenTelemetry] para proporcionar rastreo distribuido para aplicaciones web interactivas."

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:14
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:19
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:22
#, fuzzy
msgid "In this guide, we create a straightforward REST application to demonstrate distributed tracing."
msgstr "En esta guía, creamos una aplicación REST sencilla para demostrar el rastreo distribuido."

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:23
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:27
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can skip right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede pasar directamente al ejemplo completado."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:29
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:31
#, fuzzy
msgid "The solution is located in the `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr "La solución se encuentra en `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[directorio]."

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:32
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:35
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:43
#, fuzzy
msgid "This command generates the Maven project and imports the `quarkus-opentelemetry` extension, which includes the default OpenTelemetry support, and a gRPC span exporter for https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]."
msgstr "Este comando genera el proyecto Maven e importa la extensión `quarkus-opentelemetry` , que incluye el soporte OpenTelemetry por defecto, y un exportador span gRPC para link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP] ."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:46
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tiene configurado su proyecto Quarkus, puede añadir la extensión `quarkus-opentelemetry` a su proyecto ejecutando el siguiente comando en el directorio base de su proyecto:"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:51
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#. type: Block title
#: upstream/_versions/3.0/guides/opentelemetry.adoc:53
#: upstream/_versions/3.0/guides/opentelemetry.adoc:232
#: upstream/_versions/3.0/guides/opentelemetry.adoc:295
#: upstream/_versions/3.0/guides/opentelemetry.adoc:312
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:59
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-opentelemetry</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/opentelemetry.adoc:62
#: upstream/_versions/3.0/guides/opentelemetry.adoc:241
#: upstream/_versions/3.0/guides/opentelemetry.adoc:304
#: upstream/_versions/3.0/guides/opentelemetry.adoc:321
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:65
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-opentelemetry\")\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:67
#, fuzzy, no-wrap
msgid "Examine the JAX-RS resource"
msgstr "Examinar el recurso JAX-RS"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:70
#, fuzzy
msgid "Create a `src/main/java/org/acme/opentelemetry/TracedResource.java` file with the following content:"
msgstr "Cree un archivo `src/main/java/org/acme/opentelemetry/TracedResource.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:74
#, no-wrap
msgid "package org.acme.opentelemetry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:80
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:83
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class TracedResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:85
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(TracedResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:93
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        LOG.info(\"hello\");\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:97
#, fuzzy
msgid "Notice that there is no tracing specific code included in the application. By default, requests sent to this endpoint will be traced without any required code changes."
msgstr "Observe que no hay código específico de rastreo incluido en la aplicación. Por defecto, las solicitudes enviadas a este punto final serán rastreadas sin ningún cambio de código requerido."

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:98
#, fuzzy, no-wrap
msgid "Create the configuration"
msgstr "Crear la configuración"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:101
msgid "There are two ways to configure the default OTLP gRPC Exporter within the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:103
#, fuzzy
msgid "The first approach is by providing the properties within the `src/main/resources/application.properties` file:"
msgstr "El primer enfoque consiste en proporcionar las propiedades dentro del archivo `src/main/resources/application.properties`:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:109
#, no-wrap
msgid ""
"quarkus.application.name=myservice // <1>\n"
"quarkus.opentelemetry.enabled=true // <2>\n"
"quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317 // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:111
#, no-wrap
msgid "quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my_secret // <4>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:113
#, no-wrap
msgid "quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n  // <5>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:116
#, no-wrap
msgid ""
"# Alternative to the console log\n"
"quarkus.http.access-log.pattern=\"...traceId=%{X,traceId} spanId=%{X,spanId}\" // <6>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:119
#, fuzzy
msgid "All spans created from the application will include an OpenTelemetry `Resource` indicating the span was created by the `myservice` application. If not set, it will default to the artifact id."
msgstr "Todos los tramos creados desde la aplicación incluirán un `Resource` de OpenTelemetry que indica que el tramo fue creado por la aplicación `myservice`. Si no se establece, será por defecto el id del artefacto."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:120
#, fuzzy
msgid "Whether OpenTelemetry is enabled or not. The default is `true`, but shown here to indicate how it can be disabled"
msgstr "Si OpenTelemetry está habilitado o no. El valor predeterminado es `true` , pero se muestra aquí para indicar cómo se puede desactivar."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:121
#, fuzzy
msgid "gRPC endpoint for sending spans"
msgstr "Punto final gRPC para el envío de tramos"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:122
#, fuzzy
msgid "Optional gRPC headers commonly used for authentication"
msgstr "Cabeceras opcionales de gRPC utilizadas habitualmente para la autenticación"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:123
msgid "Add tracing information into log message."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:124
#, fuzzy
msgid "You can also only put the trace info into the access log. In this case you must omit the info in the console log format."
msgstr "También puedes poner sólo la información de rastreo en el registro de acceso. En este caso debes omitir la información en el formato de registro de la consola."

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:125
#, fuzzy, no-wrap
msgid "Run the application"
msgstr "Ejecutar la aplicación"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:128
#, fuzzy
msgid "The first step is to configure and start the https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] to receive, process and export telemetry data to https://www.jaegertracing.io/[Jaeger] that will display the captured traces."
msgstr "El primer paso es configurar e iniciar el  link:https://opentelemetry.io/docs/collector/[colector OpenTelemetry] para recibir, procesar y exportar los datos de telemetría a  link:https://www.jaegertracing.io/[Jaeger] que mostrará las trazas capturadas."

#. type: delimited block =
#: upstream/_versions/3.0/guides/opentelemetry.adoc:134
msgid "Jaeger supports the OTel protocols out of the box since version 1.35.  In this case you do not need to install the collector but can directly send the trace data to Jaeger (after enabling OTLP receivers there, see e.g. this https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[blog entry])."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:137
#, fuzzy
msgid "Configure the OpenTelemetry Collector by creating an `otel-collector-config.yaml` file:"
msgstr "Configure el colector OpenTelemetry creando un archivo `otel-collector-config.yaml` :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:145
#, no-wrap
msgid ""
"receivers:\n"
"  otlp:\n"
"    protocols:\n"
"      grpc:\n"
"        endpoint: otel-collector:4317\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:151
#, no-wrap
msgid ""
"exporters:\n"
"  jaeger:\n"
"    endpoint: jaeger-all-in-one:14250\n"
"    tls:\n"
"      insecure: true\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:154
#, no-wrap
msgid ""
"processors:\n"
"  batch:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:157
#, no-wrap
msgid ""
"extensions:\n"
"  health_check:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:165
#, no-wrap
msgid ""
"service:\n"
"  extensions: [health_check]\n"
"  pipelines:\n"
"    traces:\n"
"      receivers: [otlp]\n"
"      processors: [batch]\n"
"      exporters: [jaeger]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:169
#, fuzzy
msgid "Start the OpenTelemetry Collector and Jaeger system via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "Inicie el sistema OpenTelemetry Collector y Jaeger a través del siguiente archivo `docker-compose.yml` que puede lanzar a través de `docker-compose up -d`:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:174
#, no-wrap
msgid ""
"version: \"2\"\n"
"services:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:193
#, no-wrap
msgid ""
"  # Jaeger\n"
"  jaeger-all-in-one:\n"
"    image: jaegertracing/all-in-one:latest\n"
"    ports:\n"
"      - \"16686:16686\"\n"
"      - \"14268:14268\"\n"
"      - \"14250:14250\"\n"
"  # Collector\n"
"  otel-collector:\n"
"    image: otel/opentelemetry-collector:latest\n"
"    command: [\"--config=/etc/otel-collector-config.yaml\"]\n"
"    volumes:\n"
"      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z\n"
"    ports:\n"
"      - \"13133:13133\" # Health_check extension\n"
"      - \"4317:4317\"   # OTLP gRPC receiver\n"
"    depends_on:\n"
"      - jaeger-all-in-one\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:196
#, fuzzy
msgid "Now we are ready to run our application. If using `application.properties` to configure the tracer:"
msgstr "Ahora estamos listos para ejecutar nuestra aplicación. Si se utiliza `application.properties` para configurar el trazador:"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:200
#, fuzzy
msgid "or if configuring the OTLP gRPC endpoint via JVM arguments:"
msgstr "o si se configura el punto final OTLP gRPC a través de argumentos JVM:"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:206
#, fuzzy
msgid "With the OpenTelemetry Collector, the Jaeger system and the application running, you can make a request to the provided endpoint:"
msgstr "Con el colector de OpenTelemetry, el sistema Jaeger y la aplicación en ejecución, puede hacer una solicitud al punto final proporcionado:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:211
#, no-wrap
msgid ""
"$ curl http://localhost:8080/hello\n"
"hello\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:214
#, fuzzy
msgid "When the first request has been submitted, you will be able to see the tracing information in the logs:"
msgstr "Cuando se haya enviado la primera solicitud, podrá ver la información de seguimiento en los registros:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:220
#, no-wrap
msgid ""
"10:49:02 INFO  traceId=, parentId=, spanId=, sampled= [io.quarkus] (main) Installed features: [cdi, opentelemetry, rest-client, resteasy, smallrye-context-propagation, vertx]\n"
"10:49:03 INFO  traceId=17ceb8429b9f25b0b879fa1503259456, parentId=3125c8bee75b7ad6, spanId=58ce77c86dd23457, sampled=true [or.ac.op.TracedResource] (executor-thread-1) hello\n"
"10:49:03 INFO  traceId=ad23acd6d9a4ed3d1de07866a52fa2df, parentId=, spanId=df13f5b45cf4d1e2, sampled=true [or.ac.op.TracedResource] (executor-thread-0) hello\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:224
#, fuzzy
msgid "Then visit the http://localhost:16686[Jaeger UI] to see the tracing information."
msgstr "A continuación, visite la  link:http://localhost:16686[interfaz de usuario de Jaeger] para ver la información de rastreo."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:226
#, fuzzy
msgid "Hit `CTRL+C` to stop the application."
msgstr "Pulse `CTRL+C` para detener la aplicación."

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:227
#, fuzzy, no-wrap
msgid "JDBC"
msgstr "JDBC"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:230
#, fuzzy
msgid "The https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC instrumentation] will add a span for each JDBC queries done by your application, to enable it, add the following dependency to your build file:"
msgstr "La  link:https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[instrumentación JDBC] añadirá un span por cada consulta JDBC realizada por su aplicación, para habilitarla, añada la siguiente dependencia a su archivo de construcción:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:238
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.opentelemetry.instrumentation</groupId>\n"
"    <artifactId>opentelemetry-jdbc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:244
#, no-wrap
msgid "implementation(\"io.opentelemetry.instrumentation:opentelemetry-jdbc\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:247
msgid "As it uses a dedicated JDBC driver, you must configure your datasource and Hibernate ORM to use it."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:255
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"# add ':otel' to your database URL\n"
"quarkus.datasource.jdbc.url=jdbc:otel:postgresql://localhost:5432/mydatabase\n"
"# use the 'OpenTelemetryDriver' instead of the one for your database\n"
"quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:257
#, fuzzy, no-wrap
msgid "Additional configuration"
msgstr "Configuración adicional"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:260
#, fuzzy
msgid "Some use cases will require custom configuration of OpenTelemetry.  These sections will outline what is necessary to properly configure it."
msgstr "Algunos casos de uso requerirán una configuración personalizada de OpenTelemetry. Estas secciones esbozarán lo necesario para configurarlo adecuadamente."

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:261
#, fuzzy, no-wrap
msgid "ID Generator"
msgstr "Generador de ID"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:264
#, fuzzy
msgid "The OpenTelemetry extension will use by default a random https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID Generator] when creating the trace and span identifier."
msgstr "La extensión OpenTelemetry utilizará por defecto un link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[generador de ID] aleatorio al crear el identificador de la traza y del tramo."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:267
#, fuzzy
msgid "Some vendor-specific protocols need a custom ID Generator, you can override the default one by creating a producer.  The OpenTelemetry extension will detect the `IdGenerator` CDI bean and will use it when configuring the tracer producer."
msgstr "Algunos protocolos específicos de proveedores necesitan un generador de ID personalizado, puede anular el predeterminado creando un productor. La extensión OpenTelemetry detectará el frijol CDI `IdGenerator` y lo utilizará al configurar el productor del trazador."

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:272
#: upstream/_versions/3.0/guides/opentelemetry.adoc:372
#, no-wrap
msgid ""
"@Singleton\n"
"public class CustomConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:280
#, no-wrap
msgid ""
"    /** Creates a custom IdGenerator for OpenTelemetry */\n"
"    @Produces\n"
"    @Singleton\n"
"    public IdGenerator idGenerator() {\n"
"        return AwsXrayIdGenerator.getInstance();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:282
#, fuzzy, no-wrap
msgid "Propagators"
msgstr "Propagadores"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:285
#, fuzzy
msgid "OpenTelemetry propagates cross-cutting concerns through https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[propagators] that will share an underlying `Context` for storing state and accessing data across the lifespan of a distributed transaction."
msgstr "OpenTelemetry propaga las preocupaciones transversales a través de link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[propagadores] que compartirán un `Context` subyacente para almacenar el estado y acceder a los datos a lo largo de la vida de una transacción distribuida."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:288
#, fuzzy
msgid "By default, the OpenTelemetry extension enables the https://www.w3.org/TR/trace-context/[W3C Trace Context] and the https://www.w3.org/TR/baggage/[W3C Baggage] propagators, you can however choose any of the supported OpenTelemetry propagators by setting the `propagators` config that is described in the <<configuration-reference>>."
msgstr "Por defecto, la extensión OpenTelemetry habilita los propagadores link:https://www.w3.org/TR/trace-context/[W3C Trace Context] y link:https://www.w3.org/TR/baggage/[W3C Baggage] , sin embargo puede elegir cualquiera de los propagadores OpenTelemetry soportados configurando el `propagators` config que se describe en el <<configuration-reference>> ."

#. type: delimited block =
#: upstream/_versions/3.0/guides/opentelemetry.adoc:293
#, fuzzy
msgid "The `b3`, `b3multi`, `jaeger` and `ottrace` propagators will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators] extension to be added as a dependency to your project."
msgstr "Los propagadores `b3` , `b3multi` , `jaeger` y `ottrace` necesitarán que la extensión link:https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators] se añada como dependencia a su proyecto."

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:301
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.opentelemetry</groupId>\n"
"    <artifactId>opentelemetry-extension-trace-propagators</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:307
#, no-wrap
msgid "implementation(\"io.opentelemetry:opentelemetry-extension-trace-propagators\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:310
#, fuzzy
msgid "The `xray` propagator will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/aws[aws] extension to be added as a dependency to your project."
msgstr "El propagador `xray` necesitará que la extensión link:https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/aws[aws] se añada como dependencia a su proyecto."

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:318
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.opentelemetry</groupId>\n"
"    <artifactId>opentelemetry-extension-aws</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:324
#, no-wrap
msgid "implementation(\"io.opentelemetry:opentelemetry-extension-aws\")\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:327
#, fuzzy, no-wrap
msgid "Resource"
msgstr "Recursos"

#. type: delimited block =
#: upstream/_versions/3.0/guides/opentelemetry.adoc:330
#, fuzzy
msgid "A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[resource] is a representation of the entity that is producing telemetry, it adds attributes to the exported trace to characterize who is producing the trace."
msgstr "Un link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[recurso] es una representación de la entidad que está produciendo telemetría, añade atributos a la traza exportada para caracterizar quién está produciendo la traza."

#. type: delimited block =
#: upstream/_versions/3.0/guides/opentelemetry.adoc:334
msgid "You can add attributes by setting the `resource-attributes` tracer config that is described in the <<configuration-reference>>.  Since this property can be overridden at runtime, the OpenTelemetry extension will pick up its value following the order of precedence that is described in the xref:config-reference.adoc#configuration-sources[Quarkus Configuration Reference]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.0/guides/opentelemetry.adoc:337
#, fuzzy
msgid "If by any means you need to use a custom resource or one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions] you can create multiple resource producers. The OpenTelemetry extension will detect the `Resource` CDI beans and will merge them when configuring the tracer producer."
msgstr "Si por alguna razón necesita utilizar un recurso personalizado o uno que sea proporcionado por una de las link:https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[extensiones del SDK] de OpenTelemetry puede crear múltiples productores de recursos. La extensión OpenTelemetry detectará los beans CDI de `Resource` y los fusionará al configurar el productor de trazadores."

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:342
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CustomConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:348
#, no-wrap
msgid ""
"    @Produces\n"
"    @ApplicationScoped\n"
"    public Resource osResource() {\n"
"        return OsResource.get();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:355
#, no-wrap
msgid ""
"    @Produces\n"
"    @ApplicationScoped\n"
"    public Resource ecsResource() {\n"
"        return EcsResource.get();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:357
#, fuzzy, no-wrap
msgid "Sampler"
msgstr "Muestrario"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:361
#, fuzzy
msgid "A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[sampler] decides whether a trace should be sampled and exported, controlling noise and overhead by reducing the number of sample of traces collected and sent to the collector."
msgstr "Un link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[muestreador] decide si una traza debe ser muestreada y exportada, controlando el ruido y la sobrecarga al reducir el número de muestras de trazas recogidas y enviadas al recolector."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:364
#, fuzzy
msgid "You can set a https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[built-in sampler] simply by setting the desired sampler config described in the <<configuration-reference>>."
msgstr "Puede configurar un muestreador link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[incorporado] simplemente estableciendo la configuración de muestreador deseada descrita en <<configuration-reference>> ."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:367
#, fuzzy
msgid "If you need to use a custom sampler or to use one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions] you can create a sampler producer. The OpenTelemetry extension will detect the `Sampler` CDI bean and will use it when configuring the tracer producer."
msgstr "Si necesita utilizar un muestreador personalizado o utilizar uno que sea proporcionado por una de las link:https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[extensiones del SDK] de OpenTelemetry puede crear un productor de muestreador. La extensión OpenTelemetry detectará el frijol CDI `Sampler` y lo utilizará cuando configure el productor del trazador."

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:382
#, no-wrap
msgid ""
"    /** Creates a custom sampler for OpenTelemetry */\n"
"    @Produces\n"
"    @Singleton\n"
"    public Sampler sampler() {\n"
"        return JaegerRemoteSampler.builder()\n"
"        .setServiceName(\"my-service\")\n"
"        .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:384
#, fuzzy, no-wrap
msgid "Additional instrumentation"
msgstr "Instrumentos adicionales"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:388
#, fuzzy
msgid "Some Quarkus extensions will require additional code to ensure traces are propagated to subsequent execution.  These sections will outline what is necessary to propagate traces across process boundaries."
msgstr "Algunas extensiones de Quarkus requerirán código adicional para asegurar que las trazas se propaguen a la ejecución subsiguiente. Estas secciones esbozarán lo necesario para propagar las trazas a través de los límites del proceso."

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:390
#, fuzzy
msgid "The instrumentation documented in this section has been tested with Quarkus and works in both standard and native mode."
msgstr "La instrumentación documentada en esta sección ha sido probada con Quarkus y funciona tanto en modo estándar como nativo."

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:391
#, fuzzy, no-wrap
msgid "CDI"
msgstr "CDI"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:395
msgid "Annotating a method in any CDI aware bean with the `io.opentelemetry.extension.annotations.WithSpan` annotation will create a new Span and establish any required relationships with the current Trace context."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:398
msgid "Method parameters can be annotated with the `io.opentelemetry.extension.annotations.SpanAttribute` annotation to indicate which method parameters should be part of the Trace."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:400
#, fuzzy
msgid "Example:"
msgstr "Ejemplo:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:406
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class SpanBean {\n"
"    @WithSpan\n"
"    void span() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:408
#: upstream/_versions/3.0/guides/opentelemetry.adoc:413
#: upstream/_versions/3.0/guides/opentelemetry.adoc:418
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:411
#, no-wrap
msgid ""
"    @WithSpan(\"name\")\n"
"    void spanName() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:416
#, no-wrap
msgid ""
"    @WithSpan(kind = SERVER)\n"
"    void spanKind() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:421
#, no-wrap
msgid ""
"    @WithSpan\n"
"    void spanArgs(@SpanAttribute(value = \"arg\") String arg) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:424
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:426
#, fuzzy, no-wrap
msgid "Available OpenTelemetry CDI injections"
msgstr "Inyecciones OpenTelemetry CDI disponibles"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:430
#, fuzzy
msgid "As per MicroProfile Telemetry Tracing specification, Quarkus supports the CDI injections of the following classes:"
msgstr "De acuerdo con la especificación de rastreo telemétrico de MicroProfile, Quarkus admite las inyecciones CDI de las siguientes clases:"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:432
#, fuzzy
msgid "`io.opentelemetry.api.OpenTelemetry`"
msgstr "`io.opentelemetry.api.OpenTelemetry`"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:433
#, fuzzy
msgid "`io.opentelemetry.api.trace.Tracer`"
msgstr "`io.opentelemetry.api.trace.Tracer`"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:434
#, fuzzy
msgid "`io.opentelemetry.api.trace.Span`"
msgstr "`io.opentelemetry.api.trace.Span`"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:435
#, fuzzy
msgid "`io.opentelemetry.api.baggage.Baggage`"
msgstr "`io.opentelemetry.api.baggage.Baggage`"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:437
#, fuzzy
msgid "You can inject these classes in any CDI enabled bean. For instance, the `Tracer` is particularly useful to start custom spans:"
msgstr "Puedes inyectar estas clases en cualquier bean habilitado para CDI. Por ejemplo, el `Tracer` es particularmente útil para iniciar spans personalizados:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:442
#, no-wrap
msgid ""
"@Inject\n"
"Tracer tracer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:444
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:451
#, no-wrap
msgid ""
"public void tracedWork() {\n"
"    Span span = tracer.spanBuilder(\"My custom span\")\n"
"        .setAttribute(\"attr\", \"attr.value\")\n"
"        .setParent(Context.current().with(Span.current()))\n"
"        .setSpanKind(SpanKind.INTERNAL)\n"
"        .startSpan();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:453
#, no-wrap
msgid "    // traced work\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:456
#, no-wrap
msgid ""
"    span.end();\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/opentelemetry.adoc:458
#, fuzzy, no-wrap
msgid "SmallRye Reactive Messaging - Kafka"
msgstr "SmallRye Reactive Messaging - Kafka"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:462
#, fuzzy
msgid "When using the SmallRye Reactive Messaging extension for Kafka, we are able to propagate the span into the Kafka Record with:"
msgstr "Al utilizar la extensión SmallRye Reactive Messaging para Kafka, podemos propagar el span en el registro de Kafka con:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/opentelemetry.adoc:467
#, no-wrap
msgid ""
"TracingMetadata tm = TracingMetadata.withPrevious(Context.current());\n"
"Message out = Message.of(...).withMetadata(tm);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:471
#, fuzzy
msgid "The above creates a `TracingMetadata` object we can add to the `Message` being produced, which retrieves the OpenTelemetry `Context` to extract the current span for propagation."
msgstr "Lo anterior crea un objeto `TracingMetadata` que podemos añadir al `Message` que se está produciendo, el cual recupera el OpenTelemetry `Context` para extraer el tramo actual para su propagación."

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:472
#, fuzzy, no-wrap
msgid "Exporters"
msgstr "Exportadores"

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:475
msgid "Quarkus OpenTelemetry defaults to the standard OTLP exporter defined in OpenTelemetry."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/opentelemetry.adoc:477
#, fuzzy
msgid "Additional exporters will be available in the Quarkiverse https://github.com/quarkiverse/quarkus-opentelemetry-exporter/blob/main/README.md[quarkus-opentelemetry-exporter] project."
msgstr "Habrá exportadores adicionales en el proyecto Quarkiverse  link:https://github.com/quarkiverse/quarkus-opentelemetry-exporter/blob/main/README.md[quarkus-opentelemetry-exporter]."

#. type: Title ==
#: upstream/_versions/3.0/guides/opentelemetry.adoc:479
#, fuzzy, no-wrap
msgid "OpenTelemetry Configuration Reference"
msgstr "Referencia de configuración de OpenTelemetry"
