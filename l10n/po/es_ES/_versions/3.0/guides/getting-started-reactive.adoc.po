# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-20 14:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started With Reactive"
msgstr "Primeros pasos con Reactive"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:13
#, fuzzy
msgid "_Reactive_ is a set of principles to build robust, efficient, and concurrent applications and systems.  These principles let you handle more load than traditional approaches while using the resources (CPU and memory) more efficiently while also reacting to failures gracefully."
msgstr "_La reactividad_ es un conjunto de principios para construir aplicaciones y sistemas robustos, eficientes y concurrentes. Estos principios le permiten manejar más carga que los enfoques tradicionales a la vez que utiliza los recursos (CPU y memoria) de forma más eficiente y reacciona a los fallos con elegancia."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:17
#, fuzzy
msgid "Quarkus is a _Reactive_ framework.  Since the beginning, _Reactive_ has been an essential tenet of the Quarkus architecture.  It includes many reactive features and offers a broad ecosystem."
msgstr "Quarkus es un framework _Reactivo_ . Desde el principio, _Reactive_ ha sido un principio esencial de la arquitectura de Quarkus. Incluye muchas características reactivas y ofrece un amplio ecosistema."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:20
#, fuzzy
msgid "This guide is not an in-depth article about what _Reactive_ is and how Quarkus enables reactive architectures.  If you want to read more about these topics, refer to the xref:quarkus-reactive-architecture.adoc[Reactive Architecture guide], which provides an overview of the Quarkus reactive ecosystem."
msgstr "Esta guía no es un artículo en profundidad sobre qué es _Reactive_ y cómo Quarkus permite arquitecturas reactivas. Si desea leer más sobre estos temas, consulte la xref:quarkus-reactive-architecture.adoc[guía Arquitectura] Reactiva, que ofrece una visión general del ecosistema reactivo de Quarkus."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:24
#, fuzzy
msgid "In this guide, we will get you started with some reactive features of Quarkus.  We are going to implement a simple CRUD application.  Yet, unlike in the xref:hibernate-orm-panache.adoc[Hibernate with Panache guide], it uses the reactive features of Quarkus."
msgstr "En esta guía, vamos a empezar con algunas características reactivas de Quarkus. Vamos a implementar una sencilla aplicación CRUD. Sin embargo, a diferencia de la xref:hibernate-orm-panache.adoc[guía Hibernate con Panache] , ésta utiliza las características reactivas de Quarkus."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:26
#, fuzzy
msgid "This guide will help you with:"
msgstr "Esta guía le ayudará con:"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:28
#, fuzzy
msgid "Bootstrapping a reactive CRUD application with Quarkus"
msgstr "Arranque de una aplicación CRUD reactiva con Quarkus"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:29
#, fuzzy
msgid "Using Hibernate Reactive with Panache to interact with a database in a reactive fashion"
msgstr "Uso de Hibernate Reactive con Panache para interactuar con una base de datos de forma reactiva"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:30
#, fuzzy
msgid "Using RESTEasy Reactive to implement HTTP API while enforcing the reactive principle"
msgstr "Uso de RESTEasy Reactive para implementar la API HTTP mientras se aplica el principio reactivo"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:31
#, fuzzy
msgid "Packaging and Running the application"
msgstr "Empaquetar y ejecutar la aplicación"

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:32
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:39
#, fuzzy
msgid "Verify that Maven is using the Java version you expect.  If you have multiple JDKs installed, make sure Maven is using the expected one.  You can verify which JDK Maven uses by running `mvn --version.`"
msgstr "Verifique que Maven está utilizando la versión de Java que espera. Si tiene varios JDK instalados, asegúrese de que Maven está utilizando el esperado. Puede verificar qué JDK utiliza Maven ejecutando `mvn --version.`"

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:40
#, fuzzy, no-wrap
msgid "Imperative vs. Reactive: a question of threads"
msgstr "Imperativo vs. Reactivo: una cuestión de hilos"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:44
#, fuzzy
msgid "As mentioned above, in this guide, we are going to implement a reactive CRUD application.  But you may wonder what the differences and benefits are in comparison to the traditional and imperative model."
msgstr "Como ya hemos mencionado, en esta guía vamos a implementar una aplicación CRUD reactiva. Pero puede que se pregunte cuáles son las diferencias y ventajas en comparación con el modelo tradicional e imperativo."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:47
#, fuzzy
msgid "To better understand the contrast, we need to explain the difference between the reactive and imperative execution models.  It's essential to comprehend that _Reactive_ is not just a different execution model, but that distinction is necessary to understand this guide."
msgstr "Para entender mejor el contraste, necesitamos explicar la diferencia entre los modelos de ejecución reactivo e imperativo. Es esencial comprender que _reactivo_ no es sólo un modelo de ejecución diferente, sino que esa distinción es necesaria para entender esta guía."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:54
#, fuzzy
msgid "In the traditional and imperative approach, frameworks assign a thread to handle the request.  So, the whole processing of the request runs on this worker thread.  This model does not scale very well.  Indeed, to handle multiple concurrent requests, you need multiple threads; and so your application concurrency is constrained by the number of threads.  In addition, these threads are blocked as soon as your code interacts with remote services.  So, it leads to inefficient usage of the resources, as you may need more threads, and each thread, as they are mapped to OS threads, has a cost in terms of memory and CPU."
msgstr "En el enfoque tradicional e imperativo, los frameworks asignan un hilo para gestionar la solicitud. Así, todo el procesamiento de la solicitud se ejecuta en este hilo trabajador. Este modelo no escala muy bien. De hecho, para gestionar varias solicitudes concurrentes, necesita varios hilos; y así la concurrencia de su aplicación se ve limitada por el número de hilos. Además, estos hilos se bloquean en cuanto su código interactúa con servicios remotos. Por lo tanto, esto conduce a un uso ineficiente de los recursos, ya que puede necesitar más hilos, y cada hilo, al estar asignados a hilos del SO, tiene un coste en términos de memoria y CPU."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:55
#, no-wrap
msgid "Imperative"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:55
#, no-wrap
msgid "blocking-threads.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:63
#, fuzzy
msgid "On the other side, the reactive model relies on non-blocking I/Os and a different execution model.  Non-blocking I/O provides an efficient way to deal with concurrent I/O.  A minimal amount of threads called I/O threads, can handle many concurrent I/O.  With such a model, request processing is not delegated to a worker thread but uses these I/O threads directly.It saves memory and CPU as there is no need to create worker threads to handle the requests.  It also improves the concurrency as it removes the constraint on the number of threads.  Finally, it also improves response time as it reduces the number of thread switches."
msgstr "Por otro lado, el modelo reactivo se basa en E/S no bloqueantes y en un modelo de ejecución diferente. Las E/S no bloqueantes proporcionan una forma eficiente de tratar las E/S concurrentes. Una cantidad mínima de hilos, denominados hilos de E/S, puede gestionar muchas E/S concurrentes. Con este modelo, el procesamiento de las solicitudes no se delega en un hilo trabajador, sino que utiliza directamente estos hilos de E/S. Ahorra memoria y CPU, ya que no es necesario crear hilos trabajadores para gestionar las solicitudes. También mejora la concurrencia ya que elimina la restricción del número de hilos. Por último, también mejora el tiempo de respuesta ya que reduce el número de cambios de hilo."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:64
#, fuzzy, no-wrap
msgid "Reactive"
msgstr "Reactivo"

#. type: Target for macro image
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:64
#, no-wrap
msgid "reactive-thread.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:67
#, fuzzy, no-wrap
msgid "From sequential to continuation style"
msgstr "Del estilo secuencial a la continuación"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:73
#, fuzzy
msgid "So, with the reactive execution model, the requests are processed using I/O threads.  But that's not all.  An I/O thread can handle multiple concurrent requests.  How? Here is the trick and one of the most significant differences between reactive and imperative."
msgstr "Así, con el modelo de ejecución reactiva, las peticiones se procesan utilizando hilos de E/S. Pero eso no es todo. Un hilo de E/S puede manejar múltiples peticiones concurrentes. ¿Cómo? Aquí está el truco y una de las diferencias más significativas entre reactivo e imperativo."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:79
#, fuzzy
msgid "When processing a request requires interacting with a remote service, like an HTTP API or a database, it does not block the execution while waiting for the response.  Instead, it schedules the I/O operation and attaches a continuation, i.e., the request processing remaining code.  This continuation can be passed as a callback (a function invoked with the I/O outcome), or use more advanced constructs such as reactive programming or co-routines.  Regardless of how the continuation is expressed, the essential aspect is the release of the I/O thread and, as a consequence, the fact that this thread can be used to process another request.  When the scheduled I/O completes, the I/O thread executes the continuation, and the processing of the pending request continues."
msgstr "Cuando el procesamiento de una solicitud requiere interactuar con un servicio remoto, como una API HTTP o una base de datos, no bloquea la ejecución mientras espera la respuesta. En su lugar, programa la operación de E/S y adjunta una continuación, es decir, el código restante del procesamiento de la solicitud. Esta continuación puede pasarse como una devolución de llamada (una función invocada con el resultado de la E/S), o utilizar construcciones más avanzadas como la programación reactiva o las co-rutinas. Independientemente de cómo se exprese la continuación, el aspecto esencial es la liberación del hilo de E/S y, como consecuencia, el hecho de que este hilo pueda utilizarse para procesar otra solicitud. Cuando finaliza la E/S programada, el hilo de E/S ejecuta la continuación y continúa el procesamiento de la solicitud pendiente."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:82
#, fuzzy
msgid "So, unlike the imperative model, where I/O blocks the execution, reactive switches to a continuation-based design, where the I/O threads are released, and continuation invoked when the I/Os complete.  As a result, the I/O thread can handle multiple concurrent requests, improving the overall concurrency of the application."
msgstr "Así, a diferencia del modelo imperativo, en el que la E/S bloquea la ejecución, reactivo cambia a un diseño basado en la continuación, en el que los hilos de E/S se liberan y la continuación se invoca cuando se completan las E/S. Como resultado, el hilo de E/S puede manejar múltiples peticiones concurrentes, mejorando la concurrencia global de la aplicación."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:87
#, fuzzy
msgid "But, there is a catch.  We need a way to write continuation-passing code.  There are many ways of doing this.  In Quarkus, we propose:"
msgstr "Pero, hay una trampa. Necesitamos una forma de escribir código de paso de continuación. Hay muchas formas de hacerlo. En Quarkus, proponemos:"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:89
#, fuzzy
msgid "Mutiny - an intuitive and event-driven reactive programming library"
msgstr "Mutiny: una biblioteca de programación reactiva intuitiva y basada en eventos"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:90
#, fuzzy
msgid "Kotlin co-routines - a way to write asynchronous code in a sequential manner"
msgstr "Corrutinas de Kotlin: una forma de escribir código asíncrono de forma secuencial"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:93
#, fuzzy
msgid "In this guide, we will use Mutiny.  To know more about Mutiny, check the xref:mutiny-primer.adoc[Mutiny documentation]."
msgstr "En esta guía utilizaremos Mutiny. Para saber más sobre Mutiny, consulte la xref:mutiny-primer.adoc[documentación de Mutiny] ."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:96
#, fuzzy
msgid "Project Loom is coming to the JDK soon and proposes a virtual thread-based model.  The Quarkus architecture is ready to support Loom as soon as it's become globally available."
msgstr "El proyecto Loom llegará pronto al JDK y propone un modelo basado en hilos virtuales. La arquitectura Quarkus está preparada para soportar Loom en cuanto esté disponible globalmente."

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:97
#, fuzzy, no-wrap
msgid "Bootstrapping the Reactive Fruits application"
msgstr "Arranque de la aplicación Reactive Fruits"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:100
#, fuzzy
msgid "With this in mind, let's see how we can develop a CRUD application with Quarkus, which will use the I/O thread to handle the HTTP requests, interact with a database, process the result, and write the HTTP response; in other words: a reactive CRUD application."
msgstr "Con esto en mente, vamos a ver cómo podemos desarrollar una aplicación CRUD con Quarkus, que utilizará el hilo de E/S para manejar las peticiones HTTP, interactuar con una base de datos, procesar el resultado, y escribir la respuesta HTTP; en otras palabras: una aplicación CRUD reactiva."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:102
#, fuzzy
msgid "While we recommend you to follow the step-by-step instructions, you can find the final solution on https://github.com/quarkusio/quarkus-quickstarts/tree/main/hibernate-reactive-panache-quickstart."
msgstr "Aunque le recomendamos que siga las instrucciones paso a paso, puede encontrar la solución final en  https://github.com/quarkusio/quarkus-quickstarts/tree/main/hibernate-reactive-panache-quickstart"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:104
#, fuzzy
msgid "First, go to https://code.quarkus.io[code.quarkus.io] and select the following extensions:"
msgstr "En primer lugar, vaya a  link:https://code.quarkus.io[code.quarkus.io] y seleccione las siguientes extensiones:"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:106
#, fuzzy
msgid "RESTEasy Reactive Jackson"
msgstr "RESTEasy Reactive Jackson"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:107
#, fuzzy
msgid "Hibernate Reactive with Panache"
msgstr "Hibernate Reactive with Panache"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:108
#, fuzzy
msgid "Reactive PostgreSQL client"
msgstr "Cliente PostgreSQL reactivo"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:109
#, fuzzy, no-wrap
msgid "Extensions"
msgstr "Extensiones de la lista"

#. type: Target for macro image
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:109
#, no-wrap
msgid "reactive-guide-code.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:113
#, fuzzy
msgid "The last extension is the reactive database driver for PostgreSQL.  Hibernate Reactive uses that driver to interact with the database without blocking the caller thread."
msgstr "La última extensión es el controlador de base de datos reactivo para PostgreSQL. Hibernate Reactive utiliza ese controlador para interactuar con la base de datos sin bloquear el hilo de llamada."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:115
#, fuzzy
msgid "Once selected, click on \"Generate your application\", download the zip file, unzip it and open the code in your favorite IDE."
msgstr "Una vez seleccionado, haz clic en \"Generar tu aplicación\", descarga el archivo zip, descomprímelo y abre el código en tu IDE favorito."

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:116
#, fuzzy, no-wrap
msgid "Reactive Panache Entity"
msgstr "Entidad Panache Reactiva"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:119
#, fuzzy
msgid "Let's start with the `Fruit` entity.Create the `src/main/java/org/acme/hibernate/orm/panache/Fruit.java` file with the following content:"
msgstr "Comencemos con la entidad `Fruit`. Cree el archivo `src/main/java/org/acme/hibernate/orm/panache/Fruit.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:123
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:184
#, no-wrap
msgid "package org.acme.hibernate.orm.panache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:127
#, no-wrap
msgid ""
"import jakarta.persistence.Cacheable;\n"
"import jakarta.persistence.Column;\n"
"import jakarta.persistence.Entity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:129
#, no-wrap
msgid "import io.quarkus.hibernate.reactive.panache.PanacheEntity;  // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:133
#, no-wrap
msgid ""
"@Entity\n"
"@Cacheable\n"
"public class Fruit extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:136
#, no-wrap
msgid ""
"\t @Column(length = 40, unique = true)\n"
"\t public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:138
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:193
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:140
#, fuzzy
msgid "Make sure you import the reactive variant of `PanacheEntity`."
msgstr "Asegúrese de importar la variante reactiva de `PanacheEntity`."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:148
#, fuzzy
msgid "This class represents `Fruits`.  It's a straightforward entity with a single field (`name`).  Note that it uses `io.quarkus.hibernate.reactive.panache.PanacheEntity`, the reactive variant of `PanacheEntity`.  So, behind the scenes, Hibernate uses the execution model we described above.  It interacts with the database without blocking the thread.  In addition, this reactive `PanacheEntity` proposes a reactive API.  We will use this API to implement the REST endpoint."
msgstr "Esta clase representa a `Fruits` . Es una entidad sencilla con un único campo ( `name` ). Observe que utiliza `io.quarkus.hibernate.reactive.panache.PanacheEntity` , la variante reactiva de `PanacheEntity` . Así pues, entre bastidores, Hibernate utiliza el modelo de ejecución que hemos descrito anteriormente. Interactúa con la base de datos sin bloquear el hilo. Además, este `PanacheEntity` reactivo propone una API reactiva. Utilizaremos esta API para implementar el punto final REST."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:150
#, fuzzy
msgid "Before going further, open the `src/main/resource/application.properties` file and add:"
msgstr "Antes de continuar, abra el archivo `src/main/resource/application.properties` y añada:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:155
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.hibernate-orm.database.generation=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:158
#, fuzzy
msgid "It instructs the application to use PostgreSQL for the database and to handle the database schema generation."
msgstr "Indica a la aplicación que utilice PostgreSQL para la base de datos y que se encargue de la generación del esquema de la base de datos."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:160
#, fuzzy
msgid "In the same directory, create an `import.sql` file, which inserts a few fruits, so we don't start with an empty database in dev mode:"
msgstr "En el mismo directorio, crea un archivo `import.sql`, que inserta unas cuantas frutas, para que no empecemos con una base de datos vacía en modo dev:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:166
#, no-wrap
msgid ""
"INSERT INTO fruit(id, name) VALUES (nextval('hibernate_sequence'), 'Cherry');\n"
"INSERT INTO fruit(id, name) VALUES (nextval('hibernate_sequence'), 'Apple');\n"
"INSERT INTO fruit(id, name) VALUES (nextval('hibernate_sequence'), 'Banana');\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:170
#, fuzzy
msgid "In a terminal, launch the application in dev mode using: `./mvnw quarkus:dev`.  Quarkus automatically starts a database instance for you and configure the application. Now we only need to implement the HTTP endpoint."
msgstr "En un terminal, inicie la aplicación en modo dev utilizando: `./mvnw quarkus:dev` . Quarkus inicia automáticamente una instancia de base de datos para usted y configura la aplicación. Ahora sólo tenemos que implementar el punto final HTTP."

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:172
#, fuzzy, no-wrap
msgid "Reactive Resource"
msgstr "Recurso Reactivo"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:178
#, fuzzy
msgid "Because the interaction with the database is non-blocking and asynchronous, we need to use asynchronous constructs to implement our HTTP resource.  Quarkus uses Mutiny as its central reactive programming model.  So, it supports returning Mutiny types (`Uni` and `Multi`) from HTTP endpoints.  Also, our Fruit Panache entity exposes methods using these types, so we only need to implement the _glue_."
msgstr "Dado que la interacción con la base de datos es no bloqueante y asíncrona, necesitamos utilizar construcciones asíncronas para implementar nuestro recurso HTTP. Quarkus utiliza Mutiny como modelo central de programación reactiva. Así pues, admite la devolución de tipos Mutiny ( `Uni` y `Multi` ) desde puntos finales HTTP. Además, nuestra entidad Fruit Panache expone métodos que utilizan estos tipos, por lo que sólo tenemos que implementar el _pegamento_ ."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:180
#, fuzzy
msgid "Create the `src/main/java/org/acme/hibernate/orm/panache/FruitResource.java` file with the following content:"
msgstr "Cree el archivo `src/main/java/org/acme/hibernate/orm/panache/FruitResource.java` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:187
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:191
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"@ApplicationScoped\n"
"public class FruitResource {\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:197
#, fuzzy
msgid "Let's start with the `getAll` method. The `getAll` method returns all the fruits stored in the database.  In the `FruitResource`, add the following code:"
msgstr "Empecemos por el método `getAll` . El método `getAll` devuelve todas las frutas almacenadas en la base de datos. En el `FruitResource` , añada el siguiente código:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:204
#, no-wrap
msgid ""
"@GET\n"
"public Uni<List<Fruit>> get() {\n"
"    return Fruit.listAll(Sort.by(\"name\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:207
#, fuzzy
msgid "Open http://localhost:8080/fruits to invoke this method:"
msgstr "Abra  http://localhost:8080/fruits  para invocar este método:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:211
#, no-wrap
msgid "[{\"id\":2,\"name\":\"Apple\"},{\"id\":3,\"name\":\"Banana\"},{\"id\":1,\"name\":\"Cherry\"},{\"id\":4,\"name\":\"peach\"}]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:215
#, fuzzy
msgid "We get the expected JSON array.  RESTEasy Reactive automatically maps the list into a JSON Array, except if instructed otherwise."
msgstr "Obtenemos el array JSON esperado. RESTEasy Reactive mapea automáticamente la lista en un array JSON, excepto si se indica lo contrario."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:222
#, fuzzy
msgid "Look at the return type; it returns a `Uni` of `List<Fruit>`.  `Uni` is an asynchronous type.  It's a bit like a future.  It's a placeholder that will get its value (item) later.  When it receives the item (Mutiny says it _emits_ its item), you can attach some behavior.  That's how we express the continuation: get a uni, and when the uni emits its item, execute the rest of the processing."
msgstr "Fíjese en el tipo de retorno; devuelve un `Uni` de `List<Fruit>` . `Uni` es un tipo asíncrono. Es un poco como un futuro. Es un marcador de posición que obtendrá su valor (item) más tarde. Cuando recibe el ítem (Mutiny dice que _emite_ su ítem), se le puede adjuntar algún comportamiento. Así es como expresamos la continuación: obtener un uni, y cuando el uni emite su ítem, ejecutar el resto del procesamiento."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:232
#, fuzzy
msgid "Reactive developers may wonder why we can't return a stream of fruits directly.  It tends to be a bad idea when dealing with a database.  Relational databases do not handle streaming well.  It’s a problem of protocols not designed for this use case.  So, to stream rows from the database, you need to keep a connection (and sometimes a transaction) open until all the rows are consumed.  If you have slow consumers, you break the golden rule of databases: don’t hold connections for too long.  Indeed, the number of connections is rather low, and having consumers keeping them for too long will dramatically reduce the concurrency of your application.  So, when possible, use a `Uni<List<T>>` and load the content.  If you have a large set of results, implement pagination."
msgstr "Los desarrolladores reactivos pueden preguntarse por qué no podemos devolver un flujo de frutos directamente. Suele ser una mala idea cuando se trata de una base de datos. Las bases de datos relacionales no manejan bien el flujo. Es un problema de protocolos no diseñados para este caso de uso. Así que, para transmitir filas desde la base de datos, necesita mantener una conexión (y a veces una transacción) abierta hasta que se consuman todas las filas. Si tiene consumidores lentos, rompe la regla de oro de las bases de datos: no mantenga las conexiones durante demasiado tiempo. De hecho, el número de conexiones es bastante bajo, y tener consumidores que las mantengan durante demasiado tiempo reducirá drásticamente la concurrencia de su aplicación. Así que, cuando sea posible, utilice un `Uni<List<T>>` y cargue el contenido. Si tiene un gran conjunto de resultados, implemente la paginación."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:234
#, fuzzy
msgid "Let's continue our API with `getSingle`:"
msgstr "Continuemos con nuestra API en `getSingle`:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:242
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/{id}\")\n"
"public Uni<Fruit> getSingle(Long id) {\n"
"    return Fruit.findById(id);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:246
#, fuzzy
msgid "In this case, we use `Fruit.findById` to retrieve the fruit.  It returns a `Uni`, which will complete when the database has retrieved the row."
msgstr "En este caso, utilizamos `Fruit.findById` para recuperar la fruta. Devuelve un `Uni` , que se completará cuando la base de datos haya recuperado la fila."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:248
#, fuzzy
msgid "The `create` method allows adding a new fruit to the database:"
msgstr "El método `create` permite añadir una nueva fruta a la base de datos:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:256
#, no-wrap
msgid ""
"@POST\n"
"public Uni<Response> create(Fruit fruit) {\n"
"    return Panache.<Fruit>withTransaction(fruit::persist)\n"
"            .onItem().transform(inserted -> Response.created(URI.create(\"/fruits/\" + inserted.id)).build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:265
#, fuzzy
msgid "The code is a bit more involved.  To write to a database, we need a transaction.  So we use `Panache.withTransaction` to get one (asynchronously) and call the `persist` method when we receive the transaction.  The `persist` method is also returning a `Uni`.  This `Uni` emits the result of the insertion of the fruit in the database.  Once the insertion completes (and that's our continuation), we create a `201 CREATED` response.  RESTEasy Reactive automatically reads the request body as JSON and creates the `Fruit` instance."
msgstr "El código es un poco más complicado. Para escribir en una base de datos, necesitamos una transacción. Así que utilizamos `Panache.withTransaction` para obtener una (de forma asíncrona) y llamamos al método `persist` cuando recibimos la transacción. El método `persist` también devuelve un `Uni` . Este `Uni` emite el resultado de la inserción de la fruta en la base de datos. Una vez completada la inserción (y esa es nuestra continuación), creamos una respuesta `201 CREATED` . RESTEasy Reactive lee automáticamente el cuerpo de la solicitud como JSON y crea la instancia `Fruit` ."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:268
#, fuzzy
msgid "The `.onItem().transform(...)` can be replaced with `.map(...)`.  `map` is a shortcut."
msgstr "El `.onItem().transform(…​)` puede sustituirse por `.map(…​)` . `map` es un atajo."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:270
#, fuzzy
msgid "If you have https://curl.se/[curl] on your machine, you can try the endpoint using:"
msgstr "Si tienes  link:https://curl.se/[curl] en tu máquina, puedes probar el endpoint usando:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:277
#, no-wrap
msgid ""
"> curl --header \"Content-Type: application/json\" \\\n"
"  --request POST \\\n"
"  --data '{\"name\":\"peach\"}' \\\n"
"  http://localhost:8080/fruits\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:280
#, fuzzy
msgid "Following the same ideas, you can implement the other CRUD methods."
msgstr "Siguiendo las mismas ideas, puedes implementar los otros métodos CRUD."

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:281
#, fuzzy, no-wrap
msgid "Testing and Running"
msgstr "Pruebas y funcionamiento"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:285
#, fuzzy
msgid "Testing a reactive application is similar to testing a non-reactive one: use the HTTP endpoint and verify the HTTP responses.  The fact that the application is reactive does not change anything."
msgstr "Probar una aplicación reactiva es similar a probar una no reactiva: utilice el punto final HTTP y verifique las respuestas HTTP. El hecho de que la aplicación sea reactiva no cambia nada."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:287
#, fuzzy
msgid "In https://github.com/quarkusio/quarkus-quickstarts/blob/main/hibernate-reactive-panache-quickstart/src/test/java/org/acme/hibernate/orm/panache/FruitsEndpointTest.java[FruitsEndpointTest.java] you can see how the test for the fruit application can be implemented."
msgstr "En  link:https://github.com/quarkusio/quarkus-quickstarts/blob/main/hibernate-reactive-panache-quickstart/src/test/java/org/acme/hibernate/orm/panache/FruitsEndpointTest.java[FruitsEndpointTest.java] se puede ver cómo se puede implementar la prueba para la aplicación de frutas."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:289
#, fuzzy
msgid "Packaging and running the application does not change either."
msgstr "El empaquetado y la ejecución de la aplicación tampoco cambian."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:291
#, fuzzy
msgid "You can use the following command as usual:"
msgstr "Puede utilizar el siguiente comando como de costumbre:"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:295
#, fuzzy
msgid "or to build a native executable:"
msgstr "o para construir un ejecutable nativo:"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:299
#, fuzzy
msgid "You can also package the application in a container."
msgstr "También puede empaquetar la aplicación en un contenedor."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:301
#, fuzzy
msgid "To run the application, don’t forget to start a database and provide the configuration to your application."
msgstr "Para ejecutar la aplicación, no olvides iniciar una base de datos y proporcionar la configuración a tu aplicación."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:303
#, fuzzy
msgid "For example, you can use Docker to run your database:"
msgstr "Por ejemplo, puede utilizar Docker para ejecutar su base de datos:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:310
#, no-wrap
msgid ""
"docker run -it --rm=true \\\n"
"    --name postgres-quarkus -e POSTGRES_USER=quarkus \\\n"
"    -e POSTGRES_PASSWORD=quarkus -e POSTGRES_DB=fruits \\\n"
"    -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:313
#, fuzzy
msgid "Then, launch the application using:"
msgstr "A continuación, inicie la aplicación con:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:321
#, no-wrap
msgid ""
"java \\\n"
"   -Dquarkus.datasource.reactive.url=postgresql://localhost/fruits \\\n"
"   -Dquarkus.datasource.username=quarkus \\\n"
"   -Dquarkus.datasource.password=quarkus \\\n"
"   -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:324
#, fuzzy
msgid "Or, if you packaged your application as native executable, use:"
msgstr "O, si empaquetaste tu aplicación como ejecutable nativo, utiliza"

#. type: delimited block -
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:332
#, no-wrap
msgid ""
"./target/getting-started-with-reactive-runner \\\n"
"  -Dquarkus.datasource.reactive.url=postgresql://localhost/fruits \\\n"
"  -Dquarkus.datasource.username=quarkus \\\n"
"  -Dquarkus.datasource.password=quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:336
#, fuzzy
msgid "The parameters passed to the application are described in the datasource guide.  There are other ways to configure the application - please check the xref:config-reference.adoc#configuration-sources[configuration guide] to have an overview of the possibilities (such as env variable, .env files and so on)."
msgstr "Los parámetros que se pasan a la aplicación se describen en la guía de fuentes de datos. Existen otras formas de configurar la aplicación - consulte la guía de xref:config-reference.adoc#configuration-sources[configuración] para tener una visión general de las posibilidades (como variables env, archivos .env, etc.)."

#. type: Title ==
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:337
#, fuzzy, no-wrap
msgid "Going further"
msgstr "Ir más allá"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:341
#, fuzzy
msgid "This guide is a brief introduction to some reactive features offered by Quarkus.  Quarkus is a reactive framework, and so offers a lot of reactive features."
msgstr "Esta guía es una breve introducción a algunas características reactivas que ofrece Quarkus. Quarkus es un framework reactivo, y por lo tanto ofrece un montón de características reactivas."

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:343
#, fuzzy
msgid "If you want to continue on this topic check:"
msgstr "Si quieres seguir con este tema comprueba:"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:345
#, fuzzy
msgid "xref:quarkus-reactive-architecture.adoc[The Quarkus Reactive Architecture]"
msgstr "link:quarkus-reactive-architecture.html[La arquitectura reactiva de Quarkus]"

#. type: Plain text
#: upstream/_versions/3.0/guides/getting-started-reactive.adoc:346
#, fuzzy
msgid "xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]"
msgstr "link:mutiny-primer.html[Mutiny - una biblioteca de programación reactiva intuitiva]"
