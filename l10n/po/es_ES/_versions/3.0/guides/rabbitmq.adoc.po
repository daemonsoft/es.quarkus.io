# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-20 14:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/rabbitmq.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with RabbitMQ"
msgstr "Introducción a la mensajería reactiva SmallRye con RabbitMQ"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:11
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with RabbitMQ."
msgstr "Esta guía demuestra cómo su aplicación Quarkus puede utilizar SmallRye Reactive Messaging para interactuar con RabbitMQ."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:14
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:19
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:24
#, fuzzy
msgid "In this guide, we are going to develop two applications communicating with a RabbitMQ broker.  The first application sends a _quote request_ to the RabbitMQ _quote requests_ exchange and consumes messages from the _quote_ queue.  The second application receives the _quote request_ and sends a _quote_ back."
msgstr "En esta guía, vamos a desarrollar dos aplicaciones que se comunican con un corredor RabbitMQ. La primera aplicación envía una solicitud de _cotización_ al intercambio de _solicitudes de_ cotización RabbitMQ y consume mensajes de la cola de _cotizaciones_ . La segunda aplicación recibe la solicitud de _cotización_ y envía una _cotización_ de vuelta."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/3.0/guides/rabbitmq.adoc:25
#, fuzzy, no-wrap
msgid "Architecture,"
msgstr "Arquitectura,"

#. type: Target for macro image
#: upstream/_versions/3.0/guides/rabbitmq.adoc:25
#, no-wrap
msgid "amqp-qs-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:30
#, fuzzy
msgid "The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.  For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.  At the same time the generated request id is sent to the `quote-requests` exchange."
msgstr "La primera aplicación, la `producer` , permitirá al usuario solicitar algunas cotizaciones a través de un punto final HTTP. Para cada solicitud de cotización, se genera un identificador aleatorio que se devuelve al usuario, para poner la solicitud de cotización en _espera_ . Al mismo tiempo, el identificador de solicitud generado se envía a la bolsa `quote-requests` ."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/3.0/guides/rabbitmq.adoc:31
#, no-wrap
msgid "Producer"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/3.0/guides/rabbitmq.adoc:31
#, no-wrap
msgid "amqp-qs-app-screenshot.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:34
#, fuzzy
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to an exchange named `quotes`."
msgstr "La segunda aplicación, la `processor`, a su vez, leerá de la cola `quote-requests` pondrá un precio aleatorio a la cotización, y lo enviará a una bolsa llamada `quotes`."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:37
msgid "Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.  The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "Por último, `producer` leerá las cotizaciones y las enviará al navegador mediante eventos enviados por el servidor. Así, el usuario verá cómo se actualiza el precio de la cotización desde el _pendiente_ hasta el recibido en tiempo real."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:38
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:42
msgid "We recommend that you follow the instructions in the next sections and create applications step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree las aplicaciones paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:44
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:46
#, fuzzy
msgid "The solution is located in the `rabbitmq-quickstart` {quickstarts-tree-url}/rabbitmq-quickstart[directory]."
msgstr "La solución se encuentra en `rabbitmq-quickstart` {quickstarts-tree-url}/rabbitmq-quickstart[directory]."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:47
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:50
#, fuzzy
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "En primer lugar, tenemos que crear dos proyectos: el _productor_ y el _procesador_."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:52
msgid "To create the _producer_ project, in a terminal run:"
msgstr "Para crear el proyecto _productor_, en un terminal ejecute:"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:59
#, fuzzy
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "Este comando crea la estructura del proyecto y selecciona las dos extensiones de Quarkus que vamos a utilizar:"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:61
#, fuzzy
msgid "The Reactive Messaging RabbitMQ connector"
msgstr "El conector RabbitMQ de mensajería reactiva"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:62
#, fuzzy
msgid "RESTEasy Reactive and it's Jackson support to handle JSON payloads"
msgstr "RESTEasy Reactive y su soporte Jackson para manejar cargas útiles JSON"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:64
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "Para crear el proyecto del _procesador_, desde el mismo directorio, ejecute:"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:71
#, fuzzy
msgid "At that point you should have the following structure:"
msgstr "En ese momento deberías tener la siguiente estructura:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:97
#, no-wrap
msgid ""
".\n"
"├── rabbitmq-quickstart-processor\n"
"│  ├── README.md\n"
"│  ├── mvnw\n"
"│  ├── mvnw.cmd\n"
"│  ├── pom.xml\n"
"│  └── src\n"
"│     └── main\n"
"│        ├── docker\n"
"│        ├── java\n"
"│        └── resources\n"
"│           └── application.properties\n"
"└── rabbitmq-quickstart-producer\n"
"   ├── README.md\n"
"   ├── mvnw\n"
"   ├── mvnw.cmd\n"
"   ├── pom.xml\n"
"   └── src\n"
"      └── main\n"
"         ├── docker\n"
"         ├── java\n"
"         └── resources\n"
"            └── application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:100
#, fuzzy
msgid "Open the two projects in your favorite IDE."
msgstr "Abra los dos proyectos en su IDE favorito."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:101
#, fuzzy, no-wrap
msgid "The Quote object"
msgstr "El objeto Cotización"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:106
#, fuzzy
msgid "The `Quote` class will be used in both `producer` and `processor` projects.  For the sake of simplicity we will duplicate the class.  In both projects, create the `src/main/java/org/acme/rabbitmq/model/Quote.java` file, with the following content:"
msgstr "La clase `Quote` se utilizará en los proyectos `producer` y `processor` . En aras de la simplicidad duplicaremos la clase. En ambos proyectos, cree el archivo `src/main/java/org/acme/rabbitmq/model/Quote.java` , con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:110
#, no-wrap
msgid "package org.acme.rabbitmq.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:112
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:115
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Quote {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:118
#, no-wrap
msgid ""
"    public String id;\n"
"    public int price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:123
#, no-wrap
msgid ""
"    /**\n"
"    * Default constructor required for Jackson serializer\n"
"    */\n"
"    public Quote() { }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:128
#, no-wrap
msgid ""
"    public Quote(String id, int price) {\n"
"        this.id = id;\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:137
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return \"Quote{\" +\n"
"                \"id='\" + id + '\\'' +\n"
"                \", price=\" + price +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:141
#, fuzzy
msgid "JSON representation of `Quote` objects will be used in messages sent to the RabbitMQ queues and also in the server-sent events sent to browser clients."
msgstr "La representación JSON de los objetos `Quote` se utilizará en los mensajes enviados a las colas RabbitMQ y también en los eventos enviados por el servidor a los clientes del navegador."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:143
#, fuzzy
msgid "Quarkus has built-in capabilities to deal with JSON RabbitMQ messages."
msgstr "Quarkus tiene capacidades incorporadas para tratar con mensajes JSON RabbitMQ."

#. type: Block title
#: upstream/_versions/3.0/guides/rabbitmq.adoc:145
#, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#. type: delimited block =
#: upstream/_versions/3.0/guides/rabbitmq.adoc:150
msgid "The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.  This will be useful later when we run the applications as native executables inside containers.  Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr "La anotación `@RegisterForReflection` indica a Quarkus que incluya la clase (incluyendo los campos y métodos) cuando construya el ejecutable nativo. Esto será útil más adelante cuando ejecutemos las aplicaciones como ejecutables nativos dentro de contenedores. Sin ella, la compilación nativa eliminaría los campos y métodos durante la fase de eliminación del código muerto."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:152
#, fuzzy, no-wrap
msgid "Sending quote request"
msgstr "Envío de solicitud de presupuesto"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:155
#, fuzzy
msgid "Inside the `producer` project locate the generated `src/main/java/org/acme/rabbitmq/producer/QuotesResource.java` file, and update the content to be:"
msgstr "Dentro del proyecto `producer` localice el archivo `src/main/java/org/acme/rabbitmq/producer/QuotesResource.java` generado, y actualice el contenido para que sea:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:159
#, no-wrap
msgid "package org.acme.rabbitmq.producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:161
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:167
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:171
#, no-wrap
msgid ""
"import org.acme.rabbitmq.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:173
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:176
#, no-wrap
msgid ""
"@Path(\"/quotes\")\n"
"public class QuotesResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:178
#, no-wrap
msgid "    @Channel(\"quote-requests\") Emitter<String> quoteRequestEmitter; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:192
#, no-wrap
msgid ""
"    /**\n"
"     * Endpoint to generate a new quote request id and send it to \"quote-requests\" channel (which\n"
"     * maps to the \"quote-requests\" RabbitMQ exchange) using the emitter.\n"
"     */\n"
"    @POST\n"
"    @Path(\"/request\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String createRequest() {\n"
"        UUID uuid = UUID.randomUUID();\n"
"        quoteRequestEmitter.send(uuid.toString()); // <2>\n"
"        return uuid.toString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:194
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "Inyectar una Mensajería Reactiva `Emitter` para enviar mensajes al canal `quote-requests`."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:195
#, fuzzy
msgid "On a post request, generate a random UUID and send it to the RabbitMQ queue using the emitter."
msgstr "En una solicitud de publicación, genera un UUID aleatorio y lo envía a la cola de RabbitMQ utilizando el emisor."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:198
#, fuzzy
msgid "This channel is mapped to a RabbitMQ exchange using the configuration we will add to the `application.properties` file.  Open the `src/main/resource/application.properties` file and add:"
msgstr "Este canal se asigna a un intercambio RabbitMQ utilizando la configuración que añadiremos al archivo `application.properties` . Abra el archivo `src/main/resource/application.properties` y añada:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:204
#, no-wrap
msgid ""
"# Configure the outgoing RabbitMQ exchange `quote-requests`\n"
"mp.messaging.outgoing.quote-requests.connector=smallrye-rabbitmq\n"
"mp.messaging.outgoing.quote-requests.exchange.name=quote-requests\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:208
#, fuzzy
msgid "All we need to specify is the `smallrye-rabbitmq` connector.  By default, reactive messaging maps the channel name `quote-requests` to the same RabbitMQ exchange name."
msgstr "Todo lo que necesitamos especificar es el conector `smallrye-rabbitmq` . Por defecto, la mensajería reactiva asigna el nombre del canal `quote-requests` al mismo nombre de intercambio RabbitMQ."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:209
#, fuzzy, no-wrap
msgid "Processing quote requests"
msgstr "Tramitación de solicitudes de presupuesto"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:213
#, fuzzy
msgid "Now let's consume the quote request and give out a price.  Inside the `processor` project, locate the `src/main/java/org/acme/rabbitmq/processor/QuoteProcessor.java` file and add the following:"
msgstr "Ahora vamos a consumir la solicitud de presupuesto y a dar un precio. Dentro del proyecto `processor` , localice el archivo `src/main/java/org/acme/rabbitmq/processor/QuoteProcessor.java` y añada lo siguiente:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:217
#, no-wrap
msgid "package org.acme.rabbitmq.processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:219
#, no-wrap
msgid "import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:221
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:225
#, no-wrap
msgid ""
"import org.acme.rabbitmq.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:227
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:234
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming data from the \"quote-requests\" RabbitMQ queue and giving out a random quote.\n"
" * The result is pushed to the \"quotes\" RabbitMQ exchange.\n"
" */\n"
"@ApplicationScoped\n"
"public class QuoteProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:236
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:246
#, no-wrap
msgid ""
"    @Incoming(\"requests\")       // <1>\n"
"    @Outgoing(\"quotes\")         // <2>\n"
"    @Blocking                   // <3>\n"
"    public Quote process(String quoteRequest) throws InterruptedException {\n"
"        // simulate some hard-working task\n"
"        Thread.sleep(1000);\n"
"        return new Quote(quoteRequest, random.nextInt(100));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:248
#, fuzzy
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "Indica que el método consume los elementos del canal `requests`"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:249
#, fuzzy
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "Indica que los objetos devueltos por el método se envían al canal `quotes`"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:250
#, fuzzy
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "Indica que el procesamiento está _bloqueando_ y no puede ser ejecutado en el hilo de la llamada."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:252
#, fuzzy
msgid "The `process` method is called for every RabbitMQ message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` exchange."
msgstr "El método `process` es llamado por cada mensaje RabbitMQ de la cola `quote-requests`, y enviará un objeto `Quote` al intercambio `quotes`."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:255
#, fuzzy
msgid "As with the previous example we need to configure the connectors in the `application.properties` file.  Open the `src/main/resources/application.properties` file and add:"
msgstr "Al igual que en el ejemplo anterior, debemos configurar los conectores en el archivo `application.properties` . Abra el archivo `src/main/resources/application.properties` y añada:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:262
#, no-wrap
msgid ""
"# Configure the incoming RabbitMQ queue `quote-requests`\n"
"mp.messaging.incoming.requests.connector=smallrye-rabbitmq\n"
"mp.messaging.incoming.requests.queue.name=quote-requests\n"
"mp.messaging.incoming.requests.exchange.name=quote-requests\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:266
#, no-wrap
msgid ""
"# Configure the outgoing RabbitMQ exchange `quotes`\n"
"mp.messaging.outgoing.quotes.connector=smallrye-rabbitmq\n"
"mp.messaging.outgoing.quotes.exchange.name=quotes\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:270
#, fuzzy
msgid "Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.  The configuration keys are structured as follows:"
msgstr "Observe que en este caso tenemos una configuración de conectores entrantes y otra de conectores salientes, cada una con un nombre distinto. Las claves de configuración están estructuradas de la siguiente manera:"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:272
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:274
#, fuzzy
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "El segmento `channel-name` debe coincidir con el valor establecido en la anotación `@Incoming` y `@Outgoing`:"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:276
#, fuzzy
msgid "`quote-requests` -> RabbitMQ queue from which we read the quote requests"
msgstr "`quote-requests` → Cola de RabbitMQ de la que leemos las solicitudes de cotización."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:277
#, fuzzy
msgid "`quotes` -> RabbitMQ exchange in which we write the quotes"
msgstr "`quotes` → Intercambio RabbitMQ en el que escribimos las cotizaciones."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:278
#, fuzzy, no-wrap
msgid "Receiving quotes"
msgstr "Recepción de presupuestos"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:282
msgid "Back to our `producer` project.  Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr "Volvamos a nuestro proyecto `producer`. Vamos a modificar el `QuotesResource` para consumir citas, enlazarlo a un endpoint HTTP para enviar eventos a los clientes:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:287
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"//...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:289
#, no-wrap
msgid "@Channel(\"quotes\") Multi<Quote> quotes;     // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:298
#, no-wrap
msgid ""
"/**\n"
" * Endpoint retrieving the \"quotes\" queue and sending the items to a server sent event.\n"
" */\n"
"@GET\n"
"@Produces(MediaType.SERVER_SENT_EVENTS) // <2>\n"
"public Multi<Quote> stream() {\n"
"    return quotes; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:300
#, fuzzy
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "Inyecta el canal `quotes` utilizando el calificador `@Channel`"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:301
#, fuzzy
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "Indica que el contenido se envía utilizando `Server Sent Events`"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:302
#, fuzzy
msgid "Returns the stream (_Reactive Stream_)"
msgstr "Devuelve el flujo _(Reactive Stream_)"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:305
#, fuzzy
msgid "Again we need to configure the incoming `quotes` channel inside `producer` project.  Add the following inside `application.properties` file:"
msgstr "De nuevo necesitamos configurar el canal entrante `quotes` dentro del proyecto `producer` . Añada lo siguiente dentro del archivo `application.properties` :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:310
#, no-wrap
msgid ""
"# Configure the outgoing `quote-requests` queue\n"
"mp.messaging.outgoing.quote-requests.connector=smallrye-rabbitmq\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:313
#, no-wrap
msgid ""
"# Configure the incoming `quotes` queue\n"
"mp.messaging.incoming.quotes.connector=smallrye-rabbitmq\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:315
#, fuzzy, no-wrap
msgid "The HTML page"
msgstr "La página HTML"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:318
#, fuzzy
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "El toque final, la página HTML que lee los precios convertidos usando SSE."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:320
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "Cree dentro del proyecto `producer` el archivo `src/main/resources/META-INF/resources/quotes.html`, con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:324
#, no-wrap
msgid "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quotes</title>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:360
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
"    <div class=\"card\">\n"
"        <div class=\"card-body\">\n"
"            <h2 class=\"card-title\">Quotes</h2>\n"
"            <button class=\"btn btn-info\" id=\"request-quote\">Request Quote</button>\n"
"            <div class=\"quotes\"></div>\n"
"        </div>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n"
"<script>\n"
"    $(\"#request-quote\").click((event) => {\n"
"        fetch(\"/quotes/request\", {method: \"POST\"})\n"
"        .then(res => res.text())\n"
"        .then(qid => {\n"
"            var row = $(`<h4 class='col-md-12' id='${qid}'>Quote # <i>${qid}</i> | <strong>Pending</strong></h4>`);\n"
"            $(\".quotes\").append(row);\n"
"        });\n"
"    });\n"
"    var source = new EventSource(\"/quotes\");\n"
"    source.onmessage = (event) => {\n"
"      var json = JSON.parse(event.data);\n"
"      $(`#${json.id}`).html(function(index, html) {\n"
"        return html.replace(\"Pending\", `\\$\\xA0${json.price}`);\n"
"      });\n"
"    };\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:364
msgid "Nothing spectacular here.  On each received quote, it updates the page."
msgstr "No hay nada espectacular aquí. En cada cotización recibida, actualiza la página."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:365
#, fuzzy, no-wrap
msgid "Get it running"
msgstr "Ponerlo en marcha"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:368
#, fuzzy
msgid "You just need to run both applications using:"
msgstr "Sólo tienes que ejecutar ambas aplicaciones utilizando:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:372
#, no-wrap
msgid "> mvn -f rabbitmq-quickstart-producer quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:375
#, fuzzy
msgid "And, in a separate terminal:"
msgstr "Y, en una terminal separada:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:379
#, no-wrap
msgid "> mvn -f rabbitmq-quickstart-processor quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:383
#, fuzzy
msgid "Quarkus starts a RabbitMQ broker automatically, configures the application and shares the broker instance between different applications.  See xref:rabbitmq-dev-services.adoc[Dev Services for RabbitMQ] for more details."
msgstr "Quarkus inicia un broker RabbitMQ automáticamente, configura la aplicación y comparte la instancia del broker entre diferentes aplicaciones. Consulte xref:rabbitmq-dev-services.adoc[Dev Services for RabbitMQ] para obtener más detalles."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:386
#, fuzzy
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "Abra `&lt;a href=\"http://localhost:8080/quotes.html\" class=\"bare\"&gt;http://localhost:8080/quotes.html&lt;/a&gt;` en su navegador y solicite algunos presupuestos haciendo clic en el botón."

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:387
#, fuzzy, no-wrap
msgid "Running in JVM or Native mode"
msgstr "Ejecución en modo JVM o nativo"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:391
#, fuzzy
msgid "When not running in dev or test mode, you will need to start your RabbitMQ broker.  You can follow the instructions from the https://hub.docker.com/_/rabbitmq[RabbitMQ Docker website] or create a `docker-compose.yaml` file with the following content:"
msgstr "Cuando no esté ejecutando en modo dev o test, necesitará iniciar su broker RabbitMQ. Puede seguir las instrucciones del link:https://hub.docker.com/_/rabbitmq[sitio web de RabbitMQ Docker] o crear un archivo `docker-compose.yaml` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:395
#, no-wrap
msgid "version: '2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:397
#, no-wrap
msgid "services:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:404
#, no-wrap
msgid ""
"  rabbit:\n"
"    image: rabbitmq:3.9-management\n"
"    ports:\n"
"      - \"5672:5672\"\n"
"    networks:\n"
"      - rabbitmq-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:417
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/rabbitmq-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: rabbitmq-quickstart-producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      RABBITMQ_HOST: rabbit\n"
"      RABBITMQ_PORT: 5672\n"
"    ports:\n"
"      - \"8080:8080\"\n"
"    networks:\n"
"      - rabbitmq-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:428
#, no-wrap
msgid ""
"  processor:\n"
"    image: quarkus-quickstarts/rabbitmq-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: rabbitmq-quickstart-processor\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      RABBITMQ_HOST: rabbit\n"
"      RABBITMQ_PORT: 5672\n"
"    networks:\n"
"      - rabbitmq-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:432
#, no-wrap
msgid ""
"networks:\n"
"  rabbitmq-quickstart-network:\n"
"    name: rabbitmq-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:436
#, fuzzy
msgid "Note how the RabbitMQ broker location is configured.  The `rabbitmq-host` and `rabbitmq-port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr "Observe cómo se configura la ubicación del broker RabbitMQ. Las propiedades `rabbitmq-host` y `rabbitmq-port` ( `AMQP_HOST` y `AMQP_PORT` variables de entorno) configuran la ubicación."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:439
#, fuzzy
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "En primer lugar, asegúrese de que ha detenido las aplicaciones, y construya ambas aplicaciones en modo JVM con:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:444
#, no-wrap
msgid ""
"> mvn -f rabbitmq-quickstart-producer clean package\n"
"> mvn -f rabbitmq-quickstart-processor clean package\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:448
msgid "Once packaged, run `docker compose up --build`.  The UI is exposed on http://localhost:8080/quotes.html"
msgstr "Una vez empaquetado, ejecute `docker compose up --build`. La interfaz de usuario se expone en http://localhost:8080/quotes.html"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:450
#, fuzzy
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "Para ejecutar tus aplicaciones como nativas, primero tenemos que construir los ejecutables nativos:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:455
#, no-wrap
msgid ""
"> mvn -f rabbitmq-quickstart-producer package -Pnative  -Dquarkus.native.container-build=true\n"
"> mvn -f rabbitmq-quickstart-processor package -Pnative -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:459
msgid "The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.  Then, run the system using:"
msgstr "El `-Dquarkus.native.container-build=true` instruye a Quarkus para construir ejecutables nativos de Linux 64bits, que pueden ejecutarse dentro de contenedores. Luego, ejecuta el sistema usando:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rabbitmq.adoc:464
#, no-wrap
msgid ""
"> export QUARKUS_MODE=native\n"
"> docker compose up --build\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:467
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "Como antes, la interfaz de usuario está expuesta en http://localhost:8080/quotes.html"

#. type: Title ==
#: upstream/_versions/3.0/guides/rabbitmq.adoc:468
#, fuzzy, no-wrap
msgid "Going further"
msgstr "Ir más allá"

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:472
#, fuzzy
msgid "This guide has shown how you can interact with RabbitMQ using Quarkus.  It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "Esta guía ha mostrado cómo puede interactuar con RabbitMQ utilizando Quarkus. Utiliza link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] para construir aplicaciones de flujo de datos."

#. type: Plain text
#: upstream/_versions/3.0/guides/rabbitmq.adoc:474
#, fuzzy
msgid "If you did the Kafka, you have realized that it's the same code.  The only difference is the connector configuration and the JSON mapping."
msgstr "Si ha hecho el de Kafka, se habrá dado cuenta de que se trata del mismo código. La única diferencia es la configuración del conector y el mapeo JSON."
