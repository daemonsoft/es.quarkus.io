# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-20 14:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/stork-reference.adoc:6
#, fuzzy, no-wrap
msgid "Stork Reference Guide"
msgstr "Guía de referencia de la cigüeña"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:13
#, fuzzy
msgid "This guide is the companion from the xref:stork.adoc[Stork Getting Started Guide].  It explains the configuration and usage of SmallRye Stork integration in Quarkus."
msgstr "Esta guía es el complemento de la xref:stork.adoc[Guía de inicio de St] ork. Explica la configuración y el uso de la integración de SmallRye Stork en Quarkus."

#. type: Title ==
#: upstream/_versions/3.0/guides/stork-reference.adoc:16
#, fuzzy, no-wrap
msgid "Supported clients"
msgstr "Clientes con soporte"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:19
#, fuzzy
msgid "The current integration of Stork supports:"
msgstr "La integración actual de Stork es compatible:"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:21
#, fuzzy
msgid "the Reactive REST Client"
msgstr "el cliente REST reactivo"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:22
#, fuzzy
msgid "the gRPC clients"
msgstr "los clientes de gRPC"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:24
#, fuzzy
msgid "Warning: The gRPC client integration does not support statistic-based load balancers."
msgstr "Advertencia: La integración del cliente gRPC no es compatible con los equilibradores de carga basados en estadísticas."

#. type: Title ==
#: upstream/_versions/3.0/guides/stork-reference.adoc:25
#, fuzzy, no-wrap
msgid "Available service discovery and selection"
msgstr "Descubrimiento y selección de servicios disponibles"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:28
#, fuzzy
msgid "Check the https://smallrye.io/smallrye-stork[SmallRye Stork website] to find more about the provided service discovery and selection."
msgstr "Consulte el  link:https://smallrye.io/smallrye-stork[sitio web de SmallRye Stork] para obtener más información sobre el descubrimiento y la selección de servicios."

#. type: Title ==
#: upstream/_versions/3.0/guides/stork-reference.adoc:29
#, fuzzy, no-wrap
msgid "Using Stork in Kubernetes"
msgstr "Uso de Stork en Kubernetes"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:33
#, fuzzy
msgid "Stork provides a service discovery support for Kubernetes, which goes beyond what Kubernetes provides by default.  It looks for all the pods backing up a Kubernetes service, but instead of applying a round-robin (as Kubernetes would do), it gives you the option to select the pod using a Stork load-balancer."
msgstr "Stork proporciona un soporte de descubrimiento de servicios para Kubernetes, que va más allá de lo que Kubernetes proporciona por defecto. Busca todos los pods que respaldan un servicio Kubernetes, pero en lugar de aplicar un round-robin (como haría Kubernetes), le da la opción de seleccionar el pod utilizando un equilibrador de carga Stork."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:35
#, fuzzy
msgid "To use this feature, add the following dependency to your project:"
msgstr "Para utilizar esta función, añada la siguiente dependencia a su proyecto:"

#. type: Block title
#: upstream/_versions/3.0/guides/stork-reference.adoc:37
#: upstream/_versions/3.0/guides/stork-reference.adoc:72
#: upstream/_versions/3.0/guides/stork-reference.adoc:224
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:43
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-service-discovery-kubernetes</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/stork-reference.adoc:46
#: upstream/_versions/3.0/guides/stork-reference.adoc:87
#: upstream/_versions/3.0/guides/stork-reference.adoc:239
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:49
#, no-wrap
msgid "implementation(\"io.smallrye.stork:stork-service-discovery-kubernetes\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:52
#, fuzzy
msgid "For each service expected to be exposed as a Kubernetes Service, configure the lookup:"
msgstr "Para cada servicio que se espera exponer como servicio de Kubernetes, configure la búsqueda:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:57
#, no-wrap
msgid ""
"quarkus.stork.my-service.service-discovery.type=kubernetes\n"
"quarkus.stork.my-service.service-discovery.k8s-namespace=my-namespace\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:61
#, fuzzy
msgid "Stork looks for the Kubernetes Service with the given name (`my-service` in the previous example) in the specified namespace.  Instead of using the Kubernetes Service IP directly and let Kubernetes handle the selection and balancing, Stork inspects the service and retrieves the list of pods providing the service. Then, it can select the instance."
msgstr "Stork busca el Servicio Kubernetes con el nombre dado ( `my-service` en el ejemplo anterior) en el espacio de nombres especificado. En lugar de utilizar directamente la IP del Servicio Kubernetes y dejar que Kubernetes se encargue de la selección y el equilibrio, Stork inspecciona el servicio y recupera la lista de pods que proporcionan el servicio. A continuación, puede seleccionar la instancia."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:63
#, fuzzy
msgid "For a full example of using Stork with Kubernetes, please read the xref:stork-kubernetes.adoc[Using Stork with Kubernetes guide]."
msgstr "Para ver un ejemplo completo del uso de Stork con  link:stork-kubernetes.html[Kubernetes], lea la  link:stork-kubernetes.html[guía Using Stork with Kubernetes]."

#. type: Title ==
#: upstream/_versions/3.0/guides/stork-reference.adoc:64
#, fuzzy, no-wrap
msgid "Implementing a custom service discovery"
msgstr "Implementación de un descubrimiento de servicio personalizado"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:67
#, fuzzy
msgid "Stork is extensible, and you can implement your own service discovery mechanism."
msgstr "Stork es extensible, y usted puede implementar su propio mecanismo de descubrimiento de servicios."

#. type: Title ===
#: upstream/_versions/3.0/guides/stork-reference.adoc:68
#: upstream/_versions/3.0/guides/stork-reference.adoc:220
#, fuzzy, no-wrap
msgid "Dependency"
msgstr "Dependencia"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:70
#, fuzzy
msgid "To implement your Service Discovery Provider, make sure your project depends on Core and Configuration Generator. The former brings classes necessary to implement custom discovery, the latter contains an annotation processor that generates classes needed by Stork."
msgstr "Para implementar su proveedor de descubrimiento de servicios, asegúrese de que su proyecto depende de Core y del generador de configuraciones. El primero aporta las clases necesarias para implementar el descubrimiento personalizado, el segundo contiene un procesador de anotaciones que genera las clases que necesita Stork."

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:84
#: upstream/_versions/3.0/guides/stork-reference.adoc:236
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-core</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-configuration-generator</artifactId>\n"
"    <!-- provided scope is sufficient for the annotation processor -->\n"
"    <scope>provided</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:91
#: upstream/_versions/3.0/guides/stork-reference.adoc:243
#, no-wrap
msgid ""
"implementation(\"io.smallrye.stork:stork-core\")\n"
"compileOnly(\"io.smallrye.stork:stork-configuration-generator\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.0/guides/stork-reference.adoc:97
#, fuzzy
msgid "If the provider is located in an extension, the configuration generator should be declared in the `annotationProcessorPaths` section of the runtime module using the default scope:"
msgstr "Si el proveedor se encuentra en una extensión, el generador de configuración debe declararse en la sección `annotationProcessorPaths` del módulo de ejecución utilizando el ámbito por defecto:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:107
#, no-wrap
msgid ""
"<annotationProcessorPaths>\n"
"  ...\n"
"  <path>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-configuration-generator</artifactId>\n"
"  </path>\n"
"</annotationProcessorPaths>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/stork-reference.adoc:110
#, fuzzy, no-wrap
msgid "Implementing a service discovery provider"
msgstr "Implementación de un proveedor de descubrimiento de servicios"

#. type: delimited block =
#: upstream/_versions/3.0/guides/stork-reference.adoc:115
#, fuzzy
msgid "The custom provider is a factory that creates an `io.smallrye.stork.ServiceDiscovery` instance for each configured service using this service discovery provider.  A type, for example, `acme` identifies each provider.  This type is used in the configuration to reference the provider:"
msgstr "El proveedor personalizado es una fábrica que crea una instancia de `io.smallrye.stork.ServiceDiscovery` para cada servicio configurado mediante este proveedor de descubrimiento de servicios. Un tipo, por ejemplo, `acme` identifica a cada proveedor. Este tipo se utiliza en la configuración para hacer referencia al proveedor:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:119
#, no-wrap
msgid "quarkus.stork.my-service.service-discovery.type=acme\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:122
#, fuzzy
msgid "The first step consists of implementing the `io.smallrye.stork.spi.ServiceDiscoveryProvider` interface:"
msgstr "El primer paso consiste en implementar la interfaz `io.smallrye.stork.spi.ServiceDiscoveryProvider` :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:126
#: upstream/_versions/3.0/guides/stork-reference.adoc:165
#: upstream/_versions/3.0/guides/stork-reference.adoc:272
#: upstream/_versions/3.0/guides/stork-reference.adoc:301
#, no-wrap
msgid "package examples;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:133
#, no-wrap
msgid ""
"import io.smallrye.stork.api.ServiceDiscovery;\n"
"import io.smallrye.stork.api.config.ServiceConfig;\n"
"import io.smallrye.stork.api.config.ServiceDiscoveryAttribute;\n"
"import io.smallrye.stork.api.config.ServiceDiscoveryType;\n"
"import io.smallrye.stork.spi.StorkInfrastructure;\n"
"import io.smallrye.stork.spi.ServiceDiscoveryProvider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:141
#, no-wrap
msgid ""
"@ServiceDiscoveryType(\"acme\") // <1>\n"
"@ServiceDiscoveryAttribute(name = \"host\",\n"
"        description = \"Host name of the service discovery server.\", required = true) // <2>\n"
"@ServiceDiscoveryAttribute(name = \"port\",\n"
"        description = \"Port of the service discovery server.\", required = false)\n"
"public class AcmeServiceDiscoveryProvider // <3>\n"
"        implements ServiceDiscoveryProvider<AcmeConfiguration> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:151
#, no-wrap
msgid ""
"    // <4>\n"
"    @Override\n"
"    public ServiceDiscovery createServiceDiscovery(AcmeConfiguration config,\n"
"                                                   String serviceName,\n"
"                                                   ServiceConfig serviceConfig,\n"
"                                                   StorkInfrastructure storkInfrastructure) {\n"
"        return new AcmeServiceDiscovery(config);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:154
#, fuzzy
msgid "This implementation is straightforward."
msgstr "Esta aplicación es sencilla."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:156
#, fuzzy
msgid "`@ServiceDiscoveryType` annotation defines the type of the service discovery provider. For each `ServiceDiscoveryProvider` annotated with this annotation, a configuration class will be generated. The name of the configuration class is constructed by appending `Configuration` to the name of the provider."
msgstr "`@ServiceDiscoveryType` define el tipo de proveedor de descubrimiento de servicios. Para cada `ServiceDiscoveryProvider` anotado con esta anotación, se generará una clase de configuración. El nombre de la clase de configuración se construye añadiendo `Configuration` al nombre del proveedor."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:157
msgid "Use `@ServiceDiscoveryAttribute` to define configuration properties for services configured with this service discovery provider. Configuration properties are gathered from all properties of a form: `quarkus.stork.my-service.service-discovery.attr=value`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:158
msgid "The provider needs to implement `ServiceDiscoveryType` typed by the configuration class. This configuration class is generated automatically by the Configuration Generator. Its name is created by appending `Configuration` to the service discovery type, such as `AcmeConfiguration`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:159
#, fuzzy
msgid "`createServiceDiscovery` method is the factory method. It receives the configuration and access to the name of the service and available infrastructure."
msgstr "`createServiceDiscovery` es el método de fábrica. Recibe la configuración y el acceso al nombre del servicio y a la infraestructura disponible."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:161
#, fuzzy
msgid "Then, we need to implement the `ServiceDiscovery` interface:"
msgstr "A continuación, debemos implementar la interfaz `ServiceDiscovery` :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:168
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:174
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import io.smallrye.stork.api.ServiceDiscovery;\n"
"import io.smallrye.stork.api.ServiceInstance;\n"
"import io.smallrye.stork.impl.DefaultServiceInstance;\n"
"import io.smallrye.stork.utils.ServiceInstanceIds;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:176
#, no-wrap
msgid "public class AcmeServiceDiscovery implements ServiceDiscovery {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:179
#, no-wrap
msgid ""
"    private final String host;\n"
"    private final int port;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:184
#, no-wrap
msgid ""
"    public AcmeServiceDiscovery(AcmeConfiguration configuration) {\n"
"        this.host = configuration.getHost();\n"
"        this.port = Integer.parseInt(configuration.getPort());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:195
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<List<ServiceInstance>> getServiceInstances() {\n"
"        // Proceed to the lookup...\n"
"        // Here, we just return a DefaultServiceInstance with the configured host and port\n"
"        // The last parameter specifies whether the communication with the instance should happen over a secure connection\n"
"        DefaultServiceInstance instance =\n"
"                new DefaultServiceInstance(ServiceInstanceIds.next(), host, port, false);\n"
"        return Uni.createFrom().item(() -> Collections.singletonList(instance));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:201
#, fuzzy
msgid "Again, this implementation is simplistic.  Typically, instead of creating a service instance with values from the configuration, you would connect to a service discovery backend, look for the service and build the list of service instances accordingly.  That's why the method returns a `Uni`.  Most of the time, the lookup is a remote operation."
msgstr "De nuevo, esta implementación es simplista. Normalmente, en lugar de crear una instancia de servicio con los valores de la configuración, se conectaría a un backend de descubrimiento de servicios, buscaría el servicio y construiría la lista de instancias de servicio en consecuencia. Por eso el método devuelve un `Uni` . La mayoría de las veces, la búsqueda es una operación remota."

#. type: Title ===
#: upstream/_versions/3.0/guides/stork-reference.adoc:202
#, fuzzy, no-wrap
msgid "Using your service discovery"
msgstr "Uso de su descubrimiento de servicios"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:206
#: upstream/_versions/3.0/guides/stork-reference.adoc:341
#, fuzzy
msgid "In the project using it, don't forget to add the dependency on the module providing your implementation.  Then, in the configuration, just add:"
msgstr "En el proyecto que lo utilice, no olvide añadir la dependencia del módulo que proporciona su implementación. Luego, en la configuración, sólo tiene que añadir:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:212
#, no-wrap
msgid ""
"quarkus.stork.my-service.service-discovery.type=acme\n"
"quarkus.stork.my-service.service-discovery.host=localhost\n"
"quarkus.stork.my-service.service-discovery.port=1234\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:215
#, fuzzy
msgid "Then, Stork will use your implementation to locate the `my-service` service."
msgstr "A continuación, Stork utilizará su aplicación para localizar el servicio `my-service` ."

#. type: Title ==
#: upstream/_versions/3.0/guides/stork-reference.adoc:216
#, fuzzy, no-wrap
msgid "Implementing a custom service selection / load-balancer"
msgstr "Implementación de un servicio personalizado de selección / equilibrador de carga"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:219
#, fuzzy
msgid "Stork is extensible, and you can implement your own service selection (load-balancer) mechanism."
msgstr "Stork es extensible, y usted puede implementar su propio mecanismo de selección de servicios (equilibrador de carga)."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:222
#, fuzzy
msgid "To implement your Load Balancer Provider, make sure your project depends on Core and Configuration Generator. The former brings classes necessary to implement custom load balancer, the latter contains an annotation processor that generates classes needed by Stork."
msgstr "Para implementar su proveedor de equilibrador de carga, asegúrese de que su proyecto depende de Core y Configuration Generator. El primero aporta las clases necesarias para implementar el equilibrador de carga personalizado, el segundo contiene un procesador de anotaciones que genera las clases que necesita Stork."

#. type: delimited block =
#: upstream/_versions/3.0/guides/stork-reference.adoc:248
#, fuzzy
msgid "Similar to custom discovery providers, if the provider is located in an extension, the configuration generator should be declared in the `annotationProcessorPaths` section of the runtime module using the default scope."
msgstr "De forma similar a los proveedores de descubrimiento personalizados, si el proveedor se encuentra en una extensión, el generador de configuración debe declararse en la sección `annotationProcessorPaths` del módulo en tiempo de ejecución utilizando el ámbito por defecto."

#. type: Title ===
#: upstream/_versions/3.0/guides/stork-reference.adoc:250
#, fuzzy, no-wrap
msgid "Implementing a load balancer provider"
msgstr "Implementación de un proveedor de equilibrador de carga"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:253
#, fuzzy
msgid "Load balancer implementation consists of three elements:"
msgstr "La implementación del equilibrador de carga consta de tres elementos:"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:255
#, fuzzy
msgid "`LoadBalancer` which is responsible for selecting service instances for a single Stork service"
msgstr "`LoadBalancer` que se encarga de seleccionar instancias de servicio para un único servicio Stork"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:256
#, fuzzy
msgid "`LoadBalancerProvider` which creates instances of `LoadBalancer` for a given load balancer _type_"
msgstr "`LoadBalancerProvider` que crea instancias de `LoadBalancer` para un _tipo de_ equilibrador de carga determinado."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:257
#, fuzzy
msgid "`LoadBalancerProviderConfiguration` which is a configuration for the load balancer"
msgstr "`LoadBalancerProviderConfiguration` que es una configuración para el equilibrador de carga"

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:261
#, fuzzy
msgid "A _type_, for example, `acme`, identifies each provider.  This _type_ is used in the configuration to reference the provider:"
msgstr "Un _tipo_ , por ejemplo, `acme` , identifica a cada proveedor. Este _tipo_ se utiliza en la configuración para hacer referencia al proveedor:"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:265
#, no-wrap
msgid "quarkus.stork.my-service.load-balancer.type=acme\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:269
msgid "Similarly to `ServiceDiscoveryProvider`, a `LoadBalancerProvider` implementation needs to be annotated with `@LoadBalancerType` that defines the _type_.  Any configuration properties that the provider expects should be defined with `@LoadBalancerAttribute` annotations placed on the provider."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:278
#, no-wrap
msgid ""
"import io.smallrye.stork.api.LoadBalancer;\n"
"import io.smallrye.stork.api.ServiceDiscovery;\n"
"import io.smallrye.stork.api.config.LoadBalancerAttribute;\n"
"import io.smallrye.stork.api.config.LoadBalancerType;\n"
"import io.smallrye.stork.spi.LoadBalancerProvider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:284
#, no-wrap
msgid ""
"@LoadBalancerType(\"acme\")\n"
"@LoadBalancerAttribute(name = \"my-attribute\",\n"
"        description = \"Attribute that alters the behavior of the LoadBalancer\")\n"
"public class AcmeLoadBalancerProvider implements\n"
"        LoadBalancerProvider<AcmeLoadBalancerProviderConfiguration> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:291
#, no-wrap
msgid ""
"    @Override\n"
"    public LoadBalancer createLoadBalancer(AcmeLoadBalancerProviderConfiguration config,\n"
"                                           ServiceDiscovery serviceDiscovery) {\n"
"        return new AcmeLoadBalancer(config);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:295
#, fuzzy
msgid "Note, that similarly to the `ServiceDiscoveryProvider`, the `LoadBalancerProvider` interface takes a configuration class as a parameter. This configuration class is generated automatically by the _Configuration Generator_.  Its name is created by appending `Configuration` to the name of the provider class."
msgstr "Tenga en cuenta que, de forma similar a `ServiceDiscoveryProvider` , la interfaz `LoadBalancerProvider` toma como parámetro una clase de configuración. Esta clase de configuración es generada automáticamente por el _generador de configuración_ . Su nombre se crea añadiendo `Configuration` al nombre de la clase de proveedor."

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:297
#, fuzzy
msgid "The next step is to implement the `LoadBalancer` interface:"
msgstr "El siguiente paso es implementar la interfaz `LoadBalancer` :"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:305
#, no-wrap
msgid ""
"import java.util.ArrayList;\n"
"import java.util.Collection;\n"
"import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:309
#, no-wrap
msgid ""
"import io.smallrye.stork.api.LoadBalancer;\n"
"import io.smallrye.stork.api.NoServiceInstanceFoundException;\n"
"import io.smallrye.stork.api.ServiceInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:311
#, no-wrap
msgid "public class AcmeLoadBalancer implements LoadBalancer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:313
#, no-wrap
msgid "    private final Random random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:317
#, no-wrap
msgid ""
"    public AcmeLoadBalancer(AcmeLoadBalancerProviderConfiguration config) {\n"
"        random = new Random();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:327
#, no-wrap
msgid ""
"    @Override\n"
"    public ServiceInstance selectServiceInstance(Collection<ServiceInstance> serviceInstances) {\n"
"        if (serviceInstances.isEmpty()) {\n"
"            throw new NoServiceInstanceFoundException(\"No services found.\");\n"
"        }\n"
"        int index = random.nextInt(serviceInstances.size());\n"
"        return new ArrayList<>(serviceInstances).get(index);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:330
#, fuzzy
msgid "Again, this implementation is simplistic and just picks a random instance from the received list."
msgstr "De nuevo, esta implementación es simplista y se limita a elegir una instancia al azar de la lista recibida."

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:335
#, no-wrap
msgid "examples.AcmeLoadBalancerProvider\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/stork-reference.adoc:337
#, fuzzy, no-wrap
msgid "Using your load balancer"
msgstr "Uso de su equilibrador de carga"

#. type: delimited block -
#: upstream/_versions/3.0/guides/stork-reference.adoc:346
#, no-wrap
msgid ""
"quarkus.stork.my-service.service-discovery.type=...\n"
"quarkus.stork.my-service.load-balancer.type=acme\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/stork-reference.adoc:349
#, fuzzy
msgid "Then, Stork will use your implementation to select the `my-service` service instance."
msgstr "A continuación, Stork utilizará su implementación para seleccionar la instancia de servicio `my-service` ."
