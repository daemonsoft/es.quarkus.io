# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-15 08:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/amqp.adoc:6
#, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with AMQP 1.0"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:14
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with AMQP 1.0."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:19
#, fuzzy
msgid "If you want to use RabbitMQ, you should use the xref:rabbitmq.adoc[SmallRye Reactive Messaging RabbitMQ extension].  Alternatively, if you want to use RabbitMQ with AMQP 1.0 you need to enable the AMQP 1.0 plugin in the RabbitMQ broker; check the https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html#amqp-rabbitmq[connecting to RabbitMQ] documentation."
msgstr "Si quieres usar RabbitMQ, debes usar la xref:rabbitmq.adoc[extensión SmallRye Reactive Messaging RabbitMQ]. Alternativamente, si quieres usar RabbitMQ con AMQP 1.0 necesitas habilitar el plugin AMQP 1.0 en el broker RabbitMQ; consulta la documentación de https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html#amqp-rabbitmq[conexión a RabbitMQ]."

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:20
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:25
#, no-wrap
msgid "Architecture"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:31
msgid "In this guide, we are going to develop two applications communicating with an AMQP broker.  We will use https://activemq.apache.org/components/artemis/[Artemis], but you can use any AMQP 1.0 broker.  The first application sends a _quote request_ to an AMQP queue and consumes messages from the _quote_ queue.  The second application receives the _quote request_ and sends a _quote_ back."
msgstr "En esta guía, vamos a desarrollar dos aplicaciones que se comunican con un broker AMQP. Usaremos https://activemq.apache.org/components/artemis/[Artemis], pero puedes usar cualquier broker AMQP 1.0. La primera aplicación envía una solicitud _de_ cotización a una cola AMQP y consume mensajes de la cola de _cotización_. La segunda aplicación recibe la solicitud de _cotización_ y envía una _cotización_ de vuelta."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/amqp.adoc:32
#, no-wrap
msgid "Architecture,"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/amqp.adoc:32
#, no-wrap
msgid "amqp-qs-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:37
msgid "The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.  For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.  At the same time the generated request id is sent over the `quote-requests` queue."
msgstr "La primera aplicación, la `producer`, permitirá al usuario solicitar algunas cotizaciones a través de un endpoint HTTP. Para cada solicitud de cotización, se genera un identificador aleatorio que se devuelve al usuario, para poner la solicitud de cotización en _espera_. Al mismo tiempo, el identificador de solicitud generado se envía a través de la cola de `quote-requests`."

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/amqp.adoc:38
#, no-wrap
msgid "Producer"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/amqp.adoc:38
#, no-wrap
msgid "amqp-qs-app-screenshot.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:41
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to a queue named `quotes`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:44
msgid "Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.  The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "Por último, `producer` leerá las cotizaciones y las enviará al navegador mediante eventos enviados por el servidor. Así, el usuario verá cómo se actualiza el precio de la cotización desde el _pendiente_ hasta el recibido en tiempo real."

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:45
#, no-wrap
msgid "Solution"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:49
msgid "We recommend that you follow the instructions in the next sections and create applications step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree las aplicaciones paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:51
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:53
msgid "The solution is located in the `amqp-quickstart` link:{quickstarts-tree-url}/amqp-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:54
#, no-wrap
msgid "Creating the Maven Project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:57
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:59
msgid "To create the _producer_ project, in a terminal run:"
msgstr "Para crear el proyecto _productor_, en un terminal ejecute:"

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:66
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:68
msgid "RESTEasy Reactive and its Jackson support to handle JSON payloads"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:69
msgid "The Reactive Messaging AMQP connector"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:71
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "Para crear el proyecto del _procesador_, desde el mismo directorio, ejecute:"

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:78
msgid "At that point you should have the following structure:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:104
#, no-wrap
msgid ""
".\n"
"├── amqp-quickstart-processor\n"
"│  ├── README.md\n"
"│  ├── mvnw\n"
"│  ├── mvnw.cmd\n"
"│  ├── pom.xml\n"
"│  └── src\n"
"│     └── main\n"
"│        ├── docker\n"
"│        ├── java\n"
"│        └── resources\n"
"│           └── application.properties\n"
"└── amqp-quickstart-producer\n"
"   ├── README.md\n"
"   ├── mvnw\n"
"   ├── mvnw.cmd\n"
"   ├── pom.xml\n"
"   └── src\n"
"      └── main\n"
"         ├── docker\n"
"         ├── java\n"
"         └── resources\n"
"            └── application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:107
msgid "Open the two projects in your favorite IDE."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:108
#, no-wrap
msgid "The Quote object"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:113
msgid "The `Quote` class will be used in both `producer` and `processor` projects.  For the sake of simplicity we will duplicate the class.  In both projects, create the `src/main/java/org/acme/amqp/model/Quote.java` file, with the following content:"
msgstr "La clase `Quote` se utilizará en los proyectos `producer` y `processor`. Para simplificar, duplicaremos la clase. En ambos proyectos, cree el archivo `src/main/java/org/acme/amqp/model/Quote.java`, con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:117
#, no-wrap
msgid "package org.acme.amqp.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:119
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:122
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Quote {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:125
#, no-wrap
msgid ""
"    public String id;\n"
"    public int price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:130
#, no-wrap
msgid ""
"    /**\n"
"    * Default constructor required for Jackson serializer\n"
"    */\n"
"    public Quote() { }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:135
#, no-wrap
msgid ""
"    public Quote(String id, int price) {\n"
"        this.id = id;\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:144
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return \"Quote{\" +\n"
"                \"id='\" + id + '\\'' +\n"
"                \", price=\" + price +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:148
msgid "JSON representation of `Quote` objects will be used in messages sent to the AMQP queues and also in the server-sent events sent to browser clients."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:150
msgid "Quarkus has built-in capabilities to deal with JSON AMQP messages."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/amqp.adoc:152
#, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#. type: delimited block =
#: upstream/_versions/main/guides/amqp.adoc:157
msgid "The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.  This will be useful later when we run the applications as native executables inside containers.  Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr "La anotación `@RegisterForReflection` indica a Quarkus que incluya la clase (incluyendo los campos y métodos) cuando construya el ejecutable nativo. Esto será útil más adelante cuando ejecutemos las aplicaciones como ejecutables nativos dentro de contenedores. Sin ella, la compilación nativa eliminaría los campos y métodos durante la fase de eliminación del código muerto."

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:159
#, no-wrap
msgid "Sending quote request"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:162
msgid "Inside the `producer` project locate the generated `src/main/java/org/acme/amqp/producer/QuotesResource.java` file, and update the content to be:"
msgstr "Dentro del proyecto `producer` localice el archivo generado `src/main/java/org/acme/amqp/producer/QuotesResource.java`, y actualice el contenido para que sea:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:166
#, no-wrap
msgid "package org.acme.amqp.producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:168
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:174
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:178
#, no-wrap
msgid ""
"import org.acme.amqp.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:180
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:183
#, no-wrap
msgid ""
"@Path(\"/quotes\")\n"
"public class QuotesResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:185
#, no-wrap
msgid "    @Channel(\"quote-requests\") Emitter<String> quoteRequestEmitter; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:198
#, no-wrap
msgid ""
"    /**\n"
"     * Endpoint to generate a new quote request id and send it to \"quote-requests\" AMQP queue using the emitter.\n"
"     */\n"
"    @POST\n"
"    @Path(\"/request\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String createRequest() {\n"
"        UUID uuid = UUID.randomUUID();\n"
"        quoteRequestEmitter.send(uuid.toString()); // <2>\n"
"        return uuid.toString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:200
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "Inyectar una Mensajería Reactiva `Emitter` para enviar mensajes al canal `quote-requests`."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:201
msgid "On a post request, generate a random UUID and send it to the AMQP queue using the emitter."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:205
msgid "The `quote-requests` channel is going to be managed as a AMQP queue, as that's the only connector on the classpath.  If not indicated otherwise, like in this example, Quarkus uses the channel name as AMQP queue name.  So, in this example, the application sends messages to the `quote-requests` queue."
msgstr "El canal `quote-requests` va a ser gestionado como una cola AMQP, ya que es el único conector en el classpath. Si no se indica lo contrario, como en este ejemplo, Quarkus utiliza el nombre del canal como nombre de la cola AMQP. Así, en este ejemplo, la aplicación envía mensajes a la cola `quote-requests`."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:207
msgid "When you have multiple connectors, you would need to indicate which connector you want to use in the application configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:208
#, no-wrap
msgid "Processing quote requests"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:212
msgid "Now let's consume the quote request and give out a price.  Inside the `processor` project, locate the `src/main/java/org/acme/amqp/processor/QuoteProcessor.java` file and add the following:"
msgstr "Ahora vamos a consumir la solicitud de quota y dar un precio. Dentro del proyecto `processor`, localice el archivo `src/main/java/org/acme/amqp/processor/QuoteProcessor.java` y añada lo siguiente:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:216
#, no-wrap
msgid "package org.acme.amqp.processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:218
#, no-wrap
msgid "import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:220
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:224
#, no-wrap
msgid ""
"import org.acme.amqp.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:226
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:233
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming data from the \"request\" AMQP queue and giving out a random quote.\n"
" * The result is pushed to the \"quotes\" AMQP queue.\n"
" */\n"
"@ApplicationScoped\n"
"public class QuoteProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:235
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:245
#, no-wrap
msgid ""
"    @Incoming(\"requests\")       // <1>\n"
"    @Outgoing(\"quotes\")         // <2>\n"
"    @Blocking                   // <3>\n"
"    public Quote process(String quoteRequest) throws InterruptedException {\n"
"        // simulate some hard-working task\n"
"        Thread.sleep(200);\n"
"        return new Quote(quoteRequest, random.nextInt(100));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:247
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:248
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:249
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:251
msgid "The `process` method is called for every AMQP message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` queue."
msgstr "El método `process` es llamado por cada mensaje AMQP de la cola `quote-requests`, y enviará un objeto `Quote` a la cola `quotes`."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:254
msgid "Because we want to consume messages from the `quotes-requests` queue into the `requests` channel, we need to configure this association.  Open the `src/main/resources/application.properties` file and add:"
msgstr "Como queremos consumir mensajes de la cola `quotes-requests` en el canal `requests`, necesitamos configurar esta asociación. Abre el archivo `src/main/resources/application.properties` y añade:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:258
#, no-wrap
msgid "mp.messaging.incoming.requests.address=quote-requests\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:261
msgid "The configuration keys are structured as follows:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:263
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:265
msgid "In our case, we want to configure the `address` attribute to indicate the name of the queue."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:266
#, no-wrap
msgid "Receiving quotes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:270
msgid "Back to our `producer` project.  Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr "Volvamos a nuestro proyecto `producer`. Vamos a modificar el `QuotesResource` para consumir citas, enlazarlo a un endpoint HTTP para enviar eventos a los clientes:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:275
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"//...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:277
#, no-wrap
msgid "@Channel(\"quotes\") Multi<Quote> quotes;     // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:286
#, no-wrap
msgid ""
"/**\n"
" * Endpoint retrieving the \"quotes\" queue and sending the items to a server sent event.\n"
" */\n"
"@GET\n"
"@Produces(MediaType.SERVER_SENT_EVENTS) // <2>\n"
"public Multi<Quote> stream() {\n"
"    return quotes; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:288
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:289
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:290
msgid "Returns the stream (_Reactive Stream_)"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:291
#, no-wrap
msgid "The HTML page"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:294
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:296
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "Cree dentro del proyecto `producer` el archivo `src/main/resources/META-INF/resources/quotes.html`, con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:300
#, no-wrap
msgid "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quotes</title>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:336
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
"    <div class=\"card\">\n"
"        <div class=\"card-body\">\n"
"            <h2 class=\"card-title\">Quotes</h2>\n"
"            <button class=\"btn btn-info\" id=\"request-quote\">Request Quote</button>\n"
"            <div class=\"quotes\"></div>\n"
"        </div>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n"
"<script>\n"
"    $(\"#request-quote\").click((event) => {\n"
"        fetch(\"/quotes/request\", {method: \"POST\"})\n"
"        .then(res => res.text())\n"
"        .then(qid => {\n"
"            var row = $(`<h4 class='col-md-12' id='${qid}'>Quote # <i>${qid}</i> | <strong>Pending</strong></h4>`);\n"
"            $(\".quotes\").append(row);\n"
"        });\n"
"    });\n"
"    var source = new EventSource(\"/quotes\");\n"
"    source.onmessage = (event) => {\n"
"      var json = JSON.parse(event.data);\n"
"      $(`#${json.id}`).html(function(index, html) {\n"
"        return html.replace(\"Pending\", `\\$\\xA0${json.price}`);\n"
"      });\n"
"    };\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:340
msgid "Nothing spectacular here.  On each received quote, it updates the page."
msgstr "No hay nada espectacular aquí. En cada cotización recibida, actualiza la página."

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:341
#, no-wrap
msgid "Get it running"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:344
msgid "You just need to run both applications using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:348
#, no-wrap
msgid "> mvn -f amqp-quickstart-producer quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:351
msgid "And, in a separate terminal:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:355
#, no-wrap
msgid "> mvn -f amqp-quickstart-processor quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:359
msgid "Quarkus starts a AMQP broker automatically, configures the application and shares the broker instance between different applications.  See xref:amqp-dev-services.adoc[Dev Services for AMQP] for more details."
msgstr "Quarkus inicia un broker AMQP automáticamente, configura la aplicación y comparte la instancia del broker entre diferentes aplicaciones. Ver xref:amqp-dev-services.html[Dev Services for AMQP] para más detalles."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:362
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:363
#, no-wrap
msgid "Running in JVM or Native mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:367
msgid "When not running in dev or test mode, you will need to start your AMQP broker.  You can follow the instructions from the https://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Apache ActiveMQ Artemis website] or create a `docker-compose.yaml` file with the following content:"
msgstr "Cuando no se esté ejecutando en modo dev o test, tendrá que iniciar su broker AMQP. Puede seguir las instrucciones del https://activemq.apache.org/components/artemis/documentation/latest/using-server.html[sitio web de Apache ActiveMQ Artemis] o crear un archivo `docker-compose.yaml` con el siguiente contenido:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:371
#, no-wrap
msgid "version: '2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:373
#, no-wrap
msgid "services:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:385
#, no-wrap
msgid ""
"  artemis:\n"
"    image: quay.io/artemiscloud/activemq-artemis-broker:0.1.2\n"
"    ports:\n"
"      - \"8161:8161\"\n"
"      - \"61616:61616\"\n"
"      - \"5672:5672\"\n"
"    environment:\n"
"      AMQ_USER: quarkus\n"
"      AMQ_PASSWORD: quarkus\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:398
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/amqp-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: amqp-quickstart-producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      AMQP_HOST: artemis\n"
"      AMQP_PORT: 5672\n"
"    ports:\n"
"      - \"8080:8080\"\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:409
#, no-wrap
msgid ""
"  processor:\n"
"    image: quarkus-quickstarts/amqp-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: amqp-quickstart-processor\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      AMQP_HOST: artemis\n"
"      AMQP_PORT: 5672\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:413
#, no-wrap
msgid ""
"networks:\n"
"  amqp-quickstart-network:\n"
"    name: amqp-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:417
msgid "Note how the AMQP broker location is configured.  The `amqp.host` and `amqp.port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr "Observe cómo se configura la ubicación del broker AMQP. Las propiedades `amqp.host` y `amqp.port` ( `AMQP_HOST` y `AMQP_PORT` variables de entorno) configuran la ubicación."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:420
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:425
#, no-wrap
msgid ""
"> mvn -f amqp-quickstart-producer clean package\n"
"> mvn -f amqp-quickstart-processor clean package\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:429
msgid "Once packaged, run `docker compose up --build`.  The UI is exposed on http://localhost:8080/quotes.html"
msgstr "Una vez empaquetado, ejecute `docker compose up --build`. La interfaz de usuario se expone en http://localhost:8080/quotes.html"

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:431
msgid "To run your applications as native, first we need to build the native executables:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:436
#, no-wrap
msgid ""
"> mvn -f amqp-quickstart-producer package -Dnative  -Dquarkus.native.container-build=true\n"
"> mvn -f amqp-quickstart-processor package -Dnative -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:440
msgid "The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.  Then, run the system using:"
msgstr "El `-Dquarkus.native.container-build=true` instruye a Quarkus para construir ejecutables nativos de Linux 64bits, que pueden ejecutarse dentro de contenedores. Luego, ejecuta el sistema usando:"

#. type: delimited block -
#: upstream/_versions/main/guides/amqp.adoc:445
#, no-wrap
msgid ""
"> export QUARKUS_MODE=native\n"
"> docker compose up --build\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:448
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "Como antes, la interfaz de usuario está expuesta en http://localhost:8080/quotes.html"

#. type: Title ==
#: upstream/_versions/main/guides/amqp.adoc:449
#, no-wrap
msgid "Going further"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:453
msgid "This guide has shown how you can interact with AMQP 1.0 using Quarkus.  It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "Esta guía ha mostrado cómo puedes interactuar con AMQP 1.0 usando Quarkus. Utiliza https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] para construir aplicaciones de streaming de datos."

#. type: Plain text
#: upstream/_versions/main/guides/amqp.adoc:456
msgid "If you did the Kafka quickstart, you have realized that it's the same code.  The only difference is the connector configuration and the JSON mapping."
msgstr "Si has hecho el quickstart de Kafka, te habrás dado cuenta de que es el mismo código. La única diferencia es la configuración del conector y el mapeo JSON."
