# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-15 02:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:6
#, fuzzy, no-wrap
msgid "Built-In Authentication Support"
msgstr "Soporte de autenticación incorporado"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:11
#, fuzzy
msgid "The following section describes the Quarkus built-in authentication mechanisms for HTTP based FORM, BASIC, and Mutual TLS authentication. Proactive authentication is also described."
msgstr "En la siguiente sección se describen los mecanismos de autenticación incorporados en Quarkus para la autenticación HTTP basada en FORM, BASIC y Mutual TLS. También se describe la autenticación proactiva."

#. type: Title ==
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:18
#, fuzzy, no-wrap
msgid "Form Based Authentication"
msgstr "Autenticación basada en formularios"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:24
#, fuzzy
msgid "Quarkus provides form based authentication that works in a similar manner to traditional Servlet form based auth. Unlike traditional form authentication, the authenticated user is not stored in an HTTP session, as Quarkus does not provide clustered HTTP session support. Instead, the authentication information is stored in an encrypted cookie, which can be read by all members of the cluster (provided they all share the same encryption key)."
msgstr "Quarkus proporciona autenticación basada en formularios que funciona de manera similar a la autenticación tradicional basada en formularios Servlet. A diferencia de la autenticación de formulario tradicional, el usuario autenticado no se almacena en una sesión HTTP, ya que Quarkus no proporciona soporte de sesión HTTP agrupada. En su lugar, la información de autenticación se almacena en una cookie cifrada, que puede ser leída por todos los miembros del clúster (siempre que todos compartan la misma clave de cifrado)."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:30
msgid "The encryption key can be set using the `quarkus.http.auth.session.encryption-key` property, and it must be at least 16 characters long. This key is hashed using SHA-256 and the resulting digest is used as a key for AES-256 encryption of the cookie value. This cookie contains an expiry time as part of the encrypted value, so all nodes in the cluster must have their clocks synchronized. At one minute intervals a new cookie will be generated with an updated expiry time if the session is in use."
msgstr "La clave de encriptación puede establecerse utilizando la propiedad `quarkus.http.auth.session.encryption-key`, y debe tener al menos 16 caracteres. Esta clave se convierte en hash utilizando SHA-256 y el resumen resultante se utiliza como clave para el cifrado AES-256 del valor de la cookie. Esta cookie contiene una hora de caducidad como parte del valor cifrado, por lo que todos los nodos del clúster deben tener sus relojes sincronizados. A intervalos de un minuto se generará una nueva cookie con una hora de caducidad actualizada si la sesión está en uso."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:32
#, fuzzy
msgid "The following properties can be used to configure form based auth:"
msgstr "Las siguientes propiedades se pueden utilizar para configurar la autenticación basada en formularios:"

#. type: Title ==
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:36
#, fuzzy, no-wrap
msgid "Mutual TLS Authentication"
msgstr "Autenticación mutua TLS"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:39
#, fuzzy
msgid "Quarkus provides mTLS authentication so that you can authenticate users based on their X.509 certificates."
msgstr "Quarkus proporciona autenticación mTLS para que pueda autenticar a los usuarios basándose en sus certificados X.509."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:41
msgid "To use this authentication method, you should first enable SSL for your application. For more details, check the xref:http-reference.adoc#ssl[Supporting secure connections with SSL] guide."
msgstr "Para utilizar este método de autenticación, primero debe habilitar SSL para su aplicación. Para más detalles, consulte la guía xref:http-reference.html#ssl[Soporte de conexiones seguras con SSL]."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:45
#, fuzzy
msgid "Once your application is accepting secure connections, the next step is to configure a `quarkus.http.ssl.certificate.trust-store-file` holding all the certificates that your application should trust as well as how your application should ask for certificates when a client (e.g.: browser or another service) tries to access one of its protected resources."
msgstr "Una vez que tu aplicación acepte conexiones seguras, el siguiente paso es configurar un `quarkus.http.ssl.certificate.trust-store-file` que contenga todos los certificados en los que tu aplicación debe confiar, así como la forma en que tu aplicación debe solicitar certificados cuando un cliente (por ejemplo: navegador u otro servicio) intente acceder a uno de sus recursos protegidos."

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:53
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks            <1>\n"
"quarkus.http.ssl.certificate.key-store-password=the_key_store_secret\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks        <2>\n"
"quarkus.http.ssl.certificate.trust-store-password=the_trust_store_secret\n"
"quarkus.http.ssl.client-auth=required                                      <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:56
#, no-wrap
msgid ""
"quarkus.http.auth.permission.default.paths=/*                              <4>\n"
"quarkus.http.auth.permission.default.policy=authenticated\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:58
#, fuzzy
msgid "Configures a key store where the server's private key is located."
msgstr "Configura un almacén de claves donde se encuentra la clave privada del servidor."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:59
#, fuzzy
msgid "Configures a trust store from where the trusted certificates are going to be loaded from."
msgstr "Configura un almacén de confianza desde donde se cargarán los certificados de confianza."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:62
#, fuzzy
msgid "Defines that the server should *always* ask certificates from clients. You can relax this behavior by using `REQUEST` so that the server should still accept requests without a certificate. Useful when you are also supporting authentication methods other than mTLS."
msgstr "Define que el servidor *siempre* debe pedir certificados a los clientes. Puede relajar este comportamiento utilizando `REQUEST` para que el servidor acepte peticiones sin certificado. Resulta útil cuando también se admiten métodos de autenticación distintos de mTLS."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:63
#, fuzzy
msgid "Defines a policy where only authenticated users should have access to resources from your application."
msgstr "Define una política en la que sólo los usuarios autenticados deben tener acceso a los recursos de su aplicación."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:66
#, fuzzy
msgid "Once the incoming request matches a valid certificate in the truststore, your application should be able to obtain the subject by just injecting a `SecurityIdentity` as follows:"
msgstr "Una vez que la solicitud entrante coincide con un certificado válido en el almacén de confianza, su aplicación debería poder obtener el asunto con sólo inyectar un `SecurityIdentity` como se indica a continuación:"

#. type: Block title
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:68
#, fuzzy, no-wrap
msgid "Obtaining the subject"
msgstr "Obtención del sujeto"

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:73
#, no-wrap
msgid ""
"@Inject\n"
"SecurityIdentity identity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:79
#, no-wrap
msgid ""
"@GET\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public String hello() {\n"
"    return String.format(\"Hello, %s\", identity.getPrincipal().getName());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:82
#, fuzzy
msgid "You should also be able to get the certificate as follows:"
msgstr "También debería poder obtener el certificado de la siguiente manera:"

#. type: Block title
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:84
#, fuzzy, no-wrap
msgid "Obtaining the certificate"
msgstr "Obtener el certificado"

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:89
#, no-wrap
msgid ""
"import java.security.cert.X509Certificate;\n"
"import io.quarkus.security.credential.CertificateCredential;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:92
#, no-wrap
msgid ""
"CertificateCredential credential = identity.getCredential(CertificateCredential.class);\n"
"X509Certificate certificate = credential.getCertificate();\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:94
#, fuzzy, no-wrap
msgid "Authorization"
msgstr "Autorización"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:98
#, fuzzy
msgid "The information from the client certificate can be used to enhance Quarkus `SecurityIdentity`. For example, one can add new roles after checking a client certificate subject name, and so on.  Please see the xref:security-customization.adoc#security-identity-customization[SecurityIdentity Customization] section for more information about customizing Quarkus `SecurityIdentity`."
msgstr "La información del certificado de cliente puede utilizarse para mejorar Quarkus `SecurityIdentity`. Por ejemplo, se pueden añadir nuevas funciones después de comprobar el nombre del sujeto de un certificado de cliente, etc. Consulte la sección  link:security-customization.html#security-identity-customization[Personalización de SecurityIdentity] para obtener más información sobre la personalización de Quarkus `SecurityIdentity`."

#. type: Title ==
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:100
#, fuzzy, no-wrap
msgid "Proactive Authentication"
msgstr "Autenticación proactiva"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:104
#, fuzzy
msgid "By default, Quarkus does what we call proactive authentication. This means that if an incoming request has a credential then that request will always be authenticated (even if the target page does not require authentication)."
msgstr "Por defecto, Quarkus hace lo que llamamos autenticación proactiva. Esto significa que si una solicitud entrante tiene una credencial, entonces esa solicitud siempre será autenticada (incluso si la página de destino no requiere autenticación)."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:107
#, fuzzy
msgid "This means that requests with an invalid credential will always be rejected, even for public pages. You can change this behavior and only authenticate when required by setting `quarkus.http.auth.proactive=false`."
msgstr "Esto significa que las peticiones con una credencial inválida siempre serán rechazadas, incluso para páginas públicas. Puede cambiar este comportamiento y autenticar solo cuando sea necesario configurando `quarkus.http.auth.proactive=false`."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:111
#, fuzzy
msgid "If you disable proactive authentication then the authentication process will only be run when an identity is requested, either because there are security rules that requires the user to be authenticated, or due to programmatic access to the current identity."
msgstr "Si desactiva la autenticación proactiva, el proceso de autenticación sólo se ejecutará cuando se solicite una identidad, ya sea porque hay reglas de seguridad que requieren que el usuario se autentique, o debido al acceso programático a la identidad actual."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:119
#, fuzzy
msgid "Note that if proactive authentication is in use accessing the `SecurityIdentity` is a blocking operation. This is because authentication may not have happened yet, and accessing it may require calls to external systems such as databases that may block. For blocking applications this is no problem, however if you have disabled authentication in a reactive application this will fail (as you cannot do blocking operations on the IO thread). To work around this you need to `@Inject` an instance of `io.quarkus.security.identity.CurrentIdentityAssociation`, and call the `Uni<SecurityIdentity> getDeferredIdentity();` method. You can then subscribe to the resulting `Uni` and will be notified when authentication is complete and the identity is available."
msgstr "Ten en cuenta que si se utiliza la autenticación proactiva, acceder a `SecurityIdentity` es una operación que se bloquea. Esto se debe a que la autenticación puede no haber ocurrido todavía, y acceder a ella puede requerir llamadas a sistemas externos como bases de datos que pueden bloquearse. Para aplicaciones bloqueantes esto no es problema, sin embargo si has deshabilitado la autenticación en una aplicación reactiva esto fallará (ya que no puedes hacer operaciones bloqueantes en el hilo IO). Para evitarlo, debe crear una instancia de `io.quarkus.security.identity.CurrentIdentityAssociation` en `@Inject` y llamar al método `Uni&amp;lt;SecurityIdentity&amp;gt; getDeferredIdentity();`. Entonces puedes suscribirte al `Uni` resultante y serás notificado cuando la autenticación se complete y la identidad esté disponible."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:124
#, fuzzy
msgid "It's still possible to access the `SecurityIdentity` synchronously with `public SecurityIdentity getIdentity()` in the xref:resteasy-reactive.adoc[RESTEasy Reactive] from endpoints annotated with `@RolesAllowed`, `@Authenticated`, or with respective configuration authorization checks as authentication has already happened. The same is also valid for the xref:reactive-routes.adoc[Reactive routes] if a route response is synchronous."
msgstr "Sigue siendo posible acceder a `SecurityIdentity` de forma sincrónica con `public SecurityIdentity getIdentity()` en  link:resteasy-reactive.html[RESTEasy Reactive] desde endpoints anotados con `@RolesAllowed`, `@Authenticated`, o con las respectivas comprobaciones de autorización de configuración, ya que la autenticación ya se ha producido. Lo mismo es válido para las  link:reactive-routes.html[rutas Re] active si una respuesta de ruta es sincrónica."

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:128
#, fuzzy
msgid "xref:security-authorization.adoc#standard-security-annotations[Standard security annotations] on CDI beans are not supported on IO thread if a non-void secured method returns a value synchronously and proactive authentication is disabled, as they need to access the `SecurityIdentity`.  In the example below, we have defined `HelloResource` and `HelloService`. It's easy to see that any GET request to `/hello` will run on IO thread and throw `BlockingOperationNotAllowedException` exception.  There is more than one way to fix the example:"
msgstr "Las  link:security-authorization.html#standard-security-annotations[anotaciones de seguridad estándar] en beans CDI no son soportadas en el hilo IO si un método asegurado no vacío devuelve un valor de forma síncrona y la autenticación proactiva está deshabilitada, ya que necesitan acceder a `SecurityIdentity`. En el ejemplo de abajo, hemos definido `HelloResource` y `HelloService`. Es fácil ver que cualquier petición GET a `/hello` se ejecutará en el hilo IO y lanzará la excepción `BlockingOperationNotAllowedException`. Hay más de una forma de arreglar el ejemplo:"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:130
#, fuzzy
msgid "switch to a worker thread (annotate `hello` endpoint with `@Blocking`)"
msgstr "cambiar a un hilo trabajador (anotar `hello` endpoint con `@Blocking`)"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:131
#, fuzzy
msgid "change `sayHello` method return type (use reactive or asynchronous data type)"
msgstr "cambiar el tipo de retorno del método `sayHello` (utilizar un tipo de datos reactivo o asíncrono)"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:132
#, fuzzy
msgid "arguably the safest way is to move `@RolesAllowed` annotation to the endpoint, as accessing `SecurityIdentity` from endpoint methods is never the blocking operation"
msgstr "Podría decirse que la forma más segura es mover la anotación `@RolesAllowed` al endpoint, ya que acceder a `SecurityIdentity` desde los métodos del endpoint nunca es una operación de bloqueo."

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:139
#, no-wrap
msgid ""
"import javax.annotation.security.PermitAll;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:141
#, no-wrap
msgid "import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:145
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"@PermitAll\n"
"public class HelloResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:148
#, no-wrap
msgid ""
"    @Inject\n"
"    HelloService helloService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:153
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<String> hello() {\n"
"        return Uni.createFrom().item(helloService.sayHello());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:155
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:171
#, no-wrap
msgid "}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:161
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:164
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class HelloService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:169
#, no-wrap
msgid ""
"    @RolesAllowed(\"admin\")\n"
"    public String sayHello() {\n"
"        return \"Hello\";\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:174
#, fuzzy, no-wrap
msgid "How to customize authentication exception responses"
msgstr "Cómo personalizar las respuestas de excepción de autenticación"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:177
msgid "By default, the authentication security constraints are enforced before the JAX-RS chain starts and only way to handle Quarkus Security authentication exceptions is to provide a failure handler like this one:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:181
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:213
#, no-wrap
msgid "package io.quarkus.it.keycloak;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:184
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.enterprise.event.Observes;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:189
#, no-wrap
msgid ""
"import io.quarkus.security.AuthenticationFailedException;\n"
"import io.vertx.core.Handler;\n"
"import io.vertx.ext.web.Router;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:192
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class AuthenticationFailedExceptionHandler {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:206
#, no-wrap
msgid ""
"    public void init(@Observes Router router) {\n"
"        router.route().failureHandler(new Handler<RoutingContext>() {\n"
"            @Override\n"
"            public void handle(RoutingContext event) {\n"
"                if (event.failure() instanceof AuthenticationFailedException) {\n"
"                    event.response().setStatusCode(401).end(CUSTOMIZED_RESPONSE);\n"
"                } else {\n"
"                    event.next();\n"
"                }\n"
"            }\n"
"        });\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:209
#, fuzzy
msgid "Disabling the proactive authentication effectively shifts this process to the moment when the JAX-RS chain starts running thus making it possible to use JAX-RS `ExceptionMapper` to capture Quarkus Security authentication exceptions such as `io.quarkus.security.AuthenticationFailedException`, for example:"
msgstr "Por defecto, las restricciones de seguridad de la autenticación se aplican antes de que se inicie la cadena JAX-RS. Desactivar la autenticación proactiva desplaza efectivamente este proceso al momento en que la cadena JAX-RS comienza a ejecutarse haciendo así posible el uso de JAX-RS `ExceptionMapper` para capturar excepciones de autenticación de Quarkus Security como `io.quarkus.security.AuthenticationFailedException`, por ejemplo:"

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:219
#, no-wrap
msgid ""
"import javax.annotation.Priority;\n"
"import javax.ws.rs.Priorities;\n"
"import javax.ws.rs.core.Response;\n"
"import javax.ws.rs.ext.ExceptionMapper;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:221
#, no-wrap
msgid "import io.quarkus.security.AuthenticationFailedException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:225
#, no-wrap
msgid ""
"@Provider\n"
"@Priority(Priorities.AUTHENTICATION)\n"
"public class AuthenticationFailedExceptionMapper implements ExceptionMapper<AuthenticationFailedException> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:228
#, no-wrap
msgid ""
"    @Context\n"
"    UriInfo uriInfo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:234
#, no-wrap
msgid ""
"    @Override\n"
"    public Response toResponse(AuthenticationFailedException exception) {\n"
"        return Response.status(401).header(\"WWW-Authenticate\", \"Basic realm=\\\"Quarkus\\\"\").build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:236
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_versions/main/guides/security-built-in-authentication.adoc:238
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "link:security.html[Seguridad Quarkus]"

#, fuzzy
#~ msgid "xref:security.adoc#identity-providers[Security Identity Providers]"
#~ msgstr "Para más información, consulte xref:security.html#identity-providers[Proveedores de Identidad de Seguridad]."

#, fuzzy
#~ msgid "xref:security-testing.adoc#configuring-user-information[Configuring User Information in application.properties]"
#~ msgstr "Consulte también la sección xref:security-testing.html#configuring-user-information[Configuración de la información del usuario en application.properties]."
