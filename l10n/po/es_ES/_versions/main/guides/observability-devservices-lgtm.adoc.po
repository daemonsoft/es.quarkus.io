msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Observability Dev Services with Grafana OTel LGTM"
msgstr "Observability Dev Services con Grafana OTel LGTM"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid ""
"This Dev Service provides the https://github.com/grafana/docker-otel-lgtm[Grafana OTel-LGTM], an `all-in-one` Docker image containing an https://opentelemetry.io/docs/collector[OpenTelemetry Collector] receiving and then forwarding telemetry data to https://prometheus.io/[Prometheus] (metrics), https://github.com/grafana/tempo[Tempo] (traces) and https://github.com/grafana/loki[Loki] (logs).\n"
"This data can then be visualized by https://github.com/grafana/grafana[Grafana]."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Configuring your project"
msgstr "Configurar el proyecto"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Add the Quarkus Grafana OTel LGTM sink (where data goes) extension to your build file:"
msgstr "Añada la extensión Quarkus Grafana OTel LGTM sink (donde van los datos) a su archivo de compilación:"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Micrometer"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "The https://quarkus.io/guides/telemetry-micrometer[Micrometer Quarkus extension] provides metrics from automatic instrumentation implemented in Quarkus and its extensions."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "There are multiple ways to output Micrometer metrics. Next there are some examples:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Using the Micrometer Prometheus registry"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "This is the most common way to output metrics from Micrometer and the default way in Quarkus. The Micrometer Prometheus registry will publish data in the `/q/metrics` endpoint and a scraper inside the Grafana LGTM Dev Service will grab it (*pull* data from the service)."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Using the Micrometer OTLP registry"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "The https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/micrometer-registry-otlp.html[Quarkiverse Micrometer OTLP registry] will output data using the OpenTelemetry OTLP protocol to the Grafana LGTM Dev Service. This will *push* data out of the service:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "When using the https://micrometer.io/[Micrometer's] Quarkiverse OTLP registry to push metrics to Grafana OTel LGTM, the `quarkus.micrometer.export.otlp.url` property is automatically set to OTel collector endpoint as seen from the outside of the Docker container."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "OpenTelemetry"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "With OpenTelemetry, metrics, traces and logs can be created and sent to the Grafana LGTM Dev Service."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "By default, the https://quarkus.io/guides/opentelemetry[OpenTelemetry extension] will produce https://quarkus.io/guides/opentelemetry-tracing[traces]. https://quarkus.io/guides/opentelemetry-metrics[Metrics] and https://quarkus.io/guides/opentelemetry-logging[logs] must be enabled separately."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "The `quarkus-opentelemetry` extension can be added to your build file like this:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "The `quarkus.otel.exporter.otlp.endpoint` property is automatically set to the OTel collector endpoint as seen from the outside of the Docker container."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The `quarkus.otel.exporter.otlp.protocol` is set to `http/protobuf`."
msgstr "El `quarkus.otel.exporter.otlp.protocol` está configurado en `http/protobuf` ."

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Micrometer to OpenTelemetry bridge"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "This extension provides Micrometer metrics and OpenTelemetry metrics, traces and logs. All data is managed and sent out by the OpenTelemetry extension."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "**All signals are enabled by default.**"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "The extension can be added to your build file like this:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Grafana"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Grafana UI access"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Once you start your app in dev mode:"
msgstr "Una vez que inicie su aplicación en modo dev:"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "You will see a log entry like this:"
msgstr "Verá una entrada de registro como ésta:"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Remember that Grafana is accessible in an ephemeral port, so you need to check the logs to see which port is being used. In this example, the grafana endpoint is `grafana.endpoint=http://localhost:42797`."
msgstr "Recuerde que Grafana es accesible en un puerto efímero, por lo que debe comprobar los registros para ver qué puerto se está utilizando. En este ejemplo, el punto final de grafana es `grafana.endpoint=http://localhost:42797` ."

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Another option is to use the *Dev UI* (http://localhost:8080/q/dev-ui/extensions) as the Grafana URL link will be available and if selected it will open a new browser tab directly to the running Grafana instance:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Explore"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "In the explore section, you can query the data for all the data sources."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "To see traces, select the `tempo` data source and query for data:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "For logs, select the `loki` data source and query for data:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "The dashboards"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "The Dev Service includes a set of dashboards for metrics."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Each dashboard is tuned for the specific application setup. The available dashboards are:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "*Quarkus Micrometer Metrics - OTLP*: to be used with the Micrometer OTLP registry extension"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "*Quarkus Micrometer Metrics - Prometheus*: to be used with the Micrometer Prometheus registry extension."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "*Quarkus Micrometer OpenTelemetry*: to be used with the Micrometer to OpenTelemetry bridge extension."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Some panels in the dashboards might take a few minutes to show data when their values are calculated over a sliding window of time."
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Additional configuration"
msgstr "Configuración adicional"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "This extension will configure your `quarkus-opentelemetry` and `quarkus-micrometer-registry-otlp` extensions to send data to the OTel Collector bundled with the Grafana OTel LGTM image."
msgstr "Esta extensión configurará sus extensiones `quarkus-opentelemetry` y `quarkus-micrometer-registry-otlp` para enviar datos al recolector OTel incluido en la imagen Grafana OTel LGTM."

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you don't want all the hassle with Dev Services (e.g. lookup and re-use of existing running containers, etc) you can simply disable Dev Services and enable just Dev Resource usage:"
msgstr "Si no desea toda la molestia que suponen los Servicios Dev (por ejemplo, la búsqueda y reutilización de contenedores en ejecución existentes, etc.) puede simplemente desactivar los Servicios Dev y activar sólo el uso de Recursos Dev:"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Tests"
msgstr "Pruebas"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "And for the least 'auto-magical' usage in the tests, simply disable both (Dev Resources are already disabled by default):"
msgstr "Y para un uso lo menos \"automágico\" posible en las pruebas, basta con desactivar ambos (los recursos de desarrollo ya están desactivados por defecto):"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "And then explicitly list LGTM Dev Resource in the test as a `@QuarkusTestResource` resource:"
msgstr "Y, a continuación, enumere explícitamente el recurso LGTM Dev en la prueba como recurso `@QuarkusTestResource` :"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Testing full Grafana OTel LGTM stack - example"
msgstr "Probar la pila completa de Grafana OTel LGTM - ejemplo"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Use existing Quarkus MicroMeter OTLP registry"
msgstr "Utilizar el registro OTLP existente de Quarkus MicroMeter"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Simply inject the Meter registry into your code -- it will periodically push metrics to Grafana LGTM's OTLP HTTP endpoint."
msgstr "Sólo tiene que inyectar el registro Meter en su código: éste enviará periódicamente métricas al punto final HTTP OTLP de Grafana LGTM."

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Where you can then check Grafana's datasource API for existing metrics data."
msgstr "A continuación, puede comprobar la API de fuentes de datos de Grafana en busca de datos de métricas existentes."
