# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-26 08:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Using OpenID Connect (OIDC) multitenancy"
msgstr "Uso de OpenID Connect (OIDC) multitenancy"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"This guide demonstrates how your OpenID Connect (OIDC) application can support multitenancy to serve multiple tenants from a single application.\n"
"These tenants can be distinct realms or security domains within the same OIDC provider or even distinct OIDC providers."
msgstr "Esta guía demuestra cómo su aplicación OpenID Connect (OIDC) puede soportar multitenancy para servir a múltiples inquilinos desde una única aplicación. Estos inquilinos pueden ser distintos reinos o dominios de seguridad dentro del mismo proveedor de OIDC o incluso distintos proveedores de OIDC."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Each customer functions as a distinct tenant when serving multiple customers from the same application, such as in a SaaS environment.\n"
"By enabling multitenancy support to your applications, you can support distinct authentication policies for each tenant, even authenticating against different OIDC providers, such as Keycloak and Google."
msgstr "Cada cliente funciona como un inquilino distinto cuando se sirve a varios clientes desde la misma aplicación, como en un entorno SaaS. Al habilitar el soporte multiarrendamiento para sus aplicaciones, puede admitir políticas de autenticación distintas para cada arrendatario, incluso autenticando contra distintos proveedores de OIDC, como Keycloak y Google."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To authorize a tenant by using Bearer Token Authorization, see the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] guide."
msgstr "Para autorizar a un inquilino utilizando la autorización por xref:security-oidc-bearer-token-authentication.adoc[token de port] ador, consulte la guía de xref:security-oidc-bearer-token-authentication.adoc[autenticación por token de portador de OpenID Connect (OIDC] )."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To authenticate and authorize a tenant by using the OIDC authorization code flow, read the xref:security-oidc-code-flow-authentication.adoc[OpenID Connect authorization code flow mechanism for protecting web applications] guide."
msgstr "Para autenticar y autorizar a un inquilino mediante el xref:security-oidc-code-flow-authentication.adoc[flujo de código de autorización] de OIDC, lea la guía xref:security-oidc-code-flow-authentication.adoc[Mecanismo de flujo de código de autorización de OpenID Connect para la protección de aplicaciones] web."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Also, see the xref:security-oidc-configuration-properties-reference.adoc[OpenID Connect (OIDC) configuration properties] reference guide."
msgstr "Consulte también la guía de referencia de xref:security-oidc-configuration-properties-reference.adoc[las propiedades de configuración de OpenID Connect (OIDC] )."

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[herramienta jq]"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "In this example, we build a very simple application that supports two resource methods:"
msgstr "En este ejemplo, construimos una aplicación muy sencilla que admite dos métodos de recursos:"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "`/{tenant}`"
msgstr "`/{tenant}`"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "This resource returns information obtained from the ID token issued by the OIDC provider about the authenticated user and the current tenant."
msgstr "Este recurso devuelve información obtenida del token de identificación emitido por el proveedor de OIDC sobre el usuario autenticado y el arrendatario actual."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "`/{tenant}/bearer`"
msgstr "`/{tenant}/bearer`"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "This resource returns information obtained from the Access Token issued by the OIDC provider about the authenticated user and the current tenant."
msgstr "Este recurso devuelve información obtenida del token de acceso emitido por el proveedor de OIDC sobre el usuario autenticado y el arrendatario actual."

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, no-wrap
msgid "Solution"
msgstr "Solución"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "For a thorough understanding, we recommend you build the application by following the upcoming step-by-step instructions."
msgstr "Para una comprensión completa, le recomendamos que construya la aplicación siguiendo las próximas instrucciones paso a paso."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Alternatively, if you prefer to start with the completed example, clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Alternativamente, si prefiere empezar con el ejemplo terminado, clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The solution is located in the `security-openid-connect-multi-tenancy-quickstart` link:{quickstarts-tree-url}/security-openid-connect-multi-tenancy-quickstart[directory]."
msgstr "La solución se encuentra en `security-openid-connect-multi-tenancy-quickstart` {quickstarts-tree-url}/security-openid-connect-multi-tenancy-quickstart[directorio]."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid ""
"First, we need a new project.\n"
"Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "If you already have your Quarkus project configured, add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tiene configurado su proyecto Quarkus, añada la extensión `oidc` a su proyecto ejecutando el siguiente comando en el directorio base de su proyecto:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "This adds the following to your build file:"
msgstr "Esto añade lo siguiente a su archivo de construcción:"

#. type: Block title
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy, no-wrap
msgid "Writing the application"
msgstr "Escribir la aplicación"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Start by implementing the `/{tenant}` endpoint.\n"
"As you can see from the source code below, it is just a regular Jakarta REST resource:"
msgstr "Comience por implementar el punto final `/{tenant}` . Como se puede ver en el código fuente a continuación, es sólo un recurso REST Jakarta regular:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To resolve the tenant from incoming requests and map it to a specific `quarkus-oidc` tenant configuration in `application.properties`, create an implementation for the `io.quarkus.oidc.TenantConfigResolver` interface, which can dynamically resolve tenant configurations:"
msgstr "Para resolver el arrendatario a partir de las solicitudes entrantes y asignarlo a una configuración de arrendatario específica de `quarkus-oidc` en `application.properties` , cree una implementación para la interfaz `io.quarkus.oidc.TenantConfigResolver` , que pueda resolver dinámicamente las configuraciones de arrendatarios:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"In the preceding implementation, tenants are resolved from the request path.\n"
"If no tenant can be inferred, `null` is returned to indicate that the default tenant configuration should be used."
msgstr "En la implementación anterior, los inquilinos se resuelven a partir de la ruta de la solicitud. Si no se puede inferir ningún inquilino, se devuelve `null` para indicar que se debe utilizar la configuración de inquilinos por defecto."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"The `tenant-a` application type is `hybrid`; it can accept HTTP bearer tokens if provided.\n"
"Otherwise, it initiates an authorization code flow when authentication is required."
msgstr "El tipo de aplicación `tenant-a` es `hybrid` ; puede aceptar tokens de portador HTTP si se proporcionan. De lo contrario, inicia un flujo de código de autorización cuando se requiere autenticación."

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "Configuración de la aplicación"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"The first configuration is the default tenant configuration that should be used when the tenant cannot be inferred from the request.\n"
"Be aware that a `%prod` profile prefix is used with `quarkus.oidc.auth-server-url` to support testing a multitenant application with Dev Services For Keycloak.\n"
"This configuration uses a Keycloak instance to authenticate users."
msgstr "La primera configuración es la configuración de inquilino por defecto que debe utilizarse cuando el inquilino no puede inferirse a partir de la solicitud. Tenga en cuenta que se utiliza un prefijo de perfil `%prod` con `quarkus.oidc.auth-server-url` para poder probar una aplicación multitenant con Dev Services For Keycloak. Esta configuración utiliza una instancia de Keycloak para autenticar a los usuarios."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The second configuration, provided by `TenantConfigResolver`, is used when an incoming request is mapped to the `tenant-a` tenant."
msgstr "La segunda configuración, proporcionada por `TenantConfigResolver` , se utiliza cuando una solicitud entrante se asigna al arrendatario `tenant-a` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Both configurations map to the same Keycloak server instance while using distinct `realms`."
msgstr "Ambas configuraciones se asignan a la misma instancia del servidor Keycloak aunque utilizan distintos `realms` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Alternatively, you can configure the tenant `tenant-a` directly in `application.properties`:"
msgstr "Como alternativa, puede configurar el arrendatario `tenant-a` directamente en `application.properties` :"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "In that case, also use a custom `TenantConfigResolver` to resolve it:"
msgstr "En ese caso, utilice también un `TenantConfigResolver` personalizado para resolverlo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"You can define multiple tenants in your configuration file.\n"
"To map them correctly when resolving a tenant from your `TenantResolver` implementation, ensure each has a unique alias."
msgstr "Puede definir varios inquilinos en su archivo de configuración. Para asignarlos correctamente al resolver un inquilino desde su implementación de `TenantResolver` , asegúrese de que cada uno tenga un alias único."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "However, using a static tenant resolution, which involves configuring tenants in `application.properties` and resolving them with `TenantResolver`, does not work for testing endpoints with Dev Services for Keycloak because it does not know how the requests are be mapped to individual tenants, and cannot dynamically provide tenant-specific `quarkus.oidc.<tenant-id>.auth-server-url` values. Therefore, using `%prod` prefixes with tenant-specific URLs within `application.properties` does not work in both test and development modes."
msgstr "Sin embargo, utilizar una resolución estática de inquilinos, que implica configurar los inquilinos en `application.properties` y resolverlos con `TenantResolver` , no funciona para probar puntos finales con Dev Services para Keycloak porque no sabe cómo se van a asignar las peticiones a los inquilinos individuales, y no puede proporcionar dinámicamente valores `quarkus.oidc.<tenant-id>.auth-server-url` específicos de los inquilinos. Por lo tanto, el uso de prefijos `%prod` con URL específicas del arrendatario dentro de `application.properties` no funciona tanto en modo de prueba como en modo de desarrollo."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"When a current tenant represents an OIDC `web-app` application, the current `io.vertx.ext.web.RoutingContext` contains a `tenant-id` attribute by the time the custom tenant resolver has been called for all the requests completing the code authentication flow and the already authenticated requests, when either a tenant-specific state or session cookie already exists.\n"
"Therefore, when working with multiple OIDC providers, you only need a path-specific check to resolve a tenant id if the `RoutingContext` does not have the `tenant-id` attribute set, for example:"
msgstr "Cuando un inquilino actual representa una aplicación OIDC `web-app` , el `io.vertx.ext.web.RoutingContext` actual contiene un atributo `tenant-id` en el momento en que se ha llamado al resolvedor de inquilinos personalizado para todas las solicitudes que completan el flujo de autenticación de código y las solicitudes ya autenticadas, cuando ya existe un estado específico del inquilino o una cookie de sesión. Por lo tanto, cuando trabaje con varios proveedores de OIDC, sólo necesitará una comprobación específica de la ruta para resolver un identificador de inquilino si el `RoutingContext` no tiene establecido el atributo `tenant-id` , por ejemplo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "This is how Quarkus OIDC resolves static custom tenants if no custom `TenantResolver` is registered."
msgstr "Así es como Quarkus OIDC resuelve los arrendatarios personalizados estáticos si no se registra ningún `TenantResolver` personalizado."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "A similar technique can be used with `TenantConfigResolver`, where a `tenant-id` provided in the context can return `OidcTenantConfig` already prepared with the previous request."
msgstr "Una técnica similar puede utilizarse con `TenantConfigResolver` , donde un `tenant-id` proporcionado en el contexto puede devolver `OidcTenantConfig` ya preparado con la solicitud anterior."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid ""
"If you also use Hibernate ORM multitenancy or MongoDB with Panache multitenancy and both tenant ids are the same,\n"
"you can get the tenant id from the `RoutingContext` attribute with `tenant-id`. You can find more information here:"
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "xref:hibernate-orm.adoc#multitenancy[Hibernate ORM multitenancy]"
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "xref:mongodb-panache.adoc#multitenancy[MongoDB with Panache multitenancy]"
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Starting and configuring the Keycloak server"
msgstr "Inicio y configuración del servidor Keycloak"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To start a Keycloak server, you can use Docker and run the following command:"
msgstr "Para iniciar un servidor Keycloak, puede utilizar Docker y ejecutar el siguiente comando:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "where `keycloak.version` is set to `26.0.7` or higher."
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Access your Keycloak server at http://localhost:8180[localhost:8180]."
msgstr "Acceda a su servidor Keycloak en link:http://localhost:8180[localhost:8180] ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Log in as the `admin` user to access the Keycloak administration console.\n"
"The username and password are both `admin`."
msgstr "Conéctese como usuario `admin` para acceder a la consola de administración de Keycloak. El nombre de usuario y la contraseña son ambos `admin` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Now, import the realms for the two tenants:"
msgstr "Ahora, importe los reinos para los dos arrendatarios:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Import the link:{quickstarts-tree-url}/security-openid-connect-multi-tenancy-quickstart/config/default-tenant-realm.json[default-tenant-realm.json] to create the default realm."
msgstr "Importe el link:{quickstarts-tree-url}/security-openid-connect-multi-tenancy-quickstart/config/default-tenant-realm.json[archivo default-tenant-realm.json] para crear el dominio por defecto."

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Import the link:{quickstarts-tree-url}/security-openid-connect-multi-tenancy-quickstart/config/tenant-a-realm.json[tenant-a-realm.json] to create the realm for the tenant `tenant-a`."
msgstr "Importe el archivo {quickstarts-tree-url}/security-openid-connect-multi-tenancy-quickstart/config/tenant-a-realm.json[tenant-a-realm.json] para crear el reino para el tenant `tenant-a`."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "For more information, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "Para más información, consulte la documentación de Keycloak sobre cómo link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[crear un nuevo reino] ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Running and using the application"
msgstr "Ejecución y uso de la aplicación"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Running in developer mode"
msgstr "Funcionamiento en modo desarrollador"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To run the microservice in dev mode, use:"
msgstr "Para ejecutar el microservicio en modo dev, utilice:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Running in JVM mode"
msgstr "Ejecución en modo JVM"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "After exploring the application in dev mode, you can run it as a standard Java application."
msgstr "Después de explorar la aplicación en modo dev, puede ejecutarla como una aplicación Java estándar."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "First, compile it:"
msgstr "Primero, compílalo:"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Then run it:"
msgstr "Entonces, ejecútalo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Running in native mode"
msgstr "Funcionamiento en modo nativo"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "This same demo can be compiled into native code; no modifications are required."
msgstr "Esta misma demostración puede compilarse en código nativo; no se requieren modificaciones."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"This implies that you no longer need to install a JVM on your\n"
"production environment, as the runtime technology is included in\n"
"the produced binary, and optimized to run with minimal resources."
msgstr "Esto implica que ya no necesita instalar una JVM en su entorno de producción, ya que la tecnología de tiempo de ejecución está incluida en el binario producido, y optimizada para ejecutarse con un mínimo de recursos."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Compilation takes a bit longer, so this step is turned off by default;\n"
"let's build again by enabling the native build:"
msgstr "La compilación tarda un poco más, por lo que este paso está desactivado por defecto; volvamos a compilar activando la compilación nativa:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "After a little while, you can run this binary directly:"
msgstr "Después de un rato, podrá ejecutar directamente este binario:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Test the application"
msgstr "Probar la aplicación"

#. type: Title ===
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy, no-wrap
msgid "Use Dev Services for Keycloak"
msgstr "Utilizar los servicios de desarrollo para Keycloak"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] is recommended for the integration testing against Keycloak.\n"
"Dev Services for Keycloak launches and initializes a test container: it imports configured realms and sets a base Keycloak URL for the `CustomTenantResolver` to calculate a realm-specific URL."
msgstr "Dev Services for xref:security-openid-connect-dev-services.adoc[Keycloak] se recomienda para las pruebas de integración contra Keycloak. Dev Services for Keycloak lanza e inicializa un contenedor de pruebas: importa los reinos configurados y establece una URL Keycloak base para que `CustomTenantResolver` calcule una URL específica del reino."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "First, add the following dependencies:"
msgstr "En primer lugar, añada las siguientes dependencias:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"`quarkus-test-keycloak-server` provides a utility class `io.quarkus.test.keycloak.client.KeycloakTestClient` for acquiring the realm specific access tokens and which you can use with `RestAssured` for testing the `/{tenant}/bearer` endpoint expecting bearer access tokens.\n"
"`HtmlUnit` tests the `/{tenant}` endpoint and the authorization code flow."
msgstr "`quarkus-test-keycloak-server` proporciona una clase de utilidad `io.quarkus.test.keycloak.client.KeycloakTestClient` para adquirir los tokens de acceso específicos del reino y que puede utilizar con `RestAssured` para probar el punto final `/{tenant}/bearer` que espera tokens de acceso de portador. `HtmlUnit` prueba el punto final `/{tenant}` y el flujo de código de autorización."

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Next, configure the required realms:"
msgstr "A continuación, configure los dominios necesarios:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Finally, write your test, which runs in JVM mode:"
msgstr "Por último, escriba su prueba, que se ejecuta en modo JVM:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "In native mode:"
msgstr "En modo nativo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "For more information about how it is initialized and configured, see xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]."
msgstr "Para más información sobre cómo se inicializa y configura, consulte xref:security-openid-connect-dev-services.adoc[Servicios de desarrollo para Keycloak] ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Use the browser"
msgstr "Utilice el navegador"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To test the application, open your browser and access the following URL:"
msgstr "Para probar la aplicación, abra su navegador y acceda a la siguiente URL:"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "http://localhost:8080/default[http://localhost:8080/default]"
msgstr "link:http://localhost:8080/default[http://localhost:8080/default]"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"If everything works as expected, you are redirected to the Keycloak server to authenticate.\n"
"Be aware that the requested path defines a `default` tenant, which we don't have mapped in the configuration file.\n"
"In this case, the default configuration is used."
msgstr "Si todo funciona como se espera, será redirigido al servidor Keycloak para autenticarse. Tenga en cuenta que la ruta solicitada define un tenant `default` , que no tenemos mapeado en el archivo de configuración. En este caso, se utiliza la configuración por defecto."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To authenticate to the application, enter the following credentials in the Keycloak login page:"
msgstr "Para autenticarse en la aplicación, introduzca las siguientes credenciales en la página de inicio de sesión de Keycloak:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Username: `alice`"
msgstr "Nombre de usuario: `alice`"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Password: `alice`"
msgstr "Contraseña: `alice`"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "After clicking the *Login* button, you are redirected back to the application."
msgstr "Tras pulsar el botón de *inicio de sesión* , se le redirigirá de nuevo a la aplicación."

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "If you try now to access the application at the following URL:"
msgstr "Si intenta ahora acceder a la aplicación en la siguiente URL:"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "http://localhost:8080/tenant-a[http://localhost:8080/tenant-a]"
msgstr "link:http://localhost:8080/tenant-a[http://localhost:8080/tenant-a]"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"You are redirected again to the Keycloak login page.\n"
"However, this time, you are going to authenticate by using a different realm."
msgstr "Será redirigido de nuevo a la página de inicio de sesión de Keycloak. Sin embargo, esta vez, va a autenticarse utilizando un reino diferente."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"In both cases, the landing page shows the user's name and email if the user is successfully authenticated.\n"
"Although `alice` exists in both tenants, the application treats them as distinct users in separate realms."
msgstr "En ambos casos, la página de destino muestra el nombre y el correo electrónico del usuario si éste se autentica correctamente. Aunque `alice` existe en ambos arrendatarios, la aplicación los trata como usuarios distintos en ámbitos separados."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tenant resolution"
msgstr "Resolución de arrendamiento"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tenant resolution order"
msgstr "Orden de resolución de arrendamiento"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "OIDC tenants are resolved in the following order:"
msgstr "Los arrendatarios de OIDC se resuelven en el orden siguiente:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "`io.quarkus.oidc.Tenant` annotation is checked first if the proactive authentication is disabled."
msgstr "`io.quarkus.oidc.Tenant` se comprueba primero si la autenticación proactiva está desactivada."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Dynamic tenant resolution using a custom `TenantConfigResolver`."
msgstr "Resolución dinámica de inquilinos utilizando un `TenantConfigResolver` personalizado ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Static tenant resolution using one of these options: custom `TenantResolver`, configured tenant paths, and defaulting to the last request path segment as a tenant id."
msgstr "Resolución estática de inquilinos utilizando una de estas opciones: personalizada `TenantResolver` , rutas de inquilinos configuradas y por defecto el último segmento de la ruta de solicitud como id de inquilino."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "Finally, the default OIDC tenant is selected if a tenant id has not been resolved after the preceding steps."
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "See the following sections for more information:"
msgstr "Consulte las secciones siguientes para obtener más información:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "<<annotations-tenant-resolver>>"
msgstr "<<annotations-tenant-resolver>>"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "<<tenant-config-resolver>>"
msgstr "<<tenant-config-resolver>>"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "<<static-tenant-resolution>>"
msgstr "<<static-tenant-resolution>>"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Additionally, for the OIDC `web-app` applications, the state and session cookies also provide a hint about the tenant resolved with one of the above mentioned options at the time when the authorization code flow started. See the <<tenant-resolution-for-web-app>> section for more information."
msgstr "Además, para las aplicaciones OIDC `web-app` , las cookies de estado y de sesión también proporcionan una pista sobre el arrendatario resuelto con una de las opciones mencionadas en el momento en que se inició el flujo del código de autorización. Consulte la sección <<tenant-resolution-for-web-app>> para obtener más información."

#. type: Title ===
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy, no-wrap
msgid "Resolve with annotations"
msgstr "Resolución de identificadores de inquilinos con anotaciones"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "You can use the `io.quarkus.oidc.Tenant` annotation for resolving the tenant identifiers as an alternative to using `io.quarkus.oidc.TenantResolver`."
msgstr "Puede utilizar la anotación `io.quarkus.oidc.Tenant` para resolver los identificadores de inquilino como alternativa al uso de `io.quarkus.oidc.TenantResolver`."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Proactive HTTP authentication must be disabled (`quarkus.http.auth.proactive=false`) for this to work.\n"
"For more information, see the xref:security-proactive-authentication.adoc[Proactive authentication] guide."
msgstr "La autenticación HTTP proactiva debe estar desactivada ( `quarkus.http.auth.proactive=false` ) para que esto funcione. Para más información, consulte la guía de xref:security-proactive-authentication.adoc[autenticación] proactiva."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Assuming your application supports two OIDC tenants, the `hr` and default tenants, all resource methods and classes carrying `@Tenant(\"hr\")` are authenticated by using the OIDC provider configured by `quarkus.oidc.hr.auth-server-url`.\n"
"In contrast, all other classes and methods are still authenticated by using the default OIDC provider."
msgstr "Suponiendo que su aplicación admita dos inquilinos OIDC, el inquilino `hr` y el inquilino por defecto, todos los métodos y clases de recursos que lleven `@Tenant(\"hr\")` se autentican utilizando el proveedor OIDC configurado por `quarkus.oidc.hr.auth-server-url` . Por el contrario, todas las demás clases y métodos se siguen autenticando utilizando el proveedor OIDC por defecto."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The `io.quarkus.oidc.Tenant` annotation must be placed on either the resource class or resource method."
msgstr "La anotación `io.quarkus.oidc.Tenant` debe colocarse en la clase de recurso o en el método de recurso."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "In the example above, authentication of the `sayHello` endpoint is enforced with the `@Authenticated` annotation."
msgstr "En el ejemplo anterior, la autenticación del punto final `sayHello` se aplica con la anotación `@Authenticated` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Alternatively, if you use an the xref:security-authorize-web-endpoints-reference.adoc#authorization-using-configuration[HTTP Security policy]\n"
"to secure the endpoint, then, for the `@Tenant` annotation be effective, you must delay this policy's permission check as shown in the following example:"
msgstr "Alternativamente, si utiliza una xref:security-authorize-web-endpoints-reference.adoc#authorization-using-configuration[política de Seguridad HTTP] para asegurar el punto final, entonces, para que la anotación `@Tenant` sea efectiva, debe retrasar la comprobación de permisos de esta política como se muestra en el siguiente ejemplo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tell Quarkus to run the HTTP permission check after the tenant has been selected with the `@Tenant` annotation."
msgstr "Indique a Quarkus que ejecute la comprobación de permisos HTTP después de que el arrendatario haya sido seleccionado con la anotación `@Tenant` ."

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy, no-wrap
msgid "Dynamic tenant configuration resolution"
msgstr "Desactivación de las configuraciones de los inquilinos"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"If you need a more dynamic configuration for the different tenants you want to support and don't want to end up with multiple\n"
"entries in your configuration file, you can use the `io.quarkus.oidc.TenantConfigResolver`."
msgstr "Si necesita una configuración más dinámica para los distintos inquilinos a los que quiere dar soporte y no quiere acabar con múltiples entradas en su archivo de configuración, puede utilizar el archivo `io.quarkus.oidc.TenantConfigResolver` ."

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "This interface allows you to dynamically create tenant configurations at runtime:"
msgstr "Esta interfaz permite crear dinámicamente configuraciones de inquilinos en tiempo de ejecución:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"The `OidcTenantConfig` returned by this method is the same one used to parse the `oidc` namespace configuration from the `application.properties`.\n"
"You can populate it by using any settings supported by the `quarkus-oidc` extension."
msgstr "El `OidcTenantConfig` devuelto por este método es el mismo que se utiliza para analizar la configuración del espacio de nombres `oidc` desde el `application.properties` . Puede rellenarlo utilizando cualquier configuración soportada por la extensión `quarkus-oidc` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "If the dynamic tenant resolver returns `null`, a <<static-tenant-resolution>> is attempted next."
msgstr "Si el solucionador dinámico de arrendatarios devuelve `null` , se intenta a continuación un <<static-tenant-resolution>> ."

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy, no-wrap
msgid "Static tenant configuration resolution"
msgstr "Desactivación de las configuraciones de los inquilinos"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"When you set multiple tenant configurations in the `application.properties` file, you only need to specify how the tenant identifier gets resolved.\n"
"To configure the resolution of the tenant identifier, use one of the following options:"
msgstr "Cuando establezca varias configuraciones de inquilinos en el archivo `application.properties` , sólo tendrá que especificar cómo se resuelve el identificador del inquilino. Para configurar la resolución del identificador de inquilino, utilice una de las siguientes opciones:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "<<tenant-resolver>>"
msgstr "<<tenant-resolver>>"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "<<configure-tenant-paths>>"
msgstr "<<configure-tenant-paths>>"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "<<default-tenant-resolver>>"
msgstr "<<default-tenant-resolver>>"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "<<issuer-based-tenant-resolver>>"
msgstr "<<issuer-based-tenant-resolver>>"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"These tenant resolution options are tried in the order they are listed until the tenant id gets resolved.\n"
"If the tenant id remains unresolved (`null`), the default (unnamed) tenant configuration is selected."
msgstr "Estas opciones de resolución de inquilinos se prueban en el orden en que aparecen en la lista hasta que se resuelve el id de inquilino. Si el id de inquilino sigue sin resolverse ( `null` ), se selecciona la configuración de inquilino por defecto (sin nombre)."

#. type: Title ===
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy, no-wrap
msgid "Resolve with `TenantResolver`"
msgstr "Resolver con `TenantResolver`"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The following `application.properties` example shows how you can resolve the tenant identifier of two tenants named `a` and `b` by using the `TenantResolver` method:"
msgstr "El siguiente ejemplo `application.properties` muestra cómo se puede resolver el identificador de inquilino de dos inquilinos llamados `a` y `b` utilizando el método `TenantResolver`:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "You can return the tenant id of either `a` or `b` from `io.quarkus.oidc.TenantResolver`:"
msgstr "Puede devolver el id de inquilino de `a` o `b` desde `io.quarkus.oidc.TenantResolver` :"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "In this example, the value of the last request path segment is a tenant id, but if required, you can implement a more complex tenant identifier resolution logic."
msgstr "En este ejemplo, el valor del último segmento de la ruta de solicitud es un identificador de inquilino, pero si es necesario, puede implementar una lógica de resolución de identificadores de inquilino más compleja."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Configure tenant paths"
msgstr "Configurar las rutas de los arrendatarios"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"You can use the `quarkus.oidc.tenant-paths` configuration property for resolving the tenant identifier as an alternative to using `io.quarkus.oidc.TenantResolver`.\n"
"Here is how you can select the `hr` tenant for the `sayHello` endpoint of the `HelloResource` resource used in the previous example:"
msgstr "Puede utilizar la propiedad de configuración `quarkus.oidc.tenant-paths` para resolver el identificador del arrendatario como alternativa al uso de `io.quarkus.oidc.TenantResolver` . He aquí cómo puede seleccionar el arrendatario `hr` para el punto final `sayHello` del recurso `HelloResource` utilizado en el ejemplo anterior:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Same path-matching rules apply as for the `quarkus.http.auth.permission.authenticated.paths=/api/hello` configuration property from the previous example."
msgstr "Se aplican las mismas reglas de coincidencia de rutas que para la propiedad de configuración `quarkus.http.auth.permission.authenticated.paths=/api/hello` del ejemplo anterior."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The wildcard placed at the end of the path represents any number of path segments. However the path is less specific than the `/api/hello`, therefore the `hr` tenant will be used to secure the `sayHello` endpoint."
msgstr "El comodín colocado al final de la ruta representa cualquier número de segmentos de ruta. Sin embargo, la ruta es menos específica que la de `/api/hello` , por lo que se utilizará el arrendatario `hr` para asegurar el punto final `sayHello` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The wildcard in the `/*/hello` represents exactly one path segment. Nevertheless, the wildcard is less specific than the `api`, therefore the `hr` tenant will be used."
msgstr "El comodín de `/*/hello` representa exactamente un segmento de ruta. No obstante, el comodín es menos específico que el `api` , por lo que se utilizará el `hr` inquilino."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Path-matching mechanism works exactly same as in the xref:security-authorize-web-endpoints-reference.adoc#authorization-using-configuration[Authorization using configuration]."
msgstr "El mecanismo de coincidencia de rutas funciona exactamente igual que en la xref:security-authorize-web-endpoints-reference.adoc#authorization-using-configuration[autorización mediante configuración] ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Use last request path segment as tenant id"
msgstr "Utilizar el último segmento de la ruta de solicitud como id de arrendatario"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The default resolution for a tenant identifier is convention based, whereby the authentication request must include the tenant identifier in the last segment of the request path."
msgstr "La resolución por defecto para un identificador de inquilino se basa en la convención, por lo que la solicitud de autenticación debe incluir el identificador de inquilino en el último segmento de la ruta de solicitud."

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The following `application.properties` example shows how you can configure two tenants named `google` and `github`:"
msgstr "El siguiente ejemplo `application.properties` muestra cómo configurar dos inquilinos denominados `google` y `github`:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"In the provided example, both tenants configure OIDC `web-app` applications to use an authorization code flow to authenticate users and require session cookies to be generated after authentication.\n"
"After Google or GitHub authenticates the current user, the user gets returned to the `/signed-in` area for authenticated users, such as a secured resource path on the JAX-RS endpoint."
msgstr "En el ejemplo proporcionado, ambos arrendatarios configuran las aplicaciones OIDC `web-app` para utilizar un flujo de código de autorización para autenticar a los usuarios y requieren que se generen cookies de sesión tras la autenticación. Después de que Google o GitHub autentiquen al usuario actual, se le devuelve a la zona `/signed-in` para usuarios autenticados, como una ruta de recursos segura en el punto final JAX-RS."

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Finally, to complete the default tenant resolution, set the following configuration property:"
msgstr "Por último, para completar la resolución de inquilinos por defecto, establezca la siguiente propiedad de configuración:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"If the endpoint is running on `http://localhost:8080`, you can also provide UI options for users to log in to either `http://localhost:8080/google` or `http://localhost:8080/github`, without having to add specific `/google` or `/github` JAX-RS resource paths.\n"
"Tenant identifiers are also recorded in the session cookie names after the authentication is completed.\n"
"Therefore, authenticated users can access the secured application area without requiring either the `google` or `github` path values to be included in the secured URL."
msgstr "Si el punto final se ejecuta en `http://localhost:8080` también puede proporcionar opciones de interfaz de usuario para que los usuarios inicien sesión en `http://localhost:8080/google` o `http://localhost:8080/github` , sin tener que añadir rutas de recursos JAX-RS específicas de `/google` o `/github` . Los identificadores del arrendatario también se registran en los nombres de las cookies de sesión una vez completada la autenticación. Por lo tanto, los usuarios autenticados pueden acceder a la zona segura de la aplicación sin necesidad de incluir los valores de las rutas `google` o `github` en la URL segura."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Default resolution can also work for Bearer token authentication.\n"
"Still, it might be less practical because a tenant identifier must always be set as the last path segment value."
msgstr "La resolución por defecto también puede funcionar para la autenticación con token de portador. Aun así, puede resultar menos práctico porque siempre debe establecerse un identificador de inquilino como último valor del segmento de ruta."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Resolve tenants with a token issuer claim"
msgstr "Resolver las reclamaciones de los arrendatarios con un emisor de fichas"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"OIDC tenants which support Bearer token authentication can be resolved using the access token's issuer.\n"
"The following conditions must be met for the issuer-based resolution to work:"
msgstr "Los inquilinos de OIDC que admiten la autenticación mediante token de portador pueden resolverse utilizando el emisor del token de acceso. Deben cumplirse las siguientes condiciones para que funcione la resolución basada en el emisor:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The access token must be in the JWT format and contain an issuer (`iss`) token claim."
msgstr "El token de acceso debe estar en formato JWT y contener una reivindicación de token de emisor ( `iss` )."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Only OIDC tenants with the application type `service` or `hybrid` are considered. These tenants must have a token issuer discovered or configured."
msgstr "Sólo se tienen en cuenta los arrendatarios OIDC con el tipo de aplicación `service` o `hybrid` . Estos inquilinos deben tener un emisor de tokens descubierto o configurado."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The issuer-based resolution is enabled with the `quarkus.oidc.resolve-tenants-with-issuer` property. For example:"
msgstr "La resolución basada en el emisor se activa con la propiedad `quarkus.oidc.resolve-tenants-with-issuer` . Por ejemplo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tenants `tenant-a` and `tenant-b` are resolved using a JWT access token's issuer `iss` claim value."
msgstr "Los inquilinos `tenant-a` y `tenant-b` se resuelven utilizando el valor de reclamación del emisor `iss` de un token de acceso JWT."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tenant `tenant-a` discovers the `issuer` from the OIDC provider's well-known configuration endpoint."
msgstr "El arrendatario `tenant-a` descubre el `issuer` desde el punto final de configuración conocido del proveedor de OIDC."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tenant `tenant-b` configures the `issuer` because its OIDC provider does not support the discovery."
msgstr "El arrendatario `tenant-b` configura el `issuer` porque su proveedor de OIDC no admite el descubrimiento."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tenant resolution for OIDC web-app applications"
msgstr "Resolución de inquilinos para aplicaciones web-app de OIDC"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Tenant resolution for the OIDC `web-app` applications must be done at least 3 times during an authorization code flow, when the OIDC tenant-specific configuration affects how each of the following steps is run."
msgstr "La resolución del arrendatario para las aplicaciones OIDC `web-app` debe realizarse al menos 3 veces durante un flujo de código de autorización, cuando la configuración específica del arrendatario OIDC afecte a cómo se ejecuta cada uno de los pasos siguientes."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Step 1: Unauthenticated user accesses an endpoint and is redirected to OIDC provider"
msgstr "Paso 1: Un usuario no autenticado accede a un punto final y es redirigido al proveedor de OIDC"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "When an unauthenticated user accesses a secured path, the user is redirected to the OIDC provider to authenticate and the tenant configuration is used to build the redirect URI."
msgstr "Cuando un usuario no autentificado accede a una ruta segura, el usuario es redirigido al proveedor OIDC para autentificarse y la configuración del inquilino se utiliza para construir el URI de redirección."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "All the static and dynamic tenant resolution options listed in the <<static-tenant-resolution>> and <<tenant-config-resolver>> sections can be used to resolve a tenant."
msgstr "Todas las opciones estáticas y dinámicas de resolución de inquilinos enumeradas en las secciones <<static-tenant-resolution>> y <<tenant-config-resolver>> pueden utilizarse para resolver un inquilino."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Step 2: The user is redirected back to the endpoint"
msgstr "Paso 2: El usuario es redirigido de nuevo al punto final"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "After the provider authentication, the user is redirected back to the Quarkus endpoint and the tenant configuration is used to complete the authorization code flow."
msgstr "Tras la autenticación del proveedor, el usuario es redirigido de nuevo al punto final de Quarkus y se utiliza la configuración del arrendatario para completar el flujo del código de autorización."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "All the static and dynamic tenant resolution options listed in the <<static-tenant-resolution>> and <<tenant-config-resolver>> sections can be used to resolve a tenant. Before the tenant resolution begins, the authorization code flow `state cookie` is used to set the already resolved tenant configuration id as a RoutingContext `tenant-id` attribute: both custom dynamic `TenantConfigResolver` and static `TenantResolver` tenant resolvers can check it."
msgstr "Todas las opciones de resolución de inquilinos estáticas y dinámicas enumeradas en las secciones <<static-tenant-resolution>> y <<tenant-config-resolver>> pueden utilizarse para resolver un inquilino. Antes de que comience la resolución de inquilinos, se utiliza el flujo de código de autorización `state cookie` para establecer el id de configuración del inquilino ya resuelto como atributo RoutingContext `tenant-id` : tanto los resolutores de inquilinos dinámicos personalizados `TenantConfigResolver` como los estáticos `TenantResolver` pueden comprobarlo."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Step 3: Authenticated user accesses the secured path using the session cookie"
msgstr "Paso 3: El usuario autenticado accede a la ruta segura utilizando la cookie de sesión"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The tenant configuration determines how the session cookie is verified and refreshed. Before the tenant resolution begins, the authorization code flow `session cookie` is used to set the already resolved tenant configuration id as a RoutingContext `tenant-id` attribute: both custom dynamic `TenantConfigResolver` and static `TenantResolver` tenant resolvers can check it."
msgstr "La configuración de inquilinos determina cómo se verifica y actualiza la cookie de sesión. Antes de que comience la resolución de inquilinos, se utiliza el flujo de código de autorización `session cookie` para establecer el id de configuración de inquilinos ya resuelto como un atributo RoutingContext `tenant-id` : tanto los resolutores de inquilinos dinámicos personalizados `TenantConfigResolver` como los estáticos `TenantResolver` pueden comprobarlo."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "For example, here is how a custom `TenantConfigResolver` can avoid creating the already resolved tenant configuration, that may otherwise require blocking reads from the database or other remote sources:"
msgstr "Por ejemplo, he aquí cómo un `TenantConfigResolver` personalizado puede evitar la creación de la configuración de inquilinos ya resuelta, que de otro modo podría requerir el bloqueo de lecturas de la base de datos o de otras fuentes remotas:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Let Quarkus use the already resolved tenant configuration if it has been resolved earlier."
msgstr "Deje que Quarkus utilice la configuración de inquilinos ya resuelta si se ha resuelto anteriormente."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Check the request path to create tenant configurations."
msgstr "Compruebe la ruta de solicitud para crear configuraciones de inquilinos."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The default configuration may look like this:"
msgstr "La configuración por defecto puede tener este aspecto:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "The preceding example assumes that the `tenant-a`, `tenant-b` and default tenants are all used to protect the same endpoint paths. In other words, after the user has authenticated with the `tenant-a` configuration, this user will not be able to choose to authenticate with the `tenant-b` or default configuration before this user logs out and has a session cookie cleared or expired."
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"The situation where multiple OIDC `web-app` tenants protect the tenant-specific paths is less typical and also requires an extra care.\n"
"When multiple OIDC `web-app` tenants such as `tenant-a`, `tenant-b` and default tenants are used to control access to the tenant specific paths, the users authenticated with one OIDC provider must not be able to access the paths requiring an authentication with another provider, otherwise the results can be unpredictable, most likely causing unexpected authentication failures.\n"
"For example, if the `tenant-a` authentication requires a Keycloak authentication and the `tenant-b` authentication requires an Auth0 authentication, then, if the `tenant-a` authenticated user attempts to access a path secured by the `tenant-b` configuration, then the session cookie will not be verified, since the Auth0 public verification keys can not be used to verify the tokens signed by Keycloak.\n"
"An easy, recommended way to avoid multiple `web-app` tenants conflicting with each other is to set the tenant specific session path as shown in the following example:"
msgstr "La situación en la que múltiples inquilinos OIDC `web-app` protegen las rutas específicas del inquilino es menos típica y también requiere un cuidado adicional. Cuando se utilizan varios inquilinos OIDC `web-app` como `tenant-a` , `tenant-b` y los inquilinos por defecto para controlar el acceso a las rutas específicas del inquilino, los usuarios autenticados con un proveedor OIDC no deben poder acceder a las rutas que requieran una autenticación con otro proveedor, ya que de lo contrario los resultados pueden ser impredecibles, provocando muy probablemente fallos de autenticación inesperados. Por ejemplo, si la autenticación `tenant-a` requiere una autenticación Keycloak y la autenticación `tenant-b` requiere una autenticación Auth0, entonces, si el usuario autenticado `tenant-a` intenta acceder a una ruta asegurada por la configuración `tenant-b` , entonces la cookie de sesión no será verificada, ya que las claves públicas de verificación Auth0 no pueden ser utilizadas para verificar los tokens firmados por Keycloak. Una forma fácil y recomendada de evitar que varios inquilinos de `web-app` entren en conflicto entre sí es configurar la ruta de sesión específica del inquilino como se muestra en el siguiente ejemplo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Set the tenant-specific cookie paths which makes sure the session cookie is only visible to the tenant which created it."
msgstr "Establezca las rutas de las cookies específicas del arrendatario, lo que garantiza que la cookie de sesión sólo sea visible para el arrendatario que la creó."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The default tenant configuration should be adjusted like this:"
msgstr "La configuración de inquilinos por defecto debe ajustarse así:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid ""
"Having the same session cookie path when multiple OIDC `web-app` tenants protect the tenant-specific paths is not recommended and should be avoided\n"
"as it requires even more care from the custom resolvers, for example:"
msgstr "Tener la misma ruta de cookies de sesión cuando varios inquilinos de OIDC `web-app` protegen las rutas específicas de los inquilinos no es recomendable y debe evitarse, ya que requiere aún más cuidado por parte de los resolvedores personalizados, por ejemplo:"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Let Quarkus use the already resolved tenant configuration if the already resolved tenant is expected for the current path."
msgstr "Deje que Quarkus utilice la configuración del inquilino ya resuelto si se espera el inquilino ya resuelto para la ruta actual."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Remove the `tenant-id` attribute if the already resolved tenant configuration is not expected for the current path."
msgstr "Elimine el atributo `tenant-id` si no se espera la configuración de inquilinos ya resuelta para la ruta actual."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Use the default tenant for all other paths. It is equivalent to removing the `tenant-id` attribute."
msgstr "Utilice el inquilino por defecto para el resto de rutas. Equivale a eliminar el atributo `tenant-id` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Disabling tenant configurations"
msgstr "Desactivación de las configuraciones de inquilinos"

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Custom `TenantResolver` and `TenantConfigResolver` implementations might return `null` if no tenant can be inferred from the current request and a fallback to the default tenant configuration is required."
msgstr "Las implementaciones personalizadas de `TenantResolver` y `TenantConfigResolver` podrían devolver `null` si no se puede inferir ningún inquilino a partir de la solicitud actual y se requiere un retorno a la configuración de inquilinos por defecto."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "If you expect the custom resolvers always to resolve a tenant, you do not need to configure the default tenant resolution."
msgstr "Si espera que los resolutores personalizados resuelvan siempre un arrendatario, no necesita configurar la resolución de arrendatarios por defecto."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "To turn off the default tenant configuration, set  `quarkus.oidc.tenant-enabled=false`."
msgstr "Para desactivar la configuración de inquilinos por defecto, configure `quarkus.oidc.tenant-enabled=false` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "The default tenant configuration is automatically disabled when `quarkus.oidc.auth-server-url` is not configured, but either custom tenant configurations are available or `TenantConfigResolver` is registered."
msgstr "La configuración de inquilinos por defecto se desactiva automáticamente cuando no se configura `quarkus.oidc.auth-server-url` , pero o bien se dispone de configuraciones de inquilinos personalizadas o bien se registra `TenantConfigResolver` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "Be aware that tenant-specific configurations can also be disabled, for example: `quarkus.oidc.tenant-a.tenant-enabled=false`."
msgstr "Tenga en cuenta que las configuraciones específicas de los inquilinos también pueden desactivarse, por ejemplo: `quarkus.oidc.tenant-a.tenant-enabled=false` ."

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "Programmatic OIDC start-up for multiple tenants"
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "Static OIDC tenants can be created programmatically like in the example below:"
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "Observe OIDC event."
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "Create OIDC tenant 'tenant-one'."
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "Create OIDC tenant 'tenant-two'."
msgstr ""

#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "The code above is a programmatic equivalent to the following configuration in the `application.properties` file:"
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr "link:security-oidc-configuration-properties-reference.html[Propiedades de configuración de OIDC]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Documentación de Keycloak]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[Token web JSON]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
#, fuzzy
msgid "https://developers.google.com/identity/protocols/OpenIDConnect[Google OpenID Connect]"
msgstr "link:https://developers.google.com/identity/protocols/OpenIDConnect[Google OpenID Connect]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-multitenancy.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
"xref:security-overview.adoc\n"
"[Visión general de Quarkus Security]"
