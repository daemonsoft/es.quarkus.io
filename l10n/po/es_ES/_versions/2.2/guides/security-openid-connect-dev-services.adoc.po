# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:6
#, no-wrap
msgid "Dev Services for OpenId Connect (OIDC)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:11
msgid "This guide covers the Dev Services for OpenId Connect (OIDC) Keycloak provider and explains how to support other OpenId Connect providers."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:12
#, fuzzy, no-wrap
msgid "Introduction"
msgstr "Introducción"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:15
msgid "Quarkus introduces an experimental `Dev Services For Keycloak` feature which is enabled by default when the `quarkus-oidc` extension is started in dev mode. It starts a Keycloak container and initializes it by registering the existing Keycloak realm or creating a new realm with the client and users for you to start developing your Quarkus application secured by Keycloak immediately. It will restart a container when the `application.properties` or the realm file changes have been detected."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:17
msgid "Additionally, link:dev-ui[Dev UI] available at http://localhost:8080/q/dev[/q/dev] supports this feature with a Keycloak specific page which helps to acquire the tokens from Keycloak and test your Quarkus application."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:18
#, fuzzy, no-wrap
msgid "Dev Services for Keycloak"
msgstr "Servicios de desarrollo para Keycloak"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:21
msgid "Start your application without configuring `quarkus.oidc` properties in `application.properties`. You will see in the console something similar to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:25
#, no-wrap
msgid "$ mvn quarkus:dev\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:34
#, no-wrap
msgid ""
"2021-06-04 16:22:47,175 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Creating container for image: quay.io/keycloak/keycloak:14.0.0\n"
"2021-06-04 16:22:47,243 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Starting container with ID: 6469f6db9cec2c855fcc6c8db4273944cc9d69e8f6803a0b47eb2d5b8f5b94fd\n"
"2021-06-04 16:22:47,629 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Container quay.io/keycloak/keycloak:14.0.0 is starting: 6469f6db9cec2c855fcc6c8db4273944cc9d69e8f6803a0b47eb2d5b8f5b94fd\n"
"2021-06-04 16:22:47,643 INFO  [org.tes.con.wai.str.HttpWaitStrategy] (build-38) /elastic_lovelace: Waiting for 60 seconds for URL: http://localhost:32812/auth (where port 32812 maps to container port 8080)\n"
"2021-06-04 16:23:07,665 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Container quay.io/keycloak/keycloak:14.0.0 started in PT5.500489S\n"
"...\n"
"2021-06-04 16:23:11,155 INFO  [io.quarkus] (Quarkus Main Thread) security-openid-connect-quickstart 1.0.0-SNAPSHOT on JVM (powered by Quarkus 999-SNAPSHOT) started in 25.968s. Listening on: http://localhost:8080\n"
"2021-06-04 16:23:11,157 INFO  [io.quarkus] (Quarkus Main Thread) Profile dev activated. Live Coding activated.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:37
msgid "The `quay.io/keycloak/keycloak:14.0.0` Keycloak image is used by default to start a container. `quarkus.keycloak.devservices.image-name` can be used to change the Keycloak image used."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:39
msgid "Now open the main link:http://localhost:8080/q/dev[Dev UI page] and you will see the `OpenId Connect Card` linking to a `Keycloak` page:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:40
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:54
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:58
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:78
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:98
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:108
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:128
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:142
#, no-wrap
msgid "Dev"
msgstr "Dev"

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:40
#, no-wrap
msgid "dev-ui-oidc-keycloak-card.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:43
#, fuzzy
msgid "Click on the `Provider: Keycloak` link and you will see a Keycloak page which will be presented slightly differently depending on how `Dev Services for Keycloak` feature has been configured."
msgstr "Haga clic en el enlace `Provider: Keycloak` y verá una página de Keycloak que se presentará de forma ligeramente diferente dependiendo de cómo se haya configurado la función `Dev Services for Keycloak` ."

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:44
#, no-wrap
msgid "Testing Service Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:47
msgid "By default the Keycloak page can be used to support the development of a link:security-openid-connect[Quarkus OIDC service application]."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:48
#, fuzzy, no-wrap
msgid "Authorization Code Grant"
msgstr "Código de Autorización Subvención"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:51
msgid "If you set `quarkus.keycloak.devservices.grant.type=code` in `applicatin.properties` (this is a default value) then an `authorization_code` grant will be used to acquire both access and ID tokens. Using this grant is recommended to emulate a typical flow where a `Single Page Application` acquires the tokens and uses them to access Quarkus services."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:53
#, fuzzy
msgid "First you will see an option to `Log into Single Page Application`:"
msgstr "Primero verá una opción para `Log into Single Page Application`:"

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:54
#, no-wrap
msgid "dev-ui-keycloak-sign-in-to-spa.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:57
#, fuzzy
msgid "Next, after you select this option, you will be redirected to Keycloak to authenticate, example, as `alice:alice` and then returned to the page representing the SPA:"
msgstr "A continuación, tras seleccionar esta opción, se le redirigirá a Keycloak para autenticarse, por ejemplo, como `alice:alice` y luego se le devolverá a la página que representa el SPA:"

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:58
#, no-wrap
msgid "dev-ui-keycloak-test-service-from-spa.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:61
msgid "Here you can test the service with either the access token or ID token (note that the ID token will be sent as a regular bearer token)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:63
msgid "Finally you can click a `Logged in` option if you'd like to log out and authenticate to Keycloak as a different user."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:68
msgid "You may need to register a redirect URI for the authorization code flow initiated by Dev UI for Keycloak to work.  Select a `Keycloak Admin` option in the right top corner, login as `admin:admin`, select the test realm and the client which Dev UI for Keycloak is configured with and add `http://localhost:8080/q/dev/io.quarkus.quarkus-oidc/provider` to `Valid Redirect URIs`."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:70
#, fuzzy, no-wrap
msgid "Implicit Grant"
msgstr "Subvención implícita"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:73
msgid "If you set `quarkus.keycloak.devservices.grant.type=implicit` in `applicatin.properties` then an `implicit` grant will be used to acquire both access and ID tokens. Use this grant for emulating a `Single Page Application` only if the authorization code grant does not work (for example, a client is configured in Keycloak to support an implicit grant, etc)."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:74
#, fuzzy, no-wrap
msgid "Password Grant"
msgstr "Concesión de la contraseña"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:77
msgid "If you set `quarkus.keycloak.devservices.grant.type=password` in `applicatin.properties` then you will see a screen like this one:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:78
#, no-wrap
msgid "dev-ui-keycloak-password-grant.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:81
msgid "Enter a registered user name, a relative service endpoint path, click on `Test Service` and you will see a status code such as `200`, `403`, `401` or `404` printed."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:83
#, fuzzy
msgid "You will also see in the Dev UI console something similar to:"
msgstr "También verás en la consola Dev UI algo similar a:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:90
#, no-wrap
msgid ""
"2021-07-19 17:58:11,407 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Using password grant to get a token from 'http://localhost:32818/auth/realms/quarkus/protocol/openid-connect/token' for user 'alice' in realm 'quarkus' with client id 'quarkus-app'\n"
"2021-07-19 17:58:11,533 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Test token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6Z2tDazJQZ1JaYnVlVG5kcTFKSW1sVnNoZ2hhbWhtbnBNcXU0QUt5MnJBIn0.ey...\n"
"2021-07-19 17:58:11,536 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Sending token to 'http://localhost:8080/api/admin'\n"
"2021-07-19 17:58:11,674 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Result: 200\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:93
#, fuzzy
msgid "A token is acquired from Keycloak using a `password` grant and is sent to the service endpoint."
msgstr "Se adquiere un token de Keycloak utilizando una concesión de `password` y se envía al punto final del servicio."

#. type: Title ====
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:94
#, fuzzy, no-wrap
msgid "Client Credentials Grant"
msgstr "Subvención de las credenciales de los clientes"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:97
msgid "If you set `quarkus.keycloak.devservices.grant.type=client` then a `client_credentials` grant will be used to acquire a token, with the page showing no `User` field in this case:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:98
#, no-wrap
msgid "dev-ui-keycloak-client-credentials-grant.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:101
#, fuzzy
msgid "You can test the service the same way as with the `Password` grant."
msgstr "Puede probar el servicio del mismo modo que con la subvención `Password` ."

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:102
#, no-wrap
msgid "Developing OpenId Connect Web App Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:105
msgid "If you develop a link:security-openid-connect-web-authentication[Quarkus OIDC web-app application] then you should set `quarkus.oidc.application-type=web-app` in `application.properties` before starting the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:107
#, fuzzy
msgid "You will see a screen like this one:"
msgstr "Verás una pantalla como ésta:"

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:108
#, no-wrap
msgid "dev-ui-keycloak-sign-in-to-service.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:111
#, fuzzy
msgid "Set a relative service endpoint path, click on `Sign In To Service` and you will be redirected to Keycloak to enter a username and password in a new browser tab and get a response from the Quarkus application."
msgstr "Establezca una ruta relativa del punto final del servicio, haga clic en `Sign In To Service` y será redirigido a Keycloak para introducir un nombre de usuario y una contraseña en una nueva pestaña del navegador y obtener una respuesta de la aplicación Quarkus."

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:112
#, fuzzy, no-wrap
msgid "Keycloak Initialization"
msgstr "Inicialización de Keycloak"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:115
msgid "You do not need to configure `quarkus-oidc-keycloak` to start developing your Quarkus Keycloak `OIDC` applications with the only exception being that `quarkus.oidc.application-type=web-app` has to be set in `application.properties` to give the `Keycloak` page a hint it needs to show an option to `Sign In To Service`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:117
#, fuzzy
msgid "By default, the `quarkus`, `quarkus-app` client with a `secret` password, `alice` and `bob` users (with the passwords matching the names), and `user` and `admin` roles are created, with `alice` given both `admin` and `user` roles and `bob` - the `user` role."
msgstr "Por defecto, se crea el cliente `quarkus`, `quarkus-app` con una contraseña `secret`, los usuarios `alice` y `bob` (con las contraseñas que coinciden con los nombres), y los roles `user` y `admin`, con `alice` que recibe los roles `admin` y `user` y `bob` - el rol `user`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:119
#, fuzzy
msgid "Usernames, secrets and their roles can be customized with `quarkus.keycloak.devservices.users` (the map which contains usernames and secrets) and `quarkus.keycloak.devservices.roles` (the map which contains user names and comma separated role values)."
msgstr "Los nombres de usuario, los secretos y sus roles pueden personalizarse con `quarkus.keycloak.devservices.users` (el mapa que contiene los nombres de usuario y los secretos) y `quarkus.keycloak.devservices.roles` (el mapa que contiene los nombres de usuario y los valores de los roles separados por comas)."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:121
#, fuzzy
msgid "`quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` can be used to customize the client id and secret."
msgstr "`quarkus.oidc.client-id` y `quarkus.oidc.credentials.secret` se pueden utilizar para personalizar el id y el secreto del cliente."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:123
#, fuzzy
msgid "However it is likely your Keycloak configuration may be more complex and require setting more properties."
msgstr "Sin embargo, es probable que su configuración de Keycloak sea más compleja y requiera establecer más propiedades."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:125
#, fuzzy
msgid "This is why `quarkus.keycloak.devservices.realm-path` is always checked first before trying to initialize Keycloak with the default or configured realm, client, user and roles properties. If the realm file exists on the file system or classpath then only this realm will be used to initialize Keycloak."
msgstr "Esta es la razón por la que `quarkus.keycloak.devservices.realm-path` siempre se comprueba primero antes de intentar inicializar Keycloak con las propiedades de dominio, cliente, usuario y roles predeterminados o configurados. Si el archivo de reino existe en el sistema de archivos o classpath, entonces sólo se utilizará este reino para inicializar Keycloak."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:127
#, fuzzy
msgid "Also the Keycloak page offers an option to `Sign In To Keycloak To Configure Realms` using a `Keycloak Admin` option in the right top corner:"
msgstr "También la página Keycloak ofrece una opción para `Sign In To Keycloak To Configure Realms` utilizando una opción `Keycloak Admin` en la esquina superior derecha:"

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:128
#, no-wrap
msgid "dev-ui-keycloak-admin.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:131
msgid "Sign in to Keycloak as `admin:admin` in order to further customize the realm properties or create a new realm, export the realm and have Keycloak initialized with the custom realm after a restart."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:133
msgid "Note that even if you initialize Keycloak from a realm file, it is still needed to set the `quarkus.keycloak.devservices.realm-name` property for `quarkus.oidc.auth-server-url` to be calculated correctly. Setting the `quarkus.keycloak.devservices.users` property is needed if a `password` grant is used to acquire the tokens to test the OIDC `service` applications."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:134
#, fuzzy, no-wrap
msgid "Disable Dev Services for Keycloak"
msgstr "Desactivar los servicios de desarrollo para Keycloak"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:137
msgid "`Dev Services For Keycloak` will not be activated if either `quarkus.oidc.auth-server-url` is already initialized or the defaut OIDC tenant is disabled with `quarkus.oidc.tenant.enabled=false`, irrespectively of whether you work with Keycloak or not."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:139
#, fuzzy
msgid "If you prefer not to have a `Dev Services for Keycloak` container started or do not work with Keycloak then you can also disable this feature with `quarkus.keycloak.devservices.enabled=false` - it will only be necessary if you expect to start `quarkus:dev` without `quarkus.oidc.auth-server-url`."
msgstr "Si prefiere no tener un contenedor `Dev Services for Keycloak` iniciado o no trabaja con Keycloak, también puede desactivar esta función con `quarkus.keycloak.devservices.enabled=false` - sólo será necesario si espera iniciar `quarkus:dev` sin `quarkus.oidc.auth-server-url`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:141
msgid "The main Dev UI page will include an empty `OpenId Connect Card` when `Dev Services for Keycloak` is disabled:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:142
#, no-wrap
msgid "dev-ui-oidc-card.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:144
#, no-wrap
msgid "Dev Services Support for other OpenId Connect Providers"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:147
msgid "Your custom extension would need to extend `quarkus-oidc` only and add the dependencies required to support your provider to the extension's `deployment` module only."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:149
msgid "The build step dealing with the `Dev Services` should additionally register two runtime properties into the \"io.quarkus.quarkus-oidc\" namespace: `oidcProviderName` (for example, `Google`) and `oidcProviderUrlBase` (for example: `mycompany.devservices-google`) for the `OpenId Connect Card` to link to the Dev UI page representing your provider, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:153
#, no-wrap
msgid "package io.quarkus.oidc.okta.runtime;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:155
#, no-wrap
msgid "import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:157
#, no-wrap
msgid "import io.quarkus.runtime.annotations.Recorder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:161
#, no-wrap
msgid ""
"// This simple recorder is the only code which will be located in the extension's `runtime` module\n"
"@Recorder\n"
"public class OktaDevServicesRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:164
#, no-wrap
msgid ""
"    public Supplier<String> getProviderName() {\n"
"        return new Supplier<String>() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:171
#, no-wrap
msgid ""
"            @Override\n"
"            public String get() {\n"
"                return \"OKTA\";\n"
"            }\n"
"        };\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:174
#, no-wrap
msgid ""
"    public Supplier<String> getProviderUrlBase() {\n"
"        return new Supplier<String>() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:182
#, no-wrap
msgid ""
"            @Override\n"
"            public String get() {\n"
"                return \"io.quarkus\" + \".\" + \"quarkus-oidc-okta\";\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:185
#, no-wrap
msgid "package io.quarkus.oidc.okta.deployment.devservices;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:187
#, no-wrap
msgid "import static io.quarkus.deployment.annotations.ExecutionTime.RUNTIME_INIT;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:189
#, no-wrap
msgid "import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:198
#, no-wrap
msgid ""
"import io.quarkus.deployment.IsDevelopment;\n"
"import io.quarkus.deployment.annotations.BuildProducer;\n"
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.annotations.Consume;\n"
"import io.quarkus.deployment.annotations.Record;\n"
"import io.quarkus.deployment.builditem.RuntimeConfigSetupCompleteBuildItem;\n"
"import io.quarkus.devconsole.spi.DevConsoleRouteBuildItem;\n"
"import io.quarkus.devconsole.spi.DevConsoleRuntimeTemplateInfoBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:200
#, no-wrap
msgid "public class OktaDevConsoleProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:214
#, no-wrap
msgid ""
"    @BuildStep(onlyIf = IsDevelopment.class)\n"
"    @Record(value = RUNTIME_INIT)\n"
"    public void setOidcProviderProperties(BuildProducer<DevConsoleRuntimeTemplateInfoBuildItem> provider,\n"
"            OktaDevServicesRecorder recorder,\n"
"            Optional<DevServicesConfigBuildItem> configProps) {\n"
"        if (configProps.isPresent()) {\n"
"            provider.produce(new DevConsoleRuntimeTemplateInfoBuildItem(\"io.quarkus\", \"quarkus-oidc\", \"oidcProviderName\",\n"
"                    recorder.getProviderName()));\n"
"            provider.produce(new DevConsoleRuntimeTemplateInfoBuildItem(\"io.quarkus\", \"quarkus-oidc\", \"oidcProviderUrlBase\",\n"
"                    recorder.getProviderUrlBase()));\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:218
#, fuzzy
msgid "Additionally, the extension should produce a `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` to disable the default `Dev Services for Keycloak`, instead of the users having to type `quarkus.keycloak.devservices.enabled=false`."
msgstr "Además, la extensión debería producir un `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` para desactivar la opción por defecto `Dev Services for Keycloak`, en lugar de que los usuarios tengan que escribir `quarkus.keycloak.devservices.enabled=false`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:220
msgid "Please follow the link:dev-ui[Dev UI] tutorial as well as check the `extensions/oidc/deployment` sources for more ideas."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:221
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:224
msgid "link:dev-ui[Dev UI]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:225
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Documentación de Keycloak]"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:226
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:227
msgid "link:security-openid-connect[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:228
msgid "link:security-openid-connect-web-authentication[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-dev-services.adoc:228
msgid "link:security[Quarkus Security]"
msgstr ""
