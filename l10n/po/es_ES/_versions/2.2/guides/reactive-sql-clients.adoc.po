# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:6
#, fuzzy, no-wrap
msgid "Reactive SQL Clients"
msgstr "Clientes SQL reactivos"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:13
#, fuzzy
msgid "The Reactive SQL Clients have a straightforward API focusing on scalability and low-overhead.  Currently, the following database servers are supported:"
msgstr "Los clientes SQL reactivos disponen de una API sencilla centrada en la escalabilidad y la baja sobrecarga. Actualmente, se soportan los siguientes servidores de bases de datos:"

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:15
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:477
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:706
#, fuzzy, no-wrap
msgid "DB2"
msgstr "DB2"

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:16
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:487
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:651
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:714
#, fuzzy, no-wrap
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:17
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:482
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:669
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:710
#, fuzzy, no-wrap
msgid "MariaDB/MySQL"
msgstr "MariaDB/MySQL"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:18
#, fuzzy
msgid "Microsoft SQL Server"
msgstr "Microsoft SQL Server"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:20
#, fuzzy
msgid "In this guide, you will learn how to implement a simple CRUD application exposing data stored in *PostgreSQL* over a RESTful API."
msgstr "En esta guía, aprenderá a implementar una aplicación CRUD sencilla que exponga datos almacenados en *PostgreSQL* a través de una API RESTful."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:22
#, fuzzy
msgid "Extension and connection pool class names for each client can be found at the bottom of this document."
msgstr "Los nombres de las clases de extensión y del pool de conexiones para cada cliente se encuentran al final de este documento."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:24
msgid "If you are not familiar with the Quarkus Vert.x extension, consider reading the link:vertx[Using Eclipse Vert.x] guide first."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:26
#, fuzzy
msgid "The application shall manage fruit entities:"
msgstr "La aplicación gestionará las entidades de la fruta:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:30
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:32
#, no-wrap
msgid "    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:34
#, no-wrap
msgid "    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:37
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:41
#, no-wrap
msgid ""
"    public Fruit(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:47
#, no-wrap
msgid ""
"    public Fruit(Long id, String name) {\n"
"        this.id = id;\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:52
#, fuzzy
msgid "Do you need a ready-to-use PostgreSQL server to try out the examples?"
msgstr "¿Necesita un servidor PostgreSQL listo para usar para probar los ejemplos?"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:56
#, no-wrap
msgid "docker run --ulimit memlock=-1:-1 -it --rm=true --memory-swappiness=0 --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:10.5\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:59
#, fuzzy, no-wrap
msgid "Installing"
msgstr "Instalación de"

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:61
#, fuzzy, no-wrap
msgid "Reactive PostgreSQL Client extension"
msgstr "Extensión de cliente PostgreSQL reactivo"

#. type: delimited block =
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:65
msgid "First, make sure your project has the `quarkus-reactive-pg-client` extension enabled.  If you are creating a new project, set the `extensions` parameter as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:75
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=reactive-pg-client-quickstart \\\n"
"    -DclassName=\"org.acme.vertx.FruitResource\" \\\n"
"    -Dpath=\"/fruits\" \\\n"
"    -Dextensions=\"resteasy,reactive-pg-client,resteasy-mutiny\"\n"
"cd reactive-pg-client-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:78
#, fuzzy
msgid "If you have an already created project, the `reactive-pg-client` extension can be added to an existing Quarkus project with the `add-extension` command:"
msgstr "Si tiene un proyecto ya creado, la extensión `reactive-pg-client` puede añadirse a un proyecto existente de Quarkus con el comando `add-extension`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:82
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"reactive-pg-client\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:85
msgid "Otherwise, you can manually add this to the dependencies section of your `pom.xml` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:92
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-reactive-pg-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:94
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motín"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:97
#, fuzzy
msgid "Reactive REST endpoints in your application that return Uni or Multi need `Mutiny support for RESTEasy` extension (`io.quarkus:quarkus-resteasy-mutiny`) to work properly:"
msgstr "Los puntos finales REST reactivos de su aplicación que devuelven Uni o Multi necesitan la extensión `Mutiny support for RESTEasy` ( `io.quarkus:quarkus-resteasy-mutiny` ) para funcionar correctamente:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:101
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"resteasy-mutiny\"\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:107
#, fuzzy
msgid "In this guide, we will use the Mutiny API of the Reactive PostgreSQL Client.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "En esta guía, utilizaremos la API Mutiny del Cliente PostgreSQL Reactivo. Si no está familiarizado con Mutiny, consulte xref:mutiny-primer.adoc[Mutiny - una biblioteca de programación reactiva intuitiva] ."

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:109
#, fuzzy, no-wrap
msgid "JSON Binding"
msgstr "Enlace JSON"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:113
#, fuzzy
msgid "We will expose `Fruit` instances over HTTP in the JSON format.  Consequently, you also need to add the `quarkus-resteasy-jackson` extension:"
msgstr "Expondremos instancias de `Fruit` a través de HTTP en formato JSON. En consecuencia, también deberá añadir la extensión `quarkus-resteasy-jackson` :"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:117
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"resteasy-jackson\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:120
msgid "If you prefer not to use the command line, manually add this to the dependencies section of your `pom.xml` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:127
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:130
#, fuzzy
msgid "Of course, this is only a requirement for this guide, not any application using the Reactive PostgreSQL Client."
msgstr "Por supuesto, esto es sólo un requisito para esta guía, no para cualquier aplicación que utilice el Cliente Reactivo PostgreSQL."

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:131
#, fuzzy, no-wrap
msgid "Configuring"
msgstr "Configuración de"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:134
#, fuzzy
msgid "The Reactive PostgreSQL Client can be configured with standard Quarkus datasource properties and a reactive URL:"
msgstr "El Cliente Reactivo PostgreSQL puede configurarse con las propiedades estándar de las fuentes de datos de Quarkus y una URL reactiva:"

#. type: Block title
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:136
#, fuzzy, no-wrap
msgid "src/main/resources/application.properties"
msgstr "src/main/resources/application.properties"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:142
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.reactive.url=postgresql://localhost:5432/quarkus_test\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:145
#, fuzzy
msgid "With that you may create your `FruitResource` skeleton and `@Inject` a `io.vertx.mutiny.pgclient.PgPool` instance:"
msgstr "Con esto puede crear su esqueleto `FruitResource` y `@Inject` una instancia de `io.vertx.mutiny.pgclient.PgPool`:"

#. type: Block title
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:147
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:166
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:263
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:316
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:343
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:375
#, fuzzy, no-wrap
msgid "src/main/java/org/acme/vertx/FruitResource.java"
msgstr "src/main/java/org/acme/vertx/FruitResource.java"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:151
#, no-wrap
msgid ""
"@Path(\"fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:155
#, no-wrap
msgid ""
"    @Inject\n"
"    io.vertx.mutiny.pgclient.PgPool client;\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:157
#, fuzzy, no-wrap
msgid "Database schema and seed data"
msgstr "Esquema de la base de datos y datos iniciales"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:161
msgid "Before we implement the REST endpoint and data management code, we need to setup the database schema.  It would also be convenient to have some data inserted upfront."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:164
msgid "For production we would recommend to use something like the link:flyway[Flyway database migration tool].  But for development we can simply drop and create the tables on startup, and then insert a few fruits."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:171
#, no-wrap
msgid ""
"@Inject\n"
"@ConfigProperty(name = \"myapp.schema.create\", defaultValue = \"true\") // <1>\n"
"boolean schemaCreate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:178
#, no-wrap
msgid ""
"@PostConstruct\n"
"void config() {\n"
"    if (schemaCreate) {\n"
"        initdb();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:182
#, no-wrap
msgid ""
"private void initdb() {\n"
"    // TODO\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:185
#, fuzzy
msgid "You may override the default value of the `myapp.schema.create` property in the `application.properties` file."
msgstr "Puede anular el valor por defecto de la propiedad `myapp.schema.create` en el archivo `application.properties`."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:189
#, fuzzy
msgid "Almost ready! To initialize the DB in development mode, we will use the client simple `query` method.  It returns a `Uni` and thus can be composed to execute queries sequentially:"
msgstr "¡Casi listo! Para inicializar la BD en modo de desarrollo, utilizaremos el método `query` simple del cliente. Devuelve un `Uni` y, por tanto, puede componerse para ejecutar consultas secuencialmente:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:198
#, no-wrap
msgid ""
"client.query(\"DROP TABLE IF EXISTS fruits\").execute()\n"
"    .flatMap(r -> client.query(\"CREATE TABLE fruits (id SERIAL PRIMARY KEY, name TEXT NOT NULL)\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Orange')\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Pear')\").execute())\n"
"    .flatMap(r -> client.query(\"INSERT INTO fruits (name) VALUES ('Apple')\").execute())\n"
"    .await().indefinitely();\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:201
#, no-wrap
msgid "Breaking Change in Quarkus 1.5"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:205
msgid "Vert.x 3.9, integrated in Quarkus 1.5, introduces a breaking change regarding the `query` methods.  To retrieve the result you need to call `.execute()`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:210
#, fuzzy
msgid "Wondering why we need block until the latest query is completed? This code is part of a `@PostConstruct` method and Quarkus invokes it synchronously.  As a consequence, returning prematurely could lead to serving requests while the database is not ready yet."
msgstr "¿Se pregunta por qué necesitamos bloquear hasta que se complete la última consulta? Este código forma parte de un método `@PostConstruct` y Quarkus lo invoca de forma sincrónica. Como consecuencia, retornar prematuramente podría llevar a servir peticiones cuando la base de datos aún no está lista."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:214
#, fuzzy
msgid "That's it! So far we have seen how to configure a pooled client and execute simple queries.  We are now ready to develop the data management code and implement our RESTful endpoint."
msgstr "Ya está. Hasta ahora hemos visto cómo configurar un cliente agrupado y ejecutar consultas sencillas. Ahora estamos listos para desarrollar el código de gestión de datos e implementar nuestro punto final RESTful."

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:215
#, fuzzy, no-wrap
msgid "Using"
msgstr "Utilizando"

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:217
#, fuzzy, no-wrap
msgid "Query results traversal"
msgstr "Recorrido de los resultados de la consulta"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:221
#, fuzzy
msgid "In development mode, the database is set up with a few rows in the `fruits` table.  To retrieve all the data, we will use the `query` method again:"
msgstr "En el modo de desarrollo, la base de datos está configurada con unas pocas filas en la tabla `fruits` . Para recuperar todos los datos, volveremos a utilizar el método `query` :"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:225
#, no-wrap
msgid "Uni<RowSet<Row>> rowSet = client.query(\"SELECT id, name FROM fruits ORDER BY name ASC\").execute();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:229
#, fuzzy
msgid "When the operation completes, we will get a `RowSet` that has all the rows buffered in memory.  A `RowSet` is an `java.lang.Iterable<Row>` and thus can be converted to a `Multi`:"
msgstr "Cuando la operación finalice, obtendremos un `RowSet` que tiene todas las filas almacenadas en memoria. Un `RowSet` es un `java.lang.Iterable<Row>` y, por tanto, puede convertirse en un `Multi` :"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:235
#, no-wrap
msgid ""
"Multi<Fruit> fruits = rowSet\n"
"  .onItem().transformToMulti(set -> Multi.createFrom().iterable(set))\n"
"  .onItem().transform(Fruit::from);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:239
#, fuzzy
msgid "The `Fruit#from` method converts a `Row` instance to a `Fruit` instance.  It is extracted as a convenience for the implementation of the other data management methods:"
msgstr "El método `Fruit#from` convierte una instancia `Row` en una instancia `Fruit` . Se extrae como una conveniencia para la implementación de los otros métodos de gestión de datos:"

#. type: Block title
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:241
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:251
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:301
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:332
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:363
#, fuzzy, no-wrap
msgid "src/main/java/org/acme/vertx/Fruit.java"
msgstr "src/main/java/org/acme/vertx/Fruit.java"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:246
#, no-wrap
msgid ""
"private static Fruit from(Row row) {\n"
"    return new Fruit(row.getLong(\"id\"), row.getString(\"name\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:249
#, fuzzy
msgid "Putting it all together, the `Fruit.findAll` method looks like:"
msgstr "Poniendo todo junto, el método `Fruit.findAll` parece:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:258
#, no-wrap
msgid ""
"public static Multi<Fruit> findAll(PgPool client) {\n"
"    return client.query(\"SELECT id, name FROM fruits ORDER BY name ASC\").execute()\n"
"            .onItem().transformToMulti(set -> Multi.createFrom().iterable(set))\n"
"            .onItem().transform(Fruit::from);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:261
#, fuzzy
msgid "And the endpoint to get all fruits from the backend:"
msgstr "Y el punto final para obtener todos los frutos del backend:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:269
#, no-wrap
msgid ""
"@GET\n"
"public Multi<Fruit> get() {\n"
"    return Fruit.findAll(client);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:272
msgid "Now start Quarkus in `dev` mode with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:276
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:279
#, fuzzy
msgid "Lastly, open your browser and navigate to http://localhost:8080/fruits, you should see:"
msgstr "Por último, abra su navegador y navegue hasta  http://localhost:8080/fruits  debería ver:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:283
#, no-wrap
msgid "[{\"id\":3,\"name\":\"Apple\"},{\"id\":1,\"name\":\"Orange\"},{\"id\":2,\"name\":\"Pear\"}]\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:285
#, fuzzy, no-wrap
msgid "Prepared queries"
msgstr "Consultas preparadas"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:288
#, fuzzy
msgid "The Reactive PostgreSQL Client can also prepare queries and take parameters that are replaced in the SQL statement at execution time:"
msgstr "El Cliente Reactivo PostgreSQL también puede preparar consultas y tomar parámetros que son reemplazados en la sentencia SQL en tiempo de ejecución:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:292
#, no-wrap
msgid "client.preparedQuery(\"SELECT id, name FROM fruits WHERE id = $1\").execute(Tuple.of(id))\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:296
#, fuzzy
msgid "For PostgreSQL, the SQL string can refer to parameters by position, using `$1`, `$2`, ...etc.  Please refer to the <<Database Clients details>> section for other databases."
msgstr "Para PostgreSQL, la cadena SQL puede referirse a los parámetros por posición, utilizando `$1` , `$2` , ...etc. Consulte la sección <<Database Clients details>> para otras bases de datos."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:299
#, fuzzy
msgid "Similar to the simple `query` method, `preparedQuery` returns an instance of `PreparedQuery<RowSet<Row>>`.  Equipped with this tooling, we are able to safely use an `id` provided by the user to get the details of a particular fruit:"
msgstr "De forma similar al método simple `query` , `preparedQuery` devuelve una instancia de `PreparedQuery<RowSet<Row>>` . Equipados con esta herramienta, podemos utilizar con seguridad un `id` proporcionado por el usuario para obtener los detalles de una fruta concreta:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:308
#, no-wrap
msgid ""
"public static Uni<Fruit> findById(PgPool client, Long id) {\n"
"    return client.preparedQuery(\"SELECT id, name FROM fruits WHERE id = $1\").execute(Tuple.of(id)) // <1>\n"
"            .onItem().transform(RowSet::iterator) // <2>\n"
"            .onItem().transform(iterator -> iterator.hasNext() ? from(iterator.next()) : null); // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:310
#, fuzzy
msgid "Create a `Tuple` to hold the prepared query parameters."
msgstr "Cree un `Tuple` para contener los parámetros de la consulta preparada."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:311
#, fuzzy
msgid "Get an `Iterator` for the `RowSet` result."
msgstr "Obtenga un `Iterator` para el resultado de `RowSet`."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:312
#, fuzzy
msgid "Create a `Fruit` instance from the `Row` if an entity was found."
msgstr "Crea una instancia de `Fruit` a partir de `Row` si se encuentra una entidad."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:314
#, fuzzy
msgid "And in the JAX-RS resource:"
msgstr "Y en el recurso JAX-RS"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:325
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"{id}\")\n"
"public Uni<Response> getSingle(@PathParam Long id) {\n"
"    return Fruit.findById(client, id)\n"
"            .onItem().transform(fruit -> fruit != null ? Response.ok(fruit) : Response.status(Status.NOT_FOUND)) // <1>\n"
"            .onItem().transform(ResponseBuilder::build); // <2>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:327
#, fuzzy
msgid "Prepare a JAX-RS response with either the `Fruit` instance if found or the `404` status code."
msgstr "Prepare una respuesta JAX-RS con la instancia `Fruit` si la encuentra o con el código de estado `404` ."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:328
#, fuzzy
msgid "Build and send the response."
msgstr "Construye y envía la respuesta."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:330
#, fuzzy
msgid "The same logic applies when saving a `Fruit`:"
msgstr "La misma lógica se aplica al guardar un `Fruit`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:338
#, no-wrap
msgid ""
"public Uni<Long> save(PgPool client) {\n"
"    return client.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\").execute(Tuple.of(name))\n"
"            .onItem().transform(pgRowSet -> pgRowSet.iterator().next().getLong(\"id\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:341
#, fuzzy
msgid "And in the web resource we handle the `POST` request:"
msgstr "Y en el recurso web gestionamos la solicitud `POST`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:351
#, no-wrap
msgid ""
"@POST\n"
"public Uni<Response> create(Fruit fruit) {\n"
"    return fruit.save(client)\n"
"            .onItem().transform(id -> URI.create(\"/fruits/\" + id))\n"
"            .onItem().transform(uri -> Response.created(uri).build());\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:353
#, fuzzy, no-wrap
msgid "Result metadata"
msgstr "Metadatos de resultados"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:356
#, fuzzy
msgid "A `RowSet` does not only hold your data in memory, it also gives you some information about the data itself, such as:"
msgstr "Un `RowSet` no sólo mantiene sus datos en la memoria, sino que también le da alguna información sobre los propios datos, como por ejemplo:"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:358
#, fuzzy
msgid "the number of rows affected by the query (inserted/deleted/updated/retrieved depending on the query type),"
msgstr "el número de filas afectadas por la consulta (insertadas/borradas/actualizadas/recuperadas según el tipo de consulta),"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:359
#, fuzzy
msgid "the column names."
msgstr "los nombres de las columnas."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:361
#, fuzzy
msgid "Let's use this to support removal of fruits in the database:"
msgstr "Utilicemos esto para apoyar la eliminación de frutas en la base de datos:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:369
#, no-wrap
msgid ""
"public static Uni<Boolean> delete(PgPool client, Long id) {\n"
"    return client.preparedQuery(\"DELETE FROM fruits WHERE id = $1\").execute(Tuple.of(id))\n"
"            .onItem().transform(pgRowSet -> pgRowSet.rowCount() == 1); // <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:371
#, fuzzy
msgid "Inspect metadata to determine if a fruit has been actually deleted."
msgstr "Inspeccionar los metadatos para determinar si una fruta ha sido realmente eliminada."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:373
#, fuzzy
msgid "And to handle the HTTP `DELETE` method in the web resource:"
msgstr "Y para manejar el método HTTP `DELETE` en el recurso web:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:384
#, no-wrap
msgid ""
"@DELETE\n"
"@Path(\"{id}\")\n"
"public Uni<Response> delete(@PathParam Long id) {\n"
"    return Fruit.delete(client, id)\n"
"            .onItem().transform(deleted -> deleted ? Status.NO_CONTENT : Status.NOT_FOUND)\n"
"            .onItem().transform(status -> Response.status(status).build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:388
#, fuzzy
msgid "With `GET`, `POST` and `DELETE` methods implemented, we may now create a minimal web page to try the RESTful application out.  We will use https://jquery.com/[jQuery] to simplify interactions with the backend:"
msgstr "Con los métodos `GET` , `POST` y `DELETE` implementados, ya podemos crear una página web mínima para probar la aplicación RESTful. Utilizaremos link:https://jquery.com/[jQuery] para simplificar las interacciones con el backend:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:401
#, no-wrap
msgid ""
"<!doctype html>\n"
"<html>\n"
"<head>\n"
"    <meta charset=\"utf-8\"/>\n"
"    <title>Reactive PostgreSQL Client - Quarkus</title>\n"
"    <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n"
"            integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\" crossorigin=\"anonymous\"></script>\n"
"    <script type=\"application/javascript\" src=\"fruits.js\"></script>\n"
"</head>\n"
"<body>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:403
#, no-wrap
msgid "<h1>Fruits API Testing</h1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:406
#, no-wrap
msgid ""
"<h2>All fruits</h2>\n"
"<div id=\"all-fruits\"></div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:411
#, no-wrap
msgid ""
"<h2>Create Fruit</h2>\n"
"<input id=\"fruit-name\" type=\"text\">\n"
"<button id=\"create-fruit-button\" type=\"button\">Create</button>\n"
"<div id=\"create-fruit\"></div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:414
#, no-wrap
msgid ""
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:417
#, fuzzy
msgid "In the Javascript code, we need a function to refresh the list of fruits when:"
msgstr "En el código Javascript, necesitamos una función que actualice la lista de frutas cuando:"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:419
#, fuzzy
msgid "the page is loaded, or"
msgstr "la página está cargada, o"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:420
#, fuzzy
msgid "a fruit is added, or"
msgstr "se añade una fruta, o"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:421
#, fuzzy
msgid "a fruit is deleted."
msgstr "se elimina una fruta."

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:446
#, no-wrap
msgid ""
"function refresh() {\n"
"    $.get('/fruits', function (fruits) {\n"
"        var list = '';\n"
"        (fruits || []).forEach(function (fruit) { // <1>\n"
"            list = list\n"
"                + '<tr>'\n"
"                + '<td>' + fruit.id + '</td>'\n"
"                + '<td>' + fruit.name + '</td>'\n"
"                + '<td><a href=\"#\" onclick=\"deleteFruit(' + fruit.id + ')\">Delete</a></td>'\n"
"                + '</tr>'\n"
"        });\n"
"        if (list.length > 0) {\n"
"            list = ''\n"
"                + '<table><thead><th>Id</th><th>Name</th><th></th></thead>'\n"
"                + list\n"
"                + '</table>';\n"
"        } else {\n"
"            list = \"No fruits in database\"\n"
"        }\n"
"        $('#all-fruits').html(list);\n"
"    });\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:450
#, no-wrap
msgid ""
"function deleteFruit(id) {\n"
"    $.ajax('/fruits/' + id, {method: 'DELETE'}).then(refresh);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:452
#, no-wrap
msgid "$(document).ready(function () {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:461
#, no-wrap
msgid ""
"    $('#create-fruit-button').click(function () {\n"
"        var fruitName = $('#fruit-name').val();\n"
"        $.post({\n"
"            url: '/fruits',\n"
"            contentType: 'application/json',\n"
"            data: JSON.stringify({name: fruitName})\n"
"        }).then(refresh);\n"
"    });\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:464
#, no-wrap
msgid ""
"    refresh();\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:466
#, fuzzy
msgid "The `fruits` parameter is not defined when the database is empty."
msgstr "El parámetro `fruits` no está definido cuando la base de datos está vacía."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:469
#, fuzzy
msgid "All done! Navigate to http://localhost:8080/fruits.html and read/create/delete some fruits."
msgstr "¡Todo hecho! Navegue a http://localhost:8080/fruits.html y lea/crea/elimine algunas frutas."

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:470
#, fuzzy, no-wrap
msgid "Database Clients details"
msgstr "Detalles de los clientes de la base de datos"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:474
#, fuzzy, no-wrap
msgid "Database"
msgstr "Base de datos"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:474
#, fuzzy, no-wrap
msgid "Extension name"
msgstr "Nombre de la extensión"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:474
#, fuzzy, no-wrap
msgid "Pool class name"
msgstr "Nombre de la clase de piscina"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:476
#, fuzzy, no-wrap
msgid "Placeholders"
msgstr "Marcadores de posición"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:478
#, fuzzy, no-wrap
msgid "`quarkus-reactive-db2-client`"
msgstr "`quarkus-kafka-client`"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:479
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.db2client.DB2Pool`"
msgstr "`io.vertx.mutiny.db2client.DB2Pool`"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:481
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:486
#, fuzzy, no-wrap
msgid "`?`"
msgstr "`?`"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:483
#, fuzzy, no-wrap
msgid "`quarkus-reactive-mysql-client`"
msgstr "`quarkus-mongo-client`"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:484
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.mysqlclient.MySQLPool`"
msgstr "`io.vertx.mutiny.mysqlclient.MySQLPool`"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:488
#, fuzzy, no-wrap
msgid "`quarkus-reactive-pg-client`"
msgstr "`quarkus-mongo-client`"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:489
#, fuzzy, no-wrap
msgid "`io.vertx.mutiny.pgclient.PgPool`"
msgstr "`io.vertx.mutiny.pgclient.PgPool`"

#. type: Table
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:490
#, fuzzy, no-wrap
msgid "`$1`, `$2`, etc."
msgstr "`$1`, `$2`, etc."

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:492
#, fuzzy, no-wrap
msgid "Transactions"
msgstr "Transacciones"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:497
msgid "The reactive SQL clients support transactions.  A transaction is started with `client.begin()` and terminated with either `tx.commit()` or `tx.rollback()`.  All these operations are asynchronous:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:499
msgid "`client.begin()` returns a `Uni<Transaction>`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:500
msgid "`client.commit()` and `client.rollback()` return `Uni<Void>`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:503
msgid "Managing transactions in the reactive programming world can be cumbersome.  Instead of writing repetitive and complex (thus error-prone!) code, you can use the `io.vertx.mutiny.sqlclient.SqlClientHelper`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:505
#, fuzzy
msgid "The following snippet shows how to run 2 insertions in the same transaction:"
msgstr "El siguiente fragmento muestra cómo ejecutar 2 inserciones en la misma transacción:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:514
#, no-wrap
msgid ""
"public static Uni<Void> insertTwoFruits(PgPool client, Fruit fruit1, Fruit fruit2) {\n"
"    return SqlClientHelper.inTransactionUni(client, tx -> {\n"
"        Uni<RowSet<Row>> insertOne = tx.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\")\n"
"                .execute(Tuple.of(fruit1.name));\n"
"        Uni<RowSet<Row>> insertTwo = tx.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING id\")\n"
"                .execute(Tuple.of(fruit2.name));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:520
#, no-wrap
msgid ""
"        return insertOne.and(insertTwo)\n"
"                // Ignore the results (the two ids)\n"
"                .onItem().ignore().andContinueWithNull();\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:523
#, fuzzy
msgid "In this example, the transaction is automatically committed on success or rolled back on failure."
msgstr "En este ejemplo, la transacción se consigna automáticamente en caso de éxito o se revierte en caso de fracaso."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:525
#, fuzzy
msgid "You can also create dependent actions as follows:"
msgstr "También puede crear acciones dependientes de la siguiente manera:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:529
#, no-wrap
msgid "return SqlClientHelper.inTransactionUni(client, tx -> tx\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:532
#, no-wrap
msgid ""
"        .preparedQuery(\"INSERT INTO person (firstname,lastname) VALUES ($1,$2) RETURNING id\")\n"
"                .execute(Tuple.of(person.getFirstName(), person.getLastName()))\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:535
#, no-wrap
msgid ""
"        .onItem().transformToUni(id -> tx.preparedQuery(\"INSERT INTO addr (person_id,addrline1) VALUES ($1,$2)\")\n"
"                .execute(Tuple.of(id.iterator().next().getLong(\"id\"), person.getLastName())))\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:537
#, no-wrap
msgid "        .onItem().ignore().andContinueWithNull());\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:539
#, fuzzy, no-wrap
msgid "Working with batch query results"
msgstr "Trabajar con los resultados de las consultas por lotes"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:543
#, fuzzy
msgid "When executing batch queries, reactive SQL clients return a `RowSet` that corresponds to the results of the first element in the batch.  To get the results of the following batch elements, you must invoke the `RowSet#next` method until it returns `null`."
msgstr "Al ejecutar consultas por lotes, los clientes SQL reactivos devuelven un `RowSet` que corresponde a los resultados del primer elemento del lote. Para obtener los resultados de los siguientes elementos del lote, debe invocar el método `RowSet#next` hasta que devuelva `null` ."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:546
#, fuzzy
msgid "Let's say you want to update some rows and compute the total number of affected rows.  You must inspect each `RowSet`:"
msgstr "Supongamos que desea actualizar algunas filas y calcular el número total de filas afectadas. Debe inspeccionar cada `RowSet` :"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:550
#, no-wrap
msgid "PreparedQuery<RowSet<Row>> preparedQuery = client.preparedQuery(\"UPDATE fruits SET name = $1 WHERE id = $2\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:555
#, no-wrap
msgid ""
"Uni<RowSet<Row>> rowSet = preparedQuery.executeBatch(Arrays.asList(\n"
"        Tuple.of(\"Orange\", 1),\n"
"        Tuple.of(\"Pear\", 2),\n"
"        Tuple.of(\"Apple\", 3)));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:563
#, no-wrap
msgid ""
"Uni<Integer> totalAffected = rowSet.onItem().transform(res -> {\n"
"    int total = 0;\n"
"    do {\n"
"        total += res.rowCount(); // <1>\n"
"    } while ((res = res.next()) != null); // <2>\n"
"    return total;\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:565
#, fuzzy
msgid "Compute the sum of `RowSet#rowCount`."
msgstr "Calcula la suma de `RowSet#rowCount`."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:566
#, fuzzy
msgid "Invoke `RowSet#next` until it returns `null`."
msgstr "Invoca `RowSet#next` hasta que devuelva `null`."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:568
#, fuzzy
msgid "As another example, if you want to load all the rows you just inserted, you must concatenate the contents of each `RowSet`:"
msgstr "Como otro ejemplo, si quiere cargar todas las filas que acaba de insertar, debe concatenar el contenido de cada `RowSet`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:572
#, no-wrap
msgid "PreparedQuery<RowSet<Row>> preparedQuery = client.preparedQuery(\"INSERT INTO fruits (name) VALUES ($1) RETURNING *\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:577
#, no-wrap
msgid ""
"Uni<RowSet<Row>> rowSet = preparedQuery.executeBatch(Arrays.asList(\n"
"        Tuple.of(\"Orange\"),\n"
"        Tuple.of(\"Pear\"),\n"
"        Tuple.of(\"Apple\")));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:592
#, no-wrap
msgid ""
"// Generate a Multi of RowSet items\n"
"Multi<RowSet<Row>> rowSets = rowSet.onItem().transformToMulti(res -> {\n"
"    return Multi.createFrom().generator(() -> res, (rs, emitter) -> {\n"
"        RowSet<Row> next = null;\n"
"        if (rs != null) {\n"
"            emitter.emit(rs);\n"
"            next = rs.next();\n"
"        }\n"
"        if (next == null) {\n"
"            emitter.complete();\n"
"        }\n"
"        return next;\n"
"    });\n"
"});\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:595
#, no-wrap
msgid ""
"// Transform each RowSet into Multi of Row items and Concatenate\n"
"Multi<Row> rows = rowSets.onItem().transformToMultiAndConcatenate(Multi.createFrom()::iterable);\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:597
#, fuzzy, no-wrap
msgid "Multiple Datasources"
msgstr "Múltiples fuentes de datos"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:600
#, fuzzy
msgid "The reactive SQL clients support defining several datasources."
msgstr "Los clientes SQL reactivos admiten la definición de varias fuentes de datos."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:602
#, fuzzy
msgid "A typical configuration with several datasources would look like:"
msgstr "Una configuración típica con varias fuentes de datos tendría el siguiente aspecto:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:609
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql <1>\n"
"quarkus.datasource.username=user-default\n"
"quarkus.datasource.password=password-default\n"
"quarkus.datasource.reactive.url=postgresql://localhost:5432/default\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:614
#, no-wrap
msgid ""
"quarkus.datasource.\"additional1\".db-kind=postgresql <2>\n"
"quarkus.datasource.\"additional1\".username=user-additional1\n"
"quarkus.datasource.\"additional1\".password=password-additional1\n"
"quarkus.datasource.\"additional1\".reactive.url=postgresql://localhost:5432/additional1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:619
#, no-wrap
msgid ""
"quarkus.datasource.\"additional2\".db-kind=mysql <3>\n"
"quarkus.datasource.\"additional2\".username=user-additional2\n"
"quarkus.datasource.\"additional2\".password=password-additional2\n"
"quarkus.datasource.\"additional2\".reactive.url=mysql://localhost:3306/additional2\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:621
#, fuzzy
msgid "The default datasource - using PostgreSQL."
msgstr "La fuente de datos por defecto - usando PostgreSQL."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:622
#, fuzzy
msgid "A named datasource called `additional1` - using PostgreSQL."
msgstr "Una fuente de datos con nombre llamada `additional1` - usando PostgreSQL."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:623
#, fuzzy
msgid "A named datasource called `additional2` - using MySQL."
msgstr "Una fuente de datos con nombre llamada `additional2` - usando MySQL."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:625
#, fuzzy
msgid "You can then inject the clients as follows:"
msgstr "A continuación, puede inyectar los clientes de la siguiente manera:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:630
#, no-wrap
msgid ""
"@Inject <1>\n"
"PgPool defaultClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:634
#, no-wrap
msgid ""
"@Inject\n"
"@ReactiveDataSource(\"additional1\") <2>\n"
"PgPool additional1Client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:638
#, no-wrap
msgid ""
"@Inject\n"
"@ReactiveDataSource(\"additional2\")\n"
"MySQLPool additional2Client;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:640
#, fuzzy
msgid "Injecting the client for the default datasource does not require anything special."
msgstr "Inyectar el cliente para la fuente de datos por defecto no requiere nada especial."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:641
#, fuzzy
msgid "For a named datasource, you use the `@ReactiveDataSource` CDI qualifier with the datasource name as its value."
msgstr "Para una fuente de datos con nombre, se utiliza el calificador CDI `@ReactiveDataSource` con el nombre de la fuente de datos como valor."

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:642
#, fuzzy, no-wrap
msgid "UNIX Domain Socket connections"
msgstr "Conexiones de socket de dominio UNIX"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:645
#, fuzzy
msgid "The PostgreSQL and MariaDB/MySQL clients can be configured to connect to the server through a UNIX domain socket."
msgstr "Los clientes PostgreSQL y MariaDB/MySQL pueden ser configurados para conectarse al servidor a través de un socket de dominio UNIX."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:647
msgid "First make sure that link:vertx-reference.adoc#native-transport[native transport support] is enabled."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:650
#, fuzzy
msgid "Then configure the database connection url.  This step depends on the database type."
msgstr "A continuación, configure la url de conexión a la base de datos. Este paso depende del tipo de base de datos."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:654
#, fuzzy
msgid "PostgresSQL domain socket paths have the following form: `<directory>/.s.PGSQL.<port>`"
msgstr "Las rutas de socket de dominio PostgresSQL tienen la siguiente forma: `<directory>/.s.PGSQL.<port>`"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:656
#, fuzzy
msgid "The database connection url must be configured so that:"
msgstr "La url de conexión a la base de datos debe estar configurada de forma que:"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:658
#, fuzzy
msgid "the `host` is the `directory` in the socket path"
msgstr "el `host` es el `directory` en la ruta de entrada"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:659
#, fuzzy
msgid "the `port` is the `port` in the socket path"
msgstr "el `port` es el `port` en la ruta de entrada"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:661
#, fuzzy
msgid "Consider the following socket path: `/var/run/postgresql/.s.PGSQL.5432`."
msgstr "Considere la siguiente ruta de socket: `/var/run/postgresql/.s.PGSQL.5432`."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:663
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:676
#, fuzzy
msgid "In `application.properties` add:"
msgstr "En `application.properties` añadir:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:667
#, no-wrap
msgid "quarkus.datasource.reactive.url=postgresql://:5432/quarkus_test?host=/var/run/postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:672
#, fuzzy
msgid "The database connection url must be configured so that the `host` is the socket path."
msgstr "La url de conexión a la base de datos debe configurarse de manera que la `host` sea la ruta del socket."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:674
#, fuzzy
msgid "Consider the following socket path: `/var/run/mysqld/mysqld.sock`."
msgstr "Considere la siguiente ruta de socket: `/var/run/mysqld/mysqld.sock`."

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:680
#, no-wrap
msgid "quarkus.datasource.reactive.url=mysql:///quarkus_test?host=/var/run/mysqld/mysqld.sock\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:682
#, fuzzy, no-wrap
msgid "Pooled Connection `idle-timeout`"
msgstr "Conexión mancomunada `idle-timeout`"

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:686
#, fuzzy
msgid "Reactive datasources can be configured with an `idle-timeout` (in milliseconds).  It is the maximum time a connection remains unused in the pool before it is closed."
msgstr "Las fuentes de datos reactivas pueden configurarse con un `idle-timeout` (en milisegundos). Es el tiempo máximo que una conexión permanece sin utilizar en el pool antes de cerrarse."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:688
#, fuzzy
msgid "The `idle-timeout` is disabled by default."
msgstr "La página `idle-timeout` está desactivada por defecto."

#. type: Plain text
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:690
#, fuzzy
msgid "For example, you could expire idle connections after 60 minutes:"
msgstr "Por ejemplo, puede hacer expirar las conexiones inactivas después de 60 minutos:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:694
#, no-wrap
msgid "quarkus.datasource.reactive.idle-timeout=PT60M\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:696
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:698
#, fuzzy, no-wrap
msgid "Common Datasource"
msgstr "Fuente de datos común"

#. type: Title ===
#: upstream/_versions/2.2/guides/reactive-sql-clients.adoc:702
#, fuzzy, no-wrap
msgid "Reactive Datasource"
msgstr "Fuente de datos reactiva"
