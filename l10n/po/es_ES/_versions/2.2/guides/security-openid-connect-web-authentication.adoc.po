# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:6
#, no-wrap
msgid "Using OpenID Connect (OIDC) to Protect Web Applications using Authorization Code Flow."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:12
msgid "This guide demonstrates how to use Quarkus OpenID Connect (OIDC) Extension to protect your Quarkus HTTP endpoints using OpenId Connect Authorization Code Flow supported by OpenId Connect compliant Authorization Servers such as https://www.keycloak.org/about.html[Keycloak]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:14
#, fuzzy
msgid "The extension allows to easily authenticate the users of your web application by redirecting them to the OpenID Connect Provider (e.g.: Keycloak) to login and, once the authentication is complete, return them back with the code confirming the successful authentication. The extension will request ID and access tokens from the OpenID Connect Provider using an authorization code grant and verify these tokens in order to authorize an access to the application."
msgstr "La extensión permite autenticar fácilmente a los usuarios de su aplicación web redirigiéndolos al Proveedor de OpenID Connect (por ejemplo: Keycloak) para iniciar sesión y, una vez completada la autenticación, devolverlos con el código que confirma la autenticación correcta. La extensión solicitará tokens de identificación y acceso al Proveedor de OpenID Connect mediante una concesión de código de autorización y verificará estos tokens para autorizar un acceso a la aplicación."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:16
msgid "Please read the link:security-openid-connect[Using OpenID Connect to Protect Service Applications] guide if you need to protect your applications using Bearer Token Authorization."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:18
msgid "Please read the link:security-openid-connect-multitenancy[Using OpenID Connect Multi-Tenancy] guide how to support multiple tenants."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:19
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:22
#, fuzzy
msgid "To complete this guide, you need:"
msgstr "Para completar esta guía, necesitas:"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:24
#, fuzzy
msgid "less than 15 minutes"
msgstr "menos de 15 minutos"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:25
#, fuzzy
msgid "an IDE"
msgstr "un IDE"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:26
#, fuzzy
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 11+ instalado con `JAVA_HOME` configurado adecuadamente"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:27
#, fuzzy
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {versión de Maven}"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:28
#, fuzzy
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[herramienta jq]"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:29
msgid "Docker"
msgstr "Docker"

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:30
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:33
#, fuzzy
msgid "In this example, we build a very simple web application with a single page:"
msgstr "En este ejemplo, construimos una aplicación web muy simple con una sola página:"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:35
#, fuzzy
msgid "`/index.html`"
msgstr "`/index.html`"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:37
#, fuzzy
msgid "This page is protected and can only be accessed by authenticated users."
msgstr "Esta página está protegida y sólo pueden acceder a ella los usuarios autentificados."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:38
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:42
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:44
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:46
#, fuzzy
msgid "The solution is located in the `security-openid-connect-web-authentication-quickstart` {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[directory]."
msgstr "La solución se encuentra en `security-openid-connect-web-authentication-quickstart` {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[directorio]."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:47
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:50
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:59
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=security-openid-connect-web-authentication-quickstart \\\n"
"    -Dextensions=\"resteasy,oidc\" \\\n"
"    -DnoExamples\n"
"cd security-openid-connect-web-authentication-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:63
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `oidc` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:67
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"oidc\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:70
#, fuzzy
msgid "This will add the following to your `pom.xml`:"
msgstr "Esto añadirá lo siguiente a su `pom.xml`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:77
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:79
#, fuzzy, no-wrap
msgid "Writing the application"
msgstr "Escribir la aplicación"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:82
#, fuzzy
msgid "Let's write a simple JAX-RS resource which has all the tokens returned in the authorization code grant response injected:"
msgstr "Escribamos un simple recurso JAX-RS que tenga inyectados todos los tokens devueltos en la respuesta de concesión de código de autorización:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:86
#, no-wrap
msgid "package org.acme.security.openid.connect.web.authentication;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:90
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:92
#, no-wrap
msgid "import org.eclipse.microprofile.jwt.JsonWebToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:95
#, no-wrap
msgid ""
"import io.quarkus.oidc.IdToken;\n"
"import io.quarkus.oidc.RefreshToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:98
#, no-wrap
msgid ""
"@Path(\"/tokens\")\n"
"public class TokenResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:105
#, no-wrap
msgid ""
"    /**\n"
"     * Injection point for the ID Token issued by the OpenID Connect Provider\n"
"     */\n"
"    @Inject\n"
"    @IdToken\n"
"    JsonWebToken idToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:111
#, no-wrap
msgid ""
"    /**\n"
"     * Injection point for the Access Token issued by the OpenID Connect Provider\n"
"     */\n"
"    @Inject\n"
"    JsonWebToken accessToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:117
#, no-wrap
msgid ""
"    /**\n"
"     * Injection point for the Refresh Token issued by the OpenID Connect Provider\n"
"     */\n"
"    @Inject\n"
"    RefreshToken refreshToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:129
#, no-wrap
msgid ""
"    /**\n"
"     * Returns the tokens available to the application. This endpoint exists only for demonstration purposes, you should not\n"
"     * expose these tokens in a real application.\n"
"     *\n"
"     * @return a map containing the tokens available to the application\n"
"     */\n"
"    @GET\n"
"    public String getTokens() {\n"
"        StringBuilder response = new StringBuilder().append(\"<html>\")\n"
"                .append(\"<body>\")\n"
"                .append(\"<ul>\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:131
#, no-wrap
msgid "        Object userName = this.idToken.getClaim(\"preferred_username\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:135
#, no-wrap
msgid ""
"        if (userName != null) {\n"
"            response.append(\"<li>username: \").append(userName.toString()).append(\"</li>\");\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:137
#, no-wrap
msgid "        Object scopes = this.accessToken.getClaim(\"scope\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:141
#, no-wrap
msgid ""
"        if (scopes != null) {\n"
"            response.append(\"<li>scopes: \").append(scopes.toString()).append(\"</li>\");\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:143
#, no-wrap
msgid "        response.append(\"<li>refresh_token: \").append(refreshToken.getToken() != null).append(\"</li>\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:147
#, no-wrap
msgid ""
"        return response.append(\"</ul>\").append(\"</body>\").append(\"</html>\").toString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:150
#, fuzzy
msgid "This endpoint has ID, access and refresh tokens injected. It returns a `preferred_username` claim from the ID token, a `scope` claim from the access token and also a refresh token availability status."
msgstr "Este punto final tiene inyectados tokens de identificación, acceso y actualización. Devuelve una reclamación `preferred_username` del token de identificación, una reclamación `scope` del token de acceso y también un estado de disponibilidad del token de actualización."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:152
#, fuzzy
msgid "Note that you do not have to inject the tokens - it is only required if the endpoint needs to use the ID token to interact with the currently authenticated user or use the access token to access a downstream service on behalf of this user."
msgstr "Tenga en cuenta que no tiene que inyectar los tokens - sólo es necesario si el punto final necesita utilizar el token de identificación para interactuar con el usuario actualmente autenticado o utilizar el token de acceso para acceder a un servicio posterior en nombre de este usuario."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:154
#, fuzzy
msgid "Please see <<access_id_and_access_tokens,Access ID and Access Tokens>> section below for more information."
msgstr "Para más información, consulte la sección  link:#access_id_and_access_tokens[ID de acceso y tokens de acceso]."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:155
#, fuzzy, no-wrap
msgid "Configuring the application"
msgstr "Configuración de la aplicación"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:158
#, fuzzy
msgid "The OpenID Connect extension allows you to define the configuration using the `application.properties` file which should be located at the `src/main/resources` directory."
msgstr "La extensión de OpenID Connect permite definir la configuración mediante el archivo `application.properties` que debe estar ubicado en el directorio `src/main/resources`."

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:159
#, no-wrap
msgid "Configuring using the application.properties file"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:168
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus\n"
"quarkus.oidc.client-id=frontend\n"
"quarkus.oidc.application-type=web-app\n"
"quarkus.http.auth.permission.authenticated.paths=/*\n"
"quarkus.http.auth.permission.authenticated.policy=authenticated\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:171
#, fuzzy
msgid "This is the simplest configuration you can have when enabling authentication to your application."
msgstr "Esta es la configuración más sencilla que puede tener al habilitar la autenticación en su aplicación."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:173
msgid "The `quarkus.oidc.client-id` property references the `client_id` issued by the OpenID Connect Provider and, in this case, the application is a public client (no client secret is defined)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:175
#, fuzzy
msgid "The `quarkus.oidc.application-type` property is set to `web-app` in order to tell Quarkus that you want to enable the OpenID Connect Authorization Code Flow, so that your users are redirected to the OpenID Connect Provider to authenticate."
msgstr "La propiedad `quarkus.oidc.application-type` se establece en `web-app` para indicar a Quarkus que desea habilitar el flujo de código de autorización de OpenID Connect, de modo que sus usuarios sean redirigidos al proveedor de OpenID Connect para autenticarse."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:178
msgid "For last, the `quarkus.http.auth.permission.authenticated` permission is set to tell Quarkus about the paths you want to protect. In this case, all paths are being protected by a policy that ensures that only `authenticated` users are allowed to access. For more details check link:security-authorization[Security Authorization Guide]."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:179
#, no-wrap
msgid "Configuring CORS"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:182
msgid "If you plan to consume this application from another application running on a different domain, you will need to configure CORS (Cross-Origin Resource Sharing). Please read the link:http-reference#cors-filter[HTTP CORS documentation] for more details."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:183
#, fuzzy, no-wrap
msgid "Starting and Configuring the Keycloak Server"
msgstr "Inicio y configuración del servidor Keycloak"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:186
#, fuzzy
msgid "To start a Keycloak Server you can use Docker and just run the following command:"
msgstr "Para iniciar un servidor de Keycloak puede utilizar Docker y simplemente ejecutar el siguiente comando:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:190
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -p 8180:8080 {keycloak-docker-image}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:193
#, fuzzy
msgid "You should be able to access your Keycloak Server at http://localhost:8180/auth[localhost:8180/auth]."
msgstr "Debería poder acceder a su servidor Keycloak en link:http://localhost:8180/auth[localhost:8180/auth] ."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:195
#, fuzzy
msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
msgstr "Inicie sesión como el usuario `admin` para acceder a la consola de administración de Keycloak. El nombre de usuario debe ser `admin` y la contraseña `admin`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:197
#, fuzzy
msgid "Import the {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm. For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "Importe el archivo {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[archivo de configuración del reino] para crear un nuevo reino. Para más detalles, consulte la documentación de Keycloak sobre cómo  link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[crear un] nuevo dominio."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:198
#, fuzzy, no-wrap
msgid "Running and Using the Application"
msgstr "Ejecución y uso de la aplicación"

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:200
#, fuzzy, no-wrap
msgid "Running in Developer Mode"
msgstr "Ejecución en modo desarrollador"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:203
msgid "To run the microservice in dev mode, use `./mvnw clean compile quarkus:dev`."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:204
#, fuzzy, no-wrap
msgid "Running in JVM Mode"
msgstr "Ejecución en modo JVM"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:207
#, fuzzy
msgid "When you're done playing with \"dev-mode\" you can run it as a standard Java application."
msgstr "Cuando haya terminado de jugar con el \"modo dev\" podrá ejecutarlo como una aplicación Java estándar."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:209
#, fuzzy
msgid "First compile it:"
msgstr "Primero compilarlo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:213
#, no-wrap
msgid "./mvnw package\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:216
#, fuzzy
msgid "Then run it:"
msgstr "Entonces, ejecútalo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:220
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:222
#, fuzzy, no-wrap
msgid "Running in Native Mode"
msgstr "Ejecución en modo nativo"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:225
#, fuzzy
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "Esta misma demo se puede compilar en código nativo: no requiere modificaciones."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:229
#, fuzzy
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "Esto implica que ya no es necesario instalar una JVM en su entorno de producción, ya que la tecnología de tiempo de ejecución está incluida en el binario producido, y optimizada para ejecutarse con una sobrecarga mínima de recursos."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:232
#, fuzzy
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build again by enabling the `native` profile:"
msgstr "La compilación tardará un poco más, por lo que este paso está desactivado por defecto; volvamos a compilar activando el perfil `native`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:236
#, no-wrap
msgid "./mvnw package -Pnative\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:239
#, fuzzy
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "Después de tomar una taza de café, podrás ejecutar este binario directamente:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:243
#, no-wrap
msgid "./target/security-openid-connect-web-authentication-quickstart-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:245
#, fuzzy, no-wrap
msgid "Testing the Application"
msgstr "Probar la aplicación"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:248
#, fuzzy
msgid "To test the application, you should open your browser and access the following URL:"
msgstr "Para probar la aplicación, debe abrir su navegador y acceder a la siguiente URL:"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:250
#, fuzzy
msgid "http://localhost:8080[http://localhost:8080]"
msgstr "http://localhost:8080"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:252
#, fuzzy
msgid "If everything is working as expected, you should be redirected to the Keycloak server to authenticate."
msgstr "Si todo funciona como se espera, debería ser redirigido al servidor de Keycloak para autenticarse."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:254
#, fuzzy
msgid "In order to authenticate to the application you should type the following credentials when at the Keycloak login page:"
msgstr "Para autenticarse en la aplicación debe introducir las siguientes credenciales cuando se encuentre en la página de inicio de sesión de Keycloak:"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:256
#, fuzzy
msgid "Username: *alice*"
msgstr "Nombre de usuario: *alice*"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:257
#, fuzzy
msgid "Password: *alice*"
msgstr "Contraseña: *alice*"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:259
#, fuzzy
msgid "After clicking the `Login` button you should be redirected back to the application."
msgstr "Después de hacer clic en el botón `Login` debería ser redirigido de nuevo a la aplicación."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:260
#, fuzzy, no-wrap
msgid "Redirection"
msgstr "Redirección"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:263
#, fuzzy
msgid "When the user is redirected to the OpenID Connect Provider to authenticate, the redirect URL includes a `redirect_uri` query parameter which indicates to the Provider where the user has to be redirected to once the authentication has been completed."
msgstr "Cuando el usuario es redirigido al proveedor de OpenID Connect para autenticarse, la URL de redirección incluye un parámetro de consulta `redirect_uri` que indica al proveedor a dónde debe ser redirigido el usuario una vez completada la autenticación."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:265
#, fuzzy
msgid "Quarkus will set this parameter to the current request URL by default. For example, if the user is trying to access a Quarkus service endpoint at `http://localhost:8080/service/1` then the `redirect_uri` parameter will be set to `http://localhost:8080/service/1`. Similarly, if the request URL is `http://localhost:8080/service/2` then the `redirect_uri` parameter will be set to `http://localhost:8080/service/2`, etc."
msgstr "Quarkus establecerá este parámetro en la URL de solicitud actual por defecto. Por ejemplo, si el usuario está intentando acceder a un punto final de servicio de Quarkus en `&lt;a href=\"http://localhost:8080/service/1\" class=\"bare\"&gt;http://localhost:8080/service/1&lt;/a&gt;` entonces el parámetro `redirect_uri` se establecerá en `&lt;a href=\"http://localhost:8080/service/1\" class=\"bare\"&gt;http://localhost:8080/service/1&lt;/a&gt;`. Del mismo modo, si la URL de la solicitud es `&lt;a href=\"http://localhost:8080/service/2\" class=\"bare\"&gt;http://localhost:8080/service/2&lt;/a&gt;` entonces el parámetro `redirect_uri` se establecerá en `&lt;a href=\"http://localhost:8080/service/2\" class=\"bare\"&gt;http://localhost:8080/service/2&lt;/a&gt;`etc."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:268
#, fuzzy
msgid "OpenID Connect Providers may be configured to require the `redirect_uri` parameter to have the same value (eg. `http://localhost:8080/service/callback`) for all the redirect URLs.  In such cases a `quarkus.oidc.authentication.redirect-path` property has to be set, for example, `quarkus.oidc.authentication.redirect-path=/service/callback`, and Quarkus will set the `redirect_uri` parameter to an absolute URL such as `http://localhost:8080/service/callback` which will be the same regardless of the current request URL."
msgstr "Los proveedores de OpenID Connect pueden configurarse para exigir que el parámetro `redirect_uri` tenga el mismo valor (por ejemplo. `http://localhost:8080/service/callback` ) para todas las URL de redirección. En tales casos hay que establecer una propiedad `quarkus.oidc.authentication.redirect-path` , por ejemplo, `quarkus.oidc.authentication.redirect-path=/service/callback` , y Quarkus establecerá el parámetro `redirect_uri` en una URL absoluta como `http://localhost:8080/service/callback` que será la misma independientemente de la URL de solicitud actual."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:270
#, fuzzy
msgid "If `quarkus.oidc.authentication.redirect-path` is set but the original request URL has to be restored after the user has been redirected back to a callback URL such as `http://localhost:8080/service/callback` then a `quarkus.oidc.authentication.restore-path-after-redirect` property has to be set to `true` which will restore the request URL such as `http://localhost:8080/service/1`, etc."
msgstr "Si se establece `quarkus.oidc.authentication.redirect-path` pero se debe restaurar la URL original de la solicitud después de que el usuario haya sido redirigido de nuevo a una URL de devolución de llamada como `&lt;a href=\"http://localhost:8080/service/callback\" class=\"bare\"&gt;http://localhost:8080/service/callback&lt;/a&gt;` entonces la propiedad `quarkus.oidc.authentication.restore-path-after-redirect` debe establecerse en `true`, que restaurará la URL de la solicitud como `&lt;a href=\"http://localhost:8080/service/1\" class=\"bare\"&gt;http://localhost:8080/service/1&lt;/a&gt;`etc."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:272
#, fuzzy, no-wrap
msgid "Dealing with Cookies"
msgstr "Cómo tratar con las cookies"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:275
#, fuzzy
msgid "The OIDC adapter uses cookies to keep the session, code flow and post logout state."
msgstr "El adaptador OIDC utiliza cookies para mantener la sesión, el flujo de código y el estado posterior al cierre de sesión."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:277
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-path` property is used to ensure the cookies are visible especially when you access the protected resources with overlapping or different roots, for example:"
msgstr "`quarkus.oidc.authentication.cookie-path` se utiliza para garantizar que las cookies sean visibles, especialmente cuando se accede a los recursos protegidos con raíces superpuestas o diferentes, por ejemplo:"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:279
#, fuzzy
msgid "`/index.html` and `/web-app/service`"
msgstr "`/index.html` y `/web-app/service`"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:280
#, fuzzy
msgid "`/web-app/service1` and `/web-app/service2`"
msgstr "`/web-app/service1` y `/web-app/service2`"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:281
#, fuzzy
msgid "`/web-app1/service` and `/web-app2/service`"
msgstr "`/web-app1/service` y `/web-app2/service`"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:283
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-path` is set to `/` by default but can be narrowed to the more specific root path such as `/web-app`."
msgstr "`quarkus.oidc.authentication.cookie-path` se establece en `/` por defecto, pero puede limitarse a la ruta raíz más específica, como `/web-app`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:286
#, fuzzy
msgid "You can also set a `quarkus.oidc.authentication.cookie-path-header` property if the cookie path needs to be set dynamically.  For example, setting `quarkus.oidc.authentication.cookie-path-header=X-Forwarded-Prefix` means that the value of HTTP `X-Forwarded-Prefix` header will be used to set a cookie path."
msgstr "También puede establecer una propiedad `quarkus.oidc.authentication.cookie-path-header` si la ruta de la cookie necesita establecerse dinámicamente. Por ejemplo, establecer `quarkus.oidc.authentication.cookie-path-header=X-Forwarded-Prefix` significa que se utilizará el valor de la cabecera HTTP `X-Forwarded-Prefix` para establecer una ruta de cookies."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:288
#, fuzzy
msgid "If `quarkus.oidc.authentication.cookie-path-header` is set but no configured HTTP header is available in the current request then the `quarkus.oidc.authentication.cookie-path` will be checked."
msgstr "Si `quarkus.oidc.authentication.cookie-path-header` está configurado pero no hay ninguna cabecera HTTP configurada en la solicitud actual, se comprobará `quarkus.oidc.authentication.cookie-path`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:290
#, fuzzy
msgid "If your application is deployed across multiple domains, make sure to set a `quarkus.oidc.authentication.cookie-domain` property for the session cookie be visible to all protected Quarkus services, for example, if you have 2 services deployed at:"
msgstr "Si su aplicación se despliega a través de múltiples dominios, asegúrese de establecer una propiedad `quarkus.oidc.authentication.cookie-domain` para que la cookie de sesión sea visible para todos los servicios Quarkus protegidos, por ejemplo, si tiene 2 servicios desplegados en:"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:292
#, fuzzy
msgid "https://whatever.wherever.company.net/"
msgstr "https://whatever.wherever.company.net/"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:293
#, fuzzy
msgid "https://another.address.company.net/"
msgstr "https://another.address.company.net/"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:295
#, fuzzy
msgid "then the `quarkus.oidc.authentication.cookie-domain` property must be set to `company.net`."
msgstr "entonces la propiedad `quarkus.oidc.authentication.cookie-domain` debe establecerse en `company.net`."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:296
#, fuzzy, no-wrap
msgid "Logout"
msgstr "Cierre de sesión"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:299
#, fuzzy
msgid "By default the logout is based on the expiration time of the ID Token issued by the OpenID Connect Provider. When the ID Token expires, the current user session at the Quarkus endpoint is invalidated and the user is redirected to the OpenID Connect Provider again to authenticate. If the session at the OpenID Connect Provider is still active, users are automatically re-authenticated without having to provide their credentials again."
msgstr "Por defecto, el cierre de sesión se basa en la hora de caducidad del token de identificación emitido por el proveedor de OpenID Connect. Cuando el token de identificación caduca, la sesión actual del usuario en el punto final de Quarkus se invalida y el usuario es redirigido de nuevo al proveedor de OpenID Connect para autenticarse. Si la sesión en el Proveedor de OpenID Connect sigue activa, los usuarios se vuelven a autenticar automáticamente sin tener que proporcionar de nuevo sus credenciales."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:301
#, fuzzy
msgid "The current user session may be automatically extended by enabling a `quarkus.oidc.token.refresh-expired` property. If it is set to `true` then when the current ID Token expires a Refresh Token Grant will be used to refresh ID Token as well as Access and Refresh Tokens."
msgstr "La sesión de usuario actual puede extenderse automáticamente habilitando la propiedad `quarkus.oidc.token.refresh-expired`. Si se establece en `true`, cuando caduque el token de identificación actual se utilizará una concesión de token de actualización para actualizar el token de identificación, así como los tokens de acceso y actualización."

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:302
#, fuzzy, no-wrap
msgid "User-Initiated Logout"
msgstr "Cierre de sesión iniciado por el usuario"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:306
#, fuzzy
msgid "Users can request a logout by sending a request to the Quarkus endpoint logout path set with a `quarkus.oidc.logout.path` property.  For example, if the endpoint address is `https://application.com/webapp` and the `quarkus.oidc.logout.path` is set to \"/logout\" then the logout request has to be sent to `https://application.com/webapp/logout`."
msgstr "Los usuarios pueden solicitar un cierre de sesión enviando una solicitud a la ruta de cierre de sesión del punto final de Quarkus establecida con una propiedad `quarkus.oidc.logout.path`. Por ejemplo, si la dirección del punto final es `&lt;a href=\"https://application.com/webapp\" class=\"bare\"&gt;https://application.com/webapp&lt;/a&gt;` y el `quarkus.oidc.logout.path` se establece en \"/logout\", entonces la solicitud de cierre de sesión debe enviarse a `&lt;a href=\"https://application.com/webapp/logout\" class=\"bare\"&gt;https://application.com/webapp/logout&lt;/a&gt;`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:308
#, fuzzy
msgid "This logout request will start an https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP-Initiated Logout] and the user will be redirected to the OpenID Connect Provider to logout where a user may be asked to confirm the logout is indeed intended."
msgstr "Esta solicitud de cierre de sesión iniciará un  link:https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[cierre de sesión iniciado por el RP] y el usuario será redirigido al proveedor de OpenID Connect para cerrar sesión, donde se le puede pedir al usuario que confirme que el cierre de sesión es realmente intencionado."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:310
#, fuzzy
msgid "The user will be returned to the endpoint post logout page once the logout has been completed if the `quarkus.oidc.logout.post-logout-path` property is set. For example, if the endpoint address is `https://application.com/webapp` and the `quarkus.oidc.logout.post-logout-path` is set to \"/signin\" then the user will be returned to `https://application.com/webapp/signin` (note this URI must be registered as a valid `post_logout_redirect_uri` in the OpenID Connect Provider)."
msgstr "El usuario será devuelto a la página de post cierre de sesión del endpoint una vez que el cierre de sesión se haya completado si la propiedad `quarkus.oidc.logout.post-logout-path` está establecida. Por ejemplo, si la dirección del endpoint es `&lt;a href=\"https://application.com/webapp\" class=\"bare\"&gt;https://application.com/webapp&lt;/a&gt;` y la propiedad `quarkus.oidc.logout.post-logout-path` está configurada como \"/signin\", el usuario será devuelto a la página `&lt;a href=\"https://application.com/webapp/signin\" class=\"bare\"&gt;https://application.com/webapp/signin&lt;/a&gt;` (tenga en cuenta que este URI debe estar registrado como un `post_logout_redirect_uri` válido en el proveedor de OpenID Connect)."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:312
#, fuzzy
msgid "If the `quarkus.oidc.logout.post-logout-path` is set then a `q_post_logout` cookie will be created and a matching `state` query parameter will be added to the logout redirect URI and the OpenID Connect Provider will return this `state` once the logout has been completed. It is recommended for the Quarkus `web-app` applications to check that a `state` query parameter matches the value of the `q_post_logout` cookie which can be done for example in a JAX-RS filter."
msgstr "Si se establece `quarkus.oidc.logout.post-logout-path`, se creará una cookie `q_post_logout` y se añadirá un parámetro de consulta `state` que coincida con el URI de redirección de cierre de sesión y el proveedor de OpenID Connect devolverá este `state` una vez que se haya completado el cierre de sesión. Se recomienda que las aplicaciones de Quarkus `web-app` comprueben que un parámetro de consulta `state` coincide con el valor de la cookie `q_post_logout`, lo que puede hacerse, por ejemplo, en un filtro JAX-RS."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:314
msgid "Note that a cookie name will vary when using link:security-openid-connect-multitenancy[OpenID Connect Multi-Tenancy]. For example, it will be named `q_post_logout_tenant_1` for a tenant with a `tenant_1` id, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:316
#, fuzzy
msgid "Here is an example of how to configure an RP initiated logout flow:"
msgstr "A continuación se muestra un ejemplo de cómo configurar un flujo de cierre de sesión iniciado por el RP:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:322
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus\n"
"quarkus.oidc.client-id=frontend\n"
"quarkus.oidc.application-type=web-app\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:325
#, no-wrap
msgid ""
"quarkus.oidc.tenant-logout.logout.path=/logout\n"
"quarkus.oidc.tenant-logout.logout.post-logout-path=/postlogout\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:329
#, no-wrap
msgid ""
"# Only the authenticated users can initiate a logout:\n"
"quarkus.http.auth.permission.authenticated.paths=/logout\n"
"quarkus.http.auth.permission.authenticated.policy=authenticated\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:333
#, no-wrap
msgid ""
"# Logged out users should be returned to the /welcome.html site which will offer an option to re-login:\n"
"quarkus.http.auth.permission.authenticated.paths=/welcome.html\n"
"quarkus.http.auth.permission.authenticated.policy=permit\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:337
#, fuzzy
msgid "You may also need to set `quarkus.oidc.authentication.cookie-path` to a path value common to all of the application resources which is `/` in this example.  See <<oidc-cookies, Dealing with Cookies>> for more information."
msgstr "Es posible que también tenga que establecer `quarkus.oidc.authentication.cookie-path` en un valor de ruta común a todos los recursos de la aplicación, que en este ejemplo es `/` . Para más información, consulte xref:oidc-cookies[Cómo tratar las cookies] ."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:339
#, fuzzy, no-wrap
msgid "Accessing ID and Access Tokens"
msgstr "Acceso a los identificadores y a los tokens de acceso"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:342
#, fuzzy
msgid "OIDC Code Authentication Mechanism acquires three tokens during the authorization code flow: https://openid.net/specs/openid-connect-core-1_0.html#IDToken[IDToken], Access Token and Refresh Token."
msgstr "El mecanismo de autenticación de código OIDC adquiere tres tokens durante el flujo de código de autorización:  link:https://openid.net/specs/openid-connect-core-1_0.html#IDToken[IDToken], Access Token y Refresh Token."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:345
#, fuzzy
msgid "ID Token is always a JWT token and is used to represent a user authentication with the JWT claims.  One can access ID Token claims by injecting `JsonWebToken` with an `IdToken` qualifier:"
msgstr "ID Token es siempre un token JWT y se utiliza para representar una autenticación de usuario con las reclamaciones JWT. Se puede acceder a las reclamaciones ID Token inyectando `JsonWebToken` con un calificador `IdToken`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:352
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import io.quarkus.oidc.IdToken;\n"
"import io.quarkus.security.Authenticated;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:356
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:380
#, no-wrap
msgid ""
"@Path(\"/web-app\")\n"
"@Authenticated\n"
"public class ProtectedResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:360
#, no-wrap
msgid ""
"    @Inject\n"
"    @IdToken\n"
"    JsonWebToken idToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:366
#, no-wrap
msgid ""
"    @GET\n"
"    public String getUserName() {\n"
"        return idToken.getName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:369
#, fuzzy
msgid "Access Token is usually used by the OIDC `web-app` application to access other endpoints on behalf of the currently logged in user. The raw access token can be accessed as follows:"
msgstr "El token de acceso suele ser utilizado por la aplicación OIDC `web-app` para acceder a otros puntos finales en nombre del usuario conectado en ese momento. Se puede acceder al token de acceso sin procesar de la siguiente manera:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:376
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import io.quarkus.oidc.AccessTokenCredential;\n"
"import io.quarkus.security.Authenticated;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:383
#, no-wrap
msgid ""
"    @Inject\n"
"    JsonWebToken accessToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:387
#, no-wrap
msgid ""
"    // or\n"
"    // @Inject\n"
"    // AccessTokenCredential accessTokenCredential;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:393
#, no-wrap
msgid ""
"    @GET\n"
"    public String getReservationOnBehalfOfUser() {\n"
"        String rawAccessToken = accessToken.getRawToken();\n"
"        //or\n"
"        //String rawAccessToken = accessTokenCredential.getToken();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:398
#, no-wrap
msgid ""
"        // Use the raw access token to access a remote endpoint\n"
"        return getReservationfromRemoteEndpoint(rawAccesstoken);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:401
#, fuzzy
msgid "Note that `AccessTokenCredential` will have to be used if the Access Token issued to the Quarkus `web-app` application is opaque (binary) and can not be parsed to `JsonWebToken`."
msgstr "Tenga en cuenta que `AccessTokenCredential` tendrá que ser utilizado si el Token de Acceso emitido a la aplicación Quarkus `web-app` es opaco (binario) y no puede ser analizado a `JsonWebToken`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:403
#, fuzzy
msgid "Injection of the `JsonWebToken` and `AccessTokenCredential` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "La inyección de `JsonWebToken` y `AccessTokenCredential` se admite en los contextos `@RequestScoped` y `@ApplicationScoped`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:405
msgid "RefreshToken is only used to refresh the current ID and access tokens as part of its link:#session_management[session management] process."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:407
#, fuzzy, no-wrap
msgid "User Info"
msgstr "Información del usuario"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:410
msgid "If IdToken does not provide enough information about the currently authenticated user then you can set a `quarkus.oidc.user-info-required=true` property for a https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] JSON object from the OIDC userinfo endpoint to be requested."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:412
msgid "A request will be sent to the OpenId Provider UserInfo endpoint using the access token returned with the authorization code grant response and an `io.quarkus.oidc.UserInfo` (a simple `javax.json.JsonObject` wrapper) object will be created. `io.quarkus.oidc.UserInfo` can be either injected or accessed as a SecurityIdentity `userinfo` attribute."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:414
#, fuzzy, no-wrap
msgid "Configuration Metadata"
msgstr "Metadatos de configuración"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:417
msgid "The current tenant's discovered link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[OpenId Connect Configuration Metadata] is represented by `io.quarkus.oidc.OidcConfigurationMetadata` and can be either injected or accessed as a `SecurityIdentity` `configuration-metadata` attribute."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:419
#, fuzzy
msgid "The default tenant's `OidcConfigurationMetadata` is injected if the endpoint is public."
msgstr "La dirección `OidcConfigurationMetadata` del inquilino por defecto se inyecta si el punto final es público."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:421
#, fuzzy, no-wrap
msgid "Token Claims And SecurityIdentity Roles"
msgstr "Reclamaciones de tokens y funciones de identidad de seguridad"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:424
msgid "The way the roles are mapped to the SecurityIdentity roles from the verified tokens is identical to how it is done for the link:security-openid-connect#token-claims-and-securityidentity-roles[bearer tokens] with the only difference being is that https://openid.net/specs/openid-connect-core-1_0.html#IDToken[ID Token] is used as a source of the roles by default."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:426
#, fuzzy
msgid "Note if you use Keycloak then you should set a Microprofile JWT client scope for ID token to contain a `groups` claim, please see the https://www.keycloak.org/docs/latest/server_admin/#protocol[Keycloak Server Administration Guide] for more information."
msgstr "Tenga en cuenta que si utiliza Keycloak, debe establecer un ámbito de cliente JWT de Microprofile para que el token de identificación contenga un reclamo de `groups`, por favor, consulte la  link:https://www.keycloak.org/docs/latest/server_admin/#protocol[Guía de Administración del Servidor Keycloak] para obtener más información."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:428
#, fuzzy
msgid "If only the access token contains the roles and this access token is not meant to be propagated to the downstream endpoints then set `quarkus.oidc.roles.source=accesstoken`."
msgstr "Si sólo el token de acceso contiene los roles y este token de acceso no está destinado a ser propagado a los puntos finales aguas abajo, a continuación, establezca `quarkus.oidc.roles.source=accesstoken`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:430
#, fuzzy
msgid "If UserInfo is the source of the roles then set `quarkus.oidc.authentication.user-info-required=true` and `quarkus.oidc.roles.source=userinfo`, and if needed, `quarkus.oidc.roles.role-claim-path`."
msgstr "Si UserInfo es la fuente de los roles, entonces configure `quarkus.oidc.authentication.user-info-required=true` y `quarkus.oidc.roles.source=userinfo`, y si es necesario, `quarkus.oidc.roles.role-claim-path`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:432
msgid "Additionally a custom `SecurityIdentityAugmentor` can also be used to add the roles as documented link:security#security-identity-customization[here]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:434
#, fuzzy, no-wrap
msgid "Token Verification And Introspection"
msgstr "Verificación e introspección de tokens"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:437
msgid "Please see link:security-openid-connect#token-verification-introspection for details about how the tokens are verified and introspected."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:439
msgid "Note that in case of `web-app` applications only `IdToken` is verified by default since the access token is not used by default to access the current Quarkus `web-app` endpoint and instead meant to be propagated to the services expecting this access token, for example, to the OpenId Connect Provider's UserInfo endpoint, etc. However if you expect the access token to contain the roles required to access the current Quarkus endpoint (`quarkus.oidc.roles.source=accesstoken`) then it will also be verified."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:441
#, fuzzy, no-wrap
msgid "Session Management"
msgstr "Gestión de la sesión"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:444
msgid "If you have a link:security-openid-connect#single-page-applications[Single Page Application for Service Applications] where your OpenId Connect Provider script such as `keycloak.js` is managing an authoriization code flow then that script will also control the SPA authentication session lifespan."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:446
#, fuzzy
msgid "If you work with a Quarkus OIDC `web-app` application then it is Quarkus OIDC Code Authentication mechanism which is managing the user session lifespan."
msgstr "Si trabajas con una aplicación Quarkus OIDC `web-app` entonces es el mecanismo de autenticación de código de Quarkus OIDC el que gestiona la duración de la sesión del usuario."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:448
#, fuzzy
msgid "The session age is calculated by adding the lifespan value of the current IDToken and the values of the `quarkus.oidc.authentication.session-age-extension` and `quarkus.oidc.token.lifespan-grace` properties. Of the last two properties only `quarkus.oidc.authentication.session-age-extension` should be used to significantly extend the session lifespan if required since `quarkus.oidc.token.lifespan-grace` is only meant for taking some small clock skews into consideration."
msgstr "La edad de la sesión se calcula sumando el valor de la vida útil del IDToken actual y los valores de las propiedades `quarkus.oidc.authentication.session-age-extension` y `quarkus.oidc.token.lifespan-grace`. De las dos últimas propiedades, sólo `quarkus.oidc.authentication.session-age-extension` se debe utilizar para ampliar significativamente la vida útil de la sesión si es necesario, ya que `quarkus.oidc.token.lifespan-grace` sólo está destinado a tener en cuenta algunas pequeñas desviaciones del reloj."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:450
#, fuzzy
msgid "When the currently authenticated user returns to the protected Quarkus endpoint and the ID token associated with the session cookie has expired then, by default, the user will be auto-redirected to the OIDC Authorization endpoint to re-authenticate. Most likely the OIDC provider will challenge the user again though not necessarily if the session between the user and this OIDC provider is still active which may happen if it is configured to last longer than the ID token."
msgstr "Cuando el usuario actualmente autenticado regresa al punto final protegido de Quarkus y el token de identificación asociado con la cookie de sesión ha caducado, entonces, por defecto, el usuario será redirigido automáticamente al punto final de autorización de OIDC para volver a autenticarse. Lo más probable es que el proveedor de OIDC desafíe al usuario de nuevo, aunque no necesariamente si la sesión entre el usuario y este proveedor de OIDC sigue activa, lo que puede ocurrir si está configurada para durar más que el token de ID."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:452
#, fuzzy
msgid "If the `quarkus.oidc.token.refresh-expired` then the expired ID token (as well as the access token) will be refreshed using the refresh token returned with the authorization code grant response. This refresh token may also be recycled (refreshed) itself as part of this process. As a result the new session cookie will be created and the session will be extended."
msgstr "Si la `quarkus.oidc.token.refresh-expired`, el token de identificación caducado (así como el token de acceso) se actualizará utilizando el token de actualización devuelto con la respuesta de concesión de código de autorización. Este token de actualización también puede reciclarse (actualizarse) como parte de este proceso. Como resultado, se creará una nueva cookie de sesión y se ampliará la sesión."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:454
#, fuzzy
msgid "Note, `quarkus.oidc.authentication.session-age-extension` can be important when dealing with expired ID tokens, when the user is not very active. In such cases, if the ID token expires, then the session cookie may not be returned back to the Quarkus endpoint during the next user request and Quarkus will assume it is the first authentication request. Therefore using `quarkus.oidc.authentication.session-age-extension` is important if you need to have even the expired ID tokens refreshed."
msgstr "Nota, `quarkus.oidc.authentication.session-age-extension` puede ser importante cuando se trata de tokens de identificación caducados, cuando el usuario no es muy activo. En tales casos, si el token de identificación caduca, es posible que la cookie de sesión no se devuelva al punto final de Quarkus durante la siguiente solicitud del usuario y Quarkus asumirá que se trata de la primera solicitud de autenticación. Por lo tanto, el uso de `quarkus.oidc.authentication.session-age-extension` es importante si necesita que se actualicen incluso los tokens de identificación caducados."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:456
#, fuzzy
msgid "You can also complement refreshing the expired ID tokens by proactively refreshing the valid ID tokens which are about to be expired within the `quarkus.oidc.token.refresh-token-time-skew` value. If, during the current user request, it is calculated that the current ID token will expire within this `quarkus.oidc.token.refresh-token-time-skew` then it will be refreshed and the new session cookie will be created. This property should be set to a value which is less than the ID token lifespan; the closer it is to this lifespan value the more often the ID token will be refreshed."
msgstr "También puede complementar la actualización de los tokens de ID caducados actualizando proactivamente los tokens de ID válidos que están a punto de caducar dentro del valor `quarkus.oidc.token.refresh-token-time-skew`. Si, durante la solicitud del usuario actual, se calcula que el token de ID actual expirará dentro de este `quarkus.oidc.token.refresh-token-time-skew` entonces se refrescará y se creará la nueva cookie de sesión. Esta propiedad debe establecerse en un valor inferior a la vida útil del identificador; cuanto más se acerque a este valor, más a menudo se actualizará el identificador."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:458
#, fuzzy
msgid "You can have this process further optimized by having a simple JavaScript function periodically emulating the user activity by pinging your Quarkus endpoint thus minimizing the window during which the user may have to be re-authenticated."
msgstr "Puede optimizar aún más este proceso mediante una simple función JavaScript que emule periódicamente la actividad del usuario haciendo ping a su punto final Quarkus, minimizando así la ventana durante la cual el usuario puede tener que volver a autenticarse."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:460
#, fuzzy
msgid "Note this user session can not be extended forever - the returning user with the expired ID token will have to re-authenticate at the OIDC provider endpoint once the refresh token has expired."
msgstr "Tenga en cuenta que esta sesión de usuario no puede prolongarse para siempre: el usuario que regrese con el token de ID caducado tendrá que volver a autenticarse en el punto final del proveedor de OIDC una vez que el token de actualización haya caducado."

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:461
#, fuzzy, no-wrap
msgid "TokenStateManager"
msgstr "TokenStateManager"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:464
#, fuzzy
msgid "OIDC `CodeAuthenticationMechanism` is using the default `io.quarkus.oidc.TokenStateManager` interface implementation to keep the ID, access and refresh tokens returned in the authorization code or refresh grant responses in a session cookie. It makes Quarkus OIDC endpoints completely stateless."
msgstr "OIDC `CodeAuthenticationMechanism` utiliza la implementación predeterminada de la interfaz `io.quarkus.oidc.TokenStateManager` para mantener los tokens de ID, acceso y actualización devueltos en las respuestas de código de autorización o concesión de actualización en una cookie de sesión. Esto hace que los puntos finales OIDC de Quarkus sean completamente apátridas."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:466
#, fuzzy
msgid "Note that some endpoints do not require the access token. An access token is only required if the endpoint needs to retrieve `UserInfo` or access the downstream service with this access token or use the roles associated with the access token (the roles in the ID token are checked by default). In such cases you can set either `quarkus.oidc.token-state-manager.strategy=id-refresh-token` (keep ID and refresh tokens only) or `quarkus.oidc.token-state-manager.strategy=id-token` (keep ID token only)."
msgstr "Tenga en cuenta que algunos endpoints no necesitan el token de acceso. Un token de acceso sólo es necesario si el endpoint necesita recuperar `UserInfo` o acceder al servicio downstream con este token de acceso o utilizar los roles asociados con el token de acceso (los roles en el token de ID se comprueban por defecto). En tales casos, puede establecer `quarkus.oidc.token-state-manager.strategy=id-refresh-token` (conservar sólo los tokens de ID y actualización) o `quarkus.oidc.token-state-manager.strategy=id-token` (conservar sólo el token de ID)."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:469
#, fuzzy
msgid "If the ID, access and refresh tokens are JWT tokens then combining all of them (if the strategy is the default `keep-all-tokens`) or only ID and refresh tokens (if the strategy is `id-refresh-token`) may produce a session cookie value larger than 4KB and the browsers may not be able to keep this cookie.  In such cases, you can use `quarkus.oidc.token-state-manager.split-tokens=true` to have a unique session token per each of these tokens."
msgstr "Si los tokens de ID, acceso y refresco son tokens JWT, la combinación de todos ellos (si la estrategia es la predeterminada `keep-all-tokens`) o sólo los tokens de ID y refresco (si la estrategia es `id-refresh-token`) puede producir un valor de cookie de sesión superior a 4 KB y es posible que los navegadores no puedan conservar esta cookie. En tales casos, puede utilizar `quarkus.oidc.token-state-manager.split-tokens=true` para tener un token de sesión único por cada uno de estos tokens."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:471
#, fuzzy
msgid "Register your own `io.quarkus.oidc.TokenStateManager' implementation as an `@ApplicationScoped` CDI bean if you need to customize the way the tokens are associated with the session cookie. For example, you may want to keep the tokens in a database and have only a database pointer stored in a session cookie. Note though that it may present some challenges in making the tokens available across multiple microservices nodes."
msgstr "Registre su propio bean CDI `io.quarkus.oidc.TokenStateManager' implementation as an `@ApplicationScoped` si necesita personalizar la forma en que los tokens se asocian con la cookie de sesión. Por ejemplo, es posible que desee mantener los tokens en una base de datos y tener sólo un puntero de base de datos almacenado en una cookie de sesión. Sin embargo, ten en cuenta que esto puede presentar algunos desafíos a la hora de hacer que los tokens estén disponibles en múltiples nodos de microservicios."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:473
#, fuzzy
msgid "Here is a simple example:"
msgstr "He aquí un ejemplo sencillo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:477
#, no-wrap
msgid "package io.quarkus.oidc.test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:480
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:488
#, no-wrap
msgid ""
"import io.quarkus.arc.AlternativePriority;\n"
"import io.quarkus.oidc.AuthorizationCodeTokens;\n"
"import io.quarkus.oidc.OidcTenantConfig;\n"
"import io.quarkus.oidc.TokenStateManager;\n"
"import io.quarkus.oidc.runtime.DefaultTokenStateManager;\n"
"import io.smallrye.mutiny.Uni;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:492
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@AlternativePriority(1)\n"
"public class CustomTokenStateManager implements TokenStateManager {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:495
#, no-wrap
msgid ""
"    @Inject\n"
"    DefaultTokenStateManager tokenStateManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:502
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<String> createTokenState(RoutingContext routingContext, OidcTenantConfig oidcConfig,\n"
"            AuthorizationCodeTokens sessionContent, TokenStateManager.CreateTokenStateRequestContext requestContext) {\n"
"        return tokenStateManager.createTokenState(routingContext, oidcConfig, sessionContent, requestContext)\n"
"                .map(t -> (t + \"|custom\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:512
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<AuthorizationCodeTokens> getTokens(RoutingContext routingContext, OidcTenantConfig oidcConfig,\n"
"            String tokenState, TokenStateManager.GetTokensRequestContext requestContext) {\n"
"        if (!tokenState.endsWith(\"|custom\")) {\n"
"            throw new IllegalStateException();\n"
"        }\n"
"        String defaultState = tokenState.substring(0, tokenState.length() - 7);\n"
"        return tokenStateManager.getTokens(routingContext, oidcConfig, defaultState, requestContext);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:523
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<Void> deleteTokens(RoutingContext routingContext, OidcTenantConfig oidcConfig, String tokenState,\n"
"            TokenStateManager.DeleteTokensRequestContext requestContext) {\n"
"        if (!tokenState.endsWith(\"|custom\")) {\n"
"            throw new IllegalStateException();\n"
"        }\n"
"        String defaultState = tokenState.substring(0, tokenState.length() - 7);\n"
"        return tokenStateManager.deleteTokens(routingContext, oidcConfig, defaultState, requestContext);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:525
#, fuzzy, no-wrap
msgid "Listening to important authentication events"
msgstr "Escuchar eventos de autenticación importantes"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:528
#, fuzzy
msgid "One can register `@ApplicationScoped` bean which will observe important OIDC authentication events. The listener will be updated when a user has logged in for the first time or re-authenticated, as well as when the session has been refreshed. More events may be reported in the future. For example:"
msgstr "Se puede registrar el frijol `@ApplicationScoped` que observará los eventos importantes de autenticación de OIDC. El receptor se actualizará cuando un usuario haya iniciado sesión por primera vez o se haya reautenticado, así como cuando se haya refrescado la sesión. Es posible que en el futuro se reporten más eventos. Por ejemplo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:533
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.enterprise.event.Observes;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:538
#, no-wrap
msgid ""
"import io.quarkus.oidc.IdTokenCredential;\n"
"import io.quarkus.oidc.SecurityEvent;\n"
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:541
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class SecurityEventListener {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:548
#, no-wrap
msgid ""
"    public void event(@Observes SecurityEvent event) {\n"
"        String tenantId = event.getSecurityIdentity().getAttribute(\"tenant-id\");\n"
"        RoutingContext vertxContext = event.getSecurityIdentity().getCredential(IdTokenCredential.class).getRoutingContext();\n"
"        vertxContext.put(\"listener-message\", String.format(\"event:%s,tenantId:%s\", event.getEventType().name(), tenantId));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:550
#, fuzzy, no-wrap
msgid "Single Page Applications"
msgstr "Aplicaciones de una sola página"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:553
msgid "Please check if implementing SPAs the way it is suggested in the link:security-openid-connect#single-page-applications[Single Page Applications for Service Applications] section can meet your requirements."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:555
#, fuzzy
msgid "If you prefer to use SPA and JavaScript API such as `Fetch` or `XMLHttpRequest`(XHR) with Quarkus web applications, please be aware that OpenID Connect Providers may not support CORS for Authorization endpoints where the users are authenticated after a redirect from Quarkus. This will lead to authentication failures if the Quarkus application and the OpenID Connect Provider are hosted on the different HTTP domains/ports."
msgstr "Si prefiere utilizar SPA y JavaScript API como `Fetch` o `XMLHttpRequest`(XHR) con las aplicaciones web de Quarkus, tenga en cuenta que los proveedores de OpenID Connect pueden no admitir CORS para los puntos finales de autorización en los que los usuarios se autentican después de una redirección desde Quarkus. Esto conducirá a fallos de autenticación si la aplicación de Quarkus y el proveedor de OpenID Connect están alojados en diferentes dominios/puertos HTTP."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:557
#, fuzzy
msgid "In such cases, set the `quarkus.oidc.authentication.java-script-auto-redirect` property to `false` which will instruct Quarkus to return a `499` status code and `WWW-Authenticate` header with the `OIDC` value. The browser script also needs to be updated to set `X-Requested-With` header with the `JavaScript` value and reload the last requested page in case of `499`, for example:"
msgstr "En tales casos, establezca la propiedad `quarkus.oidc.authentication.java-script-auto-redirect` en `false` que indicará a Quarkus que devuelva un código de estado `499` y una cabecera `WWW-Authenticate` con el valor `OIDC`. También es necesario actualizar el script del navegador para establecer el encabezado `X-Requested-With` con el valor `JavaScript` y recargar la última página solicitada en caso de `499`, por ejemplo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:562
#, no-wrap
msgid ""
"Future<void> callQuarkusService() async {\n"
"    Map<String, String> headers = Map.fromEntries([MapEntry(\"X-Requested-With\", \"JavaScript\")]);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:571
#, no-wrap
msgid ""
"    await http\n"
"        .get(\"https://localhost:443/serviceCall\")\n"
"        .then((response) {\n"
"            if (response.statusCode == 499) {\n"
"                window.location.assign(\"https://localhost.com:443/serviceCall\");\n"
"            }\n"
"         });\n"
"  }\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:573
#, fuzzy, no-wrap
msgid "Cloud Services"
msgstr "Servicios en la nube"

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:575
#, fuzzy, no-wrap
msgid "Google Cloud"
msgstr "Nube de Google"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:578
#, fuzzy
msgid "You can have Quarkus OIDC `web-app` applications access **Google Cloud services** such as **BigQuery** on behalf of the currently authenticated users who have enabled OpenID Connect (Authorization Code Flow) permissions to such services in their Google Developer Consoles."
msgstr "Puede hacer que las aplicaciones de Quarkus OIDC `web-app` accedan a *los servicios de Google Cloud*, como *BigQuery*, en nombre de los usuarios autenticados actualmente que hayan habilitado los permisos de OpenID Connect (flujo de código de autorización) para dichos servicios en sus consolas de desarrollador de Google."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:581
#, fuzzy
msgid "It is super easy to do with https://github.com/quarkiverse[Quarkiverse] https://github.com/quarkiverse/quarkiverse-google-cloud-services[Google Cloud Services], only add the https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[latest tag] service dependency, for example:"
msgstr "Es súper fácil de hacer con  link:https://github.com/quarkiverse[Quarkiverse]  link:https://github.com/quarkiverse/quarkiverse-google-cloud-services[Google Cloud Services], sólo tiene que añadir la  link:https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[última] dependencia del servicio de  link:https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[etiquetas], por ejemplo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:589
#, no-wrap
msgid ""
"<dependency>\n"
"  <groupId>io.quarkiverse.googlecloudservices</groupId>\n"
"  <artifactId>quarkus-google-cloud-bigquery</artifactId>\n"
"  <version>${quarkiverse.googlecloudservices.version}</version>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:592
#, fuzzy
msgid "and configure Google OIDC properties:"
msgstr "y configurar las propiedades de Google OIDC:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:600
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=https://accounts.google.com\n"
"quarkus.oidc.application-type=web-app\n"
"quarkus.oidc.client-id={GOOGLE_CLIENT_ID}\n"
"quarkus.oidc.credentials.secret={GOOGLE_CLIENT_SECRET}\n"
"quarkus.oidc.token.issuer=https://accounts.google.com\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:602
#, fuzzy, no-wrap
msgid "Provider Endpoint configuration"
msgstr "Configuración del punto final del proveedor"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:605
msgid "OIDC `web-app` application needs to know OpenId Connect provider's authorization, token, `JsonWebKey` (JWK) set and possibly `UserInfo`, introspection and end session (RP-initiated logout) endpoint addresses."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:607
#, fuzzy
msgid "By default they are discovered by adding a `/.well-known/openid-configuration` path to the configured `quarkus.oidc.auth-server-url`."
msgstr "Por defecto se descubren añadiendo una ruta `/.well-known/openid-configuration` a la configurada `quarkus.oidc.auth-server-url` ."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:609
#, fuzzy
msgid "Alternatively, if the discovery endpoint is not available or you would like to save on the discovery endpoint roundtrip, you can disable the discovery and configure them with relative path values, for example:"
msgstr "Alternativamente, si el punto final de descubrimiento no está disponible o desea ahorrarse el viaje de ida y vuelta del punto final de descubrimiento, puede desactivar el descubrimiento y configurarlos con valores de ruta relativos, por ejemplo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:626
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus\n"
"quarkus.oidc.discovery-enabled=false\n"
"# Authorization endpoint: http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/auth\n"
"quarkus.oidc.authorization-path=/protocol/openid-connect/auth\n"
"# Token endpoint: http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/token\n"
"quarkus.oidc.token-path=/protocol/openid-connect/token\n"
"# JWK set endpoint: http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/certs\n"
"quarkus.oidc.jwks-path=/protocol/openid-connect/certs\n"
"# UserInfo endoint: http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/userinfo\n"
"quarkus.oidc.user-info-path=/protocol/openid-connect/userinfo\n"
"# Token Introspection endoint: http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/token/introspect\n"
"quarkus.oidc.introspection-path=/protocol/openid-connect/token/introspect\n"
"# End session endoint: http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/logout\n"
"quarkus.oidc.end-session-path=/protocol/openid-connect/logout\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:629
#, fuzzy, no-wrap
msgid "JSON Web Token Claim Verification"
msgstr "Verificación de reclamaciones con token web JSON"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:633
msgid "Please see link:security-openid-connect#jwt-claim-verification[JSON Web Token Claim verification] section about the claim verification, including the `iss` (issuer) claim.  It applies to ID tokens but also to access tokens in a JWT format if the `web-app` application has requested the access token verification."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:634
#, fuzzy, no-wrap
msgid "Token Propagation"
msgstr "Propagación de fichas"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:636
msgid "Please see link:security-openid-connect-client#token-propagation[Token Propagation] section about the Authorization Code Flow access token propagation to the downstream services."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:638
#, fuzzy, no-wrap
msgid "Oidc Provider Client Authentication"
msgstr "Autenticación de cliente de proveedor Oidc"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:641
msgid "`quarkus.oidc.runtime.OidcProviderClient` is used when a remote request to an OpenId Connect Provider has to be done. It has to authenticate to the OpenId Connect Provider when the authorization code has to be exchanged for the ID, access and refresh tokens, when the ID and access tokens have to be refreshed or introspected."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:643
#, fuzzy
msgid "All the https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[OIDC Client Authentication] options are supported, for example:"
msgstr "Se admiten todas las opciones de  link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[autenticación de cliente OIDC], por ejemplo:"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:645
#, fuzzy
msgid "`client_secret_basic`:"
msgstr "`client_secret_basic`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:651
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.secret=mysecret\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:654
#, fuzzy
msgid "or"
msgstr "o"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:660
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.client-secret.value=mysecret\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:663
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:697
msgid "or with the secret retrieved from a link:credentials-provider[CredentialsProvider]:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:668
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:702
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:673
#, no-wrap
msgid ""
"# This is a key which will be used to retrieve a secret from the map of credentails returned from CredentialsProvider\n"
"quarkus.oidc.credentials.client-secret.provider.key=mysecret-key\n"
"# Set it only if more than one CredentialsProvider can be registered\n"
"quarkus.oidc.credentials.client-secret.provider.name=oidc-credentials-provider\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:676
#, fuzzy
msgid "`client_secret_post`:"
msgstr "`client_secret_post`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:683
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.client-secret.value=mysecret\n"
"quarkus.oidc.credentials.client-secret.method=post\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:686
msgid "`client_secret_jwt`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:694
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.jwt.secret=AyM1SysPpbyDfgZld3umj1qzKObwVMkoqQ-EstJQLr_T-1qS0gZH75aKtMN3Yj0iPS4hcgUuTwjAzZr1Z9CAow\n"
"# This is a token key identifier 'kid' header - set it if your OpenId Connect provider requires it,\n"
"quarkus.oidc.credentials.jwt.token-key-id=mykey\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:707
#, no-wrap
msgid ""
"# This is a key which will be used to retrieve a secret from the map of credentails returned from CredentialsProvider\n"
"quarkus.oidc.credentials.jwt.secret-provider.key=mysecret-key\n"
"# Set it only if more than one CredentialsProvider can be registered\n"
"quarkus.oidc.credentials.jwt.secret-provider.name=oidc-credentials-provider\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:710
msgid "`private_key_jwt` with the PEM key file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:718
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.jwt.key-file=privateKey.pem\n"
"# This is a token key identifier 'kid' header - set it if your OpenId Connect provider requires it\n"
"quarkus.oidc.credentials.jwt.token-key-id=mykey\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:721
msgid "`private_key_jwt` with the key store file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:734
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-app\n"
"quarkus.oidc.credentials.jwt.key-store-file=keystore.jks\n"
"quarkus.oidc.credentials.jwt.key-store-password=mypassword\n"
"quarkus.oidc.credentials.jwt.key-password=mykeypassword\n"
"# Private key alias inside the keystore\n"
"quarkus.oidc.credentials.jwt.key-id=mykey\n"
"# This is a token key identifier 'kid' header - set it if your OpenId Connect provider requires it,\n"
"# Note it can be different to the `quarkus.oidc.credentials.jwt.key-id` value\n"
"quarkus.oidc.credentials.jwt.token-key-id=mykey\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:737
#, fuzzy
msgid "Using `client_secret_jwt` or `private_key_jwt` authentication methods ensures that no client secret goes over the wire."
msgstr "El uso de los métodos de autenticación `client_secret_jwt` o `private_key_jwt` garantiza que ningún secreto del cliente pase por el cable."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:739
#, fuzzy, no-wrap
msgid "Testing"
msgstr "Probando"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:742
#, fuzzy
msgid "Start by adding the following dependencies to your test project:"
msgstr "Comience por añadir las siguientes dependencias a su proyecto de prueba:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:761
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>net.sourceforge.htmlunit</groupId>\n"
"    <artifactId>htmlunit</artifactId>\n"
"    <exclusions>\n"
"        <exclusion>\n"
"            <groupId>org.eclipse.jetty</groupId>\n"
"            <artifactId>*</artifactId>\n"
"       </exclusion>\n"
"    </exclusions>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-junit5</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:764
#, fuzzy, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:767
#, fuzzy
msgid "Add the following dependency:"
msgstr "Añade la siguiente dependencia:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:775
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-oidc-server</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:778
#, fuzzy
msgid "Prepare the REST test endpoints, set `application.properties`, for example:"
msgstr "Prepare los puntos finales de prueba REST, establezca `application.properties`, por ejemplo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:786
#, no-wrap
msgid ""
"# keycloak.url is set by OidcWiremockTestResource\n"
"quarkus.oidc.auth-server-url=${keycloak.url}/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-web-app\n"
"quarkus.oidc.credentials.secret=secret\n"
"quarkus.oidc.application-type=web-app\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:789
#, fuzzy
msgid "and finally write the test code, for example:"
msgstr "y finalmente escribir el código de prueba, por ejemplo:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:793
#, no-wrap
msgid "import static org.junit.jupiter.api.Assertions.assertEquals;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:795
#, no-wrap
msgid "import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:800
#, no-wrap
msgid ""
"import com.gargoylesoftware.htmlunit.SilentCssErrorHandler;\n"
"import com.gargoylesoftware.htmlunit.WebClient;\n"
"import com.gargoylesoftware.htmlunit.html.HtmlForm;\n"
"import com.gargoylesoftware.htmlunit.html.HtmlPage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:804
#, no-wrap
msgid ""
"import io.quarkus.test.common.QuarkusTestResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.oidc.server.OidcWiremockTestResource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:808
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(OidcWiremockTestResource.class)\n"
"public class CodeFlowAuthorizationTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:814
#, no-wrap
msgid ""
"    @Test\n"
"    public void testCodeFlow() throws Exception {\n"
"        try (final WebClient webClient = createWebClient()) {\n"
"            // the test REST endpoint listens on '/code-flow'\n"
"            HtmlPage page = webClient.getPage(\"http://localhost:8081/code-flow\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:819
#, no-wrap
msgid ""
"            HtmlForm form = page.getFormByName(\"form\");\n"
"            // user 'alice' has the 'user' role\n"
"            form.getInputByName(\"username\").type(\"alice\");\n"
"            form.getInputByName(\"password\").type(\"alice\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:821
#, no-wrap
msgid "            page = form.getInputByValue(\"login\").click();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:825
#, no-wrap
msgid ""
"            assertEquals(\"alice\", page.getBody().asText());\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:832
#, no-wrap
msgid ""
"    private WebClient createWebClient() {\n"
"        WebClient webClient = new WebClient();\n"
"        webClient.setCssErrorHandler(new SilentCssErrorHandler());\n"
"        return webClient;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:835
#, fuzzy
msgid "`OidcWiremockTestResource` recognizes `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `quarkus.test.oidc.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `quarkus.test.oidc.token.admin-roles` system property."
msgstr "`OidcWiremockTestResource` reconoce los usuarios `alice` y `admin`. El usuario `alice` sólo tiene el rol `user` por defecto - puede ser personalizado con una propiedad del sistema `quarkus.test.oidc.token.user-roles`. El usuario `admin` tiene los roles `user` y `admin` por defecto - puede ser personalizado con una propiedad del sistema `quarkus.test.oidc.token.admin-roles`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:837
#, fuzzy
msgid "Additionally, `OidcWiremockTestResource` set token issuer and audience to `https://service.example.com` which can be customized with `quarkus.test.oidc.token.issuer` and `quarkus.test.oidc.token.audience` system properties."
msgstr "Además, `OidcWiremockTestResource` establece el emisor de tokens y la audiencia en `&lt;a href=\"https://service.example.com\" class=\"bare\"&gt;https://service.example.com&lt;/a&gt;` que pueden personalizarse con las propiedades del sistema `quarkus.test.oidc.token.issuer` y `quarkus.test.oidc.token.audience`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:839
msgid "`OidcWiremockTestResource` can be used to emulate all OpenId Connect providers."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:841
#, no-wrap
msgid "Keycloak"
msgstr "Keycloak"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:844
msgid "If you work with Keycloak then you can test against a live Keycloak instance by adding the following dependency:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:852
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-keycloak-server</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:855
msgid "and configure `maven.surefire.plugin` as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:871
#, no-wrap
msgid ""
"<plugin>\n"
"    <artifactId>maven-surefire-plugin</artifactId>\n"
"    <configuration>\n"
"        <systemPropertyVariables>\n"
"            <!-- or, alternativey, configure 'keycloak.version' -->\n"
"            <keycloak.docker.image>${keycloak.docker.image}</keycloak.docker.image>\n"
"            <!--\n"
"              Disable HTTPS if required:\n"
"              <keycloak.use.https>false</keycloak.use.https>\n"
"            -->\n"
"        </systemPropertyVariables>\n"
"    </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:874
#, fuzzy
msgid "(and similarly `maven.failsafe.plugin` when testing in native image)."
msgstr "(y de forma similar `maven.failsafe.plugin` cuando se prueba en imagen nativa)."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:877
#, fuzzy
msgid "And now set the configuration and write the test code the same way as it is described in the <<integration-testing-wiremock, Wiremock>> section above.  The only difference is the name of `QuarkusTestResource`:"
msgstr "Y ahora establece la configuración y escribe el código de prueba de la misma manera que se describe en la sección  link:#integration-testing-wiremock[Wiremock] anterior. La única diferencia es el nombre de `QuarkusTestResource`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:881
#, no-wrap
msgid "import io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:886
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(KeycloakTestResourceLifecycleManager.class)\n"
"public class CodeFlowAuthorizationTest {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:889
#, fuzzy
msgid "`KeycloakTestResourceLifecycleManager` registers `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `keycloak.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `keycloak.token.admin-roles` system property."
msgstr "`KeycloakTestResourceLifecycleManager` registra los usuarios `alice` y `admin`. El usuario `alice` sólo tiene el rol `user` por defecto - puede ser personalizado con una propiedad del sistema `keycloak.token.user-roles`. El usuario `admin` tiene los roles `user` y `admin` por defecto - puede ser personalizado con una propiedad del sistema `keycloak.token.admin-roles`."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:892
#, fuzzy
msgid "By default, `KeycloakTestResourceLifecycleManager` uses HTTPS to initialize a Keycloak instance which can be disabled with `keycloak.use.https=false`.  Default realm name is `quarkus` and client id - `quarkus-web-app` - set `keycloak.realm` and `keycloak.web-app.client` system properties to customize the values if needed."
msgstr "Por defecto, `KeycloakTestResourceLifecycleManager` utiliza HTTPS para inicializar una instancia de Keycloak, lo que puede desactivarse con `keycloak.use.https=false`. El nombre de dominio por defecto es `quarkus` y el id de cliente - `quarkus-web-app` - configure las propiedades del sistema `keycloak.realm` y `keycloak.web-app.client` para personalizar los valores si es necesario."

#. type: Title ===
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:894
#, fuzzy, no-wrap
msgid "TestSecurity annotation"
msgstr "Anotación TestSecurity"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:897
msgid "Please see link:security-openid-connect#integration-testing-security-annotation[Use TestingSecurity with injected JsonWebToken] section for more information about using `@TestSecurity` and `@OidcSecurity` annotations for testing the `web-app` application endpoint code which depends on the injected ID and access `JsonWebToken` as well as `UserInfo` and `OidcConfigurationMetadata`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:898
#, fuzzy, no-wrap
msgid "How to check the errors in the logs"
msgstr "Cómo comprobar los errores en los registros"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:901
#, fuzzy
msgid "Please enable `io.quarkus.oidc.runtime.OidcProvider` `TRACE` level logging to see more details about the token verification errors:"
msgstr "Por favor, active `io.quarkus.oidc.runtime.OidcProvider` `TRACE` nivel de registro para ver más detalles acerca de los errores de verificación de token:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:906
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcProvider\".level=TRACE\n"
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcProvider\".min-level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:909
#, fuzzy
msgid "Please enable `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` level logging to see more details about the OidcProvider client initialization errors:"
msgstr "Por favor, active `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` nivel de registro para ver más detalles acerca de los errores de inicialización del cliente OidcProvider:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:914
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcRecorder\".level=TRACE\n"
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcRecorder\".min-level=TRACE\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:916
#, fuzzy, no-wrap
msgid "Running behind a reverse proxy"
msgstr "Funcionamiento detrás de un proxy inverso"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:919
#, fuzzy
msgid "OIDC authentication mechanism can be affected if your Quarkus application is running behind a reverse proxy/gateway/firewall when HTTP `Host` header may be reset to the internal IP address, HTTPS connection may be terminated, etc. For example, an authorization code flow `redirect_uri` parameter may be set to the internal host instead of the expected external one."
msgstr "El mecanismo de autenticación OIDC puede verse afectado si su aplicación Quarkus se ejecuta detrás de un proxy inverso/gateway/firewall cuando el encabezado HTTP `Host` puede ser restablecido a la dirección IP interna, la conexión HTTPS puede ser terminada, etc. Por ejemplo, un parámetro de flujo de código de autorización `redirect_uri` puede establecerse en el host interno en lugar del externo esperado."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:921
msgid "In such cases configuring Quarkus to recognize the original headers forwarded by the proxy will be required, see link:http-reference#reverse-proxy[Running behind a reverse proxy] Vert.x documentation section for more information."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:923
msgid "For example, if your Quarkus endpoint runs in a cluster behind Kubernetes Ingress then a redirect from the OpenId Connect Provider back to this endpoint may not work since the calcuated `redirect_uri` parameter may point to the internal endpoint address. This problem can be resolved with the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:930
#, no-wrap
msgid ""
"quarkus.http.proxy.proxy-address-forwarding=true\n"
"quarkus.http.proxy.allow-forwarded=false\n"
"quarkus.http.proxy.enable-forwarded-host=true\n"
"quarkus.http.proxy.forwarded-host-header=X-ORIGINAL-HOST\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:933
#, fuzzy
msgid "where `X-ORIGINAL-HOST` is set by Kubernetes Ingress to represent the external endpoint address."
msgstr "donde `X-ORIGINAL-HOST` es establecido por Kubernetes Ingress para representar la dirección del punto final externo."

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:935
#, fuzzy
msgid "`quarkus.oidc.authentication.force-redirect-https-scheme` property may also be used when the Quarkus application is running behind a SSL terminating reverse proxy."
msgstr "`quarkus.oidc.authentication.force-redirect-https-scheme` también puede utilizarse cuando la aplicación Quarkus se ejecuta detrás de un proxy inverso con terminación SSL."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:936
#, no-wrap
msgid "External and Internal Access to OpenId Connect Provider"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:940
msgid "Note that the OpenId Connect Provider externally accessible authorization, logout and other endpoints may have different HTTP(S) URLs compared to the URLs auto-discovered or configured relative to `quarkus.oidc.auth-server-url` internal URL.  In such cases an issuer verification failure may be reported by the endpoint and redirects to the externally accessible Connect Provider endpoints may fail."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:943
#, fuzzy
msgid "In such cases, if you work with Keycloak then please start it with a `KEYCLOAK_FRONTEND_URL` system property set to the externally accessible base URL.  If you work with other Openid Connect providers then please check your provider's documentation."
msgstr "En estos casos, si trabajas con Keycloak, por favor, inícialo con una propiedad del sistema `KEYCLOAK_FRONTEND_URL` establecida en la URL base accesible externamente. Si trabaja con otros proveedores de Openid Connect, consulte la documentación del proveedor."

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:944
#, fuzzy, no-wrap
msgid "Customize authentication requests"
msgstr "Personalizar las solicitudes de autenticación"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:947
msgid "By default, only the `response_type` (set to `code`), `scope` (set to 'openid'), `client_id`, `redirect_uri` and `state` properties are passed as HTTP query parameters to the OpenId Connect provider's authorization endpoint when the user is redirected to it to authenticate."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:949
msgid "You can add more properties to it with `quarkus.oidc.authentication.extra-params`. For example, some OpenId Connect providers may choose to return the authorization code as part of the redirect URI's fragment which would break the authentication process - it can be fixed as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:953
#, no-wrap
msgid "quarkus.oidc.authentication.extra-params.response_mode=query\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:955
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#. type: Title ==
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:959
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:962
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Documentación de Keycloak]"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:963
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:964
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[Token web JSON]"

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:965
msgid "link:security-openid-connect-client[Quarkus - Using OpenID Connect and OAuth2 Client and Filters to manage access tokens]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:966
msgid "link:security-openid-connect-dev-services[Dev Services for OpenId Connect]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/security-openid-connect-web-authentication.adoc:966
msgid "link:security[Quarkus Security]"
msgstr ""
