# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/rest-client.adoc:6
#, fuzzy, no-wrap
msgid "Using the REST Client"
msgstr "Uso del cliente REST"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:12
#, fuzzy
msgid "This guide explains how to use the RESTEasy REST Client in order to interact with REST APIs with very little effort."
msgstr "Esta guía explica cómo utilizar el Cliente REST RESTEasy para interactuar con las API REST con muy poco esfuerzo."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:14
msgid "there is another guide if you need to write server link:rest-json[JSON REST APIs]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:15
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:18
#, fuzzy
msgid "To complete this guide, you need:"
msgstr "Para completar esta guía, necesitas:"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:20
#, fuzzy
msgid "less than 15 minutes"
msgstr "menos de 15 minutos"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:21
#, fuzzy
msgid "an IDE"
msgstr "un IDE"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:22
#, fuzzy
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 11+ instalado con `JAVA_HOME` configurado adecuadamente"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:23
#, fuzzy
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {versión de Maven}"

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:24
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:28
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:30
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:32
#, fuzzy
msgid "The solution is located in the `rest-client-quickstart` {quickstarts-tree-url}/rest-client-quickstart[directory]."
msgstr "La solución se encuentra en `rest-client-quickstart` {quickstarts-tree-url}/rest-client-quickstart[directory]."

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:33
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:36
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:46
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=rest-client-quickstart \\\n"
"    -DclassName=\"org.acme.rest.client.CountriesResource\" \\\n"
"    -Dpath=\"/country\" \\\n"
"    -Dextensions=\"resteasy,resteasy-jackson,rest-client,rest-client-jackson\"\n"
"cd rest-client-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:49
#, fuzzy
msgid "This command generates the Maven project with a REST endpoint and imports:"
msgstr "Este comando genera el proyecto Maven con un endpoint REST y lo importa:"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:51
#, fuzzy
msgid "the `resteasy` and `resteasy-jackson` extensions for the REST server support;"
msgstr "las extensiones `resteasy` y `resteasy-jackson` para el soporte del servidor REST;"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:52
#, fuzzy
msgid "the `rest-client` and `rest-client-jackson` extensions for the REST client support."
msgstr "las extensiones `rest-client` y `rest-client-jackson` para el soporte del cliente REST."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:55
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `rest-client` and the `rest-client-jackson` extensions to your project by running the following command in your project base directory:"
msgstr "Si ya tiene configurado su proyecto Quarkus, puede añadir las extensiones `rest-client` y `rest-client-jackson` a su proyecto ejecutando el siguiente comando en el directorio base de su proyecto:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:59
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"rest-client,rest-client-jackson\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:62
#, fuzzy
msgid "This will add the following to your `pom.xml`:"
msgstr "Esto añadirá lo siguiente a su `pom.xml`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:73
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-rest-client</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-rest-client-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:75
#, fuzzy, no-wrap
msgid "Setting up the model"
msgstr "Configuración del modelo"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:79
msgid "In this guide we will be demonstrating how to consume part of the REST API supplied by the link:https://restcountries.eu[restcountries.eu] service.  Our first order of business is to setup the model we will be using, in the form of a `Country` POJO."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:81
msgid "Create a `src/main/java/org/acme/rest/client/Country.java` file and set the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:85
#: upstream/_versions/2.2/guides/rest-client.adoc:116
#: upstream/_versions/2.2/guides/rest-client.adoc:165
#: upstream/_versions/2.2/guides/rest-client.adoc:288
#: upstream/_versions/2.2/guides/rest-client.adoc:326
#: upstream/_versions/2.2/guides/rest-client.adoc:357
#: upstream/_versions/2.2/guides/rest-client.adoc:414
#: upstream/_versions/2.2/guides/rest-client.adoc:442
#: upstream/_versions/2.2/guides/rest-client.adoc:506
#: upstream/_versions/2.2/guides/rest-client.adoc:538
#: upstream/_versions/2.2/guides/rest-client.adoc:647
#, no-wrap
msgid "package org.acme.rest.client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:87
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:89
#, no-wrap
msgid "import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:92
#, no-wrap
msgid ""
"@JsonIgnoreProperties(ignoreUnknown = true)\n"
"public class Country {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:97
#, no-wrap
msgid ""
"    public String name;\n"
"    public String alpha2Code;\n"
"    public String capital;\n"
"    public List<Currency> currencies;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:104
#, no-wrap
msgid ""
"    public static class Currency {\n"
"        public String code;\n"
"        public String name;\n"
"        public String symbol;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:108
msgid "The model above is only a subset of the fields provided by the service (thus the `@JsonIgnoreProperties` annotation), but it suffices for the purposes of this guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:109
#, fuzzy, no-wrap
msgid "Create the interface"
msgstr "Crear la interfaz"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:112
msgid "Using the RESTEasy REST Client is as simple as creating an interface using the proper JAX-RS and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/CountriesService.java` and have the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:119
#: upstream/_versions/2.2/guides/rest-client.adoc:329
#: upstream/_versions/2.2/guides/rest-client.adoc:417
#: upstream/_versions/2.2/guides/rest-client.adoc:509
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:124
#: upstream/_versions/2.2/guides/rest-client.adoc:174
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:128
#: upstream/_versions/2.2/guides/rest-client.adoc:178
#: upstream/_versions/2.2/guides/rest-client.adoc:339
#: upstream/_versions/2.2/guides/rest-client.adoc:427
#, no-wrap
msgid ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:133
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    Set<Country> getByName(@PathParam String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:136
msgid "The `getByName` method gives our code the ability to query a country by name from the REST Countries API. The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:138
#, fuzzy
msgid "The purpose of the annotations in the code above is the following:"
msgstr "El propósito de las anotaciones en el código anterior es el siguiente:"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:141
#, fuzzy
msgid "`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for CDI injection as a REST Client"
msgstr "`@RegisterRestClient` permite a Quarkus saber que esta interfaz está destinada a estar disponible para la inyección CDI como Cliente REST"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:142
#, fuzzy
msgid "`@Path`, `@GET` and `@PathParam` are the standard JAX-RS annotations used to define how to access the service"
msgstr "`@Path` , `@GET` y `@PathParam` son las anotaciones JAX-RS estándar utilizadas para definir cómo acceder al servicio"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:143
msgid "`@Produces` defines the expected content-type"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client.adoc:150
#, fuzzy
msgid "When a JSON extension is installed such as `quarkus-rest-client-jackson` or `quarkus-rest-client-jsonb`, Quarkus will use the `application/json` media type by default for most return values, unless the media type is explicitly set via `@Produces` or `@Consumes` annotations (there are some exceptions for well known types, such as `String` and `File`, which default to `text/plain` and `application/octet-stream` respectively)."
msgstr "Cuando se instala una extensión JSON como `quarkus-rest-client-jackson` o `quarkus-rest-client-jsonb` , Quarkus utilizará por defecto el tipo de medio `application/json` para la mayoría de los valores de retorno, a menos que el tipo de medio se establezca explícitamente mediante las anotaciones `@Produces` o `@Consumes` (hay algunas excepciones para tipos bien conocidos, como `String` y `File` , que por defecto son `text/plain` y `application/octet-stream` respectivamente)."

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client.adoc:153
#, fuzzy
msgid "If you don't want JSON by default you can set `quarkus.resteasy-json.default-json=false` and the default will change back to being auto-negotiated. If you set this you will need to add `@Produces(MediaType.APPLICATION_JSON)` and `@Consumes(MediaType.APPLICATION_JSON)` to your endpoints in order to use JSON."
msgstr "Si no desea JSON por defecto puede configurar `quarkus.resteasy-json.default-json=false` y el valor por defecto volverá a ser autonegociado. Si establece esto tendrá que añadir `@Produces(MediaType.APPLICATION_JSON)` y `@Consumes(MediaType.APPLICATION_JSON)` a sus puntos finales para poder utilizar JSON."

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client.adoc:156
#, fuzzy
msgid "If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.  It will allow to narrow down the number of JAX-RS providers (which can be seen as converters) included in the native executable."
msgstr "Si no confía en el JSON por defecto, se recomienda encarecidamente anotar sus puntos finales con las anotaciones `@Produces` y `@Consumes` para definir con precisión los tipos de contenido esperados. Esto permitirá reducir el número de proveedores JAX-RS (que pueden verse como conversores) incluidos en el ejecutable nativo."

#. type: Title ===
#: upstream/_versions/2.2/guides/rest-client.adoc:158
#, fuzzy, no-wrap
msgid "Query Parameters"
msgstr "Parámetros de la ruta"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:161
msgid "If the GET request requires query parameters you can leverage the `@QueryParam(\"parameter-name\")` annotation instead of (or in addition to) the `@PathParam`. Path and query parameters can be combined, as required, as illustrated in a mock example below."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:169
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
"import org.jboss.resteasy.annotations.jaxrs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:183
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{region}\")\n"
"    Set<Country> getByRegion(@PathParam String region, @QueryParam(\"city\") String city);\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:186
#, fuzzy, no-wrap
msgid "Create the configuration"
msgstr "Crear la configuración"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:190
#, fuzzy
msgid "In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.  The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr "Para determinar la URL base a la que se realizarán las llamadas REST, el cliente REST utiliza la configuración de `application.properties` . El nombre de la propiedad debe seguir una determinada convención que se muestra mejor en el siguiente código:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:196
#, no-wrap
msgid ""
"# Your configuration properties\n"
"org.acme.rest.client.CountriesService/mp-rest/url=https://restcountries.eu/rest # // <1>\n"
"org.acme.rest.client.CountriesService/mp-rest/scope=javax.inject.Singleton # // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:200
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.CountriesService` will use `https://restcountries.eu/rest` as the base URL.  Using the configuration above, calling the `getByName` method of `CountriesService` with a value of `France` would result in an HTTP GET request being made to `https://restcountries.eu/rest/v2/name/France`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:202
msgid "Having this configuration means that the default scope of `org.acme.rest.client.CountriesService` will be `@Singleton`. Supported scope values are `@Singleton`, `@Dependent`, `@ApplicationScoped` and `@RequestScoped`. The default scope is `@Dependent`.  The default scope can also be defined on the interface."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:204
msgid "Note that `org.acme.rest.client.CountriesService` _must_ match the fully qualified name of the `CountriesService` interface we created in the previous section."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:206
#, fuzzy
msgid "To facilitate the configuration, you can use the `@RegisterRestClient` `configKey` property that allows to use another configuration root than the fully qualified name of your interface."
msgstr "Para facilitar la configuración, puede utilizar la propiedad `@RegisterRestClient` `configKey` que permite utilizar otra raíz de configuración que el nombre completo de su interfaz."

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:214
#, no-wrap
msgid ""
"@RegisterRestClient(configKey=\"country-api\")\n"
"public interface CountriesService {\n"
"    [...]\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:221
#, no-wrap
msgid ""
"# Your configuration properties\n"
"country-api/mp-rest/url=https://restcountries.eu/rest #\n"
"country-api/mp-rest/scope=javax.inject.Singleton # /\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/rest-client.adoc:223
#, fuzzy, no-wrap
msgid "Disabling Hostname Verification"
msgstr "Desactivación de la verificación del nombre de host"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:226
#, fuzzy
msgid "To disable the SSL hostname verification for a specific REST client, add the following property to your configuration:"
msgstr "Para desactivar la verificación del nombre de host SSL para un cliente REST específico, añada la siguiente propiedad a su configuración:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:230
#, no-wrap
msgid "country-api/mp-rest/hostnameVerifier=io.quarkus.restclient.NoopHostnameVerifier\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/rest-client.adoc:232
#, fuzzy, no-wrap
msgid "Disabling SSL verifications"
msgstr "Desactivación de las verificaciones SSL"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:235
#, fuzzy
msgid "To disable all SSL verifications, add the following property to your configuration:"
msgstr "Para desactivar todas las verificaciones SSL, añada la siguiente propiedad a su configuración:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:239
#, no-wrap
msgid "quarkus.tls.trust-all=true\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client.adoc:243
#, fuzzy
msgid "This setting should not be used in production as it will disable any kind of SSL verification."
msgstr "Esta configuración no debe usarse en producción ya que deshabilitará cualquier tipo de verificación SSL."

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:245
#, fuzzy, no-wrap
msgid "Update the JAX-RS resource"
msgstr "Actualizar el recurso JAX-RS"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:248
#: upstream/_versions/2.2/guides/rest-client.adoc:353
msgid "Open the `src/main/java/org/acme/rest/client/CountriesResource.java` file and update it with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:253
#: upstream/_versions/2.2/guides/rest-client.adoc:360
#: upstream/_versions/2.2/guides/rest-client.adoc:445
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:260
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:263
#: upstream/_versions/2.2/guides/rest-client.adoc:371
#: upstream/_versions/2.2/guides/rest-client.adoc:456
#, no-wrap
msgid ""
"@Path(\"/country\")\n"
"public class CountriesResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:267
#: upstream/_versions/2.2/guides/rest-client.adoc:375
#: upstream/_versions/2.2/guides/rest-client.adoc:460
#, no-wrap
msgid ""
"    @Inject\n"
"    @RestClient\n"
"    CountriesService countriesService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:275
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    public Set<Country> name(@PathParam String name) {\n"
"        return countriesService.getByName(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:278
msgid "Note that in addition to the standard CDI `@Inject` annotation, we also need to use the MicroProfile `@RestClient` annotation to inject `CountriesService`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:279
#, fuzzy, no-wrap
msgid "Update the test"
msgstr "Actualizar la prueba"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:283
msgid "We also need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/rest/client/CountriesResourceTest.java` file and change the content of the `testCountryNameEndpoint` method to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:291
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:294
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:297
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class CountriesResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:311
#, no-wrap
msgid ""
"    @Test\n"
"    public void testCountryNameEndpoint() {\n"
"        given()\n"
"          .when().get(\"/country/name/greece\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(\"$.size()\", is(1),\n"
"                     \"[0].alpha2Code\", is(\"GR\"),\n"
"                     \"[0].capital\", is(\"Athens\"),\n"
"                     \"[0].currencies.size()\", is(1),\n"
"                     \"[0].currencies[0].name\", is(\"Euro\")\n"
"             );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:313
#: upstream/_versions/2.2/guides/rest-client.adoc:708
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:316
#, fuzzy
msgid "The code above uses link:http://rest-assured.io/[REST Assured]'s link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] capabilities."
msgstr "El código anterior utiliza las capacidades link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] de link:http://rest-assured.io/[REST Assured] ."

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:318
#, fuzzy, no-wrap
msgid "Async Support"
msgstr "Soporte asíncrono"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:322
msgid "The rest client supports asynchronous rest calls.  Async support comes in 2 flavors: you can return a `CompletionStage` or a `Uni` (requires the `quarkus-rest-client-mutiny` extension).  Let's see it in action by adding a `getByNameAsync` method in our `CountriesService` REST interface. The code should look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:335
#: upstream/_versions/2.2/guides/rest-client.adoc:423
#: upstream/_versions/2.2/guides/rest-client.adoc:515
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import java.util.concurrent.CompletionStage;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:344
#: upstream/_versions/2.2/guides/rest-client.adoc:525
#: upstream/_versions/2.2/guides/rest-client.adoc:576
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    Set<Country> getByName(@PathParam String name);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:350
#: upstream/_versions/2.2/guides/rest-client.adoc:531
#: upstream/_versions/2.2/guides/rest-client.adoc:582
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    CompletionStage<Set<Country>> getByNameAsync(@PathParam String name);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:368
#: upstream/_versions/2.2/guides/rest-client.adoc:453
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import java.util.concurrent.CompletionStage;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:382
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    public Set<Country> name(@PathParam String name) {\n"
"        return countriesService.getByName(name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:389
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name-async/{name}\")\n"
"    public CompletionStage<Set<Country>> nameAsync(@PathParam String name) {\n"
"        return countriesService.getByNameAsync(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:392
msgid "To test asynchronous methods, add the test method below in `CountriesResourceTest`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:407
#, no-wrap
msgid ""
"@Test\n"
"public void testCountryNameAsyncEndpoint() {\n"
"    given()\n"
"    .when().get(\"/country/name-async/greece\")\n"
"    .then()\n"
"        .statusCode(200)\n"
"        .body(\"$.size()\", is(1),\n"
"             \"[0].alpha2Code\", is(\"GR\"),\n"
"             \"[0].capital\", is(\"Athens\"),\n"
"             \"[0].currencies.size()\", is(1),\n"
"             \"[0].currencies[0].name\", is(\"Euro\")\n"
"        );\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:410
#, fuzzy
msgid "The `Uni` version is very similar:"
msgstr "La versión `Uni` es muy similar:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:429
#: upstream/_versions/2.2/guides/rest-client.adoc:463
#, no-wrap
msgid "    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:435
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    Uni<Set<Country>> getByNameAsUni(@PathParam String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:438
msgid "The `CountriesResource` becomes:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:470
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/name-uni/{name}\")\n"
"    public Uni<Set<Country>> nameAsync(@PathParam String name) {\n"
"        return countriesService.getByNameAsUni(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/rest-client.adoc:473
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "Motín"

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client.adoc:477
#, fuzzy
msgid "The previous snippet uses Mutiny reactive types.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "El fragmento anterior utiliza tipos reactivos Mutiny. Si no está familiarizado con Mutiny, consulte xref:mutiny-primer.adoc[Mutiny - una biblioteca de programación reactiva intuitiva] ."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:481
#, fuzzy
msgid "When returning a `Uni`, every _subscription_ invokes the remote service.  It means you can re-send the request by re-subscribing on the `Uni`, or use a `retry` as follows:"
msgstr "Al devolver un `Uni` , cada _suscripción_ invoca el servicio remoto. Significa que puede volver a enviar la solicitud volviendo a suscribirse en el `Uni` , o utilizar un `retry` como se indica a continuación:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:486
#, no-wrap
msgid "@Inject @RestClient CountriesResource service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:488
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:491
#, no-wrap
msgid ""
"service.nameAsync(\"Greece\")\n"
"   .onFailure().retry().atMost(10);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:497
#, fuzzy
msgid "If you use a `CompletionStage`, you would need to call the service's method to retry.  This difference comes from the laziness aspect of Mutiny and its subscription protocol.  More details about this can be found in https://smallrye.io/smallrye-mutiny/#_uni_and_multi[the Mutiny documentation]."
msgstr "Si utiliza un `CompletionStage` , tendría que llamar al método del servicio para reintentarlo. Esta diferencia proviene del aspecto de pereza de Mutiny y su protocolo de suscripción. Encontrará más detalles al respecto en link:https://smallrye.io/smallrye-mutiny/#_uni_and_multi[la documentación] de Mutiny."

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:498
#, fuzzy, no-wrap
msgid "Custom headers support"
msgstr "Soporte de cabeceras personalizadas"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:500
#, fuzzy
msgid "The MicroProfile REST client allows amending request headers by registering a `ClientHeadersFactory` with the `@RegisterClientHeaders` annotation."
msgstr "El cliente REST de MicroProfile permite modificar las cabeceras de las solicitudes registrando un `ClientHeadersFactory` con la anotación `@RegisterClientHeaders`."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:502
msgid "Let's see it in action by adding a `@RegisterClientHeaders` annotation pointing to a `RequestUUIDHeaderFactory` class in our `CountriesService` REST interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:520
#, no-wrap
msgid ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"@RegisterClientHeaders(RequestUUIDHeaderFactory.class)\n"
"public interface CountriesService {\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:534
#, fuzzy
msgid "And the `RequestUUIDHeaderFactory` would look like:"
msgstr "Y el `RequestUUIDHeaderFactory` se vería así:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:540
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.ext.ClientHeadersFactory;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:545
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.ws.rs.core.MultivaluedHashMap;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:548
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class RequestUUIDHeaderFactory implements ClientHeadersFactory {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:556
#, no-wrap
msgid ""
"    @Override\n"
"    public MultivaluedMap<String, String> update(MultivaluedMap<String, String> incomingHeaders, MultivaluedMap<String, String> clientOutgoingHeaders) {\n"
"        MultivaluedMap<String, String> result = new MultivaluedHashMap<>();\n"
"        result.add(\"X-request-uuid\", UUID.randomUUID().toString());\n"
"        return result;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:560
msgid "As you see in the example above, you can make your the `ClientHeadersFactory` implementation a CDI bean by annotating it with a scope-defining annotation, such as `@Singleton`, `@ApplicationScoped`, etc."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/rest-client.adoc:562
#, fuzzy, no-wrap
msgid "Default header factory"
msgstr "Fábrica de cabeceras por defecto"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:564
#, fuzzy
msgid "You can also use `@RegisterClientHeaders` annotation without any custom factory specified. In that case the `DefaultClientHeadersFactoryImpl` factory will be used and all headers listed in `org.eclipse.microprofile.rest.client.propagateHeaders` configuration property will be amended. Individual header names are comma-separated."
msgstr "También puede utilizar la anotación `@RegisterClientHeaders` sin especificar ninguna fábrica personalizada. En ese caso se utilizará la fábrica `DefaultClientHeadersFactoryImpl` y se modificarán todas las cabeceras listadas en la propiedad de configuración `org.eclipse.microprofile.rest.client.propagateHeaders`. Los nombres de las cabeceras individuales están separados por comas."

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:571
#, no-wrap
msgid ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"@RegisterClientHeaders\n"
"public interface CountriesService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:587
#, no-wrap
msgid "org.eclipse.microprofile.rest.client.propagateHeaders=Authorization,Proxy-Authorization\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:589
#, fuzzy, no-wrap
msgid "Package and run the application"
msgstr "Empaquetar y ejecutar la aplicación"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:593
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/country/name/greece."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:595
msgid "You should see a JSON object containing some basic information about Greece."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:598
msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `target/quarkus-app/quarkus-run.jar` file.  You can also generate the native executable with `./mvnw clean package -Pnative`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:599
#, fuzzy, no-wrap
msgid "REST Client and RESTEasy interactions"
msgstr "Interacciones entre el cliente REST y RESTEasy"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:603
msgid "In Quarkus, the REST Client extension and link:rest-json[the RESTEasy extension] share the same infrastructure.  One important consequence of this consideration is that they share the same list of providers (in the JAX-RS meaning of the word)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:606
#, fuzzy
msgid "For instance, if you declare a `WriterInterceptor`, it will by default intercept both the servers calls and the client calls, which might not be the desired behavior."
msgstr "Por ejemplo, si declara un `WriterInterceptor` , éste interceptará por defecto tanto las llamadas del servidor como las del cliente, lo que podría no ser el comportamiento deseado."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:608
#, fuzzy
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "Sin embargo, se puede cambiar este comportamiento por defecto y restringir un proveedor a:"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:610
#, fuzzy
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider;"
msgstr "sólo considera las llamadas *del cliente* añadiendo la anotación `@ConstrainedTo(RuntimeType.CLIENT)` a su proveedor;"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:611
#, fuzzy
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider."
msgstr "sólo considera las llamadas *al servidor* añadiendo la anotación `@ConstrainedTo(RuntimeType.SERVER)` a su proveedor."

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:613
#, fuzzy, no-wrap
msgid "Using a Mock HTTP Server for tests"
msgstr "Uso de un servidor HTTP simulado para las pruebas"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:618
msgid "Setting up a mock HTTP server, against which tests are run, is a common testing pattern.  Examples of such servers are link:http://wiremock.org/[Wiremock] and link:https://docs.hoverfly.io/projects/hoverfly-java/en/latest/index.html[Hoverfly].  In this section we'll demonstrate how Wiremock can be leveraged for testing the `CountriesService` which was developed above."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:620
#, fuzzy
msgid "First of all, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "En primer lugar, es necesario añadir Wiremock como dependencia de prueba. Para un proyecto Maven eso sucedería así:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:629
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>com.github.tomakehurst</groupId>\n"
"    <artifactId>wiremock-jre8</artifactId>\n"
"    <scope>test</scope>\n"
"    <version>${wiremock.version}</version> <1>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:632
#, fuzzy
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[here]."
msgstr "Utilice una versión adecuada de Wiremock. Todas las versiones disponibles se pueden encontrar link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[aquí] ."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:636
#, fuzzy
msgid "In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource` annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration values that Quarkus will use."
msgstr "En las pruebas de Quarkus, cuando es necesario iniciar algún servicio antes de ejecutar las pruebas de Quarkus, utilizamos la anotación `@io.quarkus.test.common.QuarkusTestResource` para especificar un `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que pueda iniciar el servicio y suministrar los valores de configuración que utilizará Quarkus."

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client.adoc:640
msgid "For more details about `@QuarkusTestResource` refer to link:getting-started-testing#quarkus-test-resource[this part of the documentation]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:643
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `WiremockCountries` like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:650
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:653
#, no-wrap
msgid ""
"import com.github.tomakehurst.wiremock.WireMockServer;\n"
"import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:655
#, no-wrap
msgid "import static com.github.tomakehurst.wiremock.client.WireMock.*; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:657
#, no-wrap
msgid "public class WiremockCountries implements QuarkusTestResourceLifecycleManager {  // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:659
#, no-wrap
msgid "\tprivate WireMockServer wireMockServer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:664
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic Map<String, String> start() {\n"
"\t\twireMockServer = new WireMockServer();\n"
"\t\twireMockServer.start(); // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:674
#, no-wrap
msgid ""
"\t\tstubFor(get(urlEqualTo(\"/v2/name/GR\"))   // <4>\n"
"\t\t\t\t.willReturn(aResponse()\n"
"\t\t\t\t\t\t.withHeader(\"Content-Type\", \"application/json\")\n"
"\t\t\t\t\t\t.withBody(\n"
"                        \"[{\" +\n"
"                        \"\\\"name\\\": \\\"Ελλάδα\\\",\" +\n"
"                        \"\\\"capital\\\": \\\"Αθήνα\\\"\" +\n"
"                        \"}]\"\n"
"\t\t\t\t\t\t)));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:676
#, no-wrap
msgid "\t\tstubFor(get(urlMatching(\".*\")).atPriority(10).willReturn(aResponse().proxiedFrom(\"https://restcountries.eu/rest\")));   // <5>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:679
#, no-wrap
msgid ""
"\t\treturn Collections.singletonMap(\"org.acme.rest.client.CountriesService/mp-rest/url\", wireMockServer.baseUrl()); // <6>\n"
"\t}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:687
#, no-wrap
msgid ""
"\t@Override\n"
"\tpublic void stop() {\n"
"\t\tif (null != wireMockServer) {\n"
"\t\t\twireMockServer.stop();  // <7>\n"
"\t\t}\n"
"\t}\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:690
#, fuzzy
msgid "Statically importing the methods in the Wiremock package makes it easier to read the test."
msgstr "La importación estática de los métodos en el paquete Wiremock facilita la lectura de la prueba."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:691
#, fuzzy
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr "El método `start` es invocado por Quarkus antes de ejecutar cualquier prueba y devuelve un `Map` de propiedades de configuración que se aplican durante la ejecución de la prueba."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:692
#, fuzzy
msgid "Launch Wiremock."
msgstr "Inicie Wiremock."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:693
msgid "Configure Wiremock to stub the calls to `/v2/name/GR` by returning a specific canned response."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:694
#, fuzzy
msgid "All HTTP calls that have not been stubbed are handled by calling the real service. This is done for demonstration purposes, as it is not something that would usually happen in a real test."
msgstr "Todas las llamadas HTTP que no han sido simuladas se manejan llamando al servicio real. Esto se hace con fines de demostración, ya que no es algo que suele ocurrir en una prueba real."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:696
msgid "As the `start` method returns configuration that applies for tests, we set the rest-client property that controls the base URL which is used by the implementation of `CountriesService` to the base URL where Wiremock is listening for incoming requests."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:697
#, fuzzy
msgid "When all tests have finished, shutdown Wiremock."
msgstr "Cuando todas las pruebas hayan terminado, apague Wiremock."

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:700
msgid "The `CountriesResourceTest` test class needs to be annotated like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/rest-client.adoc:706
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(WiremockCountries.class)\n"
"public class CountriesResourceTest {\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/rest-client.adoc:713
msgid "`@QuarkusTestResource` applies to all tests, not just `CountriesResourceTest`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/rest-client.adoc:715
#, fuzzy, no-wrap
msgid "Further reading"
msgstr "Más información"

#. type: Plain text
#: upstream/_versions/2.2/guides/rest-client.adoc:717
#, fuzzy
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[MicroProfile Rest Client specification]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[Especificación del cliente Rest de MicroProfile]"
