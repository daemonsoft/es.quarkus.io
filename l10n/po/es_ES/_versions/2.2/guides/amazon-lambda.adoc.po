# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:6
#, no-wrap
msgid "Amazon Lambda"
msgstr "Amazon Lambda"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:13
msgid "The `quarkus-amazon-lambda` extension allows you to use Quarkus to build your AWS Lambdas.  Your lambdas can use injection annotations from CDI or Spring and other Quarkus facilities as you need them."
msgstr "La extensión `quarkus-amazon-lambda` le permite utilizar Quarkus para construir sus AWS Lambdas. Tus lambdas pueden utilizar anotaciones de inyección de CDI o Spring y otras facilidades de Quarkus según las necesites."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:16
#, fuzzy
msgid "Quarkus lambdas can be deployed using the Amazon Java Runtime, or you can build a native executable and use Amazon's Custom Runtime if you want a smaller memory footprint and faster cold boot startup time."
msgstr "Las lambdas de Quarkus pueden desplegarse utilizando el tiempo de ejecución de Amazon Java, o puede construir un ejecutable nativo y utilizar el tiempo de ejecución personalizado de Amazon si desea una huella de memoria menor y un tiempo de arranque en frío más rápido."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:19
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:22
#, fuzzy
msgid "To complete this guide, you need:"
msgstr "Para completar esta guía, necesitas:"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:24
msgid "less than 30 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:25
msgid "JDK 11 (AWS requires JDK 1.8 or 11)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:26
#, fuzzy
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {versión de Maven}"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:27
#, fuzzy
msgid "https://aws.amazon.com[An Amazon AWS account]"
msgstr "link:https://aws.amazon.com[Una cuenta de Amazon AWS]"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:28
#, fuzzy
msgid "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"
msgstr "link:https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:29
#, fuzzy
msgid "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI], for local testing"
msgstr "link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI], para pruebas locales"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:31
msgid "For Gradle projects please <<gradle,see below>>, or for further reference consult the guide in the link:gradle-tooling[Gradle setup page]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:32
#, fuzzy, no-wrap
msgid "Getting Started"
msgstr "Cómo empezar"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:35
#, fuzzy
msgid "This guide walks you through generating an example Java project via a maven archetype and deploying it to AWS."
msgstr "Esta guía le mostrará cómo generar un proyecto Java de ejemplo mediante un arquetipo de maven e implementarlo en AWS."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:36
#, fuzzy, no-wrap
msgid "Installing AWS bits"
msgstr "Instalación de los bits de AWS"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:40
msgid "Installing all the AWS bits is probably the most difficult thing about this guide.  Make sure that you follow all the steps for installing AWS CLI."
msgstr "Instalar todos los bits de AWS es probablemente lo más difícil de esta guía. Asegúrate de seguir todos los pasos para instalar AWS CLI."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:41
#, fuzzy, no-wrap
msgid "Creating the Maven Deployment Project"
msgstr "Creación del proyecto de implantación de Maven"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:44
#, fuzzy
msgid "Create the Quarkus AWS Lambda maven project using our Maven Archetype."
msgstr "Crea el proyecto Quarkus AWS Lambda maven usando nuestro Maven Archetype."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:52
#, no-wrap
msgid ""
"mvn archetype:generate \\\n"
"       -DarchetypeGroupId=io.quarkus \\\n"
"       -DarchetypeArtifactId=quarkus-amazon-lambda-archetype \\\n"
"       -DarchetypeVersion={quarkus-version}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:58
#, fuzzy
msgid "If you prefer to use Gradle, you can quickly and easily generate a Gradle project via https://code.quarkus.io/[code.quarkus.io] adding the `quarkus-amazon-lambda` extension as a dependency."
msgstr "Si prefiere utilizar Gradle, puede generar rápida y fácilmente un proyecto Gradle a través de link:https://code.quarkus.io/[code.quarkus.io] añadiendo la extensión `quarkus-amazon-lambda` como dependencia."

#. type: delimited block =
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:60
#, fuzzy
msgid "Copy the build.gradle, gradle.properties and settings.gradle into the above generated Maven archetype project, to follow along with this guide."
msgstr "Copie los archivos build.gradle, gradle.properties y settings.gradle en el proyecto arquetipo de Maven generado anteriormente, para seguir con esta guía."

#. type: delimited block =
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:62
#, fuzzy
msgid "Execute: gradle wrapper to setup the gradle wrapper (recommended)."
msgstr "Ejecute: gradle wrapper para configurar el gradle wrapper (recomendado)."

#. type: delimited block =
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:64
msgid "The dependency for `quarkus-test-amazon-lambda` will also need to be added to your build.gradle."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:66
#, fuzzy
msgid "For full Gradle details <<gradle, see below>>."
msgstr "Para conocer todos los detalles de Gradle xref:gradle[, consulte más abajo] ."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:69
#, fuzzy, no-wrap
msgid "Choose Your Lambda"
msgstr "Elija su lambda"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:74
msgid "The `quarkus-amazon-lambda` extension scans your project for a class that directly implements the Amazon `RequestHandler<?, ?>` or `RequestStreamHandler` interface.  It must find a class in your project that implements this interface or it will throw a build time failure.  If it finds more than one handler class, a build time exception will also be thrown."
msgstr "La extensión `quarkus-amazon-lambda` busca en tu proyecto una clase que implemente directamente la interfaz de Amazon `RequestHandler<?, ?>` o `RequestStreamHandler`. Debe encontrar una clase en tu proyecto que implemente esta interfaz o lanzará un fallo de compilación. Si encuentra más de una clase manejadora, también se lanzará una excepción de tiempo de compilación."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:78
msgid "Sometimes, though, you might have a few related lambdas that share code and creating multiple maven modules is just an overhead you don't want to do.  The `quarkus-amazon-lambda` extension allows you to bundle multiple lambdas in one project and use configuration or an environment variable to pick the handler you want to deploy."
msgstr "A veces, sin embargo, puedes tener unas cuantas lambdas relacionadas que comparten código y crear múltiples módulos de maven es una sobrecarga que no quieres hacer. La extensión `quarkus-amazon-lambda` te permite agrupar múltiples lambdas en un proyecto y utilizar la configuración o una variable de entorno para elegir el manejador que quieres desplegar."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:81
msgid "The generated project has three lambdas within it.  Two that implement the `RequestHandler<?, ?>` interface, and one that implements the `RequestStreamHandler` interface. One that is used and two that are unused.  If you open up `src/main/resources/application.properties` you'll see this:"
msgstr "El proyecto generado tiene tres lambdas dentro de él. Dos que implementan la interfaz `RequestHandler<?, ?>`, y una que implementa la interfaz `RequestStreamHandler`. Una que se usa y dos que no se usan. Si abres `src/main/resources/application.properties` verás esto:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:85
#, no-wrap
msgid "quarkus.lambda.handler=test\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:89
#, fuzzy
msgid "The `quarkus.lambda.handler` property tells Quarkus which lambda handler to deploy. This can be overridden with an environment variable too."
msgstr "La propiedad `quarkus.lambda.handler` le dice a Quarkus qué manejador lambda desplegar. Esto también puede anularse con una variable de entorno."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:91
#, fuzzy
msgid "If you look at the three generated handler classes in the project, you'll see that they are `@Named` differently."
msgstr "Si observas las tres clases manejadoras generadas en el proyecto, verás que son `@Named` diferentes."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:97
#, no-wrap
msgid ""
"@Named(\"test\")\n"
"public class TestLambda implements RequestHandler<InputObject, OutputObject> {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:101
#, no-wrap
msgid ""
"@Named(\"unused\")\n"
"public class UnusedLambda implements RequestHandler<InputObject, OutputObject> {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:105
#, no-wrap
msgid ""
"@Named(\"stream\")\n"
"public class StreamLambda implements RequestStreamHandler {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:108
msgid "The CDI name of the handler class must match the value specified within the `quarkus.lambda.handler` property."
msgstr "El nombre CDI de la clase manejadora debe coincidir con el valor especificado en la propiedad `quarkus.lambda.handler`."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:110
#, fuzzy, no-wrap
msgid "Deploy to AWS Lambda Java Runtime"
msgstr "Implementar en AWS Lambda Java Runtime"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:114
msgid "There are a few steps to get your lambda running on AWS.  The generated maven project contains a helpful script to create, update, delete, and invoke your lambdas for pure Java and native deployments."
msgstr "Hay algunos pasos para conseguir que su lambda se ejecute en AWS. El proyecto maven generado contiene un script útil para crear, actualizar, eliminar e invocar sus lambdas para implementaciones puramente Java y nativas."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:115
#, fuzzy, no-wrap
msgid "Build and Deploy"
msgstr "Construir y desplegar"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:118
msgid "Build the project using maven."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:122
#, fuzzy, no-wrap
msgid "./mvnw clean package\n"
msgstr "./mvnw paquete limpio"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:125
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:254
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:269
msgid "or, if using Gradle:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:127
#, no-wrap
msgid "./gradlew clean assemble\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:130
#, fuzzy
msgid "This will compile and package your code."
msgstr "Esto compilará y empaquetará su código."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:131
#, fuzzy, no-wrap
msgid "Create an Execution Role"
msgstr "Crear una función de ejecución"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:137
msgid "View the https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[Getting Started Guide] for deploying a lambda with AWS CLI.  Specifically, make sure you have created an `Execution Role`.  You will need to define a `LAMBDA_ROLE_ARN` environment variable in your profile or console window, Alternatively, you can edit the `manage.sh` script that is generated by the build and put the role value directly there:"
msgstr "Consulte la https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[Guía de inicio] para implementar un lambda con AWS CLI. Específicamente, asegúrese de haber creado un `Execution Role`. Tendrá que definir una variable de entorno `LAMBDA_ROLE_ARN` en su perfil o ventana de consola, alternativamente, puede editar el script `manage.sh` que es generado por la construcción y poner el valor del rol directamente allí:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:141
#, no-wrap
msgid "LAMBDA_ROLE_ARN=\"arn:aws:iam::1234567890:role/lambda-role\"\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:143
#, fuzzy, no-wrap
msgid "Extra Build Generated Files"
msgstr "Archivos extra generados por la compilación"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:147
msgid "After you run the build, there are a few extra files generated by the `quarkus-amazon-lambda` extension.  These files are in the the build directory: `target/` for maven, `build/` for gradle."
msgstr "Después de ejecutar la construcción, hay algunos archivos adicionales generados por la extensión `quarkus-amazon-lambda`. Estos archivos están en el directorio de construcción: `target/` para maven, `build/` para gradle."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:149
#, fuzzy
msgid "`function.zip` - lambda deployment file"
msgstr "`function.zip` - archivo de despliegue de lambda"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:150
#, fuzzy
msgid "`manage.sh` - wrapper around aws lambda cli calls"
msgstr "`manage.sh` - envoltura alrededor de las llamadas aws lambda cli"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:151
#, fuzzy
msgid "`bootstrap-example.sh` - example bootstrap script for native deployments"
msgstr "`bootstrap-example.sh` - ejemplo de secuencia de comandos de arranque para las implantaciones nativas"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:152
#, fuzzy
msgid "`sam.jvm.yaml` - (optional) for use with sam cli and local testing"
msgstr "`sam.jvm.yaml` - (opcional) para su uso con sam cli y pruebas locales"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:153
#, fuzzy
msgid "`sam.native.yaml` - (optional) for use with sam cli and native local testing"
msgstr "`sam.native.yaml` - (opcional) para su uso con sam cli y pruebas locales nativas"

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:154
#, fuzzy, no-wrap
msgid "Create the function"
msgstr "Crear la función"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:159
msgid "The `target/manage.sh` script is for managing your lambda using the AWS Lambda Java runtime.  This script is provided only for your convenience. Examine the output of the `manage.sh` script if you want to learn what aws commands are executed to create, delete, and update your lambdas."
msgstr "El script `target/manage.sh` es para administrar su lambda utilizando el tiempo de ejecución de AWS Lambda Java. Este script se proporciona sólo para su comodidad. Examine la salida del script `manage.sh` si desea saber qué comandos de aws se ejecutan para crear, eliminar y actualizar sus lambdas."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:161
#, fuzzy
msgid "`manage.sh` supports four operation: `create`, `delete`, `update`, and `invoke`."
msgstr "`manage.sh` admite cuatro operaciones: `create`, `delete`, `update`, y `invoke`."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:165
msgid "To verify your setup, that you have the AWS CLI installed, executed aws configure for the AWS access keys, and setup the `LAMBDA_ROLE_ARN` environment variable (as described above), please execute `manage.sh` without any parameters.  A usage statement will be printed to guide you accordingly."
msgstr "Para verificar su configuración, que tiene la CLI de AWS instalada, ha ejecutado aws configure para las claves de acceso de AWS y ha configurado la variable de entorno `LAMBDA_ROLE_ARN` (como se ha descrito anteriormente), ejecute `manage.sh` sin ningún parámetro. Se imprimirá una declaración de uso para guiarte en consecuencia."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:167
#, fuzzy
msgid "If using Gradle, the path to the binaries in the `manage.sh` must be changed from `target` to `build`"
msgstr "Si utiliza Gradle, la ruta a los binarios en `manage.sh` debe cambiarse de `target` a `build`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:169
msgid "To see the `usage` statement, and validate AWS configuration:"
msgstr "Para ver la declaración `usage`, y validar la configuración de AWS:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:172
#, no-wrap
msgid "sh target/manage.sh\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:175
msgid "You can `create` your function using the following command:"
msgstr "Puede crear su función utilizando el siguiente comando, `create` :"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:179
#, no-wrap
msgid "sh target/manage.sh create\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:182
#, fuzzy
msgid "or if you do not have `LAMBDA_ROLE_ARN` already defined in this shell:"
msgstr "o si no tiene `LAMBDA_ROLE_ARN` ya definido en este shell:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:186
#, no-wrap
msgid "LAMBDA_ROLE_ARN=\"arn:aws:iam::1234567890:role/lambda-role\" sh target/manage.sh create\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:190
msgid "Do not change the handler switch.  This must be hardcoded to `io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest`.  This handler bootstraps Quarkus and wraps your actual handler so that injection can be performed."
msgstr "No cambie el switch del manejador. Esto debe ser codificado en `io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest`. Este manejador arranca Quarkus y envuelve su manejador real para que la inyección pueda ser realizada."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:193
msgid "If there are any problems creating the function, you must delete it with the `delete` function before re-running the `create` command."
msgstr "Si hay algún problema en la creación de la función, debe borrarla con la función `delete` antes de volver a ejecutar el comando `create`."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:197
#, no-wrap
msgid "sh target/manage.sh delete\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:200
#, fuzzy
msgid "Commands may also be stacked:"
msgstr "Los comandos también pueden apilarse:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:203
#, no-wrap
msgid "sh target/manage.sh delete create\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:205
#, fuzzy, no-wrap
msgid "Invoke the Lambda"
msgstr "Invocar la lambda"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:208
#, fuzzy
msgid "Use the `invoke` command to invoke your function."
msgstr "Utilice el comando `invoke` para invocar su función."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:212
#, no-wrap
msgid "sh target/manage.sh invoke\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:216
#, fuzzy
msgid "The example lambda takes input passed in via the `--payload` switch which points to a json file in the root directory of the project."
msgstr "La lambda de ejemplo toma la entrada pasada a través del modificador `--payload` que apunta a un archivo json en el directorio raíz del proyecto."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:218
#, fuzzy
msgid "The lambda can also be invoked locally with the SAM CLI like this:"
msgstr "La lambda también se puede invocar localmente con la CLI de SAM de la siguiente manera:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:222
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:439
#, no-wrap
msgid "sam local invoke --template target/sam.jvm.yaml --event payload.json\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:225
#, fuzzy
msgid "If you are working with your native image build, simply replace the template name with the native version:"
msgstr "Si está trabajando con su construcción de imagen nativa, simplemente reemplace el nombre de la plantilla con la versión nativa:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:229
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:446
#, no-wrap
msgid "sam local invoke --template target/sam.native.yaml --event payload.json\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:231
#, fuzzy, no-wrap
msgid "Update the Lambda"
msgstr "Actualizar la lambda"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:235
msgid "You can update the Java code as you see fit.  Once you've rebuilt, you can redeploy your lambda by executing the `update` command."
msgstr "Puedes actualizar el código Java como creas conveniente. Una vez que hayas reconstruido, puedes volver a desplegar tu lambda ejecutando el comando `update`."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:239
#, no-wrap
msgid "sh target/manage.sh update\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:241
#, fuzzy, no-wrap
msgid "Deploy to AWS Lambda Custom (native) Runtime"
msgstr "Implementación en el tiempo de ejecución personalizado (nativo) de AWS Lambda"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:245
msgid "If you want a lower memory footprint and faster initialization times for your lambda, you can compile your Java code to a native executable.  Just make sure to rebuild your project with the `-Pnative` switch."
msgstr "Si quieres una menor huella de memoria y tiempos de inicialización más rápidos para tu lambda, puedes compilar tu código Java a un ejecutable nativo. Sólo asegúrese de reconstruir su proyecto con el interruptor `-Pnative`."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:247
#, fuzzy
msgid "For Linux hosts execute:"
msgstr "Para los hosts de Linux ejecutar:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:251
#, no-wrap
msgid "mvn package -Pnative\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:257
#, no-wrap
msgid "./gradlew build -Dquarkus.package.type=native\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:262
msgid "If you are building on a non-Linux system, you will need to also pass in a property instructing quarkus to use a docker build as Amazon Lambda requires linux binaries.  You can do this by passing this property to your Maven build: `-Dquarkus.native.container-build=true`, or for Gradle: `--docker-build=true`.  This requires you to have docker installed locally, however."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:266
#, no-wrap
msgid "./mvnw clean install -Pnative -Dquarkus.native.container-build=true \n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:272
#, no-wrap
msgid "./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:277
msgid "Either of these commands will compile and create a native executable image.  It also generates a zip file `target/function.zip`.  This zip file contains your native executable image renamed to `bootstrap`.  This is a requirement of the AWS Lambda Custom (Provided) Runtime."
msgstr "Cualquiera de estos comandos compilará y creará una imagen ejecutable nativa. También genera un archivo zip `target/function.zip`. Este archivo zip contiene su imagen ejecutable nativa renombrada a `bootstrap`. Este es un requisito del tiempo de ejecución personalizado (proporcionado) de AWS Lambda."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:280
msgid "The instructions here are exactly as above with one change: you'll need to add `native` as the first parameter to the `manage.sh` script:"
msgstr "Las instrucciones son exactamente las mismas que las anteriores con un cambio: tendrá que añadir `native` como primer parámetro del script `manage.sh`:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:284
#, no-wrap
msgid "sh target/manage.sh native create\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:289
msgid "As above, commands can be stacked.  The only requirement is that `native` be the first parameter should you wish to work with native image builds.  The script will take care of the rest of the details necessary to manage your native image function deployments."
msgstr "Como en el caso anterior, los comandos se pueden apilar. El único requisito es que `native` sea el primer parámetro si desea trabajar con construcciones de imágenes nativas. El script se encargará del resto de los detalles necesarios para gestionar sus despliegues de funciones de imagen nativa."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:292
#, fuzzy
msgid "Examine the output of the `manage.sh` script if you want to learn what aws commands are executed to create, delete, and update your lambdas."
msgstr "Examine la salida del script `manage.sh` si desea saber qué comandos aws se ejecutan para crear, eliminar y actualizar sus lambdas."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:295
#, fuzzy
msgid "One thing to note about the create command for native is that the `aws lambda create-function` call must set a specific environment variable:"
msgstr "Una cosa a tener en cuenta sobre el comando de creación para nativos es que la llamada a `aws lambda create-function` debe establecer una variable de entorno específica:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:299
#, no-wrap
msgid "--environment 'Variables={DISABLE_SIGNAL_HANDLERS=true}'\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:301
#, fuzzy, no-wrap
msgid "Examine the POM and Gradle build"
msgstr "Examinar el POM y la compilación Gradle"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:305
msgid "There is nothing special about the POM other than the inclusion of the `quarkus-amazon-lambda` and `quarkus-test-amazon-lambda` extensions as a dependencies.  The extension automatically generates everything you might need for your lambda deployment."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:308
#, fuzzy
msgid "In previous versions of this extension you had to set up your pom or gradle to zip up your executable for native deployments, but this is not the case anymore."
msgstr "En versiones anteriores de esta extensión tenía que configurar su pom o gradle para comprimir su ejecutable para despliegues nativos, pero esto ya no es así."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:310
#, no-wrap
msgid "Gradle build"
msgstr "Construcción de Gradle"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:315
msgid "Similarly for Gradle projects, you also just have to add the `quarkus-amazon-lambda` and `quarkus-test-amazon-lambda` dependencies.  The extension automatically generates everything you might need for your lambda deployment."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:317
#, fuzzy
msgid "Example Gradle dependencies:"
msgstr "Ejemplo de dependencias de Gradle:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:324
#, no-wrap
msgid ""
"dependencies {\n"
"    implementation enforcedPlatform(\"${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\")\n"
"    implementation 'io.quarkus:quarkus-resteasy'\n"
"    implementation 'io.quarkus:quarkus-amazon-lambda'\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:326
#, no-wrap
msgid "    testImplementation  \"io.quarkus:quarkus-test-amazon-lambda\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:330
#, no-wrap
msgid ""
"    testImplementation 'io.quarkus:quarkus-junit5'\n"
"    testImplementation 'io.rest-assured:rest-assured'\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:333
#, fuzzy, no-wrap
msgid "Integration Testing"
msgstr "Pruebas de integración"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:337
msgid "The Quarkus Amazon Lambda extension has a matching test framework that provides functionality to execute standard JUnit tests on your AWS Lambda function, via the integration layer that Quarkus provides.  This is true for both JVM and native modes.  It provides similar functionality to the SAM CLI, without the overhead of Docker."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:340
msgid "To illustrate, the project generated by the Maven archetype, generates a JUnit test for the `RequestHandler<?, ?>` implementation, which is shown below.  The test replicates the execution environment, for the function that is selected for invocation, as described <<choose, above>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:342
msgid "To use the integration tests in your project there is a required property, in `src/test/resources/application.properties`. If not included, the integration tests will be in a constant loop."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:346
#, no-wrap
msgid "quarkus.lambda.enable-polling-jvm-mode=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:350
msgid "If you are following along with the example Maven archetype project for AWS Lambda in this guide, it includes the required property `quarkus.lambda.enable-polling-jvm-mode=true` in the test `application.properties`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:355
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class LambdaHandlerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:361
#, no-wrap
msgid ""
"    @Test\n"
"    public void testSimpleLambdaSuccess() throws Exception {\n"
"        InputObject in = new InputObject();\n"
"        in.setGreeting(\"Hello\");\n"
"        in.setName(\"Stu\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:363
#, no-wrap
msgid "        OutputObject out = LambdaClient.invoke(OutputObject.class, in);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:368
#, no-wrap
msgid ""
"        Assertions.assertEquals(\"Hello Stu\", out.getResult());\n"
"        Assertions.assertTrue(out.getRequestId().matches(\"aws-request-\\\\d\"), \"Expected requestId as 'aws-request-<number>'\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:372
msgid "Similarly, if you are using a `RequestStreamHandler` implementation, you can add a matching JUnit test, like below, which aligns to the generated `StreamLambda` class in the generated project."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:375
msgid "Obviously, these two types of tests are mutually exclusive.  You must have a test that corresponds to the implemented AWS Lambda interfaces, whether `RequestHandler<?, ?>` or `RequestStreamHandler`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:378
msgid "Two versions of the Test for `RequestStreamHandler` are presented below.  You can use either, depending on the needs of your Unit test.  The first is obviously simpler and quicker.  Using Java streams can require more coding."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:383
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class LambdaStreamHandlerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:385
#, no-wrap
msgid "    private static Logger LOG = Logger.getLogger(LambdaStreamHandlerTest.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:391
#, no-wrap
msgid ""
"    @Test\n"
"    public void testSimpleLambdaSuccess() throws Exception {\n"
"        String out = LambdaClient.invoke(String.class, \"lowercase\");\n"
"        Assertions.assertEquals(\"LOWERCASE\", out);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:398
#, no-wrap
msgid ""
"    @Test\n"
"    public void testInputStreamSuccess() {\n"
"        try {\n"
"            String input = \"{ \\\"name\\\": \\\"Bill\\\", \\\"greeting\\\": \\\"hello\\\"}\";\n"
"            InputStream inputStream = new ByteArrayInputStream(input.getBytes());\n"
"            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:400
#, no-wrap
msgid "            LambdaClient.invoke(inputStream, outputStream);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:407
#, no-wrap
msgid ""
"            ByteArrayInputStream out = new ByteArrayInputStream(outputStream.toByteArray());\n"
"            StringBuilder response = new StringBuilder();\n"
"            int i = 0;\n"
"            while ((i = out.read()) != -1) {\n"
"                response.append((char)i);\n"
"            }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:413
#, no-wrap
msgid ""
"            Assertions.assertTrue(response.toString().contains(\"BILL\"));\n"
"        } catch (Exception e) {\n"
"            Assertions.fail(e.getMessage());\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:415
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:418
msgid "If your code uses CDI injection, this too will be executed, along with mocking functionality, see the link:getting-started-testing[Test Guide] for more details."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:420
msgid "To add JUnit functionality for native tests, add the `@NativeImageTest` annotation to a subclass of your test class, which will execute against your native image, and can be leveraged in an IDE."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:422
#, fuzzy, no-wrap
msgid "Testing with the SAM CLI"
msgstr "Pruebas con la CLI de SAM"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:428
msgid "The https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI] allows you to run your lambdas locally on your laptop in a simulated Lambda environment.  This requires https://www.docker.com/products/docker-desktop[docker] to be installed.  This is an optional approach should you choose to take advantage of it.  Otherwise, the Quarkus JUnit integration should be sufficient for most of your needs."
msgstr "La  https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]  le permite ejecutar sus lambdas localmente en su portátil en un entorno de Lambda simulado. Esto requiere la instalación de https://www.docker.com/products/docker-desktop[docker]. Este es un enfoque opcional en caso de que decidas aprovecharlo. De lo contrario, la integración de Quarkus JUnit debería ser suficiente para la mayoría de sus necesidades."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:430
#, fuzzy
msgid "A starter template has been generated for both JVM and native execution modes."
msgstr "Se ha generado una plantilla de inicio para los modos de ejecución JVM y nativo."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:433
msgid "Run the following SAM CLI command to locally test your lambda function, passing the appropriate SAM `template`.  The `event` parameter takes any JSON file, in this case the sample `payload.json`."
msgstr "Ejecute el siguiente comando CLI de SAM para probar localmente su función lambda, pasando el parámetro apropiado de SAM `template`. El parámetro `event` toma cualquier archivo JSON, en este caso el ejemplo `payload.json`."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:435
#, fuzzy
msgid "If using Gradle, the path to the binaries in the YAML templates must be changed from `target` to `build`"
msgstr "Si se utiliza Gradle, la ruta a los binarios en las plantillas YAML debe cambiarse de `target` a `build`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:442
msgid "The native image can also be locally tested using the `sam.native.yaml` template:"
msgstr "La imagen nativa también puede probarse localmente utilizando la plantilla `sam.native.yaml`:"

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:448
#, fuzzy, no-wrap
msgid "Modifying `function.zip`"
msgstr "Modificación de `function.zip`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:453
msgid "The are times where you may have to add some additions to the `function.zip` lambda deployment that is generated by the build.  To do this create a `zip.jvm` or `zip.native` directory within `src/main`.  Create `zip.jvm/` if you are doing a pure Java lambda.  `zip.native/` if you are doing a native deployment."
msgstr "Hay veces en las que puedes tener que añadir algunas adiciones al despliegue de lambda `function.zip` que es generado por la construcción. Para ello crea un directorio `zip.jvm` o `zip.native` dentro de `src/main`. Crea `zip.jvm/` si estás haciendo una lambda puramente Java. `zip.native/` si estás haciendo un despliegue nativo."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:455
#, fuzzy
msgid "Any you files and directories you create under your zip directory will be included within `function.zip`"
msgstr "Todos los archivos y directorios que crees bajo tu directorio zip se incluirán dentro de `function.zip`"

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:456
#, fuzzy, no-wrap
msgid "Custom `bootstrap` script"
msgstr "Guión personalizado de `bootstrap`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:462
msgid "There are times you may want to set a specific system properties or other arguments when lambda invokes your native quarkus lambda deployment.  If you include a `bootstrap` script file within `zip.native`, the quarkus extension will automatically rename the executable to `runner` within `function.zip` and set the unix mode of the `bootstrap` script to executable."
msgstr "Hay veces que puedes querer establecer unas propiedades específicas del sistema u otros argumentos cuando lambda invoca tu despliegue lambda nativo de quarkus. Si incluyes un archivo de script `bootstrap` dentro de `zip.native`, la extensión quarkus renombrará automáticamente el ejecutable a `runner` dentro de `function.zip` y establecerá el modo unix del script `bootstrap` a ejecutable."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:464
msgid "The native executable must be referenced as `runner` if you include a custom `bootstrap` script."
msgstr "El ejecutable nativo debe ser referenciado como `runner` si incluye un script personalizado de `bootstrap`."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:466
#, fuzzy
msgid "The extension generates an example script within `target/bootstrap-example.sh`."
msgstr "La extensión genera un script de ejemplo dentro de `target/bootstrap-example.sh`."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:467
#, fuzzy, no-wrap
msgid "Tracing with AWS XRay and GraalVM"
msgstr "Rastreo con AWS XRay y GraalVM"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:472
msgid "If you are building native images, and want to use https://aws.amazon.com/xray[AWS X-Ray Tracing] with your lambda you will need to include `quarkus-amazon-lambda-xray` as a dependency in your pom.  The AWS X-Ray library is not fully compatible with GraalVM so we had to do some integration work to make this work."
msgstr "Si estás construyendo imágenes nativas, y quieres usar https://aws.amazon.com/xray[AWS X-Ray Tracing] con tu lambda necesitarás incluir `quarkus-amazon-lambda-xray` como una dependencia en tu pom. La biblioteca de AWS X-Ray no es totalmente compatible con GraalVM, por lo que hemos tenido que hacer un trabajo de integración para que funcione."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:474
msgid "In addition, remember to enable the AWS X-Ray tracing parameter in `manage.sh`, in the `cmd_create()` function.  This can also be set in the AWS Management Console."
msgstr "Además, recuerde habilitar el parámetro de rastreo de AWS X-Ray en `manage.sh`, en la función `cmd_create()`. Esto también se puede configurar en la consola de administración de AWS."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:477
#, no-wrap
msgid "    --tracing-config Mode=Active\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:480
#, fuzzy
msgid "For the sam template files, add the following to the YAML function Properties."
msgstr "Para los archivos de plantilla sam, añada lo siguiente a las Propiedades de la función YAML."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:483
#, no-wrap
msgid "    Tracing: Active\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:487
msgid "AWS X-Ray does add many classes to your distribution, do ensure you are using at least the 256MB AWS Lambda memory size.  This is explicitly set in `manage.sh` `cmd_create()`. Whilst the native image potentially can always use a lower memory setting, it would be recommended to keep the setting the same, especially to help compare performance."
msgstr "AWS X-Ray añade muchas clases a su distribución, asegúrese de que está utilizando al menos el tamaño de memoria de 256 MB de AWS Lambda. Esto se establece explícitamente en `manage.sh` `cmd_create()` . Aunque la imagen nativa siempre puede utilizar una configuración de memoria más baja, se recomienda mantener la misma configuración, especialmente para ayudar a comparar el rendimiento."

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:489
#, fuzzy, no-wrap
msgid "Using HTTPS or SSL/TLS"
msgstr "Uso de HTTPS o SSL/TLS"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:494
msgid "If your code makes HTTPS calls, such as to a micro-service (or AWS service), you will need to add configuration to the native image, as GraalVM will only include the dependencies when explicitly declared.  Quarkus, by default enables this functionality on extensions that implicitly require it.  For further information, please consult the link:native-and-ssl[Quarkus SSL guide]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:496
#, fuzzy
msgid "Open src/main/resources/application.properties and add the following line to enable SSL in your native image."
msgstr "Abra src/main/resources/application.properties y añada la siguiente línea para habilitar SSL en su imagen nativa."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:500
#, no-wrap
msgid "quarkus.ssl.native=true\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:503
#, fuzzy, no-wrap
msgid "Using the AWS Java SDK v2"
msgstr "Uso del AWS Java SDK v2"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:506
msgid "Quarkus now has extensions for DynamoDB, S3, SNS and SQS (more coming). Please check those guides on how to use the various AWS Services with Quarkus, as opposed to wiring manually like below."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:509
#, fuzzy
msgid "With minimal integration, it is possible to leverage the AWS Java SDK v2, which can be used to invoke services such as SQS, SNS, S3 and DynamoDB."
msgstr "Con una integración mínima, es posible aprovechar el AWS Java SDK v2, que puede utilizarse para invocar servicios como SQS, SNS, S3 y DynamoDB."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:512
#, fuzzy
msgid "For native image, however the URL Connection client must be preferred over the Apache HTTP Client when using synchronous mode, due to issues in the GraalVM compilation (at present)."
msgstr "Para la imagen nativa, sin embargo el cliente Conexión URL debe ser preferido sobre el Cliente Apache HTTP cuando se utiliza el modo síncrono, debido a problemas en la compilación GraalVM (en la actualidad)."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:514
msgid "Add `quarkus-jaxb` as a dependency in your Maven `pom.xml`, or Gradle `build.gradle` file."
msgstr "Añade `quarkus-jaxb` como dependencia en tu archivo Maven `pom.xml`, o Gradle `build.gradle`."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:517
#, fuzzy
msgid "You must also force your AWS service client for SQS, SNS, S3 et al, to use the URL Connection client, which connects to AWS services over HTTPS, hence the inclusion of the SSL enabled property, as described in the <<https>> section above."
msgstr "También debe forzar a su cliente de servicios de AWS para SQS, SNS, S3 et al, a utilizar el cliente de Conexión URL, que se conecta a los servicios de AWS a través de HTTPS, de ahí la inclusión de la propiedad SSL enabled, tal y como se describe en la sección <<https>> anterior."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:523
#, no-wrap
msgid ""
"// select the appropriate client, in this case SQS, and\n"
"// insert your region, instead of XXXX, which also improves startup time over the default client\n"
"  client = SqsClient.builder().region(Region.XXXX).httpClient(software.amazon.awssdk.http.urlconnection.UrlConnectionHttpClient.builder().build()).build();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:526
#, fuzzy
msgid "For Maven, add the following to your `pom.xml`."
msgstr "Para Maven, añada lo siguiente a su `pom.xml`."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:533
#, no-wrap
msgid ""
"    <properties>\n"
"        <aws.sdk2.version>2.10.69</aws.sdk2.version>\n"
"    </properties>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:536
#, no-wrap
msgid ""
"    <dependencyManagement>\n"
"        <dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:544
#, no-wrap
msgid ""
"            <dependency>\n"
"                <groupId>software.amazon.awssdk</groupId>\n"
"                <artifactId>bom</artifactId>\n"
"                <version>${aws.sdk2.version}</version>\n"
"                <type>pom</type>\n"
"                <scope>import</scope>\n"
"            </dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:548
#, no-wrap
msgid ""
"        </dependencies>\n"
"    </dependencyManagement>\n"
"    <dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:553
#, no-wrap
msgid ""
"        <dependency>\n"
"            <groupId>software.amazon.awssdk</groupId>\n"
"            <artifactId>url-connection-client</artifactId>\n"
"        </dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:564
#, no-wrap
msgid ""
"        <dependency>\n"
"            <groupId>software.amazon.awssdk</groupId>\n"
"            <artifactId>apache-client</artifactId>\n"
"            <exclusions>\n"
"                <exclusion>\n"
"                    <groupId>commons-logging</groupId>\n"
"                    <artifactId>commons-logging</artifactId>\n"
"                </exclusion>\n"
"            </exclusions>\n"
"        </dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:585
#, no-wrap
msgid ""
"        <dependency>\n"
"            <groupId>software.amazon.awssdk</groupId>\n"
"            <!-- sqs/sns/s3 etc -->\n"
"            <artifactId>sqs</artifactId>\n"
"            <exclusions>\n"
"                <!-- exclude the apache-client and netty client -->\n"
"                <exclusion>\n"
"                    <groupId>software.amazon.awssdk</groupId>\n"
"                    <artifactId>apache-client</artifactId>\n"
"                </exclusion>\n"
"                <exclusion>\n"
"                    <groupId>software.amazon.awssdk</groupId>\n"
"                    <artifactId>netty-nio-client</artifactId>\n"
"                </exclusion>\n"
"                <exclusion>\n"
"                    <groupId>commons-logging</groupId>\n"
"                    <artifactId>commons-logging</artifactId>\n"
"                </exclusion>\n"
"            </exclusions>\n"
"        </dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:592
#, no-wrap
msgid ""
"        <dependency>\n"
"            <groupId>org.jboss.logging</groupId>\n"
"            <artifactId>commons-logging-jboss-logging</artifactId>\n"
"            <version>1.0.0.Final</version>\n"
"        </dependency>\n"
"    </dependencies>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:596
msgid "if you see `java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty` or similar SSL error, due to the current status of GraalVM, there is some additional work to bundle the `function.zip`, as below.  For more information, please see the link:native-and-ssl[Quarkus Native SSL Guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:597
#, fuzzy, no-wrap
msgid "Additional requirements for client SSL"
msgstr "Requisitos adicionales para SSL cliente"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:600
msgid "The native executable requires some additional steps to enable client ssl that S3 and other aws libraries need."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:602
#, fuzzy
msgid "A custom `bootstrap` script"
msgstr "Un script personalizado de `bootstrap`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:603
#, fuzzy
msgid "`libsunec.so` must be added to `function.zip`"
msgstr "`libsunec.so` debe añadirse a `function.zip`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:604
#, fuzzy
msgid "`cacerts` must be added to `function.zip`"
msgstr "`cacerts` debe añadirse a `function.zip`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:607
msgid "To do this, first create a directory `src/main/zip.native/` with your build.  Next create a shell script file called `bootstrap` within `src/main/zip.native/`, like below. An example is create automatically in your build folder (target or build), called `bootstrap-example.sh`"
msgstr "Para ello, primero cree un directorio `src/main/zip.native/` con su construcción. A continuación, cree un archivo de secuencia de comandos llamado `bootstrap` dentro de `src/main/zip.native/`, como se indica a continuación. Un ejemplo es crear automáticamente en su carpeta de construcción (target o build), llamado `bootstrap-example.sh`"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:611
#, no-wrap
msgid "#!/usr/bin/env bash\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:613
#, no-wrap
msgid "./runner -Djava.library.path=./ -Djavax.net.ssl.trustStore=./cacerts\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:616
#, fuzzy
msgid "Additional set `-Djavax.net.ssl.trustStorePassword=changeit` if your `cacerts` file is password protected."
msgstr "Conjunto adicional `-Djavax.net.ssl.trustStorePassword=changeit` si su archivo `cacerts` está protegido por contraseña."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:618
#, fuzzy
msgid "Next you must copy some files from your GraalVM distribution into `src/main/zip.native/`."
msgstr "A continuación, debe copiar algunos archivos de su distribución GraalVM en `src/main/zip.native/`."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:620
#, fuzzy
msgid "GraalVM versions can have different paths for these files, and whether you using the Java 8 or 11 version. Adjust accordingly."
msgstr "Las versiones de GraalVM pueden tener diferentes rutas para estos archivos, y si utiliza la versión Java 8 u 11. Ajústelo en consecuencia."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:625
#, no-wrap
msgid ""
"cp $GRAALVM_HOME/lib/libsunec.so $PROJECT_DIR/src/main/zip.native/\n"
"cp $GRAALVM_HOME/lib/security/cacerts $PROJECT_DIR/src/main/zip.native/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:628
#, fuzzy
msgid "Now when you run the native build all these files will be included within `function.zip`"
msgstr "Ahora, cuando ejecute la compilación nativa, todos estos archivos se incluirán en `function.zip`"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:630
#, fuzzy
msgid "If you are using a Docker image to build, then you must extract these files from this image."
msgstr "Si está utilizando una imagen Docker para compilar, debe extraer estos archivos de esta imagen."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:632
#, fuzzy
msgid "To extract the required ssl, you must start up a Docker container in the background, and attach to that container to copy the artifacts."
msgstr "Para extraer el ssl necesario, debe iniciar un contenedor Docker en segundo plano, y adjuntar a ese contenedor para copiar los artefactos."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:634
#, fuzzy
msgid "First, let's start the GraalVM container, noting the container id output."
msgstr "En primer lugar, vamos a iniciar el contenedor GraalVM, tomando nota de la salida de id de contenedor."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:637
#, no-wrap
msgid "docker run -it -d --entrypoint bash quay.io/quarkus/ubi-quarkus-native-image:{graalvm-flavor}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:640
#, no-wrap
msgid ""
"# This will output a container id, like 6304eea6179522aff69acb38eca90bedfd4b970a5475aa37ccda3585bc2abdde\n"
"# Note this value as we will need it for the commands below\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:643
#, fuzzy
msgid "First, libsunec.so, the C library used for the SSL implementation:"
msgstr "En primer lugar, libsunec.so, la biblioteca C utilizada para la implementación de SSL:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:647
#, no-wrap
msgid "docker cp {container-id-from-above}:/opt/graalvm/lib/libsunec.so src/main/zip.native/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:650
msgid "Second, cacerts, the certificate store.  You may need to periodically obtain an updated copy, also."
msgstr "En segundo lugar, cacerts, el almacén de certificados. Es posible que tenga que obtener periódicamente una copia actualizada, también."

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:653
#, no-wrap
msgid "docker cp {container-id-from-above}:/opt/graalvm/lib/security/cacerts src/main/zip.native/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:656
#, fuzzy
msgid "Your final archive will look like this:"
msgstr "Tu archivo final tendrá este aspecto:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:659
#, no-wrap
msgid "jar tvf target/function.zip\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:664
#, no-wrap
msgid ""
"    bootstrap\n"
"    runner\n"
"    cacerts\n"
"    libsunec.so\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:666
#, fuzzy, no-wrap
msgid "Amazon Alexa Integration"
msgstr "Integración de Amazon Alexa"

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:669
msgid "To use Alexa with Quarkus native, please add the following extension."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:676
#, no-wrap
msgid ""
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-amazon-alexa</artifactId>\n"
"        </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:679
#, fuzzy
msgid "Create your Alexa handler, as normal, by sub-classing the abstract `com.amazon.ask.SkillStreamHandler`, and add your request handler implementation."
msgstr "Crea tu manejador Alexa, como es normal, subclasificando el abstracto `com.amazon.ask.SkillStreamHandler`, y añade la implementación de tu manejador de peticiones."

#. type: Plain text
#: upstream/_versions/2.2/guides/amazon-lambda.adoc:680
#, fuzzy
msgid "That's all there is to it!"
msgstr "¡Eso es todo!"
