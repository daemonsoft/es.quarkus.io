# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-25 18:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Reactive CRUD Performance: A Case Study"
msgstr "Rendimiento del CRUD reactivo: Un estudio de caso"

#. type: YAML Front Matter: synopsis
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "By carefully fixing and designing a performance test to ensure that only Quarkus is being stressed, throughput improves from 1.75 req/sec to nearly 26,000 req/sec"
msgstr "Al fijar y diseñar cuidadosamente una prueba de rendimiento para garantizar que sólo Quarkus está siendo estresado, el rendimiento mejora de 1,75 req/seg a casi 26.000 req/seg"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "We were approached for comment about the relative performance of Quarkus for a reactive CRUD workload.  This is a good case study into performance test design and some of the considerations required and hurdles that need to be overcome. What methodology can we derive for ensuring that the test we are performing is indeed the test that we are expecting?"
msgstr "Nos pidieron comentarios sobre el rendimiento relativo de Quarkus para una carga de trabajo CRUD reactiva. Este es un buen caso de estudio sobre el diseño de pruebas de rendimiento y algunas de las consideraciones necesarias y los obstáculos que hay que superar. ¿Qué metodología podemos derivar para asegurar que la prueba que estamos realizando es realmente la prueba que esperamos?"

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "\"Why is Quarkus 600x times slower than `{INSERT_FRAMEWORK_HERE}`?!?\""
msgstr "\"¿Por qué Quarkus es 600 veces más lento que `{INSERT_FRAMEWORK_HERE}`?\""

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "A recent report of bad result from Quarkus warranted some further investigation. On the face of it the results looked bad, really bad, for Quarkus."
msgstr "Un informe reciente sobre los malos resultados de Quarkus justificaba una investigación más profunda. A primera vista, los resultados parecían malos, realmente malos, para Quarkus."

#. type: Title ===
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "tl;dr"
msgstr "tl;dr"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "By correcting implementation errors in a benchmark test, and carefully designing the test environment to ensure that only the application is being stressed, Quarkus goes from handling *1.75 req/sec* to nearly *26,000 req/sec*. Each request queried and wrote to a MySQL database, using the same load driver and hardware."
msgstr "Corrigiendo los errores de implementación en una prueba de referencia, y diseñando cuidadosamente el entorno de prueba para garantizar que sólo se estresa la aplicación, Quarkus pasa de manejar *1,75 req/seg* a casi *26.000 req/seg.* Cada solicitud consultó y escribió en una base de datos mysql, utilizando el mismo controlador de carga y hardware."

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Test architecture"
msgstr "Arquitectura de prueba"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "The test that was shared with us is a simple load test that updates a database via REST invocations;"
msgstr "La prueba que se compartió con nosotros es una simple prueba de carga que actualiza una base de datos a través de invocaciones REST;"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "A load generator creates a continuous stream of HTTP POST requests to a REST api. In this case https://github.com/wg/wrk[wrk]"
msgstr "Un generador de carga crea un flujo continuo de peticiones HTTP POST a una api REST. En este caso  link:https://github.com/wg/wrk[wrk]"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "A Quarkus application process the request via https://quarkus.io/guides/resteasy-reactive[RESTEasy Reactive]"
msgstr "Una aplicación Quarkus procesa la solicitud a través de  link:https://quarkus.io/guides/resteasy-reactive[RESTEasy Reactive]"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "The Quarkus application queries and updates a MySQL database instance via https://hibernate.org/reactive/[Hibernate Reactive]"
msgstr "La aplicación Quarkus consulta y actualiza una instancia de base de datos MySQL mediante  link:https://hibernate.org/reactive/[Hibernate Reactive]"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "The source code for the test can be found here: https://github.com/thiagohora/tutorials/tree/fix_jmeter_test"
msgstr "El código fuente de la prueba puede encontrarse aquí:  https://github.com/thiagohora/tutorials/tree/fix_jmeter_test"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "To learn more about creating Reactive Applications with Quarkus, please read the https://quarkus.io/guides/getting-started-reactive[Getting Started With Reactive] guide"
msgstr "Para obtener más información sobre la creación de aplicaciones reactivas con Quarkus, por favor, lea la guía  link:https://quarkus.io/guides/getting-started-reactive[Getting Started With Reactive]"

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Initial Results image:emoji-unhappy.png[Unhappy, 35, 35]"
msgstr "Primeros resultados  image:emoji-unhappy.png[alt=Unhappy]"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "Initial results for Quarkus were not promising;"
msgstr "Los resultados iniciales de Quarkus no fueron prometedores;"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "That was 105 requests in 60 seconds, with 10 errors. Only 95 requests had been successfully sent in 60 seconds, or *1.75 req/sec*"
msgstr "Fueron 105 peticiones en 60 segundos, con 10 errores. Sólo se han enviado con éxito 95 peticiones en 60 segundos, es decir, *1,75 req/seg.*"

#. type: Plain text
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy
msgid "Running the comparison test on my machine;"
msgstr "Realizando la prueba de comparación en mi máquina;"

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Overall, the request rate that Quarkus could support was only *1.75 req/sec!!* Ok, so it wasn't *600* times slower, but it was *192* times slower on my machine."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "but... something was not correct, Quarkus was displaying the following exception in the service logs;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "An initial investigation showed that the number of open MySQL connections during the test was very high: **96 open connections**"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "And checking the number of inserts the application had managed to perform within 1minutes;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "There was obviously something wrong with the database connections! Each connection was committing only a single value to the database and no more progress was being made. The number of entries in the database tallied _exactly_ with the number of successful HTTP requests."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Reviewing the CPU time for the Quarkus process confirmed that no further work was being done after the initial 95 commits to the database, the application was deadlocked;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Is the application behaving as expected?*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "If the application is erroring, the results are not valid. Before continuing, investigate *why* the errors are occurring and fix the application."
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Initial inspection of code"
msgstr "Inspección inicial del código"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "A quick review of the code revealed the deadlocking issue;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Ah Ha! the endpoint is annotated with `@Transactional`. The application is using Hibernate Reactive, so instead we need to use the  `@ReactiveTransactional` annotation. For further details, please read the https://quarkus.io/guides/hibernate-reactive-panache#transactions[Simplified Hibernate Reactive with Panache] guide. This can be confusing, but conversations have started about how to clarify the different requirements and warn users if there is an issue."
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Quarkus Application Fixed image:emoji-happy.png[Happy, 35, 35]"
msgstr "Aplicación de Quarkus arreglada  image:emoji-happy.png[alt=Happy]"

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Let's try again:"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "**390.21 req/sec!!** that's much better!!"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "With the test fixed, we can see a lot more data in the database table;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "The test has been designed to query the database if a ZipCode already exists, before attempting to insert a new ZipCode. There are a finite number of ZipCodes, so as the test progresses, the number of ZipCode entries will tend towards the maximum number of ZipCodes. The workload progresses from being write heavy to read heavy."
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Same results image:emoji-unhappy.png[Unhappy, 35, 35]"
msgstr "Los mismos resultados  image:emoji-unhappy.png[alt=Unhappy]"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "but... my hard disk on my machine was making a **lot** of noise during the test! The Quarkus result of *390.21 req/sec* is suspiciously similar to the comparison baseline of *336.86 req/sec*, and..."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "The application is using less than **0.5** cores on a **32** core machine... hmm!"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Is the application the bottleneck?*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "If a *system component* is the performance bottleneck (i.e. not the application under test), we are not actually stress testing the application."
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Move to a faster Disk image:emoji-happy.png[Happy, 35, 35]"
msgstr "Pasar a un disco más rápido  image:emoji-happy.png[alt=Happy]"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Let's move the database files to a faster disk;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "and re-run the test"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Sit back, Relax and Profit! *25,599.85 req/sec!*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Do not stop here!*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "While it is easy to claim we have resolved the issue, for comparisons, we still do not have a controlled environment to run tests!"
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "System bottleneck still exists image:emoji-unhappy.png[Unhappy, 35, 35]"
msgstr "El cuello de botella del sistema sigue existiendo  image:emoji-unhappy.png[alt=Unhappy]"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "the Quarkus process is now using 4.5 cores..."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "but... the system is *60%* idle"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "We still have a bottleneck outside of the application, most likely within MySQL or we are still I/O bound!"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "At this point, we have a couple of options, we can either;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "A) tune MySQL/IO so that they are no longer the bottleneck"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "or"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "B) constrain that application below the maximum, such that the rest of the system is operating within its limits"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "The easiest option is to simply constrain the application."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Choose your scaling methodology*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "We can either scale up or tune the system, or we can scale down the application to below the limits of the system."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Choosing to scale up the system, or constrain the application, is a decision dependent on the goals of the testing."
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Constrain application image:emoji-happy.png[Happy, 35, 35]"
msgstr "Limitar la aplicación  image:emoji-happy.png[alt=Happy]"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "We will remove the MySQL/System bottleneck by constraining the application to 4 CPU cores, therefore reducing the maximum load the application can drive to the database. We achieve this by running the application in docker;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "and re-running the test;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Ok, so we are not at Max Throughput, but we *have* removed the system outside of the application as a bottleneck. *The bottleneck is NOW the application*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Create an environment where the comparisons are valid*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "By constraining the application, we are not running at absolute Max Throughput possible, _but_ we have created an environment that allows for comparisons between frameworks."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "With a constrained application environment, we will not be in the situation where one or more frameworks are sustaining throughput levels that are at the limit of the system."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "If any application _is_ at the system limit, the results are invalid."
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "All network traffic is not equal! image:emoji-unhappy.png[Unhappy, 35, 35]"
msgstr "No todo el tráfico de la red es igual.  image:emoji-unhappy.png[alt=Unhappy]"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Further investigation showed that Quarkus is not running with TLS enabled between the application and database, so database network traffic is running un-encrypted. Let's fix that;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "and re-run"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "This provided us with a final, comparable throughput result of *14,955.61 req/sec*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*For comparisons, we need to ensure that each framework is performing the same work*"
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Results image:emoji-happy.png[Happy, 35, 35]"
msgstr "Resultados  image:emoji-happy.png[alt=Happy]"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Is Quarkus really 600x times slower than Framework X/Y/Z? *Of course not!*"
msgstr ""

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "On my machine;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "the initial result was *1.75 req/sec*."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "fixing the application brought that up to *390.21 req/sec*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "fixing some of the system bottlenecks gave us **25,599.85 req/sec**"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "constraining the application, so that a fairer comparison with other frameworks can be made resulted in *18,667.87 req/sec*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "and finally, enabling TLS encryption to the database gives a final result of *14,955.61 req/sec*"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Run *5* gives us our baseline for comparison, *14,955.61 req/sec*"
msgstr ""

#. type: Title ===
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Where does that leave Quarkus compared to Framework X/Y/Z?"
msgstr "¿Dónde deja eso a Quarkus en comparación con el Marco X/Y/Z?"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "well... that is an exercise for the reader ;-)"
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumen"

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Do these results show that Quarkus is quick? Well kinda, they hint at it, but there are still issues with the methodology that need resolving."
msgstr ""

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "However, when faced with a benchmark result, especially one that does not appear to make sense, there are a number of steps you can take to validate the result;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Fix the application*: Are there errors? Is the test functioning as expected? If there are errors, resolve them"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Ensure the application is the bottleneck*: What are the limiting factors for the test? Is the test CPU, Network I/O, Disk I/O bound?"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Do not stop evaluating the test when you see a _\"good\"_ result*. For comparisons, you need to ensure that _every_ framework is the limiting factor for performance and not the system."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Chose how to constrain the application*: either by scaling up the system, or scaling down the application."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Validate that all frameworks are doing the same work*. For comparisons, are the frameworks performing the same work?"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Ensure al frameworks are providing the same level of security*. Are the semantics the same?  e.g. same TLS encoding? same db transaction isolation levels?"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "The System Under Test includes the *System*. Do not automatically _assume_ that your application is the bottleneck"
msgstr ""

#. type: Title ==
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
#, fuzzy, no-wrap
msgid "Notes on Methodology"
msgstr "Notas sobre la metodología"

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "*Does this benchmark tell us everything we need to know about how Quarkus behaves under load? Not really! It gives us _one_ data point*"
msgstr ""

#. type: delimited block -
#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "In order to have a meaningful understanding of behavior under load, the following issues with methodology need to be addressed;"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Load generation, database and application are all running on a single machine. The current test does not stress any of the network stack and there are side effects due to co-location of services. The application topology needs to be representative of a production environment."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "This test does not measure application responsiveness from a _users perspective_. A tool that does not suffer from http://highscalability.com/blog/2015/10/5/your-load-generator-is-probably-lying-to-you-take-the-red-pi.html[coordinated omissions], such as https://hyperfoil.io/[Hyperfoil], is required to accurately measure service response time, including system wait time. *throughput != response time* and response time is what matters to users!"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "The mixture of read/writes to the database changes throughout the duration of the test. Initially the load is very write heavy, as time progresses, the database load is predominantly read heavy. A more consistent pattern of read/writes should be maintained throughout the test duration."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "The applications are not given time to correctly \"warm up\", therefore the results are a mixture of Java code running in interpreted mode and compiled mode."
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "Due to the issue above, it is not possible to derive how a framework would behave with real-world production traffic from this test"
msgstr ""

#: _posts/2022-11-24-reactive-crud-performance-case-study.adoc
msgid "As with any benchmarking, it is always best to *test a simulation of your production traffic*"
msgstr ""
