msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Sender-constraining access tokens with Quarkus OIDC"
msgstr "Fichas de acceso con restricción de remitente con Quarkus OIDC"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Explain how MTLS Binding and Demonstrating Proof-Of-Possession can be used to prove ownership of access tokens"
msgstr "Explicar cómo se puede utilizar el enlace MTLS y la demostración de la prueba de posesión para demostrar la propiedad de los tokens de acceso"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
msgid "Introduction"
msgstr "Introducción"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Single-page application (SPA) runs in the browser and uses https://quarkus.io/guides/security-oidc-code-flow-authentication#overview-of-the-oidc-authorization-code-flow-mechanism[OIDC authorization code flow] to log-in users, without depending on Quarkus OIDC. When the authentication is complete, SPA sends the access token to access Quarkus on behalf of the authenticated user."
msgstr "La aplicación de una sola página (SPA) se ejecuta en el navegador y utiliza link:https://quarkus.io/guides/security-oidc-code-flow-authentication#overview-of-the-oidc-authorization-code-flow-mechanism[el flujo de código de autorización OIDC] para iniciar la sesión de los usuarios, sin depender de Quarkus OIDC. Una vez completada la autenticación, SPA envía el token de acceso para acceder a Quarkus en nombre del usuario autenticado."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Have a look at the simple diagram showing how this process works, copied to this post from the https://quarkus.io/guides/security-oidc-bearer-token-authentication[OIDC Bearer token guide]:"
msgstr "Eche un vistazo al sencillo diagrama que muestra cómo funciona este proceso, copiado a este post de la link:https://quarkus.io/guides/security-oidc-bearer-token-authentication[guía de tokens de portador OIDC] :"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "As illustrated in the picture above, the OIDC provider authenticates the current user, SPA receives ID and access tokens and uses the access token to access the Quarkus endpoint."
msgstr "Como se ilustra en la imagen anterior, el proveedor de OIDC autentica al usuario actual, SPA recibe el ID y los tokens de acceso y utiliza el token de acceso para acceder al punto final de Quarkus."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "The security challenge that the OAuth2 experts have been trying to address is how to prove that the client such as SPA which is sending the token actually owns this token ? There is nothing in the HTTP `Authorization: Bearer <token>` header that proves that SPA did not leak the token."
msgstr "El reto de seguridad que los expertos en OAuth2 han estado tratando de abordar es ¿cómo probar que el cliente como SPA que está enviando el token realmente posee este token? No hay nada en la cabecera HTTP `Authorization: Bearer <token>` que demuestre que SPA no ha filtrado el token."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Two specifications for sender-constraining access tokens have emerged over the years, https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS Client Authentication and Certificate-Bound Access Tokens] and https://datatracker.ietf.org/doc/html/rfc9449[RFC 9449: OAuth 2.0 Demonstrating Proof-of-Possession (DPoP)]."
msgstr "A lo largo de los años han surgido dos especificaciones para los tokens de acceso con restricción de remitente, link:https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS Client Authentication and Certificate-Bound Access Tokens] y link:https://datatracker.ietf.org/doc/html/rfc9449[RFC 9449: OAuth 2.0 Demonstrating Proof-of-Possession (DPoP)] ."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Mutual TLS Client Authentication and Certificate-Bound Access Tokens"
msgstr "Autenticación mutua de clientes TLS y tokens de acceso con certificado"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "https://datatracker.ietf.org/doc/html/rfc8705[Mutual TLS Client Authentication and Certificate-Bound Access Tokens] specification describes how access tokens can be cryptographically bound to the MTLS client certificate."
msgstr "La especificación de link:https://datatracker.ietf.org/doc/html/rfc8705[autenticación mutua de clientes TLS y] tokens de acceso vinculados al certificado describe cómo se pueden vincular criptográficamente los tokens de acceso al certificado de cliente MTLS."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "By proving that the access token is bound to the client certificate, the Quarkus application can get a high degree of confidence that the current access token is constrained to, owned by the client which authenticated to Quarkus over MTLS."
msgstr "Al demostrar que el token de acceso está vinculado al certificado del cliente, la aplicación Quarkus puede obtener un alto grado de confianza en que el token de acceso actual está vinculado, es propiedad del cliente que se autenticó en Quarkus a través de MTLS."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Implementing the cryptographic binding is not complex in this case. The current access token is expected to contain a confirmation with the SHA-256 certificate thumbprint and it must match the thumbprint of the current MTLS client certificate. If the token is in JWT format, then it must include a confirmation claim. If the token is binary then the confirmation must be included in the remote token introspection response."
msgstr "La implementación de la vinculación criptográfica no es compleja en este caso. Se espera que el token de acceso actual contenga una confirmación con la huella del certificado SHA-256 y debe coincidir con la huella del certificado del cliente MTLS actual. Si el token está en formato JWT, entonces debe incluir una demanda de confirmación. Si el token es binario, entonces la confirmación debe incluirse en la respuesta de introspección del token remoto."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Such a binding can only be successful if the OpenId Connect provider has access to the same client certificate which is used during the MTLS authentication to Quarkus."
msgstr "Dicha vinculación sólo puede tener éxito si el proveedor de OpenId Connect tiene acceso al mismo certificado de cliente que se utiliza durante la autenticación MTLS a Quarkus."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "The downside of using the MTLS token binding is that correctly configuring the OpenId Connect provider, ensuring that browsers can request an X509 certiticate authentication when SPA redirects the user to authenticate to the OIDC provider is complex."
msgstr "El inconveniente de utilizar el enlace de token MTLS es que configurar correctamente el proveedor OpenId Connect, asegurándose de que los navegadores pueden solicitar una autenticación de certificado X509 cuando SPA redirige al usuario para que se autentique en el proveedor OIDC es complejo."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "If you are a Keycloak user, check the https://www.keycloak.org/docs/latest/server_admin/#con-advanced-settings_server_administration_guide[OAuth 2.0 Mutual TLS Certificate Bound Access Tokens Enabled] in the Advanced Configuration section of the https://www.keycloak.org/docs/latest/server_admin[Keycloak Server Administration documentation] and the https://tech.aufomm.com/how-to-use-certificate-bound-access-token-with-kong-and-keycloak/[How to Use Certificate-Bound Access Token with Kong and Keycloak] community blog post."
msgstr "Si es usted usuario de Keycloak, compruebe que link:https://www.keycloak.org/docs/latest/server_admin/#con-advanced-settings_server_administration_guide[OAuth 2.0 Mutual TLS Certificate Bound Access Tokens Enabled está habilitado] en la sección Configuración avanzada de la link:https://www.keycloak.org/docs/latest/server_admin[documentación de administración del servidor Keycloak] y en la entrada del blog link:https://tech.aufomm.com/how-to-use-certificate-bound-access-token-with-kong-and-keycloak/[Cómo utilizar Certificate-Bound Access Token con Kong y la] comunidad link:https://tech.aufomm.com/how-to-use-certificate-bound-access-token-with-kong-and-keycloak/[Keycloak] ."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "As far as Quarkus is concerned, you only need to set a single OIDC configuration property, `quarkus.oidc.token.binding.certificate=true`, in addition to the Vert.x HTTP MTLS configuration, to enforce the MTLS token binding."
msgstr "En lo que respecta a Quarkus, sólo tiene que establecer una única propiedad de configuración OIDC, `quarkus.oidc.token.binding.certificate=true` , además de la configuración MTLS HTTP de Vert.x, para hacer cumplir la vinculación del token MTLS."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "See the https://quarkus.io/guides/security-oidc-bearer-token-authentication#mutual-tls-token-binding[Quarkus OIDC Mutual TLS Token Binding] documentation for more details."
msgstr "Consulte la documentación de link:https://quarkus.io/guides/security-oidc-bearer-token-authentication#mutual-tls-token-binding[Quarkus OIDC Mutual TLS Token Binding] para más detalles."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Demonstrating Proof-of-Possession (DPoP)"
msgstr "Demostración de la prueba de posesión (DPoP)"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "https://datatracker.ietf.org/doc/html/rfc9449[Demonstrating Proof-of-Possession (DPoP)] specification describes how access tokens can be cryptographically bound to special JWT tokens called DPoP proofs."
msgstr "La especificación DPoP link:https://datatracker.ietf.org/doc/html/rfc9449[(Demonstrating Proof-of-Possession] ) describe cómo los tokens de acceso pueden vincularse criptográficamente a tokens JWT especiales denominados pruebas DPoP."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "The SPA client generates a private and public key pair, and creates a DPoP proof token to complete the access token acquisition from the OIDC provider. It then forwards this DPoP token to Quarkus with a new DPoP proof. The access token must be bound to the DPoP proof by containing a public JSON Web Key (JWK) key thumbprint which matches the thumbprint of the public JWK key contained in the DPoP proof."
msgstr "El cliente SPA genera un par de claves privada y pública, y crea un token de prueba DPoP para completar la adquisición del token de acceso del proveedor OIDC. A continuación, reenvía este token DPoP a Quarkus con una nueva prueba DPoP. El token de acceso debe estar vinculado a la prueba DPoP conteniendo una huella digital de la clave pública JSON Web Key (JWK) que coincida con la huella digital de la clave pública JWK contenida en la prueba DPoP."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "This binding can only be successful if the client uses the same public and private key pair for creating the DPoP proof to request the access token in the previous step and creating another DPoP proof for submitting it alongside the DPoP access token to Quarkus."
msgstr "Esta vinculación sólo puede tener éxito si el cliente utiliza el mismo par de claves pública y privada para crear la prueba DPoP para solicitar el token de acceso en el paso anterior y crear otra prueba DPoP para enviarla junto con el token de acceso DPoP a Quarkus."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Quarkus OIDC will also enforce https://datatracker.ietf.org/doc/html/rfc9449#name-checking-dpop-proofs[other DPoP proof check requirements]. Support for custom https://datatracker.ietf.org/doc/html/rfc9449#name-resource-server-provided-no[DPoP nonce providers] is also planned."
msgstr "Quarkus OIDC también hará cumplir link:https://datatracker.ietf.org/doc/html/rfc9449#name-checking-dpop-proofs[otros requisitos de comprobación de pruebas DPoP] . También está prevista la compatibilidad con link:https://datatracker.ietf.org/doc/html/rfc9449#name-resource-server-provided-no[proveedores de nonce D] PoP personalizados."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Adoption of DPoP, compared to that of the MTLS token binding, is expected to progress faster, because DPoP is an `application-level` protocol, with no expectation that the transport-level MTLS authentication takes place. However, correctly creating DPoP proofs at the SPA level is not straightforward and requires care."
msgstr "Se espera que la adopción de DPoP, en comparación con la de la vinculación de tokens MTLS, progrese más rápidamente, porque DPoP es un protocolo `application-level` , sin expectativas de que se produzca la autenticación MTLS a nivel de transporte. Sin embargo, crear correctamente pruebas DPoP a nivel de SPA no es sencillo y requiere cuidado."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "If you are a Keycloak user, then enabling an experimental `dpop` feature is sufficient to get started. Also check the https://www.keycloak.org/docs/latest/server_admin/#con-advanced-settings_server_administration_guide[OAuth 2.0 Demonstrating Proof-of-Possession at the Application Layer (DPoP)] in the Advanced Configuration section of the https://www.keycloak.org/docs/latest/server_admin[Keycloak Server Administration documentation] and the https://tech.aufomm.com/how-to-use-demonstrating-proof-of-possession-dpop-token-with-kong-and-keycloak/[How to Use Demonstrating Proof-of-Possession (DPoP) Token with Kong and keycloak] community blog post."
msgstr "Si ya es usuario de Keycloak, basta con activar la función experimental `dpop` para empezar. Compruebe también la link:https://www.keycloak.org/docs/latest/server_admin/#con-advanced-settings_server_administration_guide[demostración de la] link:https://tech.aufomm.com/how-to-use-demonstrating-proof-of-possession-dpop-token-with-kong-and-keycloak/[prueba de] link:https://www.keycloak.org/docs/latest/server_admin/#con-advanced-settings_server_administration_guide[posesión OAuth 2.0 en la capa de aplicación (DPoP)] en la sección Configuración avanzada de la link:https://www.keycloak.org/docs/latest/server_admin[documentación de administración del servidor Keycloak] y la entrada del blog link:https://tech.aufomm.com/how-to-use-demonstrating-proof-of-possession-dpop-token-with-kong-and-keycloak/[Cómo utilizar el token de demostración de la prueba de posesión (DPoP) con Kong y la] comunidad link:https://tech.aufomm.com/how-to-use-demonstrating-proof-of-possession-dpop-token-with-kong-and-keycloak/[keycloak] ."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "As far as Quarkus is concerned, you only need to set a single OIDC configuration property, `quarkus.oidc.token.authorization-scheme=dpop` to accept DPoP tokens and enforce their binding to the accompanying DPoP proofs."
msgstr "En lo que respecta a Quarkus, sólo necesita establecer una única propiedad de configuración de OIDC, `quarkus.oidc.token.authorization-scheme=dpop` para aceptar tokens DPoP e imponer su vinculación a las pruebas DPoP que los acompañan."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "See the https://quarkus.io/guides/security-oidc-bearer-token-authentication#demonstrating-proof-of-possession-dpop[Quarkus OIDC Demonstrating Proof of Possession (DPoP)] documentation for more details."
msgstr "Consulte la documentación de link:https://quarkus.io/guides/security-oidc-bearer-token-authentication#demonstrating-proof-of-possession-dpop[Quarkus OIDC Demostración de la Prueba de Posesión (DPoP] ) para más detalles."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Financial-Grade API (FAPI)"
msgstr "API de grado financiero (FAPI)"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "https://openid.net/wg/fapi/[Financial-Grade API (FAPI)] is a general high-security API profile built on top of OAuth2."
msgstr "link:https://openid.net/wg/fapi/[Financial-Grade API (FAPI)] es un perfil general de API de alta seguridad construido sobre OAuth2."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Both https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS Client Authentication and Certificate-Bound Access Tokens] and https://datatracker.ietf.org/doc/html/rfc9449[RFC 9449: OAuth 2.0 Demonstrating Proof-of-Possession (DPoP)] specifications are included in the Financial-Grade API 2.0 https://openid.net/specs/fapi-security-profile-2_0-final.html#name-general[General Security Profile]."
msgstr "Tanto las especificaciones link:https://datatracker.ietf.org/doc/html/rfc9449[RFC] link:https://datatracker.ietf.org/doc/html/rfc8705[8705: Mutual TLS Client Authentication and Certificate-Bound Access Tokens] como link:https://datatracker.ietf.org/doc/html/rfc9449[RFC 9449: OAuth 2.0 Demonstrating Proof-of-Possession (DPoP)] están incluidas en el link:https://openid.net/specs/fapi-security-profile-2_0-final.html#name-general[perfil de seguridad general] de la API 2.0 de grado financiero."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusión"

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "In this article, we have discussed two important OAuth2 specifications for sender-constraining access tokens, https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS Client Authentication and Certificate-Bound Access Tokens] and https://datatracker.ietf.org/doc/html/rfc9449[RFC 9449: OAuth 2.0 Demonstrating Proof-of-Possession (DPoP)]."
msgstr "En este artículo, hemos hablado de dos importantes especificaciones de OAuth2 para los tokens de acceso con restricción de remitente, link:https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS Client Authentication and Certificate-Bound Access Tokens] y link:https://datatracker.ietf.org/doc/html/rfc9449[RFC 9449: OAuth 2.0 Demonstrating Proof-of-Possession (DPoP)] ."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Both of these token security elevation technologies can be easily supported in Quarkus OIDC, by using a single configuration property only, without having to write a lot of custom code and configuration."
msgstr "Ambas tecnologías de elevación de la seguridad de los tokens pueden soportarse fácilmente en Quarkus OIDC, utilizando únicamente una propiedad de configuración, sin tener que escribir mucho código personalizado y configuración."

#: _posts/2025-03-19-sender-constraining-tokens.adoc
#, fuzzy
msgid "Please experiment with https://datatracker.ietf.org/doc/html/rfc8705[Mutual TLS Client Authentication and Certificate-Bound Access Tokens] and https://datatracker.ietf.org/doc/html/rfc9449[Demonstrating Proof-of-Possession (DPoP)] in Quarkus and let us know what you think."
msgstr "Por favor, experimente con la link:https://datatracker.ietf.org/doc/html/rfc8705[Autenticación Mutua de Clientes TLS y los Tokens de Acceso con Certificado] y la link:https://datatracker.ietf.org/doc/html/rfc9449[Demostración de Prueba de Posesión (DPoP)] en Quarkus y háganos saber lo que piensa."
