# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy, no-wrap
msgid "Why did Payair Technologies switch to Quarkus?"
msgstr "¿Por qué Payair Technologies cambió a Quarkus?"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "image:payair_logo_rgb.png[Payair Logo]"
msgstr "image:payair_logo_rgb.png[alt=Payair Logo]"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Developing cloud-ready solutions has become an industry standard, especially in the enterprise world. Sooner or later your application has to face the problem of poor horizontal scalability or high memory usage and we all know it is better to be prepared."
msgstr "El desarrollo de soluciones preparadas para la nube se ha convertido en un estándar de la industria, especialmente en el mundo empresarial. Tarde o temprano tu aplicación tiene que enfrentarse al problema de la escasa escalabilidad horizontal o del elevado uso de memoria y todos sabemos que es mejor estar preparados."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "We understand this at https://www.payair.com[Payair] as well. When we faced the challenge of preparing the backend to our mobile payment app, we decided to use frameworks supporting a serverless approach as much as possible. One of these was Quarkus."
msgstr "En  link:https://www.payair.com[Payair] también lo entendemos. Cuando nos enfrentamos al reto de preparar el backend de nuestra aplicación de pago móvil, decidimos utilizar frameworks que soportaran un enfoque sin servidor en la medida de lo posible. Uno de ellos fue Quarkus."

#. type: Title ==
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy, no-wrap
msgid "Supersonic Subatomic Java"
msgstr "Java subatómico supersónico"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "As creators of the framework are describing it, Quarkus is:"
msgstr "Tal y como lo describen los creadores del marco, Quarkus es:"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "A Kubernetes native Java stack tailored for OpenJDK HotSpot and GraalVM, crafted from the best of breed Java libraries and standards."
msgstr "Una pila Java nativa de Kubernetes adaptada a OpenJDK HotSpot y GraalVM, elaborada a partir de las mejores bibliotecas y estándares Java."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "On the Quarkus website you can find information that it has been designed around \"container first\" philosophy, meaning that it is optimized for fast boot times and low memory usage. As a result, we should gain near instant scale-up and high-density memory utilization in container orchestration platforms."
msgstr "En el sitio web de Quarkus se puede encontrar información de que ha sido diseñado en torno a la filosofía \"container first\", lo que significa que está optimizado para tiempos de arranque rápidos y bajo uso de memoria. Como resultado, deberíamos obtener un escalado casi instantáneo y una utilización de la memoria de alta densidad en las plataformas de orquestación de contenedores."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "The way this has been achieved can be summarized as follows:"
msgstr "La forma en que esto se ha logrado puede resumirse de la siguiente manera:"

#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
msgid "*Build time metadata processing.* As much processing as possible is moved into the build process e.g. all of the classes required to perform initial application deployment are used and dropped while building. They are not loaded into final JARs (and JVMs) or native executables. You can say that the framework is tailor-made for you every time you press a build button, without compromising the effectiveness of a declarative approach."
msgstr ""

#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
msgid "*Reduction in reflection usage.* Considering the point above, the resulting application contains only direct invocations. All of the fields, methods and classes that are not being called directly are purposefully removed. The same applies to dependencies as well. There is a way to include such calls (register them for reflection), but Quarkus will gently warn you that you may be deflecting from the real purpose of the framework."
msgstr ""

#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
msgid "*Native image pre-boot.* Quarkus supports native executables that can be run with GraalVM. Actually, the creators of Quarkus state that the framework was designed to be run as a native image. The ahead-of-time compilation reduces the need of dynamic scanning and loading classes into a JVM."
msgstr ""

#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
msgid "*GraalVM.* GraalVM is a native code generator which will compile your project into an executable that can be run without the JVM. You can read more about this superb project here: https://www.graalvm.org."
msgstr ""

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Below you can see a comparison of memory usage and boot time of sample applications:"
msgstr "A continuación puedes ver una comparación del uso de la memoria y el tiempo de arranque de aplicaciones de ejemplo:"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "source: https://quarkus.io"
msgstr "fuente:  https://quarkus.io"

#. type: Title ==
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy, no-wrap
msgid "Evolution, not revolution"
msgstr "Evolución, no revolución"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "What is interesting about this framework is that it is not revolutionary. Since some of Payair’s developers had mainly Spring experience, we were concerned that it would be difficult for them to “switch sides”. It turned out that our fear of the unknown was completely unfounded. Quarkus leverages some good old Jakarta EE standards that all Java developers are familiar with. We did not have to learn a bunch of new APIs that are advertised as \"the best way to create REST endpoint\" or \"reinvented database access\". Instead, Quarkus uses Context Dependency Injection for beans, JAX-RS for RESTful web services, JPA for database access and many others."
msgstr "Lo interesante de este framework es que no es revolucionario. Dado que algunos de los desarrolladores de Payair tenían principalmente experiencia en Spring, nos preocupaba que les resultara difícil \"cambiar de bando\". Resultó que nuestro miedo a lo desconocido era completamente infundado. Quarkus aprovecha algunos viejos estándares de Jakarta EE con los que todos los desarrolladores de Java están familiarizados. No tuvimos que aprender un montón de nuevas API que se anuncian como \"la mejor manera de crear un punto final REST\" o \"acceso a la base de datos reinventado\". En su lugar, Quarkus utiliza Context Dependency Injection para los beans, JAX-RS para los servicios web RESTful, JPA para el acceso a la base de datos y muchos otros."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "On top of that, Quarkus extends available Jakarta EE functionalities responding to modern world developers' demands. These are called Quarkus extensions and, to name a few, they contain support for reactive programming (but using the declarative approach), event messaging, etc."
msgstr "Además, Quarkus amplía las funcionalidades disponibles de Jakarta EE respondiendo a las demandas de los desarrolladores del mundo moderno. Se denominan extensiones de Quarkus y, por nombrar algunas, contienen soporte para la programación reactiva (pero utilizando el enfoque declarativo), mensajería de eventos, etc."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Apart from a wide variety of available extensions, there is also a way to create your own, based on the library of your choice. Keep in mind though, that if you want to preserve those drastic optimizations that Quarkus offers, you will have to apply them manually to your extension as well."
msgstr "Aparte de una amplia variedad de extensiones disponibles, también hay una forma de crear las tuyas propias, basadas en la biblioteca de tu elección. Ten en cuenta, sin embargo, que si quieres conservar esas drásticas optimizaciones que ofrece Quarkus, tendrás que aplicarlas también manualmente a tu extensión."

#. type: Title ==
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy, no-wrap
msgid "Shout-out to MicroProfile"
msgstr "Agradecimiento a MicroProfile"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "I would like to stop here for a second and give a big shout-out to the Eclipse MicroProfile initiative. It specifies a collection of APIs and technologies to form a baseline for quick and effective enterprise Java microservices creation. The goal of MicroProfile is to define a specification for building microservices and deliver portable applications across multiple runtime implementations."
msgstr "Me gustaría detenerme aquí un segundo y dar un gran saludo a la iniciativa Eclipse MicroProfile. Especifica una colección de APIs y tecnologías para formar una línea de base para la creación rápida y efectiva de microservicios Java empresariales. El objetivo de MicroProfile es definir una especificación para la creación de microservicios y ofrecer aplicaciones portátiles en múltiples implementaciones de tiempo de ejecución."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Optimizing enterprise Java for a microservice architecture is a challenging task and, in my opinion, MicroProfile handles it pretty well. As a long term Spring developer I realized that Spring is slowly becoming the very thing it swore to destroy. The initial premises of Spring (which basically can be summed up as a lightweight alternative to Jakarta EE) are way past the expiry date now. Spring is the undisputed heavyweight champion that can handle everything you imagine but is not your best option for fast and light services. And that applies to Spring Boot as well."
msgstr "Optimizar el Java empresarial para una arquitectura de microservicios es una tarea difícil y, en mi opinión, MicroProfile la maneja bastante bien. Como desarrollador de Spring desde hace tiempo, me he dado cuenta de que Spring se está convirtiendo poco a poco en aquello que juró destruir. Las premisas iniciales de Spring (que básicamente se pueden resumir como una alternativa ligera a Jakarta EE) ya han pasado la fecha de caducidad. Spring es el campeón indiscutible de los pesos pesados que puede manejar todo lo que imagines pero no es tu mejor opción para servicios rápidos y ligeros. Y eso se aplica también a Spring Boot."

#. type: Title ==
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy, no-wrap
msgid "Developer joy"
msgstr "Alegría de los desarrolladores"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "It is worth mentioning how the development process of Quarkus application looks. First of all, you are not forced to use native images from day one. Normal JVM builds are still available. Resulting JARs are not as fast as native images, but still faster than your normal enterprise applications."
msgstr "Vale la pena mencionar cómo es el proceso de desarrollo de la aplicación Quarkus. En primer lugar, no estás obligado a utilizar imágenes nativas desde el primer día. Los builds normales de la JVM siguen estando disponibles. Los JARs resultantes no son tan rápidos como las imágenes nativas, pero siguen siendo más rápidos que sus aplicaciones empresariales normales."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "This leads us to the most important thing: dev mode. The special Maven plugin allows you to quickly reload classes while you are editing them, leaving an impression of hot deployment. Changing the functionality and testing it right away without further ado is a real joy. No more distracting builds and endless context switching. Pure development mode, hence the name of the plugin."
msgstr "Esto nos lleva a lo más importante: el modo dev. El plugin especial de Maven te permite recargar rápidamente las clases mientras las editas, dejando una impresión de despliegue en caliente. Cambiar la funcionalidad y probarla de inmediato sin más es una verdadera alegría. Se acabaron las construcciones que distraen y los interminables cambios de contexto. Puro modo de desarrollo, de ahí el nombre del plugin."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "There is one more benefit of a quick startup time. Writing RESTful applications requires significant amount of integration tests on the API level. With Quarkus on board, running them gives a unit-test-smoothness feeling and if you are even a slight fan of TDD, you will appreciate the difference."
msgstr "Hay una ventaja más de un tiempo de inicio rápido. Escribir aplicaciones RESTful requiere una cantidad significativa de pruebas de integración en el nivel de la API. Con Quarkus a bordo, la ejecución de las mismas da una sensación de suavidad de las pruebas unitarias y si eres incluso un ligero fan de TDD, apreciarás la diferencia."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "One of my personal concerns when switching from Spring to something based on Jakarta EE was lack of Spring Data JPA. I really like the mix of simplicity and functionality this module provides. But it turned out that Quarkus has my back on this one as well. There is an extension called Hibernate ORM with Panache. It is a layer on top of Hibernate ORM which focuses on simplifying ORM to the maximum without compromising the actual power that ORM gives. Panache has managed to find a sweet spot of making it trivial to work with simple entities without giving up possibilities for handling complicated use case scenarios. Bravo to Panache and adios to Spring Data!"
msgstr "Una de mis preocupaciones personales al cambiar de Spring a algo basado en Jakarta EE fue la falta de Spring Data JPA. Me gusta mucho la mezcla de simplicidad y funcionalidad que proporciona este módulo. Pero resultó que Quarkus también me cubre las espaldas en esto. Hay una extensión llamada Hibernate ORM con Panache. Se trata de una capa sobre Hibernate ORM que se centra en simplificar al máximo el ORM sin comprometer la potencia real que da el ORM. Panache ha conseguido encontrar un punto dulce para hacer trivial el trabajo con entidades simples sin renunciar a las posibilidades de manejar escenarios de casos de uso complicados. ¡Bravo por Panache y adiós a Spring Data!"

#. type: Title ==
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy, no-wrap
msgid "Simplified maintenance?"
msgstr "¿Mantenimiento simplificado?"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "We are yet to implement the first release of Payair’s Quarkus application into our production environment. Based on our experiences from lower level environments, we just cannot wait for it! CI/CD is no more complex than with any other framework. We only needed vigilance while setting up native build scripts. The differences between JVM and GraalVM runtimes are negligible. Moreover, our initial performance tests are looking very promising."
msgstr "Todavía no hemos implementado la primera versión de la aplicación Quarkus de Payair en nuestro entorno de producción. Basándonos en nuestras experiencias en entornos de menor nivel, ¡no podemos esperar a ello! CI/CD no es más complejo que con cualquier otro framework. Sólo hemos tenido que estar atentos a la hora de configurar los scripts de construcción nativos. Las diferencias entre los tiempos de ejecución de JVM y GraalVM son insignificantes. Además, nuestras pruebas iniciales de rendimiento son muy prometedoras."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "On the other hand Payair has many demanding customers who happen to be financial institutions. Throughout the years we have learned that they expect global reach, high performance and high availability from our products. Our solutions must be thoroughly tested, reliable and bulletproof. We are in an industry that is very risk averse and although we are aware that others are already using Quarkus in production (https://quarkus.io/blog/tag/user-story), we need to verify this for ourselves since the framework is still considered a new player on the market."
msgstr "Por otro lado, Payair tiene muchos clientes exigentes que resultan ser instituciones financieras. A lo largo de los años hemos aprendido que esperan un alcance global, un alto rendimiento y una alta disponibilidad de nuestros productos. Nuestras soluciones deben ser probadas a fondo, fiables y a prueba de balas. Estamos en una industria que es muy reacia al riesgo y, aunque sabemos que otros ya están utilizando Quarkus en la producción https://quarkus.io/blog/tag/user-story , tenemos que comprobarlo por nosotros mismos ya que el marco todavía se considera un nuevo jugador en el mercado."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "The next step is to push our Quarkus implementation to the limits to see how it behaves under a real and heavy load. For now we believe that everything will work even better than we could have anticipated. We will let you know how it went."
msgstr "El siguiente paso es llevar nuestra implementación de Quarkus al límite para ver cómo se comporta bajo una carga real y pesada. Por ahora creemos que todo funcionará incluso mejor de lo que podíamos prever. Ya os contaremos cómo ha ido."

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "For more information about Payair Technologies please visit our website: https://www.payair.com"
msgstr "Para más información sobre Payair Technologies, visite nuestra página web:  https://www.payair.com"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Para más información sobre Quarkus:"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Página web de Quarkus:  http://quarkus.io"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Proyecto GitHub de Quarkus:  https://github.com/quarkusio/quarkus"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Twitter de Quarkus:  https://twitter.com/QuarkusIO"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Chat de Quarkus:  https://quarkusio.zulipchat.com/"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Lista de correo de Quarkus:  https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Canal de YouTube de Quarkus]"

#. type: Plain text
#: _posts/2020-04-08-why-did-payair-technologies-switch-to-quarkus.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Cuatro razones para utilizar Quarkus]"
