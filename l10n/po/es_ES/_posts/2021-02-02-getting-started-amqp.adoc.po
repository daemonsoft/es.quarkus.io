# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Getting Started with AMQP in your Quarkus application"
msgstr "Cómo empezar con AMQP en su aplicación Quarkus"

#. type: YAML Front Matter: synopsis
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "How to build a Quarkus application using AMQP in less than 10 minutes"
msgstr "Cómo construir una aplicación Quarkus usando AMQP en menos de 10 minutos"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"https://www.amqp.org/[AMQP 1.0] is a standard for passing messages between applications or organizations.\n"
"It connects systems, feeds business processes with the information they need, and reliably handles communication between systems.\n"
"AMQP is a robust and mature protocol widely used in event-driven applications."
msgstr ""

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"This post is the equivalent of the https://quarkus.io/blog/getting-started-kafka/[Kafka getting started post], but focuses on the usage of AMQP.\n"
"You will learn how to get started with AMQP in your Quarkus application in less than ten steps.\n"
"We will use https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.7/index.html[SmallRye Reactive Messaging] - a declarative approach to building event-driven microservices."
msgstr ""

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "The complete code is available from https://github.com/cescoffier/getting-started-quarkus-amqp[GitHub]."
msgstr "El código completo está disponible en  link:https://github.com/cescoffier/getting-started-quarkus-amqp[GitHub]."

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 1 - Generate your project"
msgstr "Paso 1 - Genere su proyecto"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"Let's start with the very beginning, getting a new project structure with the right dependencies.\n"
"Go to https://code.quarkus.io, enter your group id and artifact id.\n"
"Then in the extension list, select:"
msgstr ""

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "SmallRye Reactive Messaging - AMQP Connector"
msgstr "SmallRye Reactive Messaging - Conector AMQP"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "RESTEasy Jackson"
msgstr "RESTEasy Jackson"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "image:/assets/images/posts/getting-started-amqp/getting-started-amqp-code.png[]"
msgstr "image:/assets/images/posts/getting-started-amqp/getting-started-amqp-code.png[alt=getting started amqp code]"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "You can disable the \"Example Code\" to avoid the generated project containing examples."
msgstr "Puede desactivar el \"Código de ejemplo\" para evitar que el proyecto generado contenga ejemplos."

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Then, click on __Generate your application__, download the project as a zip file, unzip it, and load it in your favorite IDE."
msgstr "A continuación, haga clic en _Generar su aplicación_, descargue el proyecto como un archivo zip, descomprímalo y cárguelo en su IDE favorito."

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"If you opened the generated `pom.xml`, you would see that the `quarkus-smallrye-reactive-messaging-amqp`  and `quarkus-resteasy-jackson`\n"
"dependencies are declared, so we're ready to write some code."
msgstr ""

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 2 - What are we going to exchange?"
msgstr "Paso 2 - ¿Qué vamos a intercambiar?"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"We need something to exchange.\n"
"Without much originality, let's say we will send and receive `Movie` objects.\n"
"In your project, create the `org.acme.Movie` class with the following content:"
msgstr ""

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"With AMQP, we exchange http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#section-message-format[messages], which can have multiple _data_ sections (or multiple AMQP sequences, or a single AMQP value section).\n"
"In our application, as we are exchanging `Movie` object, it encodes the instances as JSON and transfers it in a single _data_ section.\n"
"The `content-type` header is set to `application/json`."
msgstr ""

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"AMQP messages are sent to a destination.\n"
"To keep things simple, let's name it __movies__."
msgstr ""

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 3 - Configure the application"
msgstr "Paso 3 - Configurar la aplicación"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"As said above, we will use Reactive Messaging.\n"
"When you use Reactive Messaging, you send messages to a channel and receive them from another channel.\n"
"These channels are mapped to the underlying messaging technology by configuration.\n"
"We must indicate that our reception and publication channels will use the __movies__ address in our application.\n"
"In `src/main/resources/application.properties`, add the following content:"
msgstr ""

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "After having configured the broker location and credentials (`amqp-` properties), we configure our two channels: `movies-in` (receiving the records) and `movies-out` (publishing the records)."
msgstr "Después de haber configurado la ubicación del broker y las credenciales ( `amqp-` properties), configuramos nuestros dos canales: `movies-in` (recibir los registros) y `movies-out` (publicar los registros)."

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"We use the `mp.messaging.incoming.movies-in` prefix to configure the channel.\n"
"The `connector` attribute indicates who's responsible for this channel, here the AMQP connector.\n"
"We also need to specify the consumed destination using the `address` attribute."
msgstr ""

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"To configure the outbound `movies-out` channel, we use the `mp.messaging.outgoing.movies-out` prefix.\n"
"In addition to indicating who's responsible for that channel, we also need to configure the address."
msgstr ""

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 4 - Publishing movies to AMQP"
msgstr "Paso 4 - Publicar películas en AMQP"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"Now, it's time to send messages.\n"
"Create the `org.acme.MovieProducer` class with the following content:"
msgstr ""

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"In this class, we inject an `Emitter,` i.e., an object responsible for sending a message to a channel.\n"
"This emitter is attached to the `movies-out` channel (and will send messages to AMQP).\n"
"The connector automatically encoded the content as JSON and set the `content-type` header."
msgstr ""

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "You need to make sure your payload can be encoded to JSON."
msgstr "Tienes que asegurarte de que tu carga útil puede ser codificada en JSON."

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "So, the rest of our application can use the `send` method to send a movie to our AMQP destination."
msgstr "Así, el resto de nuestra aplicación puede utilizar el método `send` para enviar una película a nuestro destino AMQP."

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 5 - Consuming movies"
msgstr "Paso 5 - Consumir películas"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Let's now look at the other side and retrieve the movies from AMQP."
msgstr "Veamos ahora el otro lado y recuperemos las películas de AMQP."

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Here, we use the `@Incoming` annotation to indicate to Quarkus to call the `receive` method for every received record."
msgstr "Aquí, utilizamos la anotación `@Incoming` para indicar a Quarkus que llame al método `receive` para cada registro recibido."

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Remember, the movie is encoded into JSON, so we need to help the connector produce a `Movie` from the received JSON."
msgstr "Recuerda que la película está codificada en JSON, por lo que tenemos que ayudar al conector a producir un `Movie` a partir del JSON recibido."

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Create the `org.acme.JsonToObjectConverter` class with the following content:"
msgstr "Cree la clase `org.acme.JsonToObjectConverter` con el siguiente contenido:"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"This class is a _converter_.\n"
"It maps the content of a `Message` to another type.\n"
"In the `canConvert` method, we verify that the incoming message is coming from AMQP (so contain the `IncomingAmqpMetadata` metadata) and that the content-type is set to `application/json`.\n"
"The `convert` method maps the received `JsonObject` into the target type (`Movie` in our case)."
msgstr ""

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "With this converter, our `consume` method will receive the `Movie` objects."
msgstr "Con este convertidor, nuestro método `consume` recibirá los objetos `Movie`."

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 6 - Sending movies from a REST endpoint"
msgstr "Paso 6 - Envío de películas desde un punto final REST"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"It's quite common to send messages to AMQP from a REST endpoint.\n"
"To do this, create the `org.acme.MovieResource` class with the following content:"
msgstr ""

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"This class uses the `MovieProducer` we implemented above to send the `movies`.\n"
"You could also use an `Emitter` directly."
msgstr ""

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 7 - Let's get this running!"
msgstr "Paso 7 - ¡Pongamos esto en marcha!"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"Well, first, we need an AMQP broker, for example http://activemq.apache.org/components/artemis/[Apache ActiveMQ Artemis].\n"
"You can follow the http://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Getting Started with Artemis] documentation, or use the following `docker-compose.yaml` file:"
msgstr ""

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Copy the `docker-compose.yaml` file in your project, and from a terminal, start your broker with: `docker-compose up -d'"
msgstr "Copie el archivo `docker-compose.yaml` en su proyecto, y desde un terminal, inicie su corredor con `docker-compose up -d'"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Then, run the application using:"
msgstr "A continuación, ejecute la aplicación con:"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"The application runs in dev mode, meaning that you can still update the code.\n"
"It will reload it automatically."
msgstr ""

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "In another terminal, emit a few HTTP POST request such as:"
msgstr "En otro terminal, emita algunas peticiones HTTP POST como:"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "In the terminal running the application, you will see:"
msgstr "En el terminal que ejecuta la aplicación, verás:"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "It works!"
msgstr "¡Funciona!"

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Step 8 - Native packaging"
msgstr "Paso 8 - Embalaje nativo"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "If you have https://quarkus.io/guides/building-native-image[GraalVM installed and configured correctly], you can package this application as a native executable:"
msgstr "Si tienes  link:https://quarkus.io/guides/building-native-image[GraalVM instalado y configurado correctamente], puedes empaquetar esta aplicación como un ejecutable nativo:"

#. type: Plain text
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy
msgid "Then, execute your native executable with: `./target/getting-started-amqp-1.0.0-SNAPSHOT-runner`, and you get a Quarkus application using AMQP starting in a few milliseconds and consuming a ridiculous amount of memory: only 33Mb after 100 ingested records!"
msgstr "A continuación, ejecute su ejecutable nativo con: `./target/getting-started-amqp-1.0.0-SNAPSHOT-runner`, y obtienes una aplicación Quarkus usando AMQP que se inicia en unos pocos milisegundos y consume una cantidad ridícula de memoria: ¡sólo 33Mb después de 100 registros ingeridos!"

#. type: Title ==
#: _posts/2021-02-02-getting-started-amqp.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumen"

#: _posts/2021-02-02-getting-started-amqp.adoc
msgid ""
"In less than 10 minutes, we have a new Quarkus application using AMQP.\n"
"If you want to go further, check the https://quarkus.io/guides/amqp[AMQP guide]."
msgstr ""
