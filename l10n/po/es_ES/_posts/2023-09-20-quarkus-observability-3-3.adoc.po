# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-01 08:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:1
#, fuzzy, no-wrap
msgid "brunobat"
msgstr "brunobat"

#. type: YAML Front Matter: date
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:1
#, fuzzy, no-wrap
msgid "2023-09-20"
msgstr "2023-09-20"

#. type: YAML Front Matter: layout
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:1
#, no-wrap
msgid "post"
msgstr "post"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:1
#, fuzzy, no-wrap
msgid "What has changed in Observability on Quarkus from version 3.0 to 3.3."
msgstr "Qué ha cambiado en Observability en Quarkus de la versión 3.0 a la 3.3."

#. type: YAML Front Matter: tags
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:1
#, fuzzy, no-wrap
msgid "observability micrometer opentelemetry metrics tracing"
msgstr "observabilidad micrómetro opentelemetría métrica trazado"

#. type: YAML Front Matter: title
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:1
#, fuzzy, no-wrap
msgid "Observability in Quarkus 3"
msgstr "Observabilidad en Quarkus 3"

#. type: Title ==
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:10
#, fuzzy, no-wrap
msgid "Observability in Quarkus"
msgstr "Observabilidad en Quarkus"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:14
#, fuzzy
msgid "Observability on a software system can be described as the capability to allow a human to ask and answer questions.  To enable developers and support engineers in understanding how their applications behave, Quarkus 3.3 includes many improvements to its main observability related extensions:"
msgstr "La observabilidad en un sistema de software puede describirse como la capacidad de permitir a un humano hacer y responder preguntas. Para que los desarrolladores y los ingenieros de soporte puedan entender cómo se comportan sus aplicaciones, Quarkus 3.3 incluye muchas mejoras en sus principales extensiones relacionadas con la observabilidad:"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:16
#, fuzzy
msgid "https://quarkus.io/guides/opentelemetry[`quarkus-opentelemetry`] (tracing)"
msgstr "link:https://quarkus.io/guides/opentelemetry[`quarkus-opentelemetry`] (rastreo)"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:17
#, fuzzy
msgid "https://quarkus.io/guides/telemetry-micrometer[`quarkus-micrometer`] (metrics)"
msgstr "link:https://quarkus.io/guides/telemetry-micrometer[`quarkus-micrometer`] (métrica)"

#. type: Title ==
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:18
#, fuzzy, no-wrap
msgid "OpenTelemetry"
msgstr "OpenTelemetry"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:21
#, fuzzy
msgid "https://opentelemetry.io/docs/concepts/signals/traces/[OpenTelemetry tracing] is used to understand the flow of requests as they traverse through multiple services."
msgstr "El  link:https://opentelemetry.io/docs/concepts/signals/traces/[rastreo de OpenTelemetry] se utiliza para comprender el flujo de solicitudes a medida que atraviesan múltiples servicios."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:23
#, fuzzy
msgid "The `quarkus-opentelemetry` extension already had a major upgrade on https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.0#opentelemetry[Quarkus 3.0], where the configurations aligned with the ones used by the OpenTelemetry (OTel) community. This made available many configurations that were not previously available in Quarkus. Other improvements include:"
msgstr "La extensión `quarkus-opentelemetry` ya tuvo una actualización importante en Quarkus  link:https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.0#opentelemetry[3.0], donde las configuraciones se alinearon con las utilizadas por la comunidad OpenTelemetry (OTel). Esto hizo disponibles muchas configuraciones que antes no estaban disponibles en Quarkus. Otras mejoras incluyen:"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:25
#, fuzzy
msgid "The OpenTelemetry extension can be used in dev mode and now reloads properly."
msgstr "La extensión OpenTelemetry puede utilizarse en modo de desarrollo y ahora se recarga correctamente."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:26
#, fuzzy
msgid "OTel Service Provider Interface (SPI) hooks for Sampler and SpanExporter were made available along with the existing user implementations with CDI for many OTel classes: `IdGenerator`, Resource attributes, `Sampler` and `SpanProcessor`."
msgstr "Los ganchos de OTel Service Provider Interface (SPI) para Sampler y SpanExporter se pusieron a disposición junto con las implementaciones de usuario existentes con CDI para muchas clases de OTel: `IdGenerator`, Atributos de recursos, `Sampler` y `SpanProcessor`."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:30
#, fuzzy
msgid "At the same time, the JDBC tracing activation was made simpler, just requiring the use of a property: ```[source, application.properties] quarkus.datasource.jdbc.telemetry=true ```"
msgstr "Al mismo tiempo, se ha simplificado la activación de la traza JDBC, que sólo requiere el uso de una propiedad: `&lt;code&gt;[source, application.properties] quarkus.datasource.jdbc.telemetry=true &lt;/code&gt;`"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:32
#, fuzzy
msgid "On https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.3#opentelemetry-otel[Quarkus 3.3] many improvements were made to the `quarkus-opentelemetry` extension. The most impactful ones are"
msgstr "En  link:https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.3#opentelemetry-otel[Quarkus 3.3] se han introducido muchas mejoras en la extensión `quarkus-opentelemetry`. Las más impactantes son"

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:33
#, fuzzy, no-wrap
msgid "Removal of the OkHttp dependency"
msgstr "Eliminación de la dependencia OkHttp"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:36
#, fuzzy
msgid "In previous versions of the Quarkus exporter used the upstream OTel libraries and leveraged the OkHttp library to send the spans to the OTel Collector. This unnecessary dependency was removed and replaced by Quarkus specific Vert.x GRPC and HTTP clients. As previously, the exporter continues to be automatically wired with CDI, that’s why the `quarkus.otel.traces.exporter` property defaults to `cdi` on Quarkus 3+."
msgstr "En versiones anteriores del exportador de Quarkus se utilizaban las librerías OTel upstream y se aprovechaba la librería OkHttp para enviar los spans al OTel Collector. Esta dependencia innecesaria fue removida y reemplazada por clientes Vert.x GRPC y HTTP específicos de Quarkus. Como anteriormente, el exportador sigue siendo automáticamente cableado con CDI, por eso la propiedad `quarkus.otel.traces.exporter` por defecto a `cdi` en Quarkus 3+."

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:37
#, fuzzy, no-wrap
msgid "Exporter support fot the HTTP protocol"
msgstr "Exportador compatible con el protocolo HTTP"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:44
#, fuzzy
msgid "Up until Quarkus 3.2, the OTel exporter could only use the GRPC protocol, while Quarkus now supports HTTP as well. To use the new HTTP protocol, the `quarkus.otel.exporter.otlp.traces.protocol` property must be set to `http/protobuf`. The `quarkus.otel.traces.exporter.endpoint` property must also be set to the OTel Collector HTTP endpoint. Here's an example when using 4318, the default HTTP port on the OTel Collector: ```[source, application.properties] quarkus.otel.exporter.otlp.traces.protocol=http/protobuf quarkus.otel.exporter.otlp.endpoint=http://localhost:4318 ```"
msgstr "Hasta Quarkus 3.2, el exportador OTel sólo podía utilizar el protocolo GRPC, mientras que ahora Quarkus también admite HTTP. Para utilizar el nuevo protocolo HTTP, la propiedad `quarkus.otel.exporter.otlp.traces.protocol` debe establecerse en `http/protobuf`. La propiedad `quarkus.otel.traces.exporter.endpoint` también debe establecerse en el punto final HTTP de OTel Collector. Aquí hay un ejemplo cuando se utiliza 4318, el puerto HTTP por defecto en el OTel Collector: `&lt;code&gt;[source, application.properties] quarkus.otel.exporter.otlp.traces.protocol=http/protobuf quarkus.otel.exporter.otlp.endpoint=http://localhost:4318 &lt;/code&gt;`"

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:45
#, fuzzy, no-wrap
msgid "Exporters support TLS"
msgstr "Los exportadores admiten TLS"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:48
#, fuzzy
msgid "Both GRPC and HTTP exporters now support Transport Layer Security (TLS) and custom certificates."
msgstr "Los exportadores GRPC y HTTP son ahora compatibles con la seguridad de la capa de transporte (TLS) y los certificados personalizados."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:53
#, fuzzy
msgid "Like the other rest clients in Quarkus, the exporter's certificate verification will also be disabled if you set: ```[source, application.properties] quarkus.tls.trust-all=true ```"
msgstr "Al igual que los otros clientes de descanso en Quarkus, la verificación de certificados del exportador también se desactivará si se establece: `&lt;code&gt;[source, application.properties] quarkus.tls.trust-all=true &lt;/code&gt;`"

#. type: delimited block =
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:56
#, fuzzy
msgid "This setting should not be used in production as it will disable any kind of SSL verification."
msgstr "Esta configuración no debe utilizarse en producción, ya que desactivará cualquier tipo de verificación SSL."

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:58
#, fuzzy, no-wrap
msgid "Customise the propagation header"
msgstr "Personalizar la cabecera de propagación"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:61
#, fuzzy
msgid "We added a way to customise the propagation header."
msgstr "Hemos añadido una forma de personalizar la cabecera de propagación."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:63
#, fuzzy
msgid "You can create a CDI bean implementing the `TextMapPropagatorCustomizer` interface."
msgstr "Puede crear un bean CDI que implemente la interfaz `TextMapPropagatorCustomizer`."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:65
#, fuzzy
msgid "This can be used to restrict propagation of OpenTelemetry trace headers and prevent potentially sensitive data to be sent to third party systems."
msgstr "Esto se puede utilizar para restringir la propagación de los encabezados de rastreo de OpenTelemetry y evitar que se envíen datos potencialmente sensibles a sistemas de terceros."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:80
#, fuzzy, no-wrap
msgid ""
"This is an example of a customizer that removes the Baggage header:\n"
"```[source, java]\n"
"@Singleton\n"
"public static class TestTextMapPropagatorCustomizer implements TextMapPropagatorCustomizer {\n"
"    @Override\n"
"    public TextMapPropagator customize(Context context) {\n"
"        TextMapPropagator propagator = context.propagator();\n"
"        if (propagator instanceof W3CBaggagePropagator) {\n"
"            return TextMapPropagator.noop();\n"
"        }\n"
"        return propagator;\n"
"    }\n"
"}\n"
"```\n"
msgstr "Este es un ejemplo de personalizador que elimina la cabecera Equipaje:"

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:81
#, fuzzy, no-wrap
msgid "Identify the user in the spans"
msgstr "Identificar al usuario en los tramos"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:88
#, fuzzy
msgid "Valuable debugging information about the user related to each span can be added by setting: ```[source, application.properties] quarkus.otel.traces.eusp.enabled=true ``` The user’s ID and roles will be added to the span attributes, if available."
msgstr "Se puede añadir valiosa información de depuración sobre el usuario relacionada con cada span mediante la configuración: `&lt;code&gt;[source, application.properties] quarkus.otel.traces.eusp.enabled=true &lt;/code&gt;` El ID y los roles del usuario se añadirán a los atributos del span, si están disponibles."

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:89
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:167
#, fuzzy, no-wrap
msgid "Hardening"
msgstr "Endurecimiento"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:92
#, fuzzy
msgid "Many bug fixes and small improvements were made to the extension, including:"
msgstr "Se han realizado muchas correcciones de errores y pequeñas mejoras en la extensión, entre las que se incluyen:"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:94
#, fuzzy
msgid "Reduce the memory allocation needed to report spans."
msgstr "Reducir la asignación de memoria necesaria para informar de los intervalos."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:95
#, fuzzy
msgid "Fix the `http.route` span attribute value in some cases."
msgstr "Corrección del valor del atributo span `http.route` en algunos casos."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:96
#, fuzzy
msgid "Properly report of the `service.name` value. The value can be set in 3 different properties, from higher to lower priority:"
msgstr "Informe adecuado del valor de `service.name`. El valor se puede establecer en 3 propiedades diferentes, de mayor a menor prioridad:"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:97
#, fuzzy
msgid "`quarkus.otel.service.name`"
msgstr "`quarkus.otel.service.name`"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:98
#, fuzzy
msgid "`quarkus.otel.resource.attributes`"
msgstr "`quarkus.otel.resource.attributes`"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:99
#, fuzzy
msgid "`quarkus.application.name`"
msgstr "`quarkus.application.name`"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:100
#, fuzzy
msgid "Exception's stack traces are now reported in the span attributes."
msgstr "Las trazas de pila de las excepciones se muestran ahora en los atributos span."

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:101
#, fuzzy, no-wrap
msgid "OpenTelemetry upgrades."
msgstr "Actualizaciones de OpenTelemetry."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:104
#, fuzzy
msgid "OTel moves fast! Since working on Quarkus 3.0 we have performed 7 version upgrades, moving `opentelemetry-java` from version 1.21.0 to 1.28.0."
msgstr "¡OTel se mueve rápido! Desde que trabajamos en Quarkus 3.0 hemos realizado 7 actualizaciones de versión, pasando `opentelemetry-java` de la versión 1.21.0 a la 1.28.0."

#. type: Title ==
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:105
#, fuzzy, no-wrap
msgid "Micrometer"
msgstr "Micrómetro"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:108
#, fuzzy
msgid "Metrics in Quarkus are based on the https://micrometer.io/[Micrometer library]. Data can be exported directly to Prometheus with the `quarkus-micrometer-registry-prometheus extension`. If you want to send data to an OTel Collector, you can use the https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/micrometer-registry-otlp.html[`quarkus-micrometer-registry-otlp`] Quarkiverse extension, among https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/index.html[other options]."
msgstr "Las métricas en Quarkus se basan en la  link:https://micrometer.io/[biblioteca Micrometer]. Los datos se pueden exportar directamente a Prometheus con la extensión `quarkus-micrometer-registry-prometheus extension`. Si desea enviar datos a un colector OTel, puede utilizar la extensión  link:https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/micrometer-registry-otlp.html[`quarkus-micrometer-registry-otlp`] extensión Quarkiverse, entre  link:https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/index.html[otras opciones]."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:110
#, fuzzy
msgid "These were some of the recent improvements to the `quarkus-micrometer` extension:"
msgstr "Estas son algunas de las mejoras recientes de la extensión `quarkus-micrometer`:"

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:111
#, fuzzy, no-wrap
msgid "Netty allocator metrics"
msgstr "Métricas del asignador de red"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:114
#, fuzzy
msgid "The extension will now provide Netty allocation metrics by default. Netty uses memory allocators to pool the memory buffers for reuse. These metrics will give you a deeper understanding of the memory usage of your application. Direct and Heap memory usage will be reported."
msgstr "La extensión proporcionará ahora las métricas de asignación de Netty por defecto. Netty utiliza asignadores de memoria para agrupar los buffers de memoria para su reutilización. Estas métricas le darán una comprensión más profunda del uso de memoria de su aplicación. Se informará del uso de memoria directa y Heap."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:119
#, fuzzy
msgid "To disable these metrics, please set: ```[source, application.properties] quarkus.micrometer.binder.netty.enabled=false ```"
msgstr "Para desactivar estas métricas, por favor, configure: `&lt;code&gt;[source, application.properties] quarkus.micrometer.binder.netty.enabled=false &lt;/code&gt;`"

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:120
#, fuzzy, no-wrap
msgid "Custom tags with HTTP server data"
msgstr "Etiquetas personalizadas con datos del servidor HTTP"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:123
#, fuzzy
msgid "Customise emitted tags by creating a CDI bean implementing the `HttpServerMetricsTagsContributor` interface. This allows user code to compute arbitrary tags based on the details of HTTP requests. This is an implementation example were the `Foo` header value is used to set the `foo` tag."
msgstr "Personalice las etiquetas emitidas creando un frijol CDI que implemente la interfaz `HttpServerMetricsTagsContributor`. Esto permite al código de usuario calcular etiquetas arbitrarias basadas en los detalles de las peticiones HTTP. Este es un ejemplo de implementación en el que el valor de la cabecera `Foo` se utiliza para establecer la etiqueta `foo`."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:127
#, fuzzy
msgid "```[source, java] @Singleton public class HeaderTag implements HttpServerMetricsTagsContributor {"
msgstr "<pre class=\"highlight\"> ``</pre>"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:139
#, fuzzy, no-wrap
msgid ""
"    @Override\n"
"    public Tags contribute(Context context) {\n"
"        String headerValue = context.request().getHeader(\"Foo\");\n"
"        String value = \"UNSET\";\n"
"        if ((headerValue != null) && !headerValue.isEmpty()) {\n"
"            value = headerValue;\n"
"        }\n"
"        return Tags.of(\"foo\", value);\n"
"    }\n"
"}\n"
"```\n"
msgstr ""
"<pre>    @Override\n"
"    public Etiquetas contribute(Context context) {\n"
"        String headerValue = context.request().getHeader(\"Foo\");\n"
"        String value = \"UNSET\";\n"
"        if ((headerValue != null) &amp;&amp; !headerValue.isEmpty()) {\n"
"            value = headerValue;\n"
"        }\n"
"        return Tags.of(\"foo\", valor);\n"
"    }\n"
"}</pre>"

#. type: delimited block =
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:142
#, fuzzy
msgid "Only set tags with low cardinality values, meaning that the number of possible different values is low. For example, a tag with the HTTP method is a good candidate, but a tag with the HTTP full path is not."
msgstr "Establezca sólo etiquetas con valores de cardinalidad bajos, lo que significa que el número de posibles valores diferentes es bajo. Por ejemplo, una etiqueta con el método HTTP es un buen candidato, pero una etiqueta con la ruta completa HTTP no lo es."

#. type: Title ===
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:144
#, fuzzy, no-wrap
msgid "Use `MeterRegistryCustomizer` for arbitrary customizations to meter registries"
msgstr "Utilice `MeterRegistryCustomizer` para personalizar arbitrariamente los registros de contadores."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:148
#, fuzzy
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.MeterRegistryCustomizer`, the user code can change the configuration of any `MeterRegistry` that has been activated.  Unless an implementation is annotated with `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, the customization applies to all `MeterRegistry` instances."
msgstr "Al proporcionar beans CDI que implementen `io.quarkus.micrometer.runtime.MeterRegistryCustomizer`, el código de usuario puede cambiar la configuración de cualquier `MeterRegistry` que haya sido activado. A menos que una implementación esté anotada con `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, la personalización se aplica a todas las instancias de `MeterRegistry`."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:164
#, fuzzy, no-wrap
msgid ""
"This is a method example with a customizer that sets the `foo` tag oo all metrics:\n"
"```[source, java]\n"
"@Produces\n"
"@Singleton\n"
"public MeterRegistryCustomizer customizeAllRegistries() {\n"
"    return new MeterRegistryCustomizer() {\n"
"        @Override\n"
"        public void customize(MeterRegistry registry) {\n"
"            registry.config()\n"
"                    .meterFilter(MeterFilter.commonTags(List.of(\n"
"                            Tag.of(\"foo\", \"foo-value\"))));\n"
"        }\n"
"    };\n"
"}\n"
"```\n"
msgstr "Este es un ejemplo de método con un personalizador que establece la etiqueta `foo` en todas las métricas:"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:166
#, fuzzy
msgid "and emitted metrics by implementing `MeterRegistryCustomizer`."
msgstr "y métricas emitidas mediante la aplicación de `MeterRegistryCustomizer`."

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:170
#, fuzzy
msgid "Some small bug fixes and other features like:"
msgstr "Algunas pequeñas correcciones de errores y otras características como:"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:172
#, fuzzy
msgid "Auth failures will now populate the metrics URI tag."
msgstr "Los fallos de autenticación ahora rellenarán la etiqueta URI de métricas."

#. type: Title ==
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:173
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusión"

#. type: Plain text
#: upstream/_posts/2023-09-20-quarkus-observability-3-3.adoc:175
#, fuzzy
msgid "Quarkus observability extensions have now improved across the board. We currently recommend using OpenTelemetry for tracing and Micrometer for metrics and export all the data using OTel's OTLP protocol to the OpenTelemetry Collector. This will allow you to use the best of both worlds."
msgstr "Las extensiones de observabilidad de Quarkus han mejorado en todos los ámbitos. Actualmente recomendamos el uso de OpenTelemetry para el rastreo y Micrometer para las métricas y exportar todos los datos utilizando el protocolo OTLP de OTel al OpenTelemetry Collector. Esto le permitirá utilizar lo mejor de ambos mundos."
