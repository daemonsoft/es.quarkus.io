# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-30 08:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy, no-wrap
msgid "Analysing Quarkus Native startup RSS consumption"
msgstr "Análisis del consumo de RSS en el inicio de Quarkus Native"

#. type: YAML Front Matter: synopsis
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy, no-wrap
msgid "Use Linux native tooling and JFR to understand Quarkus Native startup RSS consumption"
msgstr "Utilización de herramientas nativas de Linux y JFR para comprender el consumo de RSS en el inicio de Quarkus Native"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"During the development of Quarkus 2.13,\n"
"we discovered that there was a startup degradation in native mode.\n"
"One of the key aspects of this degradation was that RSS consumption on start up had gone up by about 10-15% compared to Quarkus 2.7.\n"
"In this blog post you will learn how the Quarkus native RSS consumption debugging techniques described in\n"
"https://quarkus.io/guides/native-reference#rss[the Quarkus native reference guide]\n"
"were used to diagnose this issue.\n"
"You will also learn about recent updates in GraalVM that make doing this kind of analysis more convenient."
msgstr "Durante el desarrollo de Quarkus 2.13, descubrimos que existía una degradación en el arranque en modo nativo. Uno de los aspectos clave de esta degradación era que el consumo de RSS en el arranque había subido alrededor de un 10-15% en comparación con Quarkus 2.7. En esta entrada de blog aprenderá cómo se utilizaron las técnicas de depuración del consumo de RSS nativo de Quarkus descritas en link:https://quarkus.io/guides/native-reference#rss[la guía de referencia nativa de Quarkus] para diagnosticar este problema. También aprenderá acerca de las actualizaciones recientes en GraalVM que hacen que hacer este tipo de análisis sea más conveniente."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"Our analysis showed that the RSS consumption for Quarkus 2.7 was about ~33MB while for Quarkus 2.13 it was about ~36MB, roughly a 10 % increase.\n"
"Below we see how we measured the RSS consumption for Quarkus 2.7.6.Final:"
msgstr "Nuestro análisis mostró que el consumo de RSS para Quarkus 2.7 fue de unos ~33MB mientras que para Quarkus 2.13 fue de unos ~36MB, aproximadamente un aumento del 10 %. A continuación vemos cómo medimos el consumo de RSS para Quarkus 2.7.6.Final:"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"Similarly, below we see how we measured the RSS consumption for Quarkus 2.13.4.Final:\n"
"In our environment, the RSS consumption had gone up to about ~36M, roughly a 10% increase:"
msgstr "Del mismo modo, a continuación vemos cómo medimos el consumo de RSS para Quarkus 2.13.4.Final: En nuestro entorno, el consumo de RSS había subido a unos ~36M, aproximadamente un aumento del 10%:"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"Since Quarkus 2.7 and 2.13 used different GraalVM versions (21.3 vs 22.3),\n"
"we first investigated whether the increase in the startup time and RSS consumption was due to a change in GraalVM.\n"
"This turned out to not be the case,\n"
"as using the same GraalVM version on both Quarkus versions still resulted in similar differences."
msgstr "Dado que Quarkus 2.7 y 2.13 utilizaban versiones diferentes de GraalVM (21.3 frente a 22.3), primero investigamos si el aumento del tiempo de arranque y del consumo de RSS se debía a un cambio en GraalVM. Resultó no ser el caso, ya que al utilizar la misma versión de GraalVM en ambas versiones de Quarkus las diferencias seguían siendo similares."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"We also profiled the startup time in JVM mode,\n"
"and although we could observe some slight increase in heap usage,\n"
"the RSS increase was not apparent at runtime.\n"
"So, the challenge was to understand what was causing the RSS increase that seemed to only affect native mode\n"
"and that was Quarkus specific."
msgstr "También perfilamos el tiempo de arranque en modo JVM y, aunque pudimos observar un ligero aumento en el uso de la pila, el aumento del RSS no era evidente en tiempo de ejecución. Así pues, el reto consistía en comprender qué causaba el aumento del RSS que parecía afectar únicamente al modo nativo y que era específico de Quarkus."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"In native mode we needed to look for system calls that increased RSS,\n"
"and investigate what caused them.\n"
"There are several system calls that can be used to allocate memory, e.g. `malloc`, `mmap`...etc,\n"
"but when we analysed the system calls emitted on startup,\n"
"we discovered that `mmap` calls were the prominent ones.\n"
"Following\n"
"https://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html[Brendan Gregg’s Memory Leak (and Growth) Flame Graphs guide]\n"
"on a Linux environment,\n"
"we were able to produce flamegraphs for the `mmap` system calls.\n"
"To obtain these flamegraphs, we capture the `sys_enter_mmap` system call events with `perf record`,\n"
"and then we generate flamegraphs with the recorded data:"
msgstr "En modo nativo necesitábamos buscar las llamadas al sistema que aumentaban el RSS e investigar cuál era su causa. Hay varias llamadas al sistema que se pueden utilizar para asignar memoria, por ejemplo `malloc` , `mmap` ...etc, pero cuando analizamos las llamadas al sistema emitidas en el arranque, descubrimos que las llamadas a `mmap` eran las más destacadas. Siguiendo la link:https://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html[guía de gráficos de llamas de fugas de memoria (y crecimiento) de Brendan Gregg] en un entorno Linux, pudimos producir flamegráficos para las llamadas al sistema `mmap` . Para obtener estos flamegráficos, capturamos los eventos de llamada al sistema `sys_enter_mmap` con `perf record` , y después generamos flamegráficos con los datos registrados:"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"The native executable above was created passing in\n"
"`-Dquarkus.native.debug.enabled` and `-Dquarkus.native.additional-build-args=-H:-DeleteLocalSymbols`\n"
"as extra build flags."
msgstr "El ejecutable nativo anterior se creó pasando `-Dquarkus.native.debug.enabled` y `-Dquarkus.native.additional-build-args=-H:-DeleteLocalSymbols` como banderas de compilación adicionales."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"`mmap` calls happen for a variety of reasons,\n"
"but in the context of this blog post,\n"
"we're interested in those `mmap` calls that are triggered by object allocations.\n"
"Not every object allocation triggers an `mmap` call.\n"
"Instead, each thread in SubstrateVM will allocate a heap chunk using `mmap` when the first object is allocated,\n"
"and it will use this heap chunk as long as there's space for further objects allocated in the same thread.\n"
"When the heap chunk is full,\n"
"the thread will request a new heap chunk using `mmap`.\n"
"This pattern is called thread-local allocation.\n"
"HotSpot has a similar feature as well,\n"
"but there the heap chunk size is dynamically computed depending on multiple factors,\n"
"while on SubstrateVM the size is fixed.\n"
"At the time of writing, the default heap chunk size is 1MB,\n"
"but an upcoming change will make it 512KB instead."
msgstr "`mmap` se producen por diversas razones, pero en el contexto de esta entrada de blog, nos interesan las llamadas a `mmap` que se desencadenan por asignaciones de objetos. No todas las asignaciones de objetos desencadenan una llamada a `mmap` . En su lugar, cada hilo en SubstrateVM asignará un trozo de heap utilizando `mmap` cuando se asigne el primer objeto, y utilizará este trozo de heap mientras haya espacio para más objetos asignados en el mismo hilo. Cuando el trozo de heap esté lleno, el hilo solicitará un nuevo trozo de heap utilizando `mmap` . Este patrón se denomina asignación local de hilos. HotSpot también tiene una característica similar, pero allí el tamaño del heap chunk se calcula dinámicamente dependiendo de múltiples factores, mientras que en SubstrateVM el tamaño es fijo. En el momento de escribir estas líneas, el tamaño por defecto del heap chunk es de 1MB, pero un próximo cambio hará que sea de 512KB."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"We describe the object allocation as fast when the thread has a heap chunk cached and there's enough space for the object.\n"
"We describe the object allocation as slow when the thread needs to request a new heap chunk via the `mmap` system call to satisfy the object allocation.\n"
"Slow allocations are the most interesting in this case,\n"
"because they give us a rough indication of which allocations are pushing the number of heap chunks up,\n"
"and therefore are pushing the RSS consumption up.\n"
"In SubstrateVM, stacktraces of the slow allocation path contain invocations to methods defined in the `com.oracle.svm.core.genscavenge.ThreadLocalAllocation` class that contain the `slowPathNew` prefix in their name .\n"
"E.g. `slowPathNewInstance` for plain objects or `slowPathNewArray` for arrays."
msgstr "Describimos la asignación de objetos como rápida cuando el hilo tiene un trozo de heap almacenado en caché y hay espacio suficiente para el objeto. Describimos la asignación del objeto como lenta cuando el hilo necesita solicitar un nuevo trozo de heap a través de la llamada al sistema `mmap` para satisfacer la asignación del objeto. Las asignaciones lentas son las más interesantes en este caso, porque nos dan una indicación aproximada de qué asignaciones están elevando el número de trozos de heap y, por tanto, están elevando el consumo de RSS. En SubstrateVM, los stacktraces de la ruta de asignación lenta contienen invocaciones a métodos definidos en la clase `com.oracle.svm.core.genscavenge.ThreadLocalAllocation` que contienen el prefijo `slowPathNew` en su nombre . Por ejemplo, `slowPathNewInstance` para objetos planos o `slowPathNewArray` para matrices."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"The areas of interest in the flamegraphs are those stacktraces that contain `ApplicationImpl.doStart()` method call,\n"
"because that's the method that is responsible for starting up Quarkus applications.\n"
"We want to find out how many slow path allocations are visible in these stacktraces,\n"
"which are executed by the `main` thread.\n"
"Also, by looking at the stacktraces that cause these slow path allocations,\n"
"we can get an idea of which components might be allocation heavy.\n"
"If you focus the flamegraph on that method,\n"
"and then click on `Search` at the top right and type `slowPathNew`,\n"
"you can observe which of the `sys_enter_mmap` system calls are related to native heap memory allocation."
msgstr "Las áreas de interés en los flamegráficos son aquellas stacktraces que contienen la llamada al método `ApplicationImpl.doStart()` , porque ése es el método responsable del arranque de las aplicaciones Quarkus. Queremos averiguar cuántas asignaciones de rutas lentas son visibles en estos stacktraces, que son ejecutados por el hilo `main` . Además, observando los stacktraces que causan estas asignaciones de rutas lentas, podemos hacernos una idea de qué componentes podrían ser pesados en cuanto a asignaciones. Si centra el flamegráfico en ese método y, a continuación, hace clic en `Search` en la parte superior derecha y escribe `slowPathNew` , podrá observar cuáles de las llamadas al sistema de `sys_enter_mmap` están relacionadas con la asignación de memoria nativa de la pila."

#. type: Plain text
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid "For Quarkus 2.7.6.Final, the flamegraph looks like this:"
msgstr "Para Quarkus 2.7.6.Final, el flamegráfico tiene este aspecto:"

#. type: Plain text
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid "And here's a screenshot highlighting the stacktraces that contain slow path allocations:"
msgstr "Y aquí hay una captura de pantalla destacando los stacktraces que contienen asignaciones de rutas lentas:"

#. type: Plain text
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid "Observing the number of stacktraces that contain `slowPathNew` invocations above, i.e. 2, we can say that the `main` thread in Quarkus 2.7.6.Final allocates roughly 2MB of heap chunks."
msgstr "Observando el número de stacktraces que contienen `slowPathNew` invocaciones por encima, es decir, 2, podemos decir que el hilo `main` en Quarkus 2.7.6.Final asigna aproximadamente 2MB de trozos de heap."

#. type: Plain text
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid "For Quarkus 2.13.4.Final, the flamegraph looks like this:"
msgstr "Para Quarkus 2.13.4.Final, el flamegráfico tiene este aspecto:"

#. type: Plain text
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid "Focusing on the same area, we observe that the `slowPathNew` stacktrace count is 5 in this case, so the `main` thread allocates roughly 5MB of heap chunks:"
msgstr "Centrándonos en la misma área, observamos que el recuento de stacktrace de `slowPathNew` es 5 en este caso, por lo que el hilo `main` asigna aproximadamente 5MB de trozos de heap:"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"The increase in object allocation at runtime startup between these two Quarkus versions,\n"
"combined with the idiosyncrasies of how thread local allocation works in SubstrateVM,\n"
"is what was causing the increase in RSS consumption.\n"
"In other words, even though both HotSpot and SubstrateVM experience higher allocations,\n"
"SubstrateVM's fixed thread-local allocation heap chunk sizes make this more apparent,\n"
"compared to the dynamic thread-local allocation logic in HotSpot."
msgstr "El aumento de la asignación de objetos en el arranque en tiempo de ejecución entre estas dos versiones de Quarkus, combinado con la idiosincrasia de cómo funciona la asignación local de hilos en SubstrateVM, es lo que estaba causando el aumento del consumo de RSS. En otras palabras, aunque tanto HotSpot como SubstrateVM experimentan mayores asignaciones, los tamaños fijos de los trozos de heap de asignación local de hilos de SubstrateVM hacen que esto sea más evidente, en comparación con la lógica de asignación local de hilos dinámica de HotSpot."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"Since then, improvements were made to the components that caused the extra object allocation.\n"
"We were able to detect the changes that had caused these extra allocations\n"
"by looking at the components that appeared in the stacktrace leading to slow allocations,\n"
"and inspecting updates that had happened in those components.\n"
"In this case, updates to the SmallRye configuration handling at startup caused the regression."
msgstr "Desde entonces, se han introducido mejoras en los componentes que causaban la asignación extra de objetos. Pudimos detectar los cambios que habían causado estas asignaciones extra observando los componentes que aparecían en el stacktrace que provocaban las asignaciones lentas, e inspeccionando las actualizaciones que se habían producido en esos componentes. En este caso, las actualizaciones en el manejo de la configuración de SmallRye en el arranque causaron la regresión."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"The stacktraces that cause slow object allocations give us an approximation on the components that cause memory usage increase.\n"
"There could be situations where the stacktrace leading to a slow allocation is perfectly valid,\n"
"but due to the non-deterministic nature of object allocation,\n"
"the stacktrace just happens to be the one that caused a new heap chunk to be allocated.\n"
"However, if you see multiple stacktraces in the same area,\n"
"that's probably a good hint that something in that area needs to be investigated."
msgstr "Los stacktraces que provocan asignaciones lentas de objetos nos dan una aproximación sobre los componentes que provocan el aumento del uso de memoria. Podría haber situaciones en las que el stacktrace que provoca una asignación lenta es perfectamente válido, pero debido a la naturaleza no determinista de la asignación de objetos, el stacktrace simplemente resulta ser el que provocó que se asignara un nuevo trozo de heap. Sin embargo, si ve varios stacktraces en la misma zona, probablemente sea un buen indicio de que hay que investigar algo en esa zona."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"By Quarkus version 2.13.7.Final, the RSS consumption on startup was back to previous levels.\n"
"The RSS regression was introduced by the changes in\n"
"https://github.com/quarkusio/quarkus/pull/26802#issue-1308798216[PR #26802],\n"
"and the fixes in https://github.com/quarkusio/quarkus/pull/29408[PR #29408]\n"
"and https://github.com/quarkusio/quarkus/pull/29842[PR #29842]\n"
"brought it back down."
msgstr "En la versión 2.13.7.Final de Quarkus, el consumo de RSS en el arranque volvió a los niveles anteriores. La regresión RSS fue introducida por los cambios en link:https://github.com/quarkusio/quarkus/pull/26802#issue-1308798216[PR #26802] , y las correcciones en link:https://github.com/quarkusio/quarkus/pull/29408[PR #29408] y link:https://github.com/quarkusio/quarkus/pull/29842[PR #29842] la volvieron a reducir."

#. type: Title ==
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy, no-wrap
msgid "Performing the analysis with `ObjectAllocationInNewTLAB` JFR event"
msgstr "Realización del análisis con `ObjectAllocationInNewTLAB` Evento JFR"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"As newer versions of GraalVM implement https://github.com/oracle/graal/issues/5410[more and more JFR events] in native mode,\n"
"it also becomes easier to analyse Quarkus application performance.\n"
"For instance the recent release of GraalVM for JDK 17/20 adds support for the `jdk.ObjectAllocationInNewTLAB` event,\n"
"which would have highlighted the discrepancies in the Quarkus versions compared above.\n"
"Unfortunately, the Quarkus versions tested here are not compatible with this GraalVM version,\n"
"but we can give it a go with the latest Quarkus version to see what comes out."
msgstr "A medida que las nuevas versiones de GraalVM implementan link:https://github.com/oracle/graal/issues/5410[más y más eventos JFR] en modo nativo, también resulta más fácil analizar el rendimiento de las aplicaciones Quarkus. Por ejemplo, la reciente versión de GraalVM para JDK 17/20 añade compatibilidad con el evento `jdk.ObjectAllocationInNewTLAB` , lo que habría puesto de manifiesto las discrepancias en las versiones de Quarkus comparadas anteriormente. Lamentablemente, las versiones de Quarkus probadas aquí no son compatibles con esta versión de GraalVM, pero podemos intentarlo con la última versión de Quarkus a ver qué sale."

#. type: Plain text
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid "First, we build the native Quarkus application with JFR support:"
msgstr "En primer lugar, construimos la aplicación nativa Quarkus con soporte JFR:"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"To obtain `jdk.ObjectAllocationInNewTLAB` events,\n"
"a custom JFC configuration file is required.\n"
"We use `jfr configure` to generate it:"
msgstr "Para obtener los eventos de `jdk.ObjectAllocationInNewTLAB` , es necesario un archivo de configuración JFC personalizado. Utilizamos `jfr configure` para generarlo:"

#. type: Plain text
#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid "Then, we start the Quarkus native executable with the necessary JFR flags:"
msgstr "A continuación, iniciamos el ejecutable nativo Quarkus con las banderas JFR necesarias:"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"After shutting down Quarkus,\n"
"we can use https://adoptium.net/jmc[Adoptium's Eclipse Mission Control]\n"
"to visualize a flamegraph for all the `jdk.ObjectAllocationInNewTLAB` events.\n"
"We can also do a similar focus on `ApplicationImpl.doStart()` method to observe which slow path allocations get triggered from there:"
msgstr "Tras apagar Quarkus, podemos utilizar link:https://adoptium.net/jmc[el control de misión Eclipse de Adoptium] para visualizar un flamegráfico de todos los eventos de `jdk.ObjectAllocationInNewTLAB` . También podemos hacer un enfoque similar en el método `ApplicationImpl.doStart()` para observar qué asignaciones de rutas lentas se disparan desde allí:"

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"Looking at the flamegraph,\n"
"we can count 7 stacktraces for slow path allocations for the `main` thread.\n"
"Whether this is a problem,\n"
"or maybe code execution has shifted from another thread to `main`,\n"
"would be something we would need to explore further and see if there's a regression."
msgstr "Observando el flamegraph, podemos contar 7 stacktraces de asignaciones de rutas lentas para el hilo `main` . Si esto es un problema, o tal vez la ejecución del código se ha desplazado de otro hilo a `main` , sería algo que tendríamos que explorar más a fondo y ver si hay una regresión."

#: _posts/2023-07-27-native-startup-rss-troubleshooting.adoc
#, fuzzy
msgid ""
"If you encounter memory issues in your native applications,\n"
"or any other type of performance issues,\n"
"do not hesitate giving JFR a go.\n"
"Robert Toyonaga has written a couple of blog posts on the latest JFR additions,\n"
"see link:/blog/profile-and-monitor-native-executables-with-jfr[here] to find out more."
msgstr "Si tiene problemas de memoria en sus aplicaciones nativas, o cualquier otro tipo de problemas de rendimiento, no dude en darle una oportunidad a JFR. Robert Toyonaga ha escrito un par de entradas de blog sobre las últimas incorporaciones de JFR, consulte link:/blog/profile-and-monitor-native-executables-with-jfr[aquí] para obtener más información."
