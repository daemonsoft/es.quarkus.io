# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Suomen Asiakastieto Oy chooses Quarkus for their microservices development"
msgstr "Suomen Asiakastieto Oy elige Quarkus para su desarrollo de microservicios"

#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid ""
"Based in Helsinki, Finland, The Asiakastieto Group is a leading provider of innovative, digital business and consumer information services in the Nordic region. In the banking, financial services, and retail industries, Asiakastieto’s products and services support risk management, finance and business administration, credit or loan-related  decision-making, sales and marketing.\n"
"When the EU introduced its revised Payment Services Directive (PSD2) in 2018 to increase competition, promote innovation, and improve security in the payments industry, Asiakastieto began evaluating how to help its customers manage the impact of the directive. This initiative aligned with one of the company’s key corporate social responsibility goals: to increase trust in society. The Asiakastieto Group has many brands such as UC AB, Intellia Oy, and Suomen Asiakastieto Oy, the latter being the one that we cover in this user story."
msgstr "Con sede en Helsinki, Finlandia, el Grupo Asiakastieto es un proveedor líder de servicios innovadores y digitales de información empresarial y al consumidor en la región nórdica. En los sectores de la banca, los servicios financieros y el comercio minorista, los productos y servicios de Asiakastieto apoyan la gestión de riesgos, las finanzas y la administración empresarial, la toma de decisiones relacionadas con créditos o préstamos, las ventas y el marketing. Cuando la UE introdujo su Directiva de Servicios de Pago revisada (PSD2) en 2018 para aumentar la competencia, promover la innovación y mejorar la seguridad en la industria de pagos, Asiakastieto comenzó a evaluar cómo ayudar a sus clientes a gestionar el impacto de la directiva. Esta iniciativa se alineó con uno de los objetivos clave de responsabilidad social corporativa de la empresa: aumentar la confianza en la sociedad. El Grupo Asiakastieto tiene muchas marcas, como UC AB, Intellia Oy y Suomen Asiakastieto Oy, siendo esta última la que cubrimos en esta historia de usuario."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Why microservices?"
msgstr "¿Por qué los microservicios?"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Suomen Asiakastieto Oy has many different departments: Risk Decision, SME & Consumer, Customer Data Management, Digital Processes. Real Estate and Collateral Information, which operates within Digital Processes, had deployed to their application server instance a new application, which happened to have issues while running in production affecting the stability of the application server and hence other applications running on it. This resulted in the need to reboot the application server every time this anomaly occurred leading to unexpected downtime and to a negative customer satisfaction."
msgstr "Suomen Asiakastieto Oy tiene muchos departamentos diferentes: Decisión sobre riesgos, PYME y consumidores, gestión de datos de clientes y procesos digitales. El departamento de Información Inmobiliaria y Colateral, que opera dentro de Procesos Digitales, había desplegado en su instancia de servidor de aplicaciones una nueva aplicación, que resultaba tener problemas mientras se ejecutaba en producción que afectaban a la estabilidad del servidor de aplicaciones y, por tanto, a otras aplicaciones que se ejecutaban en él. El resultado era la necesidad de reiniciar el servidor de aplicaciones cada vez que se producía esta anomalía, lo que provocaba un tiempo de inactividad inesperado y una satisfacción negativa del cliente."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Because of this, they decided to adopt microservice architectures to introduce better resilience and high-availability into their solutions so that if a microservice or an application went awry, it would not affect the entire system. So, when the time came to start developing their PSD2 project, they decided to start implementing microservices in Thorntail, which is an open source application assembler - similar to Spring Boot - that also implements MicroProfile, an community-driven open source specification for Java microservices. They decided on Thorntail because its functionality and capabilities were close to the application server capabilities they were familiar with. After being in production for a few months, they learned about Quarkus and its innovative approach that rethinks Java for containers, cloud and Kubernetes. Around the same time, they also learned about the end-of-life of Thorntail. Their continued desire to develop new microservices as well as to break their monolithic application servers into microservices made them evaluate Quarkus more in depth."
msgstr "Por ello, decidieron adoptar arquitecturas de microservicios para introducir una mayor resiliencia y alta disponibilidad en sus soluciones, de forma que si un microservicio o una aplicación se estropeaba, no afectara a todo el sistema. Así que, cuando llegó el momento de empezar a desarrollar su proyecto PSD2, decidieron empezar a implementar microservicios en Thorntail, que es un ensamblador de aplicaciones de código abierto -similar a Spring Boot- que también implementa MicroProfile, una especificación de código abierto impulsada por la comunidad para los microservicios de Java. Se decidieron por Thorntail porque su funcionalidad y capacidades se acercaban a las del servidor de aplicaciones con el que estaban familiarizados. Después de estar en producción durante unos meses, conocieron Quarkus y su enfoque innovador que replantea Java para los contenedores, la nube y Kubernetes. Al mismo tiempo, también se enteraron del fin de la vida útil de Thorntail. Su continuo deseo de desarrollar nuevos microservicios, así como de dividir sus servidores de aplicaciones monolíticas en microservicios, les hizo evaluar Quarkus más a fondo."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Their monoliths and existing microservices"
msgstr "Sus monolitos y microservicios existentes"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "With respect to their monoliths, they have about twelve JBoss EAP instances, each running dozens of their applications. As a first step to make the entire system more distributed, they decided to start moving some of these workloads to OpenShift by running many instances of JBoss EAP, each containing a single application. As a result, they experienced high memory consumption. At this point, they started looking into ways to reduce the footprint of these applications running on OpenShift."
msgstr "Con respecto a sus monolitos, tienen unas doce instancias de JBoss EAP, cada una de las cuales ejecuta docenas de sus aplicaciones. Como primer paso para hacer que todo el sistema sea más distribuido, decidieron empezar a mover algunas de estas cargas de trabajo a OpenShift ejecutando muchas instancias de JBoss EAP, cada una de las cuales contenía una única aplicación. Como resultado, experimentaron un alto consumo de memoria. En este punto, empezaron a buscar formas de reducir la huella de estas aplicaciones que se ejecutaban en OpenShift."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "With respect to their existing Thorntail microservices, which they needed to migrate to Quarkus, they noticed that spinning up a Thorntail container was taking about 1 minute to start up. When they migrated it to Quarkus, the service now starts in 0.4 seconds! With this improved startup time, they could scale up their services faster so that they could be readily available faster to process extra traffic leading to a better customer experience during peak times since customers would not have to wait on the browser to have their requests serviced, for example."
msgstr "Con respecto a sus microservicios Thorntail existentes, que necesitaban migrar a Quarkus, se dieron cuenta de que el arranque de un contenedor Thorntail tardaba aproximadamente 1 minuto. Cuando lo migraron a Quarkus, ¡el servicio ahora se inicia en 0,4 segundos! Con esta mejora en el tiempo de arranque, pudieron escalar sus servicios más rápidamente para que pudieran estar disponibles más rápido para procesar el tráfico adicional, lo que condujo a una mejor experiencia del cliente durante las horas punta, ya que los clientes no tendrían que esperar en el navegador para que se atendieran sus solicitudes, por ejemplo."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "In fact, before going into production with Quarkus, Eero Arvonen, Solution Architect at IT Development Finland Asiakasieto Oy, made a comparative analysis between the Thorntail and Quarkus versions of a microservice. This first chart shows a comparison between the original version of one of their Thortail microservices, which used JAX-WS, next to different Quarkus versions of the same microservice."
msgstr "De hecho, antes de entrar en producción con Quarkus, Eero Arvonen, arquitecto de soluciones en IT Development Finland Asiakasieto Oy, realizó un análisis comparativo entre las versiones de Thorntail y Quarkus de un microservicio. Este primer gráfico muestra una comparación entre la versión original de uno de sus microservicios Thortail, que utilizaba JAX-WS, junto a diferentes versiones de Quarkus del mismo microservicio."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "This next chart shows the performance and startup time results for the same combinations of microservice versions as the previous graph."
msgstr "Este siguiente gráfico muestra los resultados de rendimiento y tiempo de inicio para las mismas combinaciones de versiones de microservicios que el gráfico anterior."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "According to Eero, _“migrating from Thorntail to JVM-Quarkus was trivial and memory consumption went down by about 75% while CPU consumption was reduced by about 70%. This was accompanied by a 40% increase in throughput resulting in a faster response time. Migrating to Quarkus native, we found that the application ran at a better throughput even with 50MB of memory which is 95% less than with Thorntail. We also identified a space-time tradeoff between different native Quarkus setups: deploying it with 200MB of memory instead of 50MB will reduce its CPU requirements by two thirds. Thus, if we ever had to balance CPU vs memory within our OpenShift cluster, this would prove useful.”_"
msgstr "Según Eero, _\"la migración de Thorntail a JVM-Quarkus fue trivial y el consumo de memoria se redujo en un 75% aproximadamente, mientras que el consumo de CPU se redujo en un 70%. Esto vino acompañado de un aumento del 40% en el rendimiento, lo que se tradujo en un tiempo de respuesta más rápido. Al migrar a Quarkus nativo, descubrimos que la aplicación se ejecutaba con un mejor rendimiento incluso con 50 MB de memoria, lo que supone un 95% menos que con Thorntail. También identificamos una compensación de espacio-tiempo entre las diferentes configuraciones de Quarkus nativo: desplegarlo con 200MB de memoria en lugar de 50MB reducirá sus requerimientos de CPU en dos tercios. Por lo tanto, si alguna vez tuviéramos que equilibrar la CPU frente a la memoria dentro de nuestro clúster de OpenShift, esto resultaría útil.\"_"

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Live Coding"
msgstr "Codificación en vivo"

#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid ""
"They use and like the Quarkus development mode, also known as live coding, a lot. Before Quarkus, they used to use JRebel, for hot replacing but it was unreliable. According to Eero _“Quarkus development mode has by far a better track record.”_  Now that they are writing new microservices, they have made it a best practice to use live coding. With Thorntail, there were manual steps to deploy changes to try them out whereas with Quarkus, the changes are automatically applied to the running process so that the developer can immediately test the application. This makes developers more productive in that they can verify and troubleshoot their code faster.\n"
"Eero took it upon himself to deliver a small internal Quarkus workshop, which got developers very excited about this new and innovative technology, _“people are looking forward to working with Quarkus”_, mentioned Eero. Quarkus is getting developers excited and this has led to other developers across the organization to use Quarkus for their projects."
msgstr "Utilizan y les gusta mucho el modo de desarrollo Quarkus, también conocido como codificación en vivo. Antes de Quarkus, solían utilizar JRebel, para la sustitución en caliente, pero era poco fiable. Según Eero, \"el modo de desarrollo de Quarkus tiene _con diferencia un mejor historial\"._ Ahora que están escribiendo nuevos microservicios, han convertido en una práctica recomendada el uso de la codificación en vivo. Con Thorntail, había pasos manuales para desplegar los cambios y probarlos, mientras que con Quarkus, los cambios se aplican automáticamente al proceso en ejecución para que el desarrollador pueda probar inmediatamente la aplicación. Esto hace que los desarrolladores sean más productivos, ya que pueden verificar y solucionar los problemas de su código con mayor rapidez. Eero se encargó de impartir un pequeño taller interno sobre Quarkus, que consiguió que los desarrolladores se entusiasmaran con esta nueva e innovadora tecnología, _\"la gente está deseando trabajar con Quarkus\",_ mencionó Eero. Quarkus está entusiasmando a los desarrolladores y esto ha llevado a otros desarrolladores de toda la organización a utilizar Quarkus para sus proyectos."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Learning Quarkus"
msgstr "Aprender Quarkus"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "_“Quarkus was very easy to pick up”_, according to Eero. In his opinion, the Quarkus guides on https://quarkus.io/ are very good, thorough and comprehensive with great code examples. In addition, he found a very active community in Quarkus. When they ran into problems, they were able to search the internet for the error messages and easily found answers online. In addition, the Quarkus community and Quarkus engineers are very active even on external forums answering questions and helping folks inquiring for help."
msgstr "Según Eero, \" _Quarkus fue muy fácil de aprender\"_. En su opinión, las guías de Quarkus en  https://quarkus.io/  son muy buenas, exhaustivas y completas, con grandes ejemplos de código. Además, encontró una comunidad muy activa en Quarkus. Cuando se encontraron con problemas, pudieron buscar en Internet los mensajes de error y encontraron fácilmente respuestas en línea. Además, la comunidad de Quarkus y los ingenieros de Quarkus son muy activos, incluso en foros externos, respondiendo a preguntas y ayudando a la gente que pide ayuda."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Some pain points"
msgstr "Algunos puntos débiles"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "As awesome as Quarkus is, this constantly evolving and innovative technology had some areas for improvement. For example, Eero mentioned that Java API for XML Web Services (JAX-WS) didn’t work on native mode. Also SSL, by default, is disabled but available for HTTP/S, which he needed to use and got it to work following the configuration instructions, which he found complex. In addition, he would like to see improvements in how reflection is currently configured, which was time-consuming to configure because he had to use a trial-and-error approach to get it to work. He’d like to see a way to make this reflection configuration process easier to carry out."
msgstr "A pesar de lo impresionante que es Quarkus, esta tecnología innovadora y en constante evolución tenía algunas áreas de mejora. Por ejemplo, Eero mencionó que Java API for XML Web Services (JAX-WS) no funcionaba en modo nativo. También SSL, por defecto, está desactivado pero disponible para HTTP/S, que él necesitaba utilizar y consiguió que funcionara siguiendo las instrucciones de configuración, que le parecieron complejas. Además, le gustaría ver mejoras en la forma en que se configura actualmente la reflexión, la cual fue lenta de configurar porque tuvo que usar un enfoque de prueba y error para que funcionara. Le gustaría ver una manera de hacer este proceso de configuración de reflection más fácil de llevar a cabo."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "Lecciones aprendidas"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Because Quarkus takes the approach of a closed world for application development, there needs to be a bit of a mind shift when writing applications. As an example, for their existing applications, Asiakastieto used a configuration manager to read in configuration information (connection URLs, DB connections strings, etc.) at application startup. Since with Quarkus, in native mode, part of the application startup happens during build time, they had to reconfigure the configuration manager to read in the configuration information when the application was run. Although the change was easy to make, it highlights the importance of understanding how Quarkus applications need to be implemented under this new paradigm."
msgstr "Dado que Quarkus adopta el enfoque de un mundo cerrado para el desarrollo de aplicaciones, es necesario cambiar un poco la mentalidad al escribir aplicaciones. Como ejemplo, para sus aplicaciones existentes, Asiakastieto utilizaba un gestor de configuración para leer la información de configuración (URLs de conexión, cadenas de conexión a la base de datos, etc.) al inicio de la aplicación. Dado que con Quarkus, en modo nativo, parte del inicio de la aplicación se produce durante el tiempo de compilación, tuvieron que reconfigurar el gestor de configuración para leer la información de configuración cuando se ejecutaba la aplicación. Aunque el cambio fue fácil de hacer, pone de manifiesto la importancia de entender cómo las aplicaciones Quarkus deben ser implementadas bajo este nuevo paradigma."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "Current state of Quarkus projects"
msgstr "Estado actual de los proyectos Quarkus"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "As mentioned earlier, the Asiakastieto Oy PSD2 project had been implemented in Thorntail microservices and when they learned about Quarkus, the decision was made to migrate their Thorntail microservices to Quarkus. As of this writing, out of the 7 Thorntail microservices in their PSD2 application, one has been migrated to Quarkus and is running in production."
msgstr "Como se mencionó anteriormente, el proyecto PSD2 de Asiakastieto Oy había sido implementado en microservicios Thorntail y cuando conocieron Quarkus, se tomó la decisión de migrar sus microservicios Thorntail a Quarkus. En el momento de escribir este artículo, de los 7 microservicios Thorntail de su aplicación PSD2, uno ha sido migrado a Quarkus y está funcionando en producción."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Two more microservices have been migrated from Thorntail to Quarkus (native mode) and are currently being tested and will be deployed during their next incremental application update during February 2020."
msgstr "Se han migrado otros dos microservicios de Thorntail a Quarkus (modo nativo) y actualmente se están probando y se desplegarán durante su próxima actualización incremental de la aplicación durante febrero de 2020."

#. type: Title ==
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy, no-wrap
msgid "What’s next"
msgstr "¿Qué es lo siguiente?"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "When their microservices initiative started one and a half years ago, Asiakastieto Oy decided to use Thorntail as their main technology for Java microservices. With the news of the sunsetting of Thorntail and the introduction of Quarkus, they have established a new policy that every new project will be implemented in Quarkus in JVM mode as a minimum and when feasible use Quarkus in native mode. There are already two new projects that are being implemented in Quarkus at present with more coming in the future."
msgstr "Cuando su iniciativa de microservicios comenzó hace un año y medio, Asiakastieto Oy decidió utilizar Thorntail como su tecnología principal para los microservicios Java. Con la noticia de la desaparición de Thorntail y la introducción de Quarkus, han establecido una nueva política según la cual cada nuevo proyecto se implementará en Quarkus en modo JVM como mínimo y, cuando sea factible, utilizarán Quarkus en modo nativo. Ya hay dos nuevos proyectos que se están implementando en Quarkus en la actualidad, y habrá más en el futuro."

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Para más información sobre Quarkus:"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Página web de Quarkus:  http://quarkus.io"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Proyecto GitHub de Quarkus:  https://github.com/quarkusio/quarkus"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Twitter de Quarkus:  https://twitter.com/QuarkusIO"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Chat de Quarkus:  https://quarkusio.zulipchat.com/"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Lista de correo de Quarkus:  https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Canal de YouTube de Quarkus]"

#. type: Plain text
#: _posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Cuatro razones para usar Quarkus]"
