# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-06-29 11:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "Debugging natively compiled Java code with NativeJDB"
msgstr "Depuración de código Java compilado nativamente con NativeJDB"

#. type: YAML Front Matter: synopsis
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "NativeJDB bridges the gap between the Java Debugger (JDB) framework available in modern IDEs and native debugging via GNU Project debugger (GDB)."
msgstr "NativeJDB tiende un puente entre el marco de depuración de Java (JDB) disponible en los IDEs modernos y la depuración nativa a través del depurador del Proyecto GNU (GDB)."

#. type: Title ==
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "Co-authored by: *Ansu Varghese, Research Software Engineer, IBM*"
msgstr "Coautor: Ansu Varghese: *Ansu Varghese, Ingeniero de Software de Investigación, IBM*"

#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "**In collaboration with:**"
msgstr "*En colaboración con:*"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "_Max Andersen, Dimitris Andreadis, Andrew Dinn, Stuart Douglas, Jason Greene, David Grove, David Lloyd, Thomas Qvarnstrom, Foivos Zakkak, Galder Zamarreno (IBM Research and Red Hat)_"
msgstr "_Max Andersen, Dimitris Andreadis, Andrew Dinn, Stuart Douglas, Jason Greene, David Grove, David Lloyd, Thomas Qvarnstrom, Foivos Zakkak, Galder Zamarreno (IBM Research y Red Hat)_"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "{empty} +"
msgstr "<br>"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://quarkus.io/[Quarkus] is a cloud-native Java development framework, which allows Java code to be mapped to Kubernetes containers and compiled natively. https://www.graalvm.org/22.1/reference-manual/native-image/[Native compilation] is useful for serverless computing, it avoids the overhead of running a JVM in containers and lets us execute serverless code directly. Debugging natively compiled code is not an easy task. It can be very different from the original Java source code due to extensive code optimizations, as well as differences in libraries used in native vs non-natively compiled code. In some cases, it is necessary to view both the source and the assembly code in order to gain better understanding of the program, further complicating the debugging task. "
msgstr "link:https://quarkus.io/[Quarkus] es un marco de desarrollo Java nativo en la nube, que permite mapear el código Java en contenedores Kubernetes y compilarlo de forma nativa. La  link:https://www.graalvm.org/22.1/reference-manual/native-image/[compilación] nativa es útil para la computación sin servidor, ya que evita la sobrecarga de ejecutar una JVM en los contenedores y nos permite ejecutar el código sin servidor directamente. Depurar el código compilado nativamente no es una tarea fácil. Puede ser muy diferente del código fuente Java original debido a las extensas optimizaciones del código, así como a las diferencias en las bibliotecas utilizadas en el código nativo frente al código no compilado nativamente. En algunos casos, es necesario ver tanto el código fuente como el código ensamblador para comprender mejor el programa, lo que complica aún más la tarea de depuración."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://developers.redhat.com/blog/2020/06/25/debugging-graalvm-native-images-using-gdb[Native executables can be debugged with GDB], which is a C/C++ debugger in combination with a tool like emacs to step through the source code. However, these tools may not be familiar to a Java developer. Recently, extensions to https://marketplace.visualstudio.com/items?itemName=oracle-labs-graalvm.graalvm[VSCode] and https://plugins.jetbrains.com/plugin/19237-graalvm-native-debugger[IntelliJ] have been developed to alleviate this problem. Both these tools are specific to the IDE they extend, and need to be used in a Linux environment due to current limitations of Java native compilers. "
msgstr "link:https://developers.redhat.com/blog/2020/06/25/debugging-graalvm-native-images-using-gdb[Los ejecutables nativos pueden ser depurados con GDB], que es un depurador de C/C++ en combinación con una herramienta como emacs para recorrer el código fuente. Sin embargo, estas herramientas pueden no ser familiares para un desarrollador de Java. Recientemente, se han desarrollado extensiones de  link:https://marketplace.visualstudio.com/items?itemName=oracle-labs-graalvm.graalvm[VSCode] e  link:https://plugins.jetbrains.com/plugin/19237-graalvm-native-debugger[IntelliJ] para aliviar este problema. Ambas herramientas son específicas del IDE al que extienden, y necesitan ser utilizadas en un entorno Linux debido a las limitaciones actuales de los compiladores nativos de Java."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://github.com/nativejdb/[NativeJDB] is an *open-source* tool that supports *remote debugging* of a natively compiled Java code. In principle, this allows debugging from any IDE that supports the Java Platform Debugger Architecture (JPDA), such as IntelliJ, Eclipse or VSCode. Attaching remotely means that the user can start a debugging session on *any O/S*, while the NativeJDB process itself runs in a Linux container. Our challenge is to bridge the gap between JPDA and the GDB, two stacks that don't typically talk to each other! To achieve this we essentially teach the GDB to speak the Java Debug Wire Protocol (JDWP), used by IDEs to communicate with Java debuggers."
msgstr "link:https://github.com/nativejdb/[NativeJDB] es una herramienta *de código abierto* que soporta la *depuración remota* de un código Java compilado de forma nativa. En principio, esto permite la depuración desde cualquier IDE que soporte la arquitectura de depuración de la plataforma Java (JPDA), como IntelliJ, Eclipse o VSCode. La conexión remota significa que el usuario puede iniciar una sesión de depuración en *cualquier sistema operativo*, mientras que el proceso NativeJDB se ejecuta en un contenedor Linux. Nuestro reto es tender un puente entre JPDA y el GDB, dos pilas que normalmente no se comunican entre sí. Para lograr esto, esencialmente enseñamos al GDB a hablar el Protocolo de Cableado de Depuración de Java (JDWP), utilizado por los IDEs para comunicarse con los depuradores de Java."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "When writing Quarkus code, developers have the possibility of finding bugs with a regular Java debugger before compiling it natively. NativeJDB is useful when the observed behavior of the native executable is different than when the program is executed on a JVM. It can be used to explore optimizations and differences in libraries that account for behavioral anomalies. NativeJDB is not specific to Quarkus and can be used to debug any natively compiled Java code."
msgstr "Cuando se escribe código Quarkus, los desarrolladores tienen la posibilidad de encontrar errores con un depurador Java normal antes de compilarlo de forma nativa. NativeJDB es útil cuando el comportamiento observado del ejecutable nativo es diferente que cuando el programa se ejecuta en una JVM. Se puede utilizar para explorar las optimizaciones y las diferencias en las bibliotecas que explican las anomalías de comportamiento. NativeJDB no es específico de Quarkus y puede utilizarse para depurar cualquier código Java compilado nativamente."

#. type: Title ==
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "Architecture and Implementation"
msgstr "Arquitectura y aplicación"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "NativeJDB is a Java process that wraps GDB, which itself wraps the native executable, and it acts as a server that understands the JDWP protocol. It is similar to the JDWP agent used to control and debug a running Java process. In that case, the user can attach to such a process and can start debugging it. NativeJDB is used in a similar way: once it is started, the user attaches to it using a Remote Debug configuration from the IDE."
msgstr "NativeJDB es un proceso Java que envuelve a GDB, que a su vez envuelve al ejecutable nativo, y actúa como un servidor que entiende el protocolo JDWP. Es similar al agente JDWP utilizado para controlar y depurar un proceso Java en ejecución. En ese caso, el usuario puede adjuntar a dicho proceso y puede empezar a depurarlo. NativeJDB se utiliza de manera similar: una vez que se inicia, el usuario se adjunta a él utilizando una configuración de depuración remota desde el IDE."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "The IDE then communicates with NativeJDB using the JDWP. After the initial handshake and pleasantries (like capabilities and set of available classes), the protocol allows a user to manipulate the IDE's interface, which triggers appropriate JDWP packets to be sent to NativeJDB. These packets are interpreted by NativeJDB and translated to https://ftp.gnu.org/old-gnu/Manuals/gdb/html_chapter/gdb_22.html[GDB-MI] commands. We use the MI interface to communicate with the GDB since it's the recommended interface to build tools on top of the GDB. The GDB then responds to these commands, and the responses are translated back into JDWP packets and sent back to the IDE."
msgstr "El IDE se comunica con NativeJDB utilizando el JDWP. Después del apretón de manos inicial y de las bromas (como las capacidades y el conjunto de clases disponibles), el protocolo permite al usuario manipular la interfaz del IDE, lo que desencadena el envío de paquetes JDWP apropiados a NativeJDB. Estos paquetes son interpretados por NativeJDB y traducidos a comandos  link:https://ftp.gnu.org/old-gnu/Manuals/gdb/html_chapter/gdb_22.html[GDB-MI]. Utilizamos la interfaz MI para comunicarnos con el GDB ya que es la interfaz recomendada para construir herramientas sobre el GDB. El GDB entonces responde a estos comandos, y las respuestas son traducidas de nuevo a paquetes JDWP y enviadas de vuelta al IDE."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Communication between the IDE and the GDB can be both synchronous and asynchronous, including error messages. In some cases, a command from the IDE can result in both a synchronous and an asynchronous response. For example, setting a breakpoint has a synchronous response, but the corresponding breakpoint-hit is an asynchronous event that gets sent from NativeJDB to the IDE. In principle, NativeJDB can be used with any IDE that has a JDWP implementation, but it has mostly been tested and works with IntelliJ. It also does not require any changes or extensions to existing IDEs and works with the *community as well as the commercial version* of IntelliJ."
msgstr "La comunicación entre el IDE y el GDB puede ser tanto sincrónica como asincrónica, incluyendo los mensajes de error. En algunos casos, un comando del IDE puede resultar en una respuesta tanto sincrónica como asincrónica. Por ejemplo, establecer un punto de interrupción tiene una respuesta sincrónica, pero el correspondiente punto de interrupción-hit es un evento asincrónico que se envía desde NativeJDB al IDE. En principio, NativeJDB puede ser usado con cualquier IDE que tenga una implementación de JDWP, pero en su mayoría ha sido probado y funciona con IntelliJ. Además, no requiere ningún cambio o extensión a los IDEs existentes y funciona tanto con la *versión comunitaria como con la comercial* de IntelliJ."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Today, native-image builders in https://www.graalvm.org/[GraalVM] and https://github.com/qbicc[qbicc] produce debug information on a Linux environment with source mapping to the original Java source code (support for other platforms is in the works as well). NativeJDB's architecture allows users to start a debugging session in an IDE running on any O/S and attach to a NativeJDB process running in a Linux container. So it does not require Linux to begin with. It also works with the *community as well as the commercial version* of GraalVM."
msgstr "En la actualidad, los constructores de imágenes nativas en  link:https://www.graalvm.org/[GraalVM] y  link:https://github.com/qbicc[qbicc] producen información de depuración en un entorno Linux con mapeo de fuentes al código fuente Java original (también se está trabajando en el soporte para otras plataformas). La arquitectura de NativeJDB permite a los usuarios iniciar una sesión de depuración en un IDE que se ejecuta en cualquier O/S y adjuntar a un proceso NativeJDB que se ejecuta en un contenedor Linux. Así que no requiere Linux para empezar. También funciona con la *comunidad, así como la versión comercial* de GraalVM."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "NativeJDB consists of a few different components. We use Docker to build a native executable and produce debug information for the debuggee Java application. Our Docker setup uses Ubuntu O/S. The frontend of NativeJDB is a set of classes that parse and build JDI data structures. Its backend parses and builds data structures corresponding to communication with the GDB."
msgstr "NativeJDB consta de unos cuantos componentes diferentes. Utilizamos Docker para construir un ejecutable nativo y producir información de depuración para la aplicación Java depurada. Nuestra configuración de Docker utiliza Ubuntu O/S. El frontend de NativeJDB es un conjunto de clases que analiza y construye estructuras de datos JDI. Su backend analiza y construye estructuras de datos correspondientes a la comunicación con el GDB."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "NativeJDB has been using a scaffolding JVM to help it obtain certain static information and speed up development. So currently NativeJDB starts up the program as a Java process as well, in addition to running the native executable. It attaches to that process and suspends it to obtain general static information about the program. In the future, we will remove this scaffolding and replace with information coming from the GDB, though it has been very helpful in rapid prototyping."
msgstr "NativeJDB ha estado utilizando una JVM de andamiaje para ayudarle a obtener cierta información estática y acelerar el desarrollo. Así que actualmente NativeJDB inicia el programa como un proceso Java también, además de ejecutar el ejecutable nativo. Se une a ese proceso y lo suspende para obtener información estática general sobre el programa. En el futuro, eliminaremos este andamiaje y lo sustituiremos por información procedente del GDB, aunque ha sido muy útil en la creación rápida de prototipos."

#. type: Title ==
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "NativeJDB in action!"
msgstr "¡NativeJDB en acción!"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "To get started, you'll need the following repos and follow the instructions in each:"
msgstr "Para empezar, necesitarás los siguientes repos y seguir las instrucciones de cada uno:"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://github.com/nativejdb/nativejdb"
msgstr "https://github.com/nativejdb/nativejdb"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://github.com/nativejdb/nativejdbExamples"
msgstr "https://github.com/nativejdb/nativejdbExamples"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Check out the following video to see NativeJDB in action!"
msgstr "Vea el siguiente vídeo para ver NativeJDB en acción."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "And this video showing NativeJDB running on the GettingStarted Quarkus application:"
msgstr "Y este video mostrando NativeJDB corriendo en la aplicación GettingStarted Quarkus:"

#. type: Title ==
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "Features"
msgstr "Características"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Ability to show Java source in the editor and step through code"
msgstr "Posibilidad de mostrar el código fuente de Java en el editor y recorrer el código"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Works with https://www.jrebel.com/blog/best-java-ide[IntelliJ] and Java11"
msgstr "Funciona con  link:https://www.jrebel.com/blog/best-java-ide[IntelliJ] y Java11"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Works with https://www.graalvm.org/[GraalVM’s] natively compiled images"
msgstr "Funciona con las imágenes compiladas de forma nativa  link:https://www.graalvm.org/[de GraalVM]"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Works with https://github.com/qbicc/qbicc[Qbicc’s] natively compiled images (work in progress)"
msgstr "Funciona con las imágenes compiladas de forma nativa  link:https://github.com/qbicc/qbicc[de Qbicc] (trabajo en curso)"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Debugging features using the IDE’s Debug Console itself:"
msgstr "Funciones de depuración mediante la propia consola de depuración del IDE:"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Suspend / Resume"
msgstr "Suspender / Reanudar"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Set Breakpoints (Insert/Enable)"
msgstr "Establecer puntos de interrupción (insertar/activar)"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Clear Breakpoints (Delete/Disable)"
msgstr "Borrar puntos de interrupción (borrar/desactivar)"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Step Over / Step Into / Step Return (work in progress)"
msgstr "Step Over / Step Into / Step Return (trabajo en curso)"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Stack Frames information in IDE debugger pane"
msgstr "Información de Stack Frames en el panel de depuración del IDE"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Variables (Local + Static) values (work in progress)"
msgstr "Valores de las variables (locales + estáticas) (trabajo en curso)"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "View of assembly code within a stack frame (work in progress)"
msgstr "Vista del código ensamblador dentro de un marco de pila (trabajo en curso)"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Multi-threading & thread info"
msgstr "Información sobre hilos y multihilos"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "NativeJDB does not support hot code replace. Also, very short running programs currently need a Thread.sleep(). This is due to the fact that NativeJDB today uses a scaffolding VM, and needs a little time to attach and suspend it. This problem will disappear when we get rid of the scaffolding in the future. There is also a known issue of breakpoints working only once in loops under some conditions (related to https://github.com/oracle/graal/issues/4379[this] graalvm issue), and the step operation sometimes continues instead."
msgstr "NativeJDB no soporta el reemplazo de código en caliente. Además, los programas de muy corta duración actualmente necesitan un Thread.sleep(). Esto es debido al hecho de que NativeJDB hoy en día utiliza un andamiaje VM, y necesita un poco de tiempo para adjuntar y suspenderlo. Este problema desaparecerá cuando nos deshagamos del andamiaje en el futuro. También hay un problema conocido de que los puntos de interrupción funcionan sólo una vez en los bucles bajo algunas condiciones (relacionadas con  link:https://github.com/oracle/graal/issues/4379[este] problema de graalvm), y la operación de paso a veces continúa en su lugar."

#. type: Title ==
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusión"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "Through this blog, we have showcased a new debugging tool called NativeJDB that allows users to remotely attach and debug a natively compiled Java code. It provides a bridge between the Java debugging framework in modern IDEs and GDB. It does not require extensions to existing IDEs, and allows the user to start their debugging session on any O/S."
msgstr "A través de este blog, hemos mostrado una nueva herramienta de depuración llamada NativeJDB que permite a los usuarios adjuntar y depurar remotamente un código Java compilado nativamente. Proporciona un puente entre el marco de depuración de Java en los IDEs modernos y GDB. No requiere extensiones a los IDEs existentes, y permite al usuario iniciar su sesión de depuración en cualquier sistema operativo."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "In the future, we can explore making NativeJDB work with other IDEs besides IntelliJ, which in principle should be possible."
msgstr "En el futuro, podemos explorar hacer que NativeJDB funcione con otros IDEs además de IntelliJ, lo que en principio debería ser posible."

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "NativeJDB is currently a working prototype, and we look forward to feedback, suggestions, and contributions! "
msgstr "NativeJDB es actualmente un prototipo en funcionamiento, y esperamos recibir comentarios, sugerencias y contribuciones."

#. type: Title ==
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://quarkus.io/guides/building-native-image#debugging-native-executable[]"
msgstr "https://quarkus.io/guides/building-native-image#debugging-native-executable"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://docs.oracle.com/en/java/javase/11/docs/specs/jdwp/jdwp-protocol.html[]"
msgstr "https://docs.oracle.com/en/java/javase/11/docs/specs/jdwp/jdwp-protocol.html"

#. type: Plain text
#: _posts/2022-06-29-nativejdb-debugger-for-native-images.adoc
#, fuzzy
msgid "https://sourceware.org/gdb/onlinedocs/gdb/GDB_002fMI.html[]"
msgstr "https://sourceware.org/gdb/onlinedocs/gdb/GDB_002fMI.html"
