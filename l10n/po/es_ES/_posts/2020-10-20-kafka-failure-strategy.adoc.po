# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy, no-wrap
msgid "Kafka - How to fail gracefully"
msgstr "Kafka - Cómo fallar con elegancia"

#. type: YAML Front Matter: synopsis
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy, no-wrap
msgid "Failure handling in the Kafka connector"
msgstr "Gestión de fallos en el conector Kafka"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"Failures are inevitable.\n"
"There is nothing we can do about that, and that also applies to Kafka applications.\n"
"Your application may contain a faulty component misbehaving once in a while, or unable to process a specific Kafka record.\n"
"In this post, we are going to see how we can manage these failures."
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid "Ack and Nack"
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"But, first, we need to explain how it works under the hood.\n"
"When using reactive messaging, your application receives https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.4/concepts.html#messages[Messages].\n"
"Even if your method handles _payloads_, there are Messages under the hood, and it unwraps the payload just before calling your method."
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-failure-strategy/messages.png[]"
msgstr "image:/assets/images/posts/kafka-failure-strategy/messages.png[alt=messages]"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"A message can be _acked_ or _nacked_.\n"
"If the message processing completes successfully, the message is acknowledged.\n"
"You can manually trigger the acknowledgment (by calling the `ack()` method) or let the framework handle it automatically.\n"
"In general, it's the outbound connector that acknowledges the message once the outgoing message has been sent to the broker successfully.\n"
"If not configured otherwise, acknowledging a message acknowledges the _source_ message, acknowledging its source, until we reach the root message, most probably created by an inbound connector:"
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-failure-strategy/ack-chain.png[Acknowledgement chain]"
msgstr "image:/assets/images/posts/kafka-failure-strategy/ack-chain.png[alt=Acknowledgement chain]"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"When the inbound connector receives the acknowledgment, it can act upon it and, for example, indicate to the broker that the message processing succeeded.\n"
"In the context of Kafka, there are various commit strategies.\n"
"We will cover these in a future post."
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"But as said earlier, failures are inevitable.\n"
"For example, you may have a misbehaving component throwing exceptions, or the outbound connector cannot send the messages because the remote broker is unavailable.\n"
"In these cases, the message is _nacked_, indicating that the processing failed.\n"
"Similarly to successful acknowledgment, negative acknowledgment can be triggered manually (using the `nack` method) or handled automatically.\n"
"For example, if your method throws an exception, the message is nacked.\n"
"As with _ack_, nacking a message nacks its source, and the nack is propagated until the inbound connector:"
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-failure-strategy/nack-chain.png[Negative acknowledgment chain]"
msgstr "image:/assets/images/posts/kafka-failure-strategy/nack-chain.png[alt=Negative acknowledgment chain]"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"It's the responsibility of the connector to decide how to react in this case.\n"
"The Kafka connector proposes three failure handling strategies, and that's what we are going to detail now."
msgstr ""

#. type: Title ==
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy, no-wrap
msgid "The \"Fail-Fast\" strategy"
msgstr "La estrategia \"Fail-Fast\""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"The first strategy is the simplest, but not sure we can qualify it with \"smoothly.\"\n"
"It's the default strategy.\n"
"As soon as a message is nacked, the connector reports the failure, and the application stops.\n"
"If you use the health checks extension, the application is marked as unhealthy, and your orchestrator may restart the application."
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-failure-strategy/fail-fast.png[Fail-Fast]"
msgstr "image:/assets/images/posts/kafka-failure-strategy/fail-fast.png[alt=Fail-Fast]"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"But, it's time to demonstrate it.\n"
"I've created a simple application receiving movie titles from Kafka and failing (with an exception) if the title contains a `'` or `,`.\n"
"You can check the code on this https://gist.github.com/cescoffier/23ca7b2bcc8c49cee3db29b3f2b59e4a#file-kafkafailfast-java[Gist], or run it using:"
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"Starting the application starts a Kafka broker using Docker.\n"
"The first start may require downloading the appropriate container image."
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid "If you ran the application and check the log, you will see:"
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid "Now, if you open your browser to http://localhost:8080/health, you will see that the failure has been caught and the application is unhealthy:"
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"This approach works well with sporadic, network-related issues.\n"
"Still, if the source of the failure is your application code, you may enter a restart loop.\n"
"Indeed, when the application restarts, it may again receive the message (the red one from the previous picture) that would produce the same failure again and again."
msgstr ""

#. type: Title ==
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy, no-wrap
msgid "The \"Ignore\" strategy"
msgstr "La estrategia de \"ignorar\""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"The second strategy is also straightforward: just close your eyes.\n"
"When a message is nacked, it ignores the failure and continues the processing:"
msgstr ""

#. type: delimited block -
#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid "image:/assets/images/posts/kafka-failure-strategy/ignore.png[Ignore strategy]"
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"The log indicates the failure, but it continues the processing with the next one.\n"
"You can only use this strategy if you don't need to manage all the messages or if your application is handling the failure internally."
msgstr ""

#. type: delimited block -
#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid "To enable this strategy, configure the channel with:"
msgstr ""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid "You can try this strategy with https://gist.github.com/cescoffier/23ca7b2bcc8c49cee3db29b3f2b59e4a#file-kafkaignorefailure-java[Gist], or run it using:"
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "If you ran the application and check the log, you will see two exceptions:"
msgstr "Si ejecuta la aplicación y comprueba el registro, verá dos excepciones:"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"Look at the last line.\n"
"As explained, it continues the processing with the next message."
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "If you check the health of the application (using http://localhost:8080/health), everything is fine:"
msgstr "Si compruebas la salud de la aplicación (usando  http://localhost:8080/health , todo está bien:"

#. type: Title ==
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy, no-wrap
msgid "The \"Dead-Letter Topic\" strategy"
msgstr "La estrategia del \"tema muerto\""

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"The https://en.wikipedia.org/wiki/Dead_letter_queue[dead-letter queue] is a well-known pattern to handle message processing failure.\n"
"Instead of failing fast or ignoring and continuing the processing, it stores the failing messages into a specific destination: a dead letter.\n"
"An administrator, human or software, can review the failing messages and decide what can be done (retry, skip, etc.).\n"
"Note that you can only apply this strategy if the ordering is not essential to the application."
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "You can, later, review the failing messages:"
msgstr "Más tarde, puede revisar los mensajes fallidos:"

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-failure-strategy/dead-letter-topic.png[Dead-letter topic]"
msgstr "image:/assets/images/posts/kafka-failure-strategy/dead-letter-topic.png[alt=Dead-letter topic]"

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "To enable this strategy, you need to add the following attribute to your configuration:"
msgstr "Para habilitar esta estrategia, debe añadir el siguiente atributo a su configuración:"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"By default, it writes to the `dead-letter-topic-$topic-name` topic.\n"
"In our demo, it's `dead-letter-topic-movies`.\n"
"But you can also configure the topic by setting the `dead-letter-queue.topic` attribute."
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "Depending on your Kafka configuration, you may have to create the topic beforehand and configure the replication factor."
msgstr "Dependiendo de su configuración de Kafka, es posible que tenga que crear el tema de antemano y configurar el factor de replicación."

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"Let's try it!\n"
"The https://gist.github.com/cescoffier/23ca7b2bcc8c49cee3db29b3f2b59e4a#file-kafkadeadlettertopic-java[KafkaDeadLetterTopic.java] file extends our previous application.\n"
"It uses the dead-letter-topic failure strategy and contains a component reading the dead-letter topic (`dead-letter-topic-movies`)."
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "You can run the application using:"
msgstr "Puedes ejecutar la aplicación con:"

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"If you check the log, you will see the two expected exceptions and that all the titles are processed.\n"
"You will also notice:"
msgstr ""

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "This log is written by the component reading the dead-letter topic:"
msgstr "Este registro lo escribe el componente que lee el tema de la letra muerta:"

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "When reading messages from the dead-letter topic, you can retrieve the failure reason by reading the `dead-letter-reason` header."
msgstr "Cuando se leen los mensajes del tema de letra muerta, se puede recuperar el motivo del fallo leyendo la cabecera `dead-letter-reason`."

#. type: Title ==
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusión"

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "The Kafka connector proposes three strategies to handle failures."
msgstr "El conector Kafka propone tres estrategias para gestionar los fallos."

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "`fail-fast` (default) stops the application and marks it unhealthy"
msgstr "`fail-fast` (por defecto) detiene la aplicación y la marca como no saludable"

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "`ignore` continues the processing even if there are failures."
msgstr "`ignore` continúa el procesamiento incluso si hay fallos."

#. type: Plain text
#: _posts/2020-10-20-kafka-failure-strategy.adoc
#, fuzzy
msgid "`dead-letter-queue` sends failing messages to another Kafka topic for further investigation."
msgstr "`dead-letter-queue` envía los mensajes que fallan a otro tema de Kafka para su posterior investigación."

#: _posts/2020-10-20-kafka-failure-strategy.adoc
msgid ""
"Next time, we will talk about the commit strategies because failures are inevitable, but successful processing happens sometimes!\n"
"Stay tuned!"
msgstr ""
