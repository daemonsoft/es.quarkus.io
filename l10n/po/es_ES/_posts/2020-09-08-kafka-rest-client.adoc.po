# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy, no-wrap
msgid "Combining Apache Kafka and the Rest client"
msgstr "Combinación de Apache Kafka y el cliente Rest"

#. type: YAML Front Matter: synopsis
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy, no-wrap
msgid "How to combine reactive messaging, Kafka and the Rest client"
msgstr "Cómo combinar la mensajería reactiva, Kafka y el cliente Rest"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"Another week, another interesting question.\n"
"This week, someone asks me about combining Kafka and the Rest Client.\n"
"That is a recurring subject, and most of the time, the goal is to achieve the following process:"
msgstr "Otra semana, otra pregunta interesante. Esta semana, alguien me pregunta sobre la combinación de Kafka y el cliente Rest. Es un tema recurrente, y la mayoría de las veces, el objetivo es lograr el siguiente proceso:"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-rest-client/kafka-rest-architecture.png[]"
msgstr "image:/assets/images/posts/kafka-rest-client/kafka-rest-architecture.png[alt=kafka rest architecture]"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"In other words, we want to call a remote service for each Kafka message we receive.\n"
"Therefore, we have a first topic (\"in\") containing the data we are consuming, for instance, \"transactions\".\n"
"Then, we have the central piece of the architecture: the processing component.\n"
"It consumes the incoming transactions, and for each of them, calls a remote service.\n"
"It also writes the response (produced by the remote service) to another Kafka topic \"out\"."
msgstr "En otras palabras, queremos llamar a un servicio remoto por cada mensaje Kafka que recibamos. Por lo tanto, tenemos un primer tema (\"en\") que contiene los datos que estamos consumiendo, por ejemplo, \"transacciones\". A continuación, tenemos la pieza central de la arquitectura: el componente de procesamiento. Consume las transacciones entrantes y, para cada una de ellas, llama a un servicio remoto. También escribe la respuesta (producida por el servicio remoto) en otro tema Kafka \"out\"."

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"Implementing this with Quarkus is straightforward, and that's what we will cover in this post.\n"
"Thanks to Reactive Messaging and the Rest Client, this should not take more than 20 lines of code!"
msgstr "Implementar esto con Quarkus es sencillo, y eso es lo que cubriremos en este post. Gracias a la mensajería reactiva y al cliente Rest, ¡esto no debería llevar más de 20 líneas de código!"

#. type: Title ==
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy, no-wrap
msgid "The Remote Service"
msgstr "El servicio a distancia"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"Let's start with the remote service.\n"
"Quarkus offers multiple ways to invoke a remote HTTP service, but let's use the Rest Client as it provides an excellent way to interact with HTTP services without having to handle the low-level details of HTTP."
msgstr "Empecemos por el servicio remoto. Quarkus ofrece múltiples maneras de invocar un servicio HTTP remoto, pero vamos a utilizar el cliente Rest, ya que proporciona una excelente manera de interactuar con los servicios HTTP sin tener que manejar los detalles de bajo nivel de HTTP."

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "You can use any HTTP API, but to simplify, let's consider a straightforward remote service, something like:"
msgstr "Puedes utilizar cualquier API HTTP, pero para simplificar, vamos a considerar un servicio remoto sencillo, algo así como"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"This service contains two methods calling the same HTTP endpoint.\n"
"The first one is synchronous, and so blocks the caller thread until the response is received.\n"
"The second is asynchronous, and the returned `Uni` gets the response when received.\n"
"In this case, the caller thread is not blocked and can do something else.\n"
"We are going to see how to use these methods later, but first, a bit of configuration.\n"
"In the `application.properties` add:"
msgstr "Este servicio contiene dos métodos que llaman al mismo punto final HTTP. El primero es síncrono, por lo que bloquea el hilo de llamada hasta que se recibe la respuesta. El segundo es asíncrono, y el `Uni` devuelve la respuesta cuando la recibe. En este caso, el hilo llamador no se bloquea y puede hacer otra cosa. Vamos a ver cómo utilizar estos métodos más adelante, pero antes, un poco de configuración. En el `application.properties` añada:"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"Of course, update the URL.\n"
"The https://quarkus.io/guides/rest-client[https://quarkus.io/guides/rest-client] guide gives more details about the usage and configuration of the Rest Client."
msgstr "Por supuesto, actualice la URL. La guía https://quarkus.io/guides/rest-client ofrece más detalles sobre el uso y la configuración del cliente Rest."

#. type: Title ==
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy, no-wrap
msgid "Invoking the service for each incoming transaction"
msgstr "Invocar el servicio para cada transacción entrante"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"Ok, we can call our service, but remember, we want to invoke it for every incoming transaction, and these transactions come from a Kafka topic.\n"
"With Reactive Messaging, there is no need to handle Kafka right now.\n"
"We can focus on the logic.\n"
"Let's say we have a *channel* (a stream of data), in which to transit our transactions.\n"
"We call this first channel `in`."
msgstr "Ok, podemos llamar a nuestro servicio, pero recuerde, queremos invocarlo para cada transacción entrante, y estas transacciones provienen de un tema Kafka. Con la Mensajería Reactiva, no hay necesidad de manejar Kafka en este momento. Podemos centrarnos en la lógica. Digamos que tenemos un *canal* (un flujo de datos), en el que transitar nuestras transacciones. Llamamos a este primer canal `in` ."

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"We also want to write the responses from the remote service into another Kafka topic.\n"
"Again, no need to handle Kafka right now.\n"
"Let's say we write the responses into a channel named `out`."
msgstr "También queremos escribir las respuestas del servicio remoto en otro tema Kafka. De nuevo, no es necesario manejar Kafka en este momento. Digamos que escribimos las respuestas en un canal llamado `out` ."

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "So, we have the following (incomplete) code:"
msgstr "Así, tenemos el siguiente código (incompleto):"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"`@Incoming` configures the read channel.\n"
"`@Outgoing` configures the written channel.\n"
"But, something is missing... we need to call our remote service:"
msgstr "`@Incoming` configura el canal de lectura. `@Outgoing` configura el canal de escritura. Pero, falta algo... necesitamos llamar a nuestro servicio remoto:"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"First, we inject the Rest Client.\n"
"Then, we just invoke it in our method."
msgstr "Primero, inyectamos el cliente Rest. Después, lo invocamos en nuestro método."

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"You may wonder about `@Blocking`.\n"
"With reactive messaging, you need to indicate when you are using blocking code, as by default, it uses an event loop architecture.\n"
"While convenient, you should not abuse `@Blocking`, as it relies on a thread pool limiting your concurrency.\n"
"But, it keeps your logic synchronous."
msgstr "Puede que se pregunte sobre `@Blocking` . Con la mensajería reactiva, debe indicar cuándo está utilizando código bloqueante, ya que por defecto utiliza una arquitectura de bucle de eventos. Aunque es conveniente, no debe abusar de `@Blocking` , ya que se basa en un pool de hilos que limita su concurrencia. Pero, mantiene su lógica sincrónica."

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "Using Asynchronous operations"
msgstr "Uso de operaciones asíncronas"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "We can get rid of `@Blocking` annotation by using the second method provided by the `TransactionService`: `postAsync:`"
msgstr "Podemos deshacernos de la anotación `@Blocking` utilizando el segundo método proporcionado por el `TransactionService`: `postAsync:`"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"Using the *async* variant of the `post` method allows us to remove `@Blocking`.\n"
"We return the `Uni` directly.\n"
"When that `Uni` receives the remote service's response, it writes the value to the `out` channel."
msgstr "El uso de la variante *asíncrona* del método `post` nos permite eliminar `@Blocking` . Devolvemos directamente `Uni` . Cuando ese `Uni` recibe la respuesta del servicio remoto, escribe el valor en el canal `out` ."

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "Mapping channel to Kafka"
msgstr "Asignación de canal a Kafka"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"So far, so good.\n"
"It's time to connect our code with Kafka.\n"
"With Reactive Messaging, we map channels to _connectors_, here Kafka.\n"
"So, we just need to configure the application to indicate that the `in` and `out` channels are Kafka topics.\n"
"Once again, edit the `application.properties` file, and add:"
msgstr "Hasta aquí todo bien. Es hora de conectar nuestro código con Kafka. Con Reactive Messaging, asignamos canales a _conectores_ , aquí Kafka. Por lo tanto, sólo tenemos que configurar la aplicación para indicar que los canales `in` y `out` son temas de Kafka. Una vez más, edite el archivo `application.properties` , y añada:"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"The first block is about the `in` channel.\n"
"It's connected to the `transactions` Kafka topic.\n"
"The data is deserialized with a https://github.com/cescoffier/quarkus-kafka-rest-client-demo/blob/master/src/main/java/org/acme/model/TransactionDeserializer.java[custom deserializer].\n"
"The last other properties disable the auto-commit (Reactive Messaging is handling commits for you) and read the data since the last committed offset."
msgstr "El primer bloque se refiere al canal `in` . Está conectado al tema Kafka `transactions` . Los datos se deserializan con un link:https://github.com/cescoffier/quarkus-kafka-rest-client-demo/blob/master/src/main/java/org/acme/model/TransactionDeserializer.java[deserializador personalizado] . Las otras últimas propiedades desactivan el auto-commit (Reactive Messaging se encarga de los commits por usted) y leen los datos desde el último commit offset."

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"The second block configures the `out` channel.\n"
"We connect it with the `output` Kafka topic and configure the value serializer.\n"
"For this simple example, we write the data as JSON."
msgstr "El segundo bloque configura el canal `out` . Lo conectamos con el tema Kafka `output` y configuramos el serializador de valores. Para este sencillo ejemplo, escribimos los datos como JSON."

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "So, when a transaction is written to the Kafka `transaction` topic, it gets received by our processing component, sent to the remote service, and the result is written to the `output` Kafka topic:"
msgstr "Así, cuando una transacción se escribe en el tema de Kafka `transaction`, es recibida por nuestro componente de procesamiento, enviada al servicio remoto, y el resultado se escribe en el tema de Kafka `output`:"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "If you look inside the `output` topic, you will see the `TransactionResult` flowing:"
msgstr "Si miras dentro del tema de `output`, verás el `TransactionResult` fluyendo:"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "image:/assets/images/posts/kafka-rest-client/output.png[]"
msgstr "image:/assets/images/posts/kafka-rest-client/output.png[alt=output]"

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "We are done!"
msgstr "¡Hemos terminado!"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "With a few lines of code and a bit of configuration, we can read data from a Kafka topic, call a remote service, and write the result to another Kafka topic. Plain simple."
msgstr "Con unas pocas líneas de código y un poco de configuración, podemos leer datos de un tema Kafka, llamar a un servicio remoto y escribir el resultado en otro tema Kafka. Así de simple."

#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid ""
"Want to try by yourself?\n"
"Check out the code in this https://github.com/cescoffier/quarkus-kafka-rest-client-demo[GitHub repository] and follow the instructions from the readme."
msgstr "¿Quiere probarlo usted mismo? Consulte el código en este link:https://github.com/cescoffier/quarkus-kafka-rest-client-demo[repositorio de GitHub] y siga las instrucciones del léame."

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "Reactive Messaging and the Rest client contain other gems, check the related guides and documentation to learn more about them:"
msgstr "La Mensajería Reactiva y el cliente Rest contienen otras gemas, consulta las guías y la documentación relacionadas para saber más sobre ellas:"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "https://quarkus.io/guides/rest-client[Using the Rest Client]"
msgstr "link:https://quarkus.io/guides/rest-client[Utilización del cliente Rest]"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "https://quarkus.io/guides/kafka[Interacting with Kafka]"
msgstr "link:https://quarkus.io/guides/kafka[Interacción con Kafka]"

#. type: Plain text
#: _posts/2020-09-08-kafka-rest-client.adoc
#, fuzzy
msgid "https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.2/kafka/kafka.html[The Kafka Connector documentation]"
msgstr "link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/2.2/kafka/kafka.html[La documentación del Conector Kafka]"
