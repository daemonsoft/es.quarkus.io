# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-10 08:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Explore a new way of testing CDI components in Quarkus"
msgstr "Explore una nueva forma de probar componentes CDI en Quarkus"

#. type: YAML Front Matter: synopsis
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Quarkus 3.2 introduced an experimental feature to ease the testing of CDI components and mocking of their dependencies."
msgstr "Quarkus 3.2 introdujo una función experimental para facilitar las pruebas de los componentes CDI y la simulación de sus dependencias."

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"The Quarkus component model is built on top of CDI.\n"
"However, writing unit tests for beans without a running CDI container is often a tedious work.\n"
"Without the container services up and running, all the work has to be done manually.\n"
"First of all, no dependency injection is performed.\n"
"Furthermore, no events are fired and no observers are notified.\n"
"Also, interceptors are not applied.\n"
"In short, everything needs to be wired together by hand.\n"
"But Quarkus can do better, right?\n"
"Of course, it can!\n"
"Quarkus 3.2 introduced an experimental feature to ease the testing of CDI components and mocking of their dependencies.\n"
"It's a lightweight JUnit 5 extension that does not start a full Quarkus application but merely runs the services needed to make the testing a joyful experience."
msgstr ""

#. type: Title ==
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "A simple example"
msgstr "Un ejemplo sencillo"

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "First of all, add the `quarkus-junit5-component` module dependency to your project."
msgstr "En primer lugar, añada la dependencia del módulo `quarkus-junit5-component` a su proyecto."

#. type: Block title
#: _posts/2023-07-10-quarkus-component-test.adoc
#, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Block title
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "Gradle"

#. type: delimited block *
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "Now, imagine that we have a component `Foo` which is an `@ApplicationScoped` CDI bean."
msgstr "Ahora, imaginemos que tenemos un componente `Foo` que es un bean CDI de `@ApplicationScoped`."

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid "`Foo` depends on `Charlie` which declares a method `ping()`."
msgstr ""

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid "`Foo` depends on the config property `bar`."
msgstr ""

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "The goal is to test this method which makes use of the `Charlie` dependency and the `bar` config property."
msgstr "El objetivo es probar este método que hace uso de la dependencia `Charlie` y de la propiedad `bar` config."

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "Then, a simple component test looks like this:"
msgstr "Entonces, una simple prueba de componentes tiene este aspecto:"

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "`@QuarkusComponentTest` registers the `QuarkusComponentTestExtension` that does all the heavy lifting under the hood."
msgstr "`@QuarkusComponentTest` registra el `QuarkusComponentTestExtension` que hace todo el trabajo pesado bajo el capó."

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "`@TestConfigProperty` is used to set the value of a configuration property for the test."
msgstr "`@TestConfigProperty` se utiliza para establecer el valor de una propiedad de configuración de la prueba."

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "The test injects the tested component. The types of all fields annotated with `@Inject` are considered the component types under test."
msgstr "La prueba inyecta el componente probado. Los tipos de todos los campos anotados con `@Inject` se consideran los tipos del componente sometido a prueba."

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "The test also injects a mock of `Charlie`, a dependency for which a `@Singleton` bean is registered automatically. The injected reference is an \"unconfigured\" Mockito mock."
msgstr "La prueba también inyecta un mock de `Charlie`, una dependencia para la que se registra automáticamente un bean `@Singleton`. La referencia inyectada es un mockito de Mockito \"no configurado\"."

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "The Mockito API is used to configure the behavior of the injected mock."
msgstr "La API de Mockito se utiliza para configurar el comportamiento del mock inyectado."

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"In this particular test, the only \"real\" component under the test is `org.acme.Foo`.\n"
"The `Charlie` dependency is a mock that is created automatically.\n"
"And the value of the `bar` configuration property is set with the `@TestConfigProperty` annotation."
msgstr ""

#. type: Title ==
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "How does it work?"
msgstr "¿Cómo funciona?"

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"The `QuarkusComponentTestExtension` does several things during the `before all` test phase.\n"
"It starts ArC - the CDI container in Quarkus.\n"
"It also registers a dedicated configuration object.\n"
"The container is then stopped and the config is released during the `after all` test phase.\n"
"The fields annotated with `@Inject` and `@InjectMock` are injected after a test instance is created.\n"
"Finally, the CDI request context is activated and terminated per each test method."
msgstr ""

#. type: Title ===
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Tested components"
msgstr "Componentes probados"

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"By default, the types of all fields annotated with `@Inject` are considered component types.\n"
"However, you can also specify additional test components: either with the `@QuarkusComponentTest#value()` or programmatically as the arguments of the <<advanced_features,`QuarkusComponentTestExtension(Class<?>...)`>> constructor.\n"
"Finally, the static nested classes declared on the test class are components too."
msgstr ""

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "Static nested classed declared on a test class that is annotated with `@QuarkusComponentTest` are excluded from bean discovery when running a regular `@QuarkusTest` in order to prevent unintentional CDI conflicts."
msgstr "Las clases estáticas anidadas declaradas en una clase de prueba que está anotada con `@QuarkusComponentTest` se excluyen del descubrimiento de beans cuando se ejecuta un `@QuarkusTest` normal para evitar conflictos CDI involuntarios."

#. type: Title ===
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Automatic mocking of unsatisfied dependencies"
msgstr "Burla automática de dependencias no satisfechas"

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"Unlike in regular CDI environments, the test does not fail if a component injects an unsatisfied dependency.\n"
"Instead, a mock bean is registered automatically for each combination of required type and qualifiers of an injection point that resolves to an unsatisfied dependency.\n"
"The mock bean has the `@Singleton` scope so it’s shared across all injection points with the same required type and qualifiers.\n"
"And the injected reference is an unconfigured Mockito mock.\n"
"This mock can be injected in the test with `@io.quarkus.test.InjectMock` and configured with the Mockito API."
msgstr ""

#. type: Title ===
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "Configuración"

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"A dedicated `SmallRyeConfig` is registered during the `before all` test phase.\n"
"It’s possible to set the configuration properties with the `@TestConfigProperty` annotation or programmatically with the `QuarkusComponentTestExtension#configProperty(String, String)` method.\n"
"If you need to use the default values for missing config properties, then `@QuarkusComponentTest#useDefaultConfigProperties()` and `QuarkusComponentTestExtension#useDefaultConfigProperties()` might come in useful."
msgstr ""

#. type: Title ==
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Advanced features"
msgstr "Funciones avanzadas"

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"It is possible to configure the `QuarkusComponentTestExtension` programatically.\n"
"The simple example above could be rewritten like:"
msgstr ""

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "Annotate a `static` field of type `QuarkusComponentTestExtension` with the `@RegisterExtension` annotation and configure the extension programmatically."
msgstr "Anote un campo `static` de tipo `QuarkusComponentTestExtension` con la anotación `@RegisterExtension` y configure la extensión mediante programación."

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"Sometimes you need full control over the bean attributes and maybe even configure the default behavior of a mocked dependency.\n"
"In this case, the mock configurator API and the `QuarkusComponentTestExtension#mock()` method is the right choice."
msgstr ""

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "The scope of the mocked bean is `@Dependent`."
msgstr "El ámbito del frijol burlado es `@Dependent`."

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "Configure the default behavior of the mock."
msgstr "Configura el comportamiento por defecto del simulador."

#. type: Title ===
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Mocking CDI interceptors"
msgstr "Interceptores CDI"

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "This feature is only available in Quarkus 3.3+."
msgstr "Esta función sólo está disponible en Quarkus 3.3+."

#: _posts/2023-07-10-quarkus-component-test.adoc
msgid ""
"If a tested component class declares an interceptor binding then you might need to mock the interception too.\n"
"You can define a mock interceptor class as a static nested class of the test class.\n"
"This interceptor class is then automatically discovered"
msgstr ""

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "`@SimpleBinding` is an interceptor binding."
msgstr "`@SimpleBinding` es un enlace interceptor."

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "The interceptor class is automatically considered a tested component and therefore used during the test execution."
msgstr "La clase interceptora se considera automáticamente un componente probado y, por lo tanto, se utiliza durante la ejecución de la prueba."

#. type: Title ==
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumen"

#. type: Plain text
#: _posts/2023-07-10-quarkus-component-test.adoc
#, fuzzy
msgid "In this article, we discussed the possibilities of a new way of testing CDI components in a Quarkus application."
msgstr "En este artículo, discutimos las posibilidades de una nueva forma de probar componentes CDI en una aplicación Quarkus."
