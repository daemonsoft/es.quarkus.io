msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Use Quarkus OIDC Proxy to encrypt Quarkus MCP Server tokens"
msgstr "Utilice Quarkus OIDC Proxy para cifrar los tokens de Quarkus MCP Server"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Explain how Quarkus OIDC Proxy can encrypt Quarkus MCP Server tokens"
msgstr "Explicar cómo Quarkus OIDC Proxy puede cifrar los tokens de Quarkus MCP Server"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
msgid "Introduction"
msgstr "Introducción"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "In the https://quarkus.io/blog/secure-mcp-server-oauth2/[Use MCP OAuth2 Flow to access Quarkus MCP Server] blog post, we explained how an MCP Client such as https://github.com/modelcontextprotocol/inspector[MCP Inspector] could use the OAuth2 Flow with a pre-registered OAuth2 Client application to discover the MCP server's https://datatracker.ietf.org/doc/html/rfc9728[OAuth2 Protected Resource Metadata], the metadata of the authorization server, login a user and acquire an access token that it could use to access MCP Server provided tools."
msgstr "En la entrada del blog link:https://quarkus.io/blog/secure-mcp-server-oauth2/[Utilizar] el flujo link:https://quarkus.io/blog/secure-mcp-server-oauth2/[OAuth2 de MCP para acceder al servidor MCP de Quarkus] , explicamos cómo un cliente MCP como link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] podía utilizar el flujo OAuth2 con una aplicación cliente OAuth2 prerregistrada para descubrir link:https://datatracker.ietf.org/doc/html/rfc9728[los metadatos de recursos protegidos OAuth2] del servidor MCP, los metadatos del servidor de autorización, iniciar la sesión de un usuario y adquirir un token de acceso que podría utilizar para acceder a las herramientas proporcionadas por el servidor MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "In this blog post, we will look at how https://github.com/modelcontextprotocol/inspector[MCP Inspector] can register OAuth2 Client applications dynamically, instead of using a pre-registered OAuth2 Client, but also, use https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] to delegate to https://www.keycloak.org/[Keycloak] during the MCP OAuth2 flow, <<point-of-using-oidc-proxy,analyze why it can be useful>> and show how it can <<use-oidc-proxy-to-encrypt-tokens,encrypt access and refresh tokens and exclude ID tokens>>, before they are made available to https://github.com/modelcontextprotocol/inspector[MCP Inspector]."
msgstr "En esta entrada de blog, veremos cómo MCP link:https://github.com/modelcontextprotocol/inspector[Inspector] puede registrar aplicaciones Cliente OAuth2 dinámicamente, en lugar de utilizar un Cliente OAuth2 pre-registrado, pero también, utilizar link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] para delegar en link:https://www.keycloak.org/[Keycloak] durante el flujo MCP OAuth2, xref:point-of-using-oidc-proxy[analizar por qué puede ser útil] y mostrar cómo puede xref:use-oidc-proxy-to-encrypt-tokens[cifrar tokens de acceso y actualización y excluir tokens de ID] , antes de que estén disponibles para link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Demo MCP OAuth2 Flow Diagram"
msgstr "Demo MCP OAuth2 Diagrama de flujo"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "In the https://quarkus.io/blog/secure-mcp-server-oauth2/[Use MCP OAuth2 Flow to access Quarkus MCP Server] blog post, we looked at how https://github.com/modelcontextprotocol/inspector[MCP Inspector] could use OAuth 2.0 Flow with a https://quarkus.io/blog/secure-mcp-server-oauth2/#demo-flow-diagram[pre-registered OAuth2 client]."
msgstr "En la entrada del blog link:https://quarkus.io/blog/secure-mcp-server-oauth2/[Utilizar] el flujo link:https://quarkus.io/blog/secure-mcp-server-oauth2/[OAuth2 de MCP para acceder al servidor MCP de Quarkus] , vimos cómo link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] podía utilizar el flujo OAuth 2.0 con un link:https://quarkus.io/blog/secure-mcp-server-oauth2/#demo-flow-diagram[cliente OAuth2 prerregistrado] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The demo flow diagram in this section is very similar to the one from the https://quarkus.io/blog/secure-mcp-server-oauth2/#demo-flow-diagram[Use MCP OAuth2 Flow to access Quarkus MCP Server] blog post. It shows how https://github.com/modelcontextprotocol/inspector[MCP Inspector] can use https://datatracker.ietf.org/doc/html/rfc7591[OAuth2 Dynamic Client Registration] instead of requiring that an OAuth2 Client is pre-registered, and with the https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] interposing between MCP Client and Keycloak."
msgstr "El diagrama de flujo de demostración de esta sección es muy similar al de la entrada del blog link:https://quarkus.io/blog/secure-mcp-server-oauth2/#demo-flow-diagram[Utilizar el flujo MCP OAuth2 para acceder al servidor MCP de] Quarkus. Muestra cómo link:https://github.com/modelcontextprotocol/inspector[el Inspector MCP] puede utilizar link:https://datatracker.ietf.org/doc/html/rfc7591[el Registro Dinámico de Clientes OAuth2] en lugar de requerir que un Cliente OAuth2 esté pre-registrado, y con el link:https://github.com/quarkiverse/quarkus-oidc-proxy[Proxy OIDC] de Quarkus interponiéndose entre el Cliente MCP y Keycloak."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "When https://datatracker.ietf.org/doc/html/rfc7591[OAuth2 Dynamic Client Registration] is used, MCP Client such as https://github.com/modelcontextprotocol/inspector[MCP Inspector] requires configuring an MCP _Streamable HTTP_ endpoint URL only."
msgstr "Cuando se utiliza link:https://datatracker.ietf.org/doc/html/rfc7591[el registro dinámico de clientes OAuth2] , los clientes MCP como link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] sólo necesitan configurar una URL de punto final _HTTP_ de MCP _Streamable_ ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "MCP Client starts by accessing the MCP server without a token and gets back HTTP 401 with a `WWW-Authenticate` `resource_metadata` parameter that links to the MCP server's https://datatracker.ietf.org/doc/html/rfc9728[OAuth2 Protected Resource Metadata] route. The client now fetches a URL of the authorization server that secures the MCP server as well as the MCP server's resource identifier."
msgstr "El cliente MCP comienza accediendo al servidor MCP sin token y obtiene de vuelta HTTP 401 con un parámetro `WWW-Authenticate` `resource_metadata` que enlaza con la ruta de link:https://datatracker.ietf.org/doc/html/rfc9728[metadatos de recursos protegidos OAuth2] del servidor MCP. El cliente obtiene ahora una URL del servidor de autorización que protege al servidor MCP, así como el identificador de recursos del servidor MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Since https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] is used, MCP Client does not see a Keycloak URL as the authorization server URL but `http://localhost:8080/q/oidc` URL pointing to a default https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy]'s base URL."
msgstr "Dado que se utiliza link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] , MCP Client no ve una URL de Keycloak como URL del servidor de autorización sino `http://localhost:8080/q/oidc` URL que apunta a una URL base por defecto de link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Next, MCP Client uses the https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy]'s URL to discover its authorization, token, client registration and other endpoint URLs. https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] provides its metadata by discovering Keycloak's metadata and replacing Keycloak-specific URLs with its own proxy-managed URLs, but does not transform other Keycloak metadata such as supported https://www.rfc-editor.org/rfc/rfc7636[Proof Key for Code Exchange] (PKCE) methods."
msgstr "A continuación, MCP Client utiliza la URL de link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC] Proxy para descubrir su autorización, token, registro de cliente y otras URL de punto final. link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC] Proxy proporciona sus metadatos descubriendo los metadatos de Keycloak y sustituyendo las URL específicas de Keycloak por sus propias URL gestionadas por el proxy, pero no transforma otros metadatos de Keycloak como los métodos de link:https://www.rfc-editor.org/rfc/rfc7636[prueba de clave para intercambio de código] (PKCE) admitidos."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The user is now redirected to https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] which in turn redirects the user to Keycloak to login."
msgstr "El usuario es ahora redirigido a link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] que a su vez redirige al usuario a Keycloak para iniciar sesión."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Once the user logs in and authorizes MCP Inspector to access Quarkus MCP server, the user is redirected back to the `http://localhost:6274/oauth/callback` endpoint, MCP client exchanges the returned `code` to get ID, access and refresh tokens, and uses the access token to access the MCP server, allowing the user to select and run the tool."
msgstr "Una vez que el usuario inicia sesión y autoriza a MCP Inspector a acceder al servidor MCP de Quarkus, el usuario es redirigido de nuevo al `http://localhost:6274/oauth/callback` endpoint, el cliente MCP intercambia el `code` devuelto para obtener los tokens de identificación, acceso y actualización, y utiliza el token de acceso para acceder al servidor MCP, lo que permite al usuario seleccionar y ejecutar la herramienta."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "We are now ready to have a deeper look at how it works in the demo."
msgstr "Ahora estamos preparados para ver en profundidad cómo funciona en la demostración."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "You can find the complete project source in the https://github.com/sberyozkin/quarkus-mcp-server-oidc-proxy/tree/main/secure-mcp-http-server-with-oidc-proxy[Secure Quarkus MCP HTTP Server with OIDC Proxy sample]."
msgstr "Puede encontrar el código fuente completo del proyecto en la link:https://github.com/sberyozkin/quarkus-mcp-server-oidc-proxy/tree/main/secure-mcp-http-server-with-oidc-proxy[muestra Servidor HTTP MCP seguro de Quarkus con proxy OIDC] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Step 1 - Create and start MCP server"
msgstr "Paso 1 - Crear e iniciar el servidor MCP"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "First, let's create a secure Quarkus MCP server."
msgstr "En primer lugar, vamos a crear un servidor MCP seguro de Quarkus."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "MCP server maven dependencies"
msgstr "Dependencias maven del servidor MCP"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Add the following dependencies:"
msgstr "Añada las siguientes dependencias:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "`quarkus-mcp-server-sse` is required to support both MCP Streamable HTTP and SSE transports."
msgstr "`quarkus-mcp-server-sse` es necesario para soportar los transportes MCP Streamable HTTP y SSE."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "`quarkus-oidc` is required to secure access to Quarkus MCP Server. Its version is defined in the Quarkus BOM."
msgstr "`quarkus-oidc` es necesario para asegurar el acceso al Servidor MCP de Quarkus. Su versión se define en la lista de materiales de Quarkus."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "`quarkus-oidc-proxy` is required to support OIDC proxy between MCP Client and Keycloak"
msgstr "`quarkus-oidc-proxy` es necesario para soportar el proxy OIDC entre el Cliente MCP y Keycloak"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "MCP Server Configuration"
msgstr "Configuración del servidor MCP"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Let's configure the MCP server:"
msgstr "Vamos a configurar el servidor MCP:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Require authentication for all requests to the MCP server. This authentication policy is enforced by the default OIDC tenant configuration."
msgstr "Requiere autenticación para todas las solicitudes al servidor MCP. Esta política de autenticación es aplicada por la configuración por defecto del inquilino OIDC."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Default OIDC tenant secures the MCP server, Keycloak DevService inserts a missing `quarkus.oidc.auth-server-url` property that links to the Keycloak `quarkus-mcp-realm` realm endpoint."
msgstr "El inquilino OIDC por defecto asegura el servidor MCP, Keycloak DevService inserta una propiedad `quarkus.oidc.auth-server-url` que falta y que enlaza con el punto final del reino de Keycloak `quarkus-mcp-realm` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Require that tokens that are allowed to access the MCP server must have an audience (`aud`) claim that contains a `quarkus-mcp-server` value."
msgstr "Exigir que los tokens a los que se permite acceder al servidor MCP tengan una declaración de audiencia ( `aud` ) que contenga un valor `quarkus-mcp-server` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Enable the https://datatracker.ietf.org/doc/html/rfc9728[OAuth2 Protected Resource Metadata] route for the default OIDC tenant. It will help https://github.com/modelcontextprotocol/inspector[MCP Inspector] to find out about the authorization server that secures the MCP server."
msgstr "Habilite la ruta de link:https://datatracker.ietf.org/doc/html/rfc9728[metadatos de recursos protegidos OAuth2] para el inquilino OIDC predeterminado. Ayudará a link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] a averiguar el servidor de autorización que asegura el servidor MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Quarkus https://datatracker.ietf.org/doc/html/rfc9728[OAuth2 Protected Resource Metadata] handler is not aware that https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] is meant to intercept OAuth2 Flow requests between https://github.com/modelcontextprotocol/inspector[MCP Inspector] and Keycloak, so we help it to return a correct URL by setting an absolute URL that points to the base https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] URL."
msgstr "El gestor de link:https://datatracker.ietf.org/doc/html/rfc9728[metadatos de recursos protegidos OAuth2] de Quarkus no es consciente de que link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus] link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Pro] link:https://github.com/quarkiverse/quarkus-oidc-proxy[xy] está destinado a interceptar las solicitudes de flujo OAuth2 entre link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] y Keycloak, por lo que le ayudamos a devolver una URL correcta estableciendo una URL absoluta que apunte a la URL base de link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Ask Keycloak DevService to upload the `quarkus-mcp-realm.json` realm file. This realm does not have pre-registered clients."
msgstr "Pida a Keycloak DevService que cargue el archivo del dominio `quarkus-mcp-realm.json` . Este reino no tiene clientes pre-registrados."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Ask Keycloak not to add `quarkus.oidc.client-id` since https://github.com/modelcontextprotocol/inspector[MCP Inspector] will register OAuth2 clients dynamically."
msgstr "Pida a Keycloak que no añada `quarkus.oidc.client-id` ya que link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] registrará clientes OAuth2 dinámicamente."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "CORS policy to allow https://github.com/modelcontextprotocol/inspector[MCP Inspector] script requests."
msgstr "Política CORS para permitir las peticiones de script link:https://github.com/modelcontextprotocol/inspector[del inspector MCP] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "You can read about how https://datatracker.ietf.org/doc/html/rfc9728[OAuth2 Protected Resource Metadata] is supported in Quarkus OIDC in the https://quarkus.io/guides/security-oidc-expanded-configuration#resource-metadata-properties[Expanded OpenId Connect Configuration guide]."
msgstr "Puede leer cómo se admiten link:https://datatracker.ietf.org/doc/html/rfc9728[los metadatos de recursos protegidos OAuth2] en Quarkus OIDC en la link:https://quarkus.io/guides/security-oidc-expanded-configuration#resource-metadata-properties[guía de configuración ampliada de OpenId Connect] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "MCP User Name Provider tool"
msgstr "MCP Nombre de usuario Herramienta del proveedor"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Let's create a single tool that can return a name of the current MCP Client user:"
msgstr "Vamos a crear una única herramienta que pueda devolver un nombre del usuario actual del Cliente MCP:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Capture a security identity represented by the verified access token"
msgstr "Capturar una identidad de seguridad representada por el token de acceso verificado"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The `user-name-provider` tool returns a name of the current MCP Client user."
msgstr "La herramienta `user-name-provider` devuelve el nombre del usuario actual del Cliente MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The `user-name-provider` tool is a very simple tool designed to show that an identity of the MCP client user on whose behalf this tool is called by the MCP client is available for the tool to perform a user identity specific action, an important element for a secure agentic AI system."
msgstr "La herramienta `user-name-provider` es una herramienta muy sencilla diseñada para mostrar que la identidad del usuario cliente MCP en cuyo nombre el cliente MCP llama a esta herramienta está disponible para que la herramienta realice una acción específica de la identidad del usuario, un elemento importante para un sistema seguro de IA agéntica."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Keycloak Configuration"
msgstr "Configuración del Keycloak"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The Keycloak configuration has already been prepared in the `quarkus-mcp-realm.json` that Keycloak DevService uploads to Keycloak at the start-up time."
msgstr "La configuración de Keycloak ya ha sido preparada en el `quarkus-mcp-realm.json` que Keycloak DevService carga a Keycloak en el momento de la puesta en marcha."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Let's have a closer look. Please go to `http://localhost:8080/q/dev-ui` and select an `OpenId Connect` card:"
msgstr "Veámoslo más de cerca. Vaya a `http://localhost:8080/q/dev-ui` y seleccione una tarjeta `OpenId Connect` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Click on `Keycloak Admin`, login as `admin:admin` and check the `quarkus-mcp-realm` realm configuration."
msgstr "Haga clic en `Keycloak Admin` , inicie sesión como `admin:admin` y compruebe la configuración del dominio `quarkus-mcp-realm` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid ""
"The `quarkus-mcp-realm` has only Keycloak specific clients registered that are required to support various Keycloak realm operations, it has no custom clients registered.\n"
"This realm has a single user, `alice` with a password `alice`.\n"
"It also has a custom `quarkus-mcp-server` client scope with an audience mapping:"
msgstr "El `quarkus-mcp-realm` sólo tiene registrados clientes específicos de Keycloak que son necesarios para soportar diversas operaciones del reino Keycloak, no tiene registrados clientes personalizados. Este ámbito tiene un único usuario, `alice` con una contraseña `alice` . También tiene un ámbito de cliente personalizado `quarkus-mcp-server` con un mapeo de audiencia:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The `quarkus-mcp-server` scope has an audience mapping:"
msgstr "El ámbito `quarkus-mcp-server` dispone de un mapa de audiencia:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The `quarkus-mcp-realm` realm have the `quarkus-mcp-server` client scope with the `quarkus-mcp-server` audience mapping to let users specify the `quarkus-mcp-server` scope in order to request the correct token audience when https://github.com/modelcontextprotocol/inspector[MCP Inspector] initiates OAuth2 Flow."
msgstr "El dominio `quarkus-mcp-realm` tiene el ámbito de cliente `quarkus-mcp-server` con el mapeo de audiencia `quarkus-mcp-server` para permitir que los usuarios especifiquen el ámbito `quarkus-mcp-server` con el fin de solicitar la audiencia de token correcta cuando link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] inicie el flujo OAuth2."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "https://www.rfc-editor.org/rfc/rfc8707.html[OAuth2 Resource Indicator] specification provides an alternative option, where MCP Client can pass an MCP Server's `resource` indicator to the OAuth2 provider and the provider can add it to the token audience. You can choose to avoid creating custom Keycloak client scopes with an audience mapping once Keycloak starts supporting the https://www.rfc-editor.org/rfc/rfc8707.html[OAuth2 Resource Indicator] specification."
msgstr "La especificación del Indicador de link:https://www.rfc-editor.org/rfc/rfc8707.html[Recursos OAuth2] proporciona una opción alternativa, en la que el Cliente MCP puede pasar el indicador `resource` de un Servidor MCP al proveedor OAuth2 y el proveedor puede añadirlo a la audiencia del token. Puede optar por evitar la creación de ámbitos personalizados de cliente Keycloak con un mapeo de audiencia una vez que Keycloak comience a soportar la especificación de link:https://www.rfc-editor.org/rfc/rfc8707.html[Indicador de Recursos OAuth2] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Start the MCP server in dev mode"
msgstr "Inicie el servidor MCP en modo dev"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Now let's start the MCP server in dev mode:"
msgstr "Ahora vamos a iniciar el servidor MCP en modo dev:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "You can see that default _Streamable HTTP_ and SSE endpoints are available at `http://localhost:8080/mcp` and `http://localhost:8080/mcp/sse` respectively."
msgstr "Puede ver que los puntos finales _Streamable HTTP_ y SSE por defecto están disponibles en `http://localhost:8080/mcp` y `http://localhost:8080/mcp/sse` respectivamente."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Step 2: Start the MCP Inspector"
msgstr "Paso 2: Iniciar el Inspector MCP"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "While https://github.com/modelcontextprotocol/inspector[MCP Inspector] provides a very good OAuth2 Flow support, it is still a very active project and at the moment, you may observe https://github.com/modelcontextprotocol/inspector[MCP Inspector] failing to connect to the OAuth2 provider in some versions. https://github.com/modelcontextprotocol/inspector[MCP Inspector] v0.16.7 is currently recommended."
msgstr "Aunque link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] proporciona un soporte muy bueno para el flujo OAuth2, sigue siendo un proyecto muy activo y, por el momento, es posible que observe que link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] falla al conectarse al proveedor OAuth2 en algunas versiones. Actualmente se recomienda link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] v0.16.7."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "As you can see, no pre-configured OAuth2 Client ID is set."
msgstr "Como puede ver, no hay ningún ID de cliente OAuth2 preconfigurado."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Now, do not press `Connect` immediately. We are going to follow the https://github.com/modelcontextprotocol/inspector[MCP Inspector]'s `Guided OAuth Flow` to <<use-mcp-inspector-to-access-mcp-server,register an OAuth2 Client, login a user and acquire an access token>> instead, and request a `Connect` once the `Guided OAuth Flow` is complete."
msgstr "Ahora, no pulse `Connect` inmediatamente. Vamos a seguir el link:https://github.com/modelcontextprotocol/inspector[inspector de MCP] `Guided OAuth Flow` para xref:use-mcp-inspector-to-access-mcp-server[registrar un cliente OAuth2, iniciar la sesión de un usuario y adquirir un token de acceso] en su lugar, y solicitar un `Connect` una vez que se haya completado el `Guided OAuth Flow` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "We will then have a look at how to <<use-oidc-proxy-to-encrypt-tokens>>."
msgstr "A continuación veremos cómo <<use-oidc-proxy-to-encrypt-tokens>> ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "See the <<demo-flow-diagram>> section for an overview of how https://github.com/modelcontextprotocol/inspector[MCP Inspector] performs a `Connect` request."
msgstr "Consulte la sección <<demo-flow-diagram>> para obtener una visión general de cómo link:https://github.com/modelcontextprotocol/inspector[el Inspector MCP] realiza una solicitud `Connect` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Please keep your browser's `Developer Tools`'s `Network` tab open if you would like to observe how MCP Inspector probes various MCP server and https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] endpoints and eventually succeeds in getting a user logged in and acquiring the access token."
msgstr "Por favor, mantenga abierta la pestaña `Developer Tools’s `Network` de su navegador si desea observar cómo MCP Inspector sondea varios puntos finales del servidor MCP y link:https://github.com/quarkiverse/quarkus-oidc-proxy[del proxy OIDC de Quarkus] y finalmente consigue que un usuario inicie sesión y adquiera el token de acceso."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Step 3: Use MCP Inspector to register OAuth2 Client and access MCP Server"
msgstr "Paso 3: Utilizar MCP Inspector para registrar el Cliente OAuth2 y acceder al Servidor MCP"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "We are now going to use the https://github.com/modelcontextprotocol/inspector[MCP Inspector]'s `Guided OAuth Flow` to register an OAuth2 Client, login a user and acquire tokens."
msgstr "Ahora vamos a utilizar la página `Guided OAuth Flow` link:https://github.com/modelcontextprotocol/inspector[del inspector MCP] para registrar un cliente OAuth2, dar de alta un usuario y adquirir tokens."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Click on `Open Auth Settings` which you can find opposite the Connection settings that you saw in the <<start-mcp-inspector>> section, and click on the `Guided OAuth2 Flow`:"
msgstr "Haga clic en `Open Auth Settings` que encontrará frente a los ajustes de conexión que vio en la sección <<start-mcp-inspector>> , y haga clic en `Guided OAuth2 Flow` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The `Guided OAuth2 Flow` may not be highlighted after you select it but https://github.com/modelcontextprotocol/inspector[MCP Inspector] will run it once you press `Continue`."
msgstr "Puede que el `Guided OAuth2 Flow` no aparezca resaltado después de seleccionarlo, pero link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] lo ejecutará en cuanto pulse `Continue` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Press `Continue` to do the `Metadata Discovery`:"
msgstr "Pulse `Continue` para hacer el `Metadata Discovery` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "As you can see, https://github.com/modelcontextprotocol/inspector[MCP Inspector] discovers the MCP Server's https://datatracker.ietf.org/doc/html/rfc9728[OAuth2 Protected Resource Metadata] first, finds out the https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy]'s URL, and uses it to fetch the the OIDC Proxy's metadata. As mentioned in the <<demo-flow-diagram>> section, https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] provides its metadata by discovering Keycloak's metadata and replacing Keycloak-specific URLs with its own proxy-managed URLs, but does not transform other Keycloak metadata."
msgstr "Como puede ver, link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] descubre primero los metadatos link:https://datatracker.ietf.org/doc/html/rfc9728[de recursos protegidos OAuth2] del servidor MCP, averigua la URL del proxy link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC] y la utiliza para obtener los metadatos del proxy OIDC. Como se menciona en la sección <<demo-flow-diagram>> , el link:https://github.com/quarkiverse/quarkus-oidc-proxy[Proxy OIDC] proporciona sus metadatos descubriendo los metadatos de Keycloak y sustituyendo las URL específicas de Keycloak por sus propias URL gestionadas por el proxy, pero no transforma otros metadatos de Keycloak."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The next step is the `Client Registration`, press `Continue`."
msgstr "El siguiente paso es el `Client Registration` , pulse `Continue` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "https://github.com/modelcontextprotocol/inspector[MCP Inspector] posts a client registration request that you can see in the browser's developer tools:"
msgstr "link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] envía una solicitud de registro de cliente que usted puede ver en las herramientas de desarrollo del navegador:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Note that the `token_endpoint_auth_method` property is set to `none` - this is how a `public` OAuth2 Client is registered, since managing confidential OAuth2 Clients that have secrets is harder for Single-page application (SPA) such as https://github.com/modelcontextprotocol/inspector[MCP Inspector]."
msgstr "Observe que la propiedad `token_endpoint_auth_method` está establecida en `none` - así es como se registra un Cliente OAuth2 `public` , ya que gestionar Clientes OAuth2 confidenciales que tienen secretos es más difícil para aplicaciones de una sola página (SPA) como link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The `Client Registration` succeeds:"
msgstr "El `Client Registration` tiene éxito:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The `client_id` is a dynamically generated value. You will see a different `client_id` when you work with this blog post."
msgstr "El `client_id` es un valor generado dinámicamente. Verá un `client_id` diferente cuando trabaje con esta entrada de blog."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "At this point, we have to pause the `Guided OAuth2 Flow` sequence, go to Keycloak and assign the `quarkus-mcp-server` and `profile` scopes to the registered client."
msgstr "En este punto, tenemos que pausar la secuencia `Guided OAuth2 Flow` , ir a Keycloak y asignar los ámbitos `quarkus-mcp-server` y `profile` al cliente registrado."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid ""
"The whole point of registering OAuth2 Clients dynamically is to avoid having to deal with manually configuring them.\n"
"However, as you could see in the Client Registration Request image above, https://github.com/modelcontextprotocol/inspector[MCP Inspector] currently does not allow\n"
"to pass OAuth2 scopes during the OAuth2 Client Registration - irrespectively of whether you configure `Scope` in its <<start-mcp-inspector,Connection settings>> or not."
msgstr "El objetivo de registrar clientes OAuth2 de forma dinámica es evitar tener que ocuparse de configurarlos manualmente. Sin embargo, como puede ver en la imagen de solicitud de registro de cliente que aparece más arriba, link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] no permite actualmente pasar ámbitos OAuth2 durante el registro de clientes OAuth2, independientemente de si se configura o no `Scope` en xref:start-mcp-inspector[los ajustes de conexión] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The scopes impact what an issued access token can do, what kind of information it can include. The current OAuth2 Client application that logins the current user can request some scopes, for the user to authorize the client to use the access token according to permissions enabled by these scopes. Without requesting scopes during the OAuth2 Client Registration, Keycloak can only issue access tokens with a very limited content, with no audience and the logged-in user information included."
msgstr "Los ámbitos influyen en lo que puede hacer un token de acceso emitido, qué tipo de información puede incluir. La aplicación Cliente OAuth2 que registra al usuario actual puede solicitar algunos ámbitos, para que el usuario autorice al cliente a utilizar el token de acceso de acuerdo con los permisos habilitados por estos ámbitos. Sin solicitar ámbitos durante el registro del cliente OAuth2, Keycloak sólo puede emitir tokens de acceso con un contenido muy limitado, sin público y sin incluir la información del usuario logueado."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Therefore, to support this post's demo flow, we need to manually assign the required scopes to the registered client directly in the Keycloak Admin Dashboard."
msgstr "Por lo tanto, para soportar el flujo de demostración de este post, necesitamos asignar manualmente los ámbitos requeridos al cliente registrado directamente en el Panel de Administración de Keycloak."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "In general, the https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization[MCP Authorization]-compliant MCP Clients should be able to use custom OAuth2 scopes during the https://datatracker.ietf.org/doc/html/rfc7591[OAuth2 Dynamic Client Registration] going forward."
msgstr "En general, los clientes MCP link:https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization[compatibles con la autorización MCP] deberían poder utilizar ámbitos OAuth2 personalizados durante el link:https://datatracker.ietf.org/doc/html/rfc7591[registro dinámico de clientes OAuth2] en adelante."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "OK, let's update the registered client in Keycloak."
msgstr "Bien, actualicemos el cliente registrado en Keycloak."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Login to Keycloak as described in the <<keycloak-configuration>> section, select the `quarkus-mcp-realm` in `Manage Realms` and the registered client in this realm's `Clients`:"
msgstr "Inicie sesión en Keycloak como se describe en la sección <<keycloak-configuration>> , seleccione el `quarkus-mcp-realm` en `Manage Realms` y el cliente registrado en `Clients` de este reino:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Click on its `Client Scopes` tab, and add `profile` and `quarkus-mcp-server` scopes as `Default` scopes:"
msgstr "Haga clic en su pestaña `Client Scopes` , y añada los ámbitos `profile` y `quarkus-mcp-server` como ámbitos `Default` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Usually, these scopes should be optional for them to be requested at the authorization code flow login time, but in this case we set them as default scopes since the registered client is currently not aware of such scopes at the registration and login times due to the https://github.com/modelcontextprotocol/inspector[MCP Inspector]'s limitation described above in this section."
msgstr "Normalmente, estos ámbitos deberían ser opcionales para que se soliciten en el momento de inicio de sesión del flujo de código de autorización, pero en este caso los establecemos como ámbitos por defecto ya que el cliente registrado no conoce actualmente dichos ámbitos en los momentos de registro e inicio de sesión debido a la limitación del link:https://github.com/modelcontextprotocol/inspector[inspector MCP] descrita anteriormente en esta sección."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "As far as these two scopes are concerned, the `quarkus-mcp-server` scope was described in the <<keycloak-configuration>> section and is used to ensure the access tokens that are issued to the registered client include the correct MCP server audience, while the `profile` scope is only added for the access tokens to contain the logged-in user's name - adding this scope is not strictly necessary."
msgstr "En lo que respecta a estos dos ámbitos, el ámbito `quarkus-mcp-server` se describió en la sección <<keycloak-configuration>> y se utiliza para garantizar que los tokens de acceso que se emiten al cliente registrado incluyan la audiencia correcta del servidor MCP, mientras que el ámbito `profile` sólo se añade para que los tokens de acceso contengan el nombre del usuario registrado -añadir este ámbito no es estrictamente necesario."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Let's go back to the https://github.com/modelcontextprotocol/inspector[MCP Inspector]'s `Guided OAuth Flow` where we have already completed the `Metadata Discovery` and `Client Registration` steps."
msgstr "Volvamos a la página `Guided OAuth Flow` link:https://github.com/modelcontextprotocol/inspector[del inspector MCP] donde ya hemos completado los pasos `Metadata Discovery` y `Client Registration` ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Press `Continue` to begin the `Preparing Authorization` step and you will see an `Authorization URL` displayed:"
msgstr "Pulse `Continue` para iniciar el paso `Preparing Authorization` y verá que aparece `Authorization URL` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Click on it using the provided button on the right, and you will be redirected to Keycloak, via https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy], to login:"
msgstr "Haga clic en él utilizando el botón proporcionado a la derecha, y será redirigido a Keycloak, a través de link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] , para iniciar sesión:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Login as `alice:alice`, and now Keycloak will request you to give your consent to the registered MCP Inspector Client to access Quarkus MCP Server:"
msgstr "Inicie sesión como `alice:alice` , y ahora Keycloak le pedirá que dé su consentimiento al Cliente Inspector MCP registrado para acceder al Servidor MCP de Quarkus:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "This is what using scopes during the client registration, and `quarkus-mcp-server` scope in particular, give you: a must have option to authorize the registered MCP client application to access the MCP Server on your behalf."
msgstr "Esto es lo que le ofrece el uso de ámbitos durante el registro del cliente, y el ámbito `quarkus-mcp-server` en particular: una opción imprescindible para autorizar a la aplicación cliente MCP registrada a acceder al servidor MCP en su nombre."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Press `Yes`, Keycloak will redirect you back to the https://github.com/modelcontextprotocol/inspector[MCP Inspector]'s callback page in another tab that will display the authorization code:"
msgstr "Pulse `Yes` , Keycloak le redirigirá de nuevo a la página de devolución de llamada del link:https://github.com/modelcontextprotocol/inspector[Inspector MCP] en otra pestaña que mostrará el código de autorización:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Copy and paste this code into the `Prepare Authorization` field in the `Guided OAuth Flow` view:"
msgstr "Copie y pegue este código en el campo `Prepare Authorization` de la vista `Guided OAuth Flow` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Press `Continue`. https://github.com/modelcontextprotocol/inspector[MCP Inspector] now successfully acquires the tokens:"
msgstr "Pulse `Continue` . link:https://github.com/modelcontextprotocol/inspector[El Inspector MCP] adquiere ahora con éxito las fichas:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "As you can see, 3 tokens, the access and refresh tokens but also the ID token are returned. https://github.com/modelcontextprotocol/inspector[MCP Inspector] does not really need the ID token, it only needs an access token in order to be able to access the MCP server, and optionally, the refresh token to get another access token when the current one expires. We'll have a look at how to drop the ID token in the <<use-oidc-proxy-to-encrypt-tokens>> section."
msgstr "Como puede ver, se devuelven 3 tokens, el de acceso y el de refresco, pero también el de ID. link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] no necesita realmente el token de ID, sólo necesita un token de acceso para poder acceder al servidor MCP y, opcionalmente, el token de refresco para obtener otro token de acceso cuando el actual caduque. Veremos cómo eliminar el token de identificación en la sección <<use-oidc-proxy-to-encrypt-tokens>> ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Copy the access token from the provided JSON data and paste it into https://www.jwt.io/[jwt.io]:"
msgstr "Copie el token de acceso de los datos JSON proporcionados y péguelo en link:https://www.jwt.io/[jwt.io] :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "It contains a required `quarkus-mcp-server` audience, exactly what the <<mcp-server-configuration,MCP Server expects>>."
msgstr "Contiene una audiencia requerida `quarkus-mcp-server` , exactamente lo que xref:mcp-server-configuration[espera] el xref:mcp-server-configuration[servidor MCP] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Now you are ready to press `Connect` in the Connection view that you saw in the <<start-mcp-inspector>> section."
msgstr "Ahora está listo para pulsar `Connect` en la vista de conexión que vio en la sección <<start-mcp-inspector>> ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "At this point, the access token is already available, so https://github.com/modelcontextprotocol/inspector[MCP Inspector] uses this token to let you select and run the `user-name-provider` tool:"
msgstr "En este punto, el token de acceso ya está disponible, por lo que link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] utiliza este token para permitirle seleccionar y ejecutar la herramienta `user-name-provider` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Now press `Disconnect` first, and then `Clear OAuth State`:"
msgstr "Ahora pulse primero `Disconnect` y después `Clear OAuth State` :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "But keep the <<start-mcp-server,MCP server running>>, do not stop it."
msgstr "Pero mantenga el xref:start-mcp-server[servidor MCP en funcionamiento] , no lo detenga."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Let's see next how <<use-oidc-proxy,OIDC Proxy can encrypt access and refresh tokens and drop ID token>>."
msgstr "Veamos a continuación cómo xref:use-oidc-proxy[OIDC Proxy puede cifrar los tokens de acceso y actualización y soltar el token de identificación] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Step 4: Use OIDC Proxy to encrypt access and refresh tokens and drop ID token"
msgstr "Paso 4: Utilizar el proxy OIDC para cifrar los tokens de acceso y actualización y soltar el token de identificación"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "What is the point of using OIDC Proxy ?"
msgstr "¿Para qué sirve utilizar el proxy OIDC?"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "You may be wondering by now, what is the point of using https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] and https://github.com/quarkiverse/quarkus-mcp-server[Quarkus MCP Server] together, with all the proxying going on between https://github.com/modelcontextprotocol/inspector[MCP Inspector] and Keycloak ?"
msgstr "Puede que a estas alturas se esté preguntando, ¿qué sentido tiene utilizar link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] y link:https://github.com/quarkiverse/quarkus-mcp-server[Quarkus MCP Server] juntos, con todo el proxy que hay entre link:https://github.com/modelcontextprotocol/inspector[MCP Inspector] y Keycloak?"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "And if you have been following the evolution of the MCP Authorization specification, from its older https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[2025-03-26 version] to the https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization[latest one], you may want to ask, does the idea of using https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] bring us back to the days where the MCP Server was expected to do OAuth2 itself in the https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[2025-03-26 version] ?"
msgstr "Y si ha estado siguiendo la evolución de la especificación de Autorización MCP, desde su link:https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[versión] más antigua link:https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[de] link:https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[2025-03-26] hasta la link:https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization[última] , puede que quiera preguntarse, ¿la idea de utilizar link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] nos devuelve a los días en los que se esperaba que el servidor MCP hiciera OAuth2 por sí mismo en la link:https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[versión de 2025-03-26] ?"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Not really, https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] was introduced in the https://quarkus.io/blog/oidc-proxy/[Use OIDC Proxy to integrate OIDC service endpoints with custom GPT] blog post, more than half a year before the original MCP specification was published."
msgstr "En realidad no, link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] se introdujo en la entrada del blog link:https://quarkus.io/blog/oidc-proxy/[Use OIDC Proxy to integrate OIDC service endpoints with custom GPT] , más de medio año antes de que se publicara la especificación MCP original."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The main idea behind https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] is to let SPA applications write the same OAuth2 code no matter what the connection details and capabilities of the actual proxied OAuth2 provider are, with the https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] mediating between the client that is trying to perform various OAuth2 actions and the actual provider."
msgstr "La idea principal detrás de link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus] link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC] link:https://github.com/quarkiverse/quarkus-oidc-proxy[Proxy] es permitir que las aplicaciones SPA escriban el mismo código OAuth2 sin importar cuáles sean los detalles de conexión y las capacidades del proveedor OAuth2 proxy real, con el link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] mediando entre el cliente que está tratando de realizar diversas acciones OAuth2 y el proveedor real."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "For example, as it happens, Keycloak currently does not accept OAuth2 dynamic client registration requests that are sent directly from the https://github.com/modelcontextprotocol/inspector[MCP Inspector] SPA because its client registration endpoint does not support CORS. However, https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy], by being co-located with the Quarkus MCP Server, does support CORS, and thus can approve and forward OAuth2 client registration requests from the https://github.com/modelcontextprotocol/inspector[MCP Inspector] SPA's host to Keycloak. https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] can also augment or transform some of the OAuth2 requests and responses."
msgstr "Por ejemplo, actualmente Keycloak no acepta las solicitudes de registro de clientes dinámicas OAuth2 que se envían directamente desde el SPA Inspector link:https://github.com/modelcontextprotocol/inspector[MCP] porque su punto final de registro de clientes no admite CORS. Sin embargo, Quarkus link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC] Proxy, al estar coubicado con el Servidor MCP de Quarkus, sí soporta CORS, y por lo tanto puede aprobar y reenviar las solicitudes de registro de clientes OAuth2 desde el host del SPA Inspector link:https://github.com/modelcontextprotocol/inspector[MCP] a Keycloak. link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] también puede aumentar o transformar algunas de las solicitudes y respuestas OAuth2."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Besides helping SPAs write an interoperable OAuth2 code, https://quarkus.io/blog/oidc-proxy/#security-considerations[it can help with restricting which authorization code flow tokens can be returned and support a locally managed redirect endpoint]."
msgstr "Además de ayudar a las SPA a escribir un código OAuth2 interoperable, link:https://quarkus.io/blog/oidc-proxy/#security-considerations[puede ayudar a restringir qué tokens de flujo de código de autorización pueden devolverse y admitir un punto final de redirección gestionado localmente] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Recently, we have also enhanced https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] to support encrypting access and refresh tokens before returning them to SPA. We'll look at it in the next <<use-oidc-proxy-to-encrypt-tokens>> section."
msgstr "Recientemente, también hemos mejorado link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] para que admita el cifrado de tokens de acceso y actualización antes de devolverlos a SPA. Lo veremos en la siguiente sección de <<use-oidc-proxy-to-encrypt-tokens>> ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Encrypt access and refresh tokens and drop ID token"
msgstr "Cifrar los tokens de acceso y actualización y soltar el token de identificación"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "When we were discussing the early https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[MCP Authorizaton version 2025-03-26] options in the https://quarkus.io/blog/secure-mcp-sse-server/[Getting ready for secure MCP with Quarkus MCP Server] blog post, my colleague https://github.com/BarDweller[Ozzy Osborne] thought about the security of access tokens that were made available to MCP Clients and prototyped a Quarkus MCP Server demo where the MCP Server was used to access GitHub but the Claude AI MCP Client only had access to the wrapped access tokens that can not be used directly against GitHub."
msgstr "Cuando estábamos discutiendo las primeras opciones de link:https://quarkus.io/blog/secure-mcp-sse-server/[MCP] link:https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization[Authorizaton versión 2025-03-26] en la entrada del blog link:https://quarkus.io/blog/secure-mcp-sse-server/[Getting ready for secure MCP with Quarkus MCP Server] , mi colega link:https://github.com/BarDweller[Ozzy Osborne] pensó en la seguridad de los tokens de acceso que se ponían a disposición de los Clientes MCP e hizo un prototipo de una demo de Quarkus MCP Server donde el Servidor MCP se utilizaba para acceder a GitHub pero el Cliente MCP Claude AI sólo tenía acceso a los tokens de acceso envueltos que no se pueden utilizar directamente contra GitHub."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] builds on Ozzy's idea to wrap tokens and makes it possible to encrypt both access and refresh tokens that are returned to the MCP Client."
msgstr "link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] se basa en la idea de Ozzy de envolver los tokens y hace posible cifrar tanto los tokens de acceso como los de actualización que se devuelven al cliente MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Let's see how it works."
msgstr "Veamos cómo funciona."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Add the following configuration properties to the <<mcp-server-configuration>>, without restarting the <<start-mcp-server,MCP Server>>:"
msgstr "Añada las siguientes propiedades de configuración a <<mcp-server-configuration>> , sin reiniciar el xref:start-mcp-server[servidor MCP] :"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "https://github.com/sberyozkin/quarkus-mcp-server-oidc-proxy/blob/main/secure-mcp-http-server-with-oidc-proxy/src/main/resources/publicKey.jwk[Public RSA key] that OIDC Proxy must use to encrypt access and refresh tokens, when intercepting the `authorization_code` and `refresh_token` grant responses. Note that Quarkus OIDC that protects the MCP Server does not control the communication between https://github.com/modelcontextprotocol/inspector[MCP Inspector] and the token issuer, therefore it can not encrypt the tokens, only OIDC Proxy can."
msgstr "link:https://github.com/sberyozkin/quarkus-mcp-server-oidc-proxy/blob/main/secure-mcp-http-server-with-oidc-proxy/src/main/resources/publicKey.jwk[Clave RSA pública] que OIDC Proxy debe utilizar para cifrar los tokens de acceso y actualización, al interceptar las respuestas de concesión de `authorization_code` y `refresh_token` . Tenga en cuenta que Quarkus OIDC que protege el Servidor MCP no controla la comunicación entre link:https://github.com/modelcontextprotocol/inspector[el Inspector MCP] y el emisor de tokens, por lo que no puede cifrar los tokens, sólo puede hacerlo OIDC Proxy."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "https://github.com/sberyozkin/quarkus-mcp-server-oidc-proxy/blob/main/secure-mcp-http-server-with-oidc-proxy/src/main/resources/privateKey.jwk[Private RSA key] that OIDC Proxy must use to decrypt refresh tokens and Quarkus OIDC - bearer access tokens. Note that OIDC Proxy does not control access to the Quarkus service endpoint such as Quarkus MCP server but only intercepts requests/responses to/from the token issuer, therefore it can only decrypt refresh tokens when intercepting `refresh_token` grant requests, while Quarkus OIDC must handle the decryption of the access tokens that were encrypted by OIDC Proxy and are used to access the MCP Server."
msgstr "link:https://github.com/sberyozkin/quarkus-mcp-server-oidc-proxy/blob/main/secure-mcp-http-server-with-oidc-proxy/src/main/resources/privateKey.jwk[Clave RSA privada] que OIDC Proxy debe utilizar para descifrar los tokens de actualización y los tokens de acceso Quarkus OIDC - bearer. Tenga en cuenta que OIDC Proxy no controla el acceso al punto final del servicio de Quarkus, como el servidor MCP de Quarkus, sino que sólo intercepta las solicitudes/respuestas a/del emisor de tokens, por lo que sólo puede descifrar los tokens de actualización cuando intercepta las solicitudes de concesión de `refresh_token` , mientras que Quarkus OIDC debe gestionar el descifrado de los tokens de acceso que fueron cifrados por OIDC Proxy y se utilizan para acceder al servidor MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "This is a hint to Quarkus OIDC that when the `quarkus.oidc.token.decryption-key-location` is set, that only an access token, either the bearer or authorization code flow one, that must be decrypted."
msgstr "Esta es una pista para Quarkus OIDC de que cuando se establece el `quarkus.oidc.token.decryption-key-location` , que sólo un token de acceso, ya sea el portador o el flujo de código de autorización uno, que debe ser descifrado."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "As you could see at the end of the <<use-mcp-inspector-to-access-mcp-server>> section, ID token was also returned to https://github.com/modelcontextprotocol/inspector[MCP Inspector] which does not need it. OIDC proxy also does not encrypt ID tokens the same way it can encrypt access and refresh tokens, because the whole point of an ID token when SPA applications login the user is for SPA be able to find some information about the user from the ID token, therefore encrypting it by the OIDC proxy would make it impossible. But an ID token can contain sensitive information so why return it to SPA which does not need it ? So we let https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] remove it from the authorization code flow grant response."
msgstr "Como pudo ver al final de la sección <<use-mcp-inspector-to-access-mcp-server>> , el token de ID también fue devuelto al link:https://github.com/modelcontextprotocol/inspector[inspector MCP] que no lo necesita. El proxy OIDC tampoco encripta los tokens de ID de la misma forma que puede encriptar los tokens de acceso y actualización, porque el objetivo de un token de ID cuando las aplicaciones SPA inician sesión con el usuario es que SPA pueda encontrar alguna información sobre el usuario a partir del token de ID, por lo tanto encriptarlo por el proxy OIDC lo haría imposible. Pero un token ID puede contener información sensible así que ¿por qué devolvérsela a SPA que no la necesita? Así que dejamos que el link:https://github.com/quarkiverse/quarkus-oidc-proxy[proxy OIDC] lo elimine de la respuesta de concesión del flujo del código de autorización."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Save the updated configuration, Quarkus MCP Server will notice them in dev mode."
msgstr "Guarde la configuración actualizada, Quarkus MCP Server los notará en modo dev."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid ""
"Now please go back to the <<use-mcp-inspector-to-access-mcp-server>> section and repeat the same steps, including updating another registered client in Keycloak.\n"
"Once you completed the https://github.com/modelcontextprotocol/inspector[MCP Inspector]'s `Guided OAuth Flow`, check the returned tokens:"
msgstr "Ahora vuelva a la sección <<use-mcp-inspector-to-access-mcp-server>> y repita los mismos pasos, incluyendo la actualización de otro cliente registrado en Keycloak. Una vez que haya completado el link:https://github.com/modelcontextprotocol/inspector[inspector MCP] `Guided OAuth Flow` , compruebe los tokens devueltos:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid ""
"As you can see an ID token is no longer returned.\n"
"Now copy the access token value. https://www.jwt.io/[jwt.io] no longer accepts encrypted JWT tokens, but you can find another JWT decoder online such as https://fusionauth.io/dev-tools/jwt-decoder[FusionAuth JWT Decoder].\n"
"Paste the access token - the actual claims are encrypted but it can still show the JWT headers:"
msgstr "Como puede ver ya no se devuelve un token de identificación. Ahora copie el valor del token de acceso. link:https://www.jwt.io/[jwt.io] ya no acepta tokens JWT encriptados, pero puede encontrar otro decodificador JWT en línea como link:https://fusionauth.io/dev-tools/jwt-decoder[FusionAuth JWT Decoder] . Pegue el token de acceso - las demandas reales están encriptadas pero aún puede mostrar las cabeceras JWT:"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "These are not signing but encryption algorithms. `RSA-OAEP` encrypts the generated content encryption key while `A256GCM` algorithm uses this key to encrypt claims."
msgstr "No se trata de algoritmos de firma sino de cifrado. `RSA-OAEP` cifra la clave de cifrado del contenido generado mientras que el algoritmo `A256GCM` utiliza esta clave para cifrar las reclamaciones."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "In this particular demo, the fact that the access and refresh tokens are encrypted primarily eliminates the information leak risk as Keycloak access and refresh tokens are usually in JWT format and can contain sensitive details. We also rely on the MCP Client to use https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization#authorization-code-protection[Proof Key for Code Exchange] to minimize a risk of the authorizaion code being leaked and the attacker acquiring the tokens, and we enforce the CORS policy in the <<mcp-server-configuration>> section to allow requests to the MCP Server only from the known https://github.com/modelcontextprotocol/inspector[MCP Inspector]'s host and port."
msgstr "En esta demostración en particular, el hecho de que los tokens de acceso y actualización estén cifrados elimina principalmente el riesgo de fuga de información, ya que los tokens de acceso y actualización de Keycloak suelen estar en formato JWT y pueden contener detalles sensibles. También confiamos en que el cliente MCP utilice link:https://modelcontextprotocol.io/specification/2025-06-18/basic/authorization#authorization-code-protection[Proof Key para el intercambio de código] a fin de minimizar el riesgo de que se filtre el código de autorización y el atacante adquiera los tokens, y aplicamos la política CORS en la sección <<mcp-server-configuration>> para permitir las solicitudes al servidor MCP sólo desde el host y el puerto conocidos link:https://github.com/modelcontextprotocol/inspector[del inspector MCP] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Encrypting access tokens before returning them to the MCP Client is very useful when your MCP Server is implemented to propagate the incoming access tokens to other services, such as GitHub, or downstream microservices that may not enforce specific CORS policies, or token verification constraints such as a token audience check. In such cases, if the MCP Client leaks the access token, the attacker can bypass Quarkus MCP server and access those other services directly. This risk is avoided when the access token is encrypted by https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] because those other services won't be able to decrypt it."
msgstr "Cifrar los tokens de acceso antes de devolverlos al Cliente MCP es muy útil cuando su Servidor MCP está implementado para propagar los tokens de acceso entrantes a otros servicios, como GitHub, o microservicios aguas abajo que pueden no aplicar políticas CORS específicas, o restricciones de verificación de tokens como una comprobación de audiencia de tokens. En tales casos, si el cliente MCP filtra el token de acceso, el atacante puede eludir el servidor MCP de Quarkus y acceder directamente a esos otros servicios. Este riesgo se evita cuando el token de acceso es encriptado por link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] porque esos otros servicios no podrán desencriptarlo."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Similarly, when the SPA tries to use a refresh token to refresh the expired access token and the attacker manages to get hold of the refresh token and is aware of the actual token issuer's refresh endpoint, then the refresh grant request can go directly to the provider. This risk is avoided when the refresh token is encrypted by https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] because the token issuer won't be able to decrypt it."
msgstr "Del mismo modo, cuando el SPA intenta utilizar un token de actualización para actualizar el token de acceso caducado y el atacante consigue hacerse con el token de actualización y conoce el punto final de actualización del emisor del token real, entonces la solicitud de concesión de actualización puede ir directamente al proveedor. Este riesgo se evita cuando el token de refresco es encriptado por link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] porque el emisor del token no podrá desencriptarlo."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Now that we discussed why it may be worth encrypting the access and refresh tokens, please go to the end of the <<use-mcp-inspector-to-access-mcp-server>> section, `Connect` to the MCP Server, and run the tool to confirm that the encrypted access token is correctly decrypted by the MCP Server."
msgstr "Ahora que ya hemos hablado de por qué puede merecer la pena cifrar los tokens de acceso y de actualización, vaya al final de la sección <<use-mcp-inspector-to-access-mcp-server>> , `Connect` al servidor MCP, y ejecute la herramienta para confirmar que el token de acceso cifrado es descifrado correctamente por el servidor MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Security Considerations"
msgstr "Consideraciones de seguridad"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "The key security recommendation remains the same as the one in the https://quarkus.io/blog/secure-mcp-server-oauth2/#security-considerations[Use MCP OAuth2 Flow to access Quarkus MCP Server] blog post: secure Quarkus MCP servers must enforce that access tokens have a correct audience, for the MCP Server to assert that the current token is meant to access this MCP server only. And indeed, MCP Servers that propagate tokens further should consider exchanging such tokens, for a new token to target the downstream service correctly - it also minimizes the risk discussed next."
msgstr "La recomendación de seguridad clave sigue siendo la misma que la de la entrada de blog link:https://quarkus.io/blog/secure-mcp-server-oauth2/#security-considerations[Utilizar el flujo MCP OAuth2 para acceder al servidor MCP de Quarkus] : los servidores MCP de Quarkus seguros deben hacer cumplir que los tokens de acceso tengan una audiencia correcta, para que el servidor MCP afirme que el token actual está destinado a acceder únicamente a este servidor MCP. Y, de hecho, los Servidores MCP que propagan tokens más allá deben considerar el intercambio de dichos tokens, para que un nuevo token se dirija correctamente al servicio descendente - también minimiza el riesgo que se discute a continuación."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "When your MCP server forwards the tokens, please consider how to minimize a risk of the attacker stealing the tokens from the MCP Client and using them to access directly the same services that MCP Server forwards tokens to. https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] provides a way to <<use-oidc-proxy-to-encrypt-tokens,encrypt access and refresh tokens>> that are returned to the MCP Client, making them acceptable only by either the MCP server or https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] itself."
msgstr "Cuando su servidor MCP reenvíe los tokens, tenga en cuenta cómo minimizar el riesgo de que el atacante robe los tokens del Cliente MCP y los utilice para acceder directamente a los mismos servicios a los que el Servidor MCP reenvía los tokens. link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] proporciona una forma de xref:use-oidc-proxy-to-encrypt-tokens[cifrar los tokens de acceso y actualización] que se devuelven al Cliente MCP, haciéndolos aceptables sólo por el servidor MCP o por el propio link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "When MCP Client registers OAuth2 Clients dynamically, please consider enforcing a user consent during the authentication with a standard OpenId Connect `prompt=consent` parameter. https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] recognizes the `quarkus.oidc.authentication.extra-params.prompt=consent` property that you can use if the MCP Client does not add it itself when initiating an authorization code flow for the dynamically registered client."
msgstr "Cuando el Cliente MCP registra Clientes OAuth2 dinámicamente, por favor considere imponer un consentimiento de usuario durante la autenticación con un parámetro estándar de OpenId Connect `prompt=consent` . link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] reconoce la propiedad `quarkus.oidc.authentication.extra-params.prompt=consent` que puede utilizar si el Cliente MCP no la añade por sí mismo al iniciar un flujo de código de autorización para el cliente registrado dinámicamente."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Please note that the https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] extension currently has an `experimental` status, therefore, while we do encourage you to experiment with it, we do not recommend to use it in production for the purpose of hardening the https://github.com/quarkiverse/quarkus-mcp-server[Quarkus MCP Server] token security yet."
msgstr "Tenga en cuenta que la extensión link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] tiene actualmente un estado `experimental` , por lo tanto, aunque le animamos a experimentar con ella, no recomendamos utilizarla en producción con el fin de endurecer todavía la seguridad del token link:https://github.com/quarkiverse/quarkus-mcp-server[del servidor MCP de Quarkus] ."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Please never use a wildcard CORS policy in production, get the MCP server accept only known MCP Client SPA origins."
msgstr "Por favor, no utilice nunca una política CORS comodín en producción, consiga que el servidor MCP sólo acepte orígenes SPA de clientes MCP conocidos."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusión"

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "In this blog post we looked at how https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] can help to harden the security of https://github.com/quarkiverse/quarkus-mcp-server[Quarkus MCP Server] tokens, by encrypting access and refresh tokens, and removing a possibly sensitive ID token, before the tokens are returned to the MCP Client."
msgstr "En esta entrada de blog vimos cómo link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] puede ayudar a reforzar la seguridad de los tokens link:https://github.com/quarkiverse/quarkus-mcp-server[del Servidor MCP de Quarkus] , cifrando los tokens de acceso y actualización, y eliminando un token de identificación posiblemente sensible, antes de que los tokens sean devueltos al Cliente MCP."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "We also used https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] to get OAuth2 Dynamic Client Registration working by controlling the CORS policy at the https://github.com/quarkiverse/quarkus-mcp-server[Quarkus MCP Server] level and forwarding the client registration requests to Keycloak."
msgstr "También utilizamos link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] para hacer funcionar el registro dinámico de clientes OAuth2 controlando la política CORS a nivel link:https://github.com/quarkiverse/quarkus-mcp-server[del servidor MCP de Quarkus] y reenviando las solicitudes de registro de clientes a Keycloak."

#: _posts/2025-10-01-secure-mcp-oidc-proxy.adoc
#, fuzzy
msgid "Please let us know what you think, enjoy !"
msgstr "Háganos saber su opinión, ¡disfrute!"
