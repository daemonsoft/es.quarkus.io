msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Using the Model Context Protocol with Quarkus+LangChain4j"
msgstr "Uso del protocolo de contexto de modelo con Quarkus+LangChain4j"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Executing tools via the Model Context Protocol with Quarkus+LangChain4j"
msgstr "Ejecución de herramientas a través del Protocolo de Contexto de Modelo con Quarkus+LangChain4j"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"We are thrilled to announce that starting with version 0.23.0, the Quarkus\n"
"LangChain4j project integrates calling tools using the\n"
"https://modelcontextprotocol.io[Model Context Protocol (MCP)]."
msgstr "Nos complace anunciar que, a partir de la versión 0.23.0, el proyecto LangChain4j de Quarkus integra herramientas de llamada que utilizan el link:https://modelcontextprotocol.io[Protocolo de Contexto de Modelo (MCP)] ."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "What is the Model Context Protocol?"
msgstr "¿Qué es el Protocolo de Contexto Modelo?"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"MCP is an open protocol that standardizes how applications provide context\n"
"to LLMs. An MCP server is an application that can provide tools, resources\n"
"(be it a set of static documents or dynamically accessed data, for example\n"
"from a database), or pre-defined prompts that your AI-infused application\n"
"can use when talking to LLMs. When you package such functionality into an\n"
"MCP server, it can be plugged into and used by any LLM client toolkit that\n"
"supports MCP, including Quarkus and LangChain4j. There is also already a\n"
"growing ecosystem of reusable MCP servers that you can use out of the box,\n"
"and Quarkus also offers the\n"
"https://github.com/quarkiverse/quarkus-mcp-server[quarkus-mcp-server extension] that allows you\n"
"to create MCP servers, but in this article, we will focus on the client\n"
"side. More on creating MCP servers later."
msgstr "MCP es un protocolo abierto que estandariza la forma en que las aplicaciones proporcionan contexto a los LLM. Un servidor MCP es una aplicación que puede proporcionar herramientas, recursos (ya sea un conjunto de documentos estáticos o datos a los que se accede dinámicamente, por ejemplo desde una base de datos) o indicaciones predefinidas que su aplicación infundida con IA puede utilizar al hablar con los LLM. Al empaquetar dicha funcionalidad en un servidor MCP, puede ser conectada y utilizada por cualquier conjunto de herramientas cliente LLM que admita MCP, incluidos Quarkus y LangChain4j. También existe ya un ecosistema creciente de servidores MCP reutilizables que se pueden usar listos para usar, y Quarkus también ofrece la link:https://github.com/quarkiverse/quarkus-mcp-server[extensión quarkus-mcp-server] que permite crear servidores MCP, pero en este artículo nos centraremos en el lado del cliente. Más adelante hablaremos de la creación de servidores MCP."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"In version 0.23.x,\n"
"https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j]\n"
"implements the client side of the MCP protocol to allow tool execution.\n"
"Support for resources and prompts is planned for future releases."
msgstr "En la versión 0.23.x, link:https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] implementa el lado cliente del protocolo MCP para permitir la ejecución de herramientas. El soporte para recursos y avisos está previsto para futuras versiones."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"In this article, we will show you how to use Quarkus and LangChain4j to\n"
"easily create an application that connects to an MCP server providing\n"
"filesystem-related tools and exposes a chatbot that a user can use to\n"
"interact with the local filesystem, that means read and write files as\n"
"instructed by the user."
msgstr "En este artículo, le mostraremos cómo utilizar Quarkus y LangChain4j para crear fácilmente una aplicación que se conecte a un servidor MCP que proporcione herramientas relacionadas con el sistema de archivos y exponga un chatbot que un usuario pueda utilizar para interactuar con el sistema de archivos local, es decir, leer y escribir archivos según las instrucciones del usuario."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"There is no need to set up an MCP server separately, we will configure\n"
"Quarkus to run one as a subprocess. As you will see, setting up MCP with\n"
"Quarkus is extremely easy."
msgstr "No es necesario configurar un servidor MCP por separado, configuraremos Quarkus para que ejecute uno como subproceso. Como verá, configurar MCP con Quarkus es extremadamente fácil."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"To download the final project, visit the\n"
"https://github.com/quarkiverse/quarkus-langchain4j/tree/0.23.0/samples/mcp-tools[\n"
"quarkus-langchain4j samples]. That sample contains the final functionality\n"
"developed in this article, plus some stuff on top, like a JavaScript-based\n"
"UI. In this article, for simplicity, we will skip the creation of that UI,\n"
"and we will only use the Dev UI chat page that comes bundled in Quarkus out\n"
"of the box."
msgstr "Para descargar el proyecto final, visite las link:https://github.com/quarkiverse/quarkus-langchain4j/tree/0.23.0/samples/mcp-tools[muestras quarkus-langchain4j] . Esa muestra contiene la funcionalidad final desarrollada en este artículo, además de algunas cosas por encima, como una UI basada en JavaScript. En este artículo, por simplicidad, nos saltaremos la creación de esa UI, y sólo utilizaremos la página de chat Dev UI que viene incluida en Quarkus fuera de la caja."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
msgid "Prerequisites"
msgstr "Requisitos previos"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Apache Maven 3.9+"
msgstr "Apache Maven 3.9+"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "The `npm` package manager installed on your machine"
msgstr "El gestor de paquetes `npm` instalado en su máquina"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Creating a Filesystem assistant project"
msgstr "Creación de un proyecto de asistente del sistema de archivos"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"We will assume that you are using OpenAI as the LLM provider. If you are\n"
"using a different provider, you will need to swap out the\n"
"`quarkus-langchain4j-openai` extension and use something else."
msgstr "Supondremos que está utilizando OpenAI como proveedor de LLM. Si utiliza un proveedor diferente, tendrá que cambiar la extensión `quarkus-langchain4j-openai` y utilizar otra."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Start by generating a Quarkus project. If you are using the Quarkus CLI, you can do it like this:"
msgstr "Comience por generar un proyecto Quarkus. Si utiliza la CLI de Quarkus, puede hacerlo así:"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"If you prefer to use the web-based project generator, go to\n"
"https://code.quarkus.io/[code.quarkus.io] and select the same extensions."
msgstr "Si prefiere utilizar el generador de proyectos basado en la web, vaya a link:https://code.quarkus.io/[code.quarkus.io] y seleccione las mismas extensiones."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Whenever you run the application, make sure the\n"
"`QUARKUS_LANGCHAIN4J_OPENAI_API_KEY` environment variable is set to your\n"
"OpenAI API key."
msgstr "Siempre que ejecute la aplicación, asegúrese de que la variable de entorno `QUARKUS_LANGCHAIN4J_OPENAI_API_KEY` está configurada con su clave de API de OpenAI."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Create the directory to be used by the agent"
msgstr "Cree el directorio que utilizará el agente"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Under the root directory of the Maven project, create a directory named `playground`.\n"
"This will be the only directory that the agent will be allowed to interact with."
msgstr "Bajo el directorio raíz del proyecto Maven, cree un directorio llamado `playground` . Este será el único directorio con el que el agente podrá interactuar."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Inside that directory, create any files that you want for testing. For\n"
"example, create a file named `playground/hello.txt` with the following\n"
"contents:"
msgstr "Dentro de ese directorio, cree los archivos que desee para las pruebas. Por ejemplo, cree un archivo llamado `playground/hello.txt` con el siguiente contenido:"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Hello, world!"
msgstr "¡Hola, mundo!"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Create the AI service"
msgstr "Crear el servicio de IA"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Next, we need to define an AI service that will define how the bot should\n"
"behave. The interface will look like this:"
msgstr "A continuación, tenemos que definir un servicio de IA que definirá cómo debe comportarse el bot. La interfaz tendrá este aspecto:"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Feel free to adjust the system message to your liking, but this one should\n"
"be suitable to get the application working as expected."
msgstr "Siéntase libre de ajustar el mensaje del sistema a su gusto, pero éste debería ser adecuado para que la aplicación funcione como se espera."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Configure the MCP server and the connection to it"
msgstr "Configurar el servidor MCP y la conexión con él"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"We will use\n"
"https://www.npmjs.com/package/@modelcontextprotocol/server-filesystem[server-filesystem]\n"
"MCP server that comes as an NPM package, this is why you need to have `npm`\n"
"installed on your machine. It is assumed that you have the `npm` binary\n"
"available on your `PATH` (the `PATH` variable that the Quarkus process\n"
"sees)."
msgstr "Utilizaremos el servidor MCP link:https://www.npmjs.com/package/@modelcontextprotocol/server-filesystem[server-filesystem] que viene como un paquete NPM, por eso necesita tener `npm` instalado en su máquina. Se asume que tiene el binario `npm` disponible en su `PATH` (la variable `PATH` que ve el proceso Quarkus)."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Starting the server and configuring the connection to it is extremely easy.\n"
"We will simply tell Quarkus to start up a `server-filesystem` MCP server as\n"
"a subprocess and then communicate with it over the `stdio` transport. All\n"
"you need to do is to add two lines into your `application.properties`:"
msgstr "Iniciar el servidor y configurar la conexión con él es extremadamente sencillo. Simplemente le diremos a Quarkus que inicie un servidor MCP `server-filesystem` como subproceso y que se comunique con él a través del transporte `stdio` . Todo lo que tiene que hacer es añadir dos líneas en su `application.properties` :"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"With this configuration, Quarkus will know that it should create a MCP\n"
"client that will be backed by a server that will be started by executing\n"
"`npm exec @modelcontextprotocol/server-filesystem@0.6.2 playground` as a\n"
"subprocess. The `playground` argument denotes the path to the directory that\n"
"the agent will be allowed to interact with. The `stdio` transport means that\n"
"the client will communicate with the server over standard input and output."
msgstr "Con esta configuración, Quarkus sabrá que debe crear un cliente MCP que estará respaldado por un servidor que se iniciará ejecutando `npm exec @modelcontextprotocol/server-filesystem@0.6.2 playground` como subproceso. El argumento `playground` denota la ruta al directorio con el que el agente podrá interactuar. El transporte `stdio` significa que el cliente se comunicará con el servidor a través de la entrada y salida estándar."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"When you configure one or more MCP connections this way, Quarkus also\n"
"automatically generates a `ToolProvider`. Any AI service that does not\n"
"explicitly specify a tool provider will be automatically wired up to this\n"
"generated one, so you don't need to do anything else to make the MCP\n"
"functionality available to the AI service."
msgstr "Cuando configure una o más conexiones MCP de esta forma, Quarkus también generará automáticamente un `ToolProvider` . Cualquier servicio de IA que no especifique explícitamente un proveedor de herramientas se conectará automáticamente a este generado, por lo que no necesitará hacer nada más para que la funcionalidad MCP esté disponible para el servicio de IA."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Optionally, if you want to see the actual traffic between the application\n"
"and the MCP server, add these three additional lines to your\n"
"`application.properties`:"
msgstr "Opcionalmente, si desea ver el tráfico real entre la aplicación y el servidor MCP, añada estas tres líneas adicionales a su `application.properties` :"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "And that's all! Now, let's test it."
msgstr "Y eso es todo. Ahora, vamos a probarlo."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Try it out"
msgstr "Pruébelo"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"Since we didn't create any UI for our application that a user could use,\n"
"let's use the Dev UI that comes with Quarkus out of the box. With the\n"
"application running in development mode, access\n"
"http://localhost:8080/q/dev-ui in your browser and click the `Chat` link in\n"
"the `LangChain4j` card (either that, or go to\n"
"http://localhost:8080/q/dev-ui/io.quarkiverse.langchain4j.quarkus-langchain4j-core/chat\n"
"directly)."
msgstr "Puesto que no hemos creado ninguna interfaz de usuario para nuestra aplicación que pueda utilizar un usuario, vamos a utilizar la interfaz de usuario de desarrollo que viene con Quarkus fuera de la caja. Con la aplicación ejecutándose en modo de desarrollo, acceda a http://localhost:8080/q/dev-ui en su navegador y haga clic en el enlace `Chat` de la tarjeta `LangChain4j` (o eso, o vaya directamente a http://localhost:8080/q/dev-ui/io.quarkiverse.langchain4j.quarkus-langchain4j-core/chat )."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Try a prompt to ask the agent to read a file that you created previously, such as:"
msgstr "Pruebe a pedir al agente que lea un archivo que haya creado previamente, como por ejemplo:"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Read the contents of the file hello.txt."
msgstr "Lea el contenido del archivo hola.txt."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"If all is set up correctly, the agent will respond with the contents of the\n"
"file, like in this screenshot:"
msgstr "Si todo está configurado correctamente, el agente responderá con el contenido del archivo, como en esta captura de pantalla:"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "The bot can also write files, so try a prompt such as:"
msgstr "El bot también puede escribir archivos, así que pruebe con un prompt como:"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Write a Python script that prints \"Hello, world!\" and save it as hello.py."
msgstr "Escriba un script en Python que imprima \"¡Hola, mundo!\" y guárdelo como hola.py."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Then have a look into your `playground` directory, and you should see the new Python file there!"
msgstr "A continuación, eche un vistazo a su directorio `playground` , ¡y debería ver allí el nuevo archivo Python!"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusión"

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"The Model Context Protocol allows you to easily integrate reusable sets of\n"
"tools and resources to AI-infused applications in a portable way. With the\n"
"Quarkus LangChain4j extension, you can instruct Quarkus to run a server\n"
"locally as a subprocess, and configuring application to use it is just a\n"
"matter of adding a few configuration properties."
msgstr "El Protocolo de Contexto de Modelo le permite integrar fácilmente conjuntos reutilizables de herramientas y recursos a aplicaciones infundidas en IA de una manera portátil. Con la extensión LangChain4j de Quarkus, puede ordenar a Quarkus que ejecute un servidor localmente como subproceso, y configurar la aplicación para que lo utilice es sólo cuestión de añadir unas cuantas propiedades de configuración."

#: _posts/2025-01-08-quarkus-langchain4j-mcp.adoc
#, fuzzy
msgid ""
"And that's not all. Stay tuned, because Quarkus also has an extension that\n"
"allows you to create MCP servers! More about that soon. *UPDATE:* The post\n"
"about the server side is now available:\n"
"https://quarkus.io/blog/mcp-server/[Implementing a MCP server in Quarkus]."
msgstr "Y eso no es todo. Esté atento, ¡porque Quarkus también tiene una extensión que le permite crear servidores MCP! Más sobre eso pronto. *ACTUALIZACIÓN:* Ya está disponible el post sobre la parte del servidor: link:https://quarkus.io/blog/mcp-server/[Implementación de un servidor MCP en Quarkus] ."
