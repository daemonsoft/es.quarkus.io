# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Quarkus and Web UI Development"
msgstr "Quarkus y el desarrollo de la interfaz de usuario web"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "In this blog post we will take advantage of the respective development modes of both Quarkus and Angular CLI and see how we can develop a zero turnaround web application backed by a RESTful API on Quarkus. While I am using Angular, *the concepts are the same for other modern web application frameworks.*"
msgstr "En esta entrada del blog vamos a aprovechar los respectivos modos de desarrollo tanto de Quarkus como de Angular CLI y veremos cómo podemos desarrollar una aplicación web de giro cero respaldada por una API RESTful en Quarkus. Aunque estoy usando Angular, *los conceptos son los mismos para otros frameworks de aplicaciones web modernas.*"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The source code for this blog can be found at https://github.com/kabir/blog-quarkus-ui-development. It contains a README which explains in detail how the application was set up and how we implemented each step, addressing problems we uncovered along our way."
msgstr "El código fuente de este blog puede encontrarse en  https://github.com/kabir/blog-quarkus-ui-development  Contiene un README que explica en detalle cómo se configuró la aplicación y cómo implementamos cada paso, abordando los problemas que descubrimos en el camino."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "You need to have https://nodejs.org/en/download/package-manager/[Node], https://yarnpkg.com/en/docs/install[Yarn] and https://cli.angular.io[Angular CLI] installed on your system, and familiarity with Angular and Quarkus is assumed."
msgstr "Necesitas tener  link:https://nodejs.org/en/download/package-manager/[Node],  link:https://yarnpkg.com/en/docs/install[Yarn] y  link:https://cli.angular.io[Angular CLI] instalados en tu sistema, y se supone que estás familiarizado con Angular y Quarkus."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Clone the https://github.com/kabir/blog-quarkus-ui-development[project], and go into its folder. First run:"
msgstr "Clona el  link:https://github.com/kabir/blog-quarkus-ui-development[proyecto] y entra en su carpeta. Primera ejecución:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "$mvn -Dui.deps compile"
msgstr "$mvn -Dui.deps compilar"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This downloads all the dependencies needed to build our web application. Then run:"
msgstr "Esto descarga todas las dependencias necesarias para construir nuestra aplicación web. Luego ejecuta:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "$mvn package -Dui.dev -Dui.proxy quarkus:dev"
msgstr "$mvn package -Dui.dev -Dui.proxy quarkus:dev"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The `-Dui` system property enables a Maven profile to build the web application. The output directory for the web application `webapp/dist/webapp` gets bundled into the Quarkus application. We will talk about `-Dui.proxy` later on."
msgstr "La propiedad del sistema `-Dui` habilita un perfil Maven para construir la aplicación web. El directorio de salida de la aplicación web `webapp/dist/webapp` se incluye en la aplicación Quarkus. Hablaremos de `-Dui.proxy` más adelante."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Go to http://localhost:8080 in your browser and take a look at our sample application. It contains a few different pages. Go to the one called `Rest` which makes a REST call. We can change the return value of the https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleResource.java[`SampleServlet.hello()`] method. If you refresh the page you will see the changes made reflected automatically!"
msgstr "Vaya a  http://localhost:8080  en su navegador y eche un vistazo a nuestra aplicación de ejemplo. Contiene algunas páginas diferentes. Ve a la que se llama `Rest` que hace una llamada REST. Podemos cambiar el valor de retorno del método  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleResource.java[`SampleServlet.hello()`] método. Si actualizas la página verás los cambios realizados reflejados automáticamente."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "With what we have so far, if we were to make changes to the user interface in our web application, we would need to stop Quarkus and run the above command to build the web application again and restart quarkus. This is not what we want, so we take advantage of Angular's https://angular.io/guide/build#proxying-to-a-backend-server[proxy]. https://facebook.github.io/create-react-app/docs/proxying-api-requests-in-development[React] and https://cli.vuejs.org/config/#devserver-proxy[Vue] have something similar."
msgstr "Con lo que tenemos hasta ahora, si tuviéramos que hacer cambios en la interfaz de usuario en nuestra aplicación web, tendríamos que detener Quarkus y ejecutar el comando anterior para construir la aplicación web de nuevo y reiniciar quarkus. Esto no es lo que queremos, así que aprovechamos el  link:https://angular.io/guide/build#proxying-to-a-backend-server[proxy] de Angular.  link:https://facebook.github.io/create-react-app/docs/proxying-api-requests-in-development[React] y  link:https://cli.vuejs.org/config/#devserver-proxy[Vue] tienen algo similar."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "In another terminal window go into the `webapp/` folder of the cloned project, and run:"
msgstr "En otra ventana de terminal, entra en la carpeta `webapp/` del proyecto clonado, y ejecuta:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "$yarn proxy"
msgstr "proxy $yarn"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This will start the Angular development server in proxy mode on port 4200. Go to http://localhost:4200 and you will see the same application as you saw earlier on port 8080, but served by the Angular development server while accessing the REST endpoints from the running Quarkus application. If you make any changes to any of the Angular components set up in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] you will see your changes reflected."
msgstr "Esto iniciará el servidor de desarrollo de Angular en modo proxy en el puerto 4200. Ve a  http://localhost:4200  y verás la misma aplicación que viste antes en el puerto 8080, pero servida por el servidor de desarrollo de Angular mientras se accede a los endpoints REST desde la aplicación Quarkus en ejecución. Si haces algún cambio en cualquiera de los componentes de Angular configurados en  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] verás reflejados tus cambios."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This is great!!! We can now be super-productive and make changes in both our front-end and our back-end, and see the changes immediately without needing to rebuild, repackage and restart our application!"
msgstr "¡¡¡Esto es genial!!! ¡Ahora podemos ser súper productivos y hacer cambios tanto en nuestro front-end como en nuestro back-end, y ver los cambios inmediatamente sin necesidad de reconstruir, reempaquetar y reiniciar nuestra aplicación!"

#. type: Title ==
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Adjustments Summary"
msgstr "Resumen de ajustes"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The example project has already been set up with the needed adjustments to work properly both as a bundled application and in development mode. These are the main tweaks:"
msgstr "El proyecto de ejemplo ya ha sido configurado con los ajustes necesarios para que funcione correctamente tanto como aplicación empaquetada como en modo de desarrollo. Estos son los principales ajustes:"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Handle the Angular routes in the UI rather than on the back-end. This is important for the bundled version (running on port 8080)."
msgstr "Manejar las rutas de Angular en la UI en lugar de en el back-end. Esto es importante para la versión empaquetada (que se ejecuta en el puerto 8080)."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Enable the Angular proxy to allow for the UI to call REST endpoints served by Quarkus."
msgstr "Habilitar el proxy Angular para permitir que la interfaz de usuario llame a los puntos finales REST servidos por Quarkus."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Signal to the back-end that the front-end is running in a proxy, i.e. not served by us. This is important if the back-end needs to redirect to a page in the front-end."
msgstr "Señala al back-end que el front-end se está ejecutando en un proxy, es decir, que no es servido por nosotros. Esto es importante si el back-end necesita redirigir a una página del front-end."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "We will focus on the changes needed to make this work well, and not go into the details of how the application is set up."
msgstr "Nos centraremos en los cambios necesarios para que esto funcione bien, y no entraremos en los detalles de la configuración de la aplicación."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Handle Angular Routes"
msgstr "Manejar las rutas angulares"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Add a filter, https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/AngularRouteFilter.java[AngularRouteFilter]. The essence of its `doFilter()` method is:"
msgstr "Añade un filtro,  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/AngularRouteFilter.java[AngularRouteFilter]. La esencia de su método `doFilter()` es:"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "This filter is only needed when running the application bundled in Quarkus (port 8080). It is not needed when connecting to the application running in Angular (port 4200). It's purpose is to allow us to **bookmark pages** in the application. All the server knows about are things like:"
msgstr "Este filtro sólo es necesario cuando se ejecuta la aplicación en Quarkus (puerto 8080). No es necesario cuando se conecta a la aplicación que se ejecuta en Angular (puerto 4200). Su propósito es permitirnos *marcar páginas* en la aplicación. Todo lo que sabe el servidor son cosas como"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "the REST endpoints"
msgstr "los puntos finales REST"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "deployed servlets"
msgstr "servlets desplegados"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "the resources in the `META-INF/resources/` folder of the application"
msgstr "los recursos en la carpeta `META-INF/resources/` de la aplicación"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The `META-INF/resources/` in our case contains the application's index.html and the transpiled resources."
msgstr "El `META-INF/resources/` en nuestro caso contiene el index.html de la aplicación y los recursos transpilados."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Without this filter, if you go to one of the Angular routes directly (e.g if you try to refresh when on http://localhost:8080/rest which is the `Rest` page we saw earlier) Quarkus will think it is a file, a REST endpoint or a servlet. Since Quarkus has no knowledge of anything called `/rest` you end up with a 404 (Not Found) status. The filter checks the status code of the request after calling `chain.doFilter()`. If the status is 404 and does not seem to be a file, we forward this request to `/`, which in turn serves up the `index.html` file. By doing a forward the path and parameters of the request are preserved. Angular then figures out that `/rest` is one of its known routes and displays the appropriate page of the application. Once the web application is loaded in the browser, Angular takes over and handles all the internal links to other routes in the web application (as an example, if you are on http://localhost:8080 and click on the link taking you to http://localhost:8080/other there is no round-trip to the server)."
msgstr "Sin este filtro, si vas a una de las rutas de Angular directamente (por ejemplo, si intentas refrescar cuando estás en  http://localhost:8080/rest  que es la página `Rest` que vimos antes) Quarkus pensará que es un archivo, un endpoint REST o un servlet. Como Quarkus no tiene conocimiento de nada llamado `/rest`, acabará con un estado 404 (No encontrado). El filtro comprueba el código de estado de la solicitud después de llamar a `chain.doFilter()`. Si el estado es 404 y no parece ser un archivo, reenviamos esta petición a `/`, que a su vez sirve el archivo `index.html`. Al hacer un reenvío se conservan la ruta y los parámetros de la petición. Angular entonces se da cuenta de que `/rest` es una de sus rutas conocidas y muestra la página apropiada de la aplicación. Una vez que la aplicación web está cargada en el navegador, Angular se hace cargo y maneja todos los enlaces internos a otras rutas de la aplicación web (como ejemplo, si estás en  http://localhost:8080  y haces clic en el enlace que te lleva a  http://localhost:8080/other  no hay ida y vuelta al servidor)."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "There are other ways you can handle this too, e.g. by checking the path against a set of hard-coded known paths that are to be handled by the back-end, but for my purposes the above has worked very well. The key is to invoke:"
msgstr "Hay otras maneras de manejar esto también, por ejemplo, mediante la comprobación de la ruta con un conjunto de rutas conocidas codificadas que deben ser manejadas por el back-end, pero para mis propósitos lo anterior ha funcionado muy bien. La clave es invocar:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "request.getRequestDispatcher(\"/\").forward(request, response);"
msgstr "request.getRequestDispatcher(\"/\").forward(request, response);"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "if it is something that should be handled by Angular."
msgstr "si es algo que debe ser manejado por Angular."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Set up the Angular proxy"
msgstr "Configurar el proxy de Angular"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "The proxy is configured in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/proxy.conf.json[proxy.conf.json]. All REST calls to anything under `/api` will be passed to the back-end running on port 8080. To run the Angular development server with this configuration, we have added a `proxy` configuration to the `scripts` section of https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/package.json[`package.json`]."
msgstr "El proxy se configura en  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/proxy.conf.json[proxy.conf.json]. Todas las llamadas REST a cualquier cosa bajo `/api` se pasarán al back-end que se ejecuta en el puerto 8080. Para ejecutar el servidor de desarrollo de Angular con esta configuración, hemos añadido una configuración `proxy` a la sección `scripts` de  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/package.json[`package.json`]."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "In our case, we have a servlet which needs to redirect back to the front-end (something I found I needed to implement OAuth in my main project). That has a check for the `-Dui.proxy` system property we saw earlier when handling the `/callback` path in https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleServlet.java[`SampleServlet`]. If this property is set, we prepend `https://localhost:4200` (the address of the Angular proxy) to the redirect URL if we find the proxy is running on port 4200."
msgstr "En nuestro caso, tenemos un servlet que necesita redirigir de vuelta al front-end (algo que encontré que necesitaba para implementar OAuth en mi proyecto principal). Eso tiene una comprobación de la propiedad del sistema `-Dui.proxy` que vimos antes al manejar la ruta `/callback` en  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleServlet.java[`SampleServlet`]. Si esta propiedad está activada, añadimos `&lt;a href=\"https://localhost:4200\" class=\"bare\"&gt;https://localhost:4200&lt;/a&gt;` (la dirección del proxy de Angular) a la URL de redirección si encontramos que el proxy se está ejecutando en el puerto 4200."

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Finally, `DefaultComponent` in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] has a direct link to our servlet running in the back-end. It has a check to see if the web application is running in the proxy (i.e. its port is 4200), and if this is the case it adjusts the url from `/servlet/make-external-call` to point to the Quarkus back-end running on port 8080."
msgstr "Por último, `DefaultComponent` en  link:https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] tiene un enlace directo a nuestro servlet que se ejecuta en el back-end. Tiene una comprobación para ver si la aplicación web se está ejecutando en el proxy (es decir, su puerto es 4200), y si este es el caso ajusta la url de `/servlet/make-external-call` para que apunte al back-end de Quarkus que se ejecuta en el puerto 8080."

#. type: Title ==
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Last words"
msgstr "Últimas palabras"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "We have seen how with a minimum amount of configuration we can have both the back-end and front-end of our application running in Quarkus's and Angular's respective development modes. During development this removes the need to rebuild the application when we change something. You can just code away, and see the changes when you refresh your browser. This is done by starting Quarkus with:"
msgstr "Hemos visto como con una mínima configuración podemos tener tanto el back-end como el front-end de nuestra aplicación funcionando en los respectivos modos de desarrollo de Quarkus y Angular. Durante el desarrollo esto elimina la necesidad de reconstruir la aplicación cuando cambiamos algo. Puedes simplemente codificar, y ver los cambios cuando refresques tu navegador. Esto se hace iniciando Quarkus con:"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "and starting the Angular application (from the `webapp/` folder) with"
msgstr "e iniciar la aplicación Angular (desde la carpeta `webapp/` ) con"

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Packaging for development"
msgstr "Embalaje para el desarrollo"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "If you want to do a rebuild now and again to package the application and run it all in Quarkus run"
msgstr "Si quieres hacer una reconstrucción de vez en cuando para empaquetar la aplicación y ejecutarla toda en Quarkus ejecuta"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "$mvn package -Dui.dev quarkus:dev"
msgstr "$mvn package -Dui.dev quarkus:dev"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "By not passing in -Dui.proxy we disable the checks for whether the front-end runs in a proxy. `-Dui.dev` builds the web application so it is part of the Quarkus application."
msgstr "Al no pasar en -Dui.proxy deshabilitamos las comprobaciones de si el front-end se ejecuta en un proxy. `-Dui.dev` construye la aplicación web para que sea parte de la aplicación Quarkus."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Packaging for production"
msgstr "Embalaje para la producción"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "To package the application for production, use"
msgstr "Para empaquetar la aplicación para producción, utilice"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "$mvn package -Dui"
msgstr "$mvn paquete -Dui"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "`-Dui` builds the web application just like `-Dui.dev`, but it does more optimisations for production. Those optimisations take some time."
msgstr "`-Dui` construye la aplicación web igual que `-Dui.dev`, pero hace más optimizaciones para la producción. Esas optimizaciones llevan algún tiempo."

#. type: Title ===
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy, no-wrap
msgid "Packaging for cloud native"
msgstr "Embalaje para la nube nativa"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Finally to build a native image, make sure you have set up GraalVM as outlined https://quarkus.io/guides/building-native-image[here]. Then build the application to generate the native executable."
msgstr "Finalmente, para construir una imagen nativa, asegúrate de haber configurado GraalVM como se indica  link:https://quarkus.io/guides/building-native-image[aquí]. Luego construye la aplicación para generar el ejecutable nativo."

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "$mvn package -Dui -Pnative"
msgstr "$mvn package -Dui -Pnative"

#. type: Plain text
#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid "Running this we see the super-fast startup time Quarkus gives us in native mode:"
msgstr "Ejecutando esto vemos el tiempo de arranque súper rápido que nos da Quarkus en modo nativo:"

#: _posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc
#, fuzzy
msgid ""
"$./target/blog-quarkus-ui-development-0.1.0-runner\n"
"2019-06-06 10:57:02,254 INFO  [io.quarkus] (main) Quarkus 0.15.0 started in 0.005s. Listening on: http://[::]:8080\n"
"2019-06-06 10:57:02,464 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb]"
msgstr "$./target/blog-quarkus-ui-development-0.1.0-runner 2019-06-06 10:57:02,254 INFO [io.quarkus] (main) Quarkus 0.15.0 iniciado en 0.005s. Escuchando en: http://[::]:8080 2019-06-06 10:57:02,464 INFO [io.quarkus] (main) Características instaladas: [cdi, resteasy, resteasy-jsonb]"
