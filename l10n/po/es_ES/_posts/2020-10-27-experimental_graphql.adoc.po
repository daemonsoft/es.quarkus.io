# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Experimental GraphQL"
msgstr "GraphQL experimental"

#. type: YAML Front Matter: synopsis
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Exploring some experimental SmallRye GraphQL features"
msgstr "Exploración de algunas funciones experimentales de SmallRye GraphQL"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "This blog post is a follow up on the initial introductory post, link:/blog/supersonic-subatomic-graphql/[Supersonic Subatomic GraphQL], and here we will explore more features, some that is experimental, that we hope to eventually move to the MicroProfile GraphQL Specification (based on your feedback !)"
msgstr "Esta entrada del blog es una continuación de la entrada introductoria inicial,  link:/blog/supersonic-subatomic-graphql/[Supersonic Subatomic GraphQL], y aquí exploraremos más características, algunas de ellas experimentales, que esperamos trasladar eventualmente a la Especificación MicroProfile GraphQL (¡basada en sus comentarios!)"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "We will look at the following:"
msgstr "Veremos lo siguiente:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Operational Context - Optimize your downstream processes."
msgstr "Contexto operativo - Optimice sus procesos posteriores."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Cache - Caching your endpoints."
msgstr "Cache - Almacenamiento en caché de sus puntos finales."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Asynchronous - Concurrent execution of multiple requests or sources."
msgstr "Asíncrono - Ejecución concurrente de múltiples peticiones o fuentes."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Batch - Solving N+1."
msgstr "Lote - Resolución de N+1."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Generics support."
msgstr "Apoyo a los genéricos."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Events and custom execution."
msgstr "Eventos y ejecución personalizada."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Transformation and mapping."
msgstr "Transformación y mapeo."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Build tools - Maven and Gradle support."
msgstr "Herramientas de compilación: compatibilidad con Maven y Gradle."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "All source code is available here: https://github.com/phillip-kruger/graphql-experimental[github.com/phillip-kruger/graphql-experimental]"
msgstr "Todo el código fuente está disponible aquí:  link:https://github.com/phillip-kruger/graphql-experimental[github.com/phillip-kruger/graphql-experimental]"

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Operational Context"
msgstr "Contexto operativo"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "The Context Object is an experimental Object that can be injected anywhere in your code, downstream from your `@GraphQLApi`."
msgstr "El Objeto Contexto es un Objeto experimental que puede ser inyectado en cualquier parte de su código, a continuación de su `@GraphQLApi`."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "It's in the `api` module in SmallRye GraphQL, with the intention to eventually move this up to the MicroProfile GraphQL Api."
msgstr "Está en el módulo `api` en SmallRye GraphQL, con la intención de trasladar esto eventualmente al MicroProfile GraphQL Api."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Example:"
msgstr "Ejemplo:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "We have a Person GraphQL Endpoint, that uses some service to get the person from where ever it is stored."
msgstr "Tenemos un Endpoint GraphQL de Persona, que utiliza algún servicio para obtener la persona desde donde sea que esté almacenada."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "The endpoint:"
msgstr "El punto final:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "A Person is a basic POJO, that can have multiple relationships, that in turn has a Person. So making a call to the database to get a person, can end up retuning more people, depending on the number of relationships. In our example, we have Person 1 that has a `Spouse`, Person 2."
msgstr "Una Persona es un POJO básico, que puede tener múltiples relaciones, que a su vez tiene una Persona. Así que hacer una llamada a la base de datos para obtener una persona, puede terminar devolviendo más personas, dependiendo del número de relaciones. En nuestro ejemplo, tenemos a la Persona 1 que tiene un `Spouse`, Persona 2."

#: _posts/2020-10-27-experimental_graphql.adoc
msgid ""
"Now let's assume that `PersonService` makes a call to a database or some other storage to get the data. We can now inject the context object to get\n"
"details on the request, and optimise our call:"
msgstr ""

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Let's do a `Query` to get the name and surname of Person 1:"
msgstr "Hagamos un `Query` para obtener el nombre y el apellido de la Persona 1:"

#. type: Title ===
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "So what can you get from context ?"
msgstr "¿Qué se puede obtener del contexto?"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "There are a few things we can get:"
msgstr "Hay algunas cosas que podemos conseguir:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "What we probably want to know is which fields have been requested, so that we can do a better database query."
msgstr "Lo que probablemente queremos saber es qué campos se han solicitado, para poder hacer una mejor consulta a la base de datos."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "So the fieldName (`person`) and the selectedFields (`names`,`surname`) is what we need."
msgstr "Así que el fieldName ( `person`) y los selectedFields ( `names`, `surname`) es lo que necesitamos."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "A more complex GraphQL Request, will then lead to a more complex datasource query, example, if we want to know the relationships we would do:"
msgstr "Una petición GraphQL más compleja, llevará entonces a una consulta más compleja del datasource, por ejemplo, si queremos conocer las relaciones que haríamos:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "That will give us this in the `Context` selectedFields:"
msgstr "Eso nos dará esto en el `Context` selectedFields:"

#. type: Title ===
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Context in source methods"
msgstr "Contexto en los métodos de origen"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Let's add a field to person using `@Source` and see what the context can give us then. First we will add a service that fetches the exchange rate from an api (http://exchangeratesapi.io/[exchangeratesapi.io]). This allows us to add the exchange rate for that person against some currency."
msgstr "Vamos a añadir un campo a persona usando `@Source` y ver lo que el contexto nos puede dar entonces. Primero añadiremos un servicio que obtiene el tipo de cambio de una api link:http://exchangeratesapi.io/[(exchangeratesapi.io]). Esto nos permite añadir el tipo de cambio para esa persona contra alguna moneda."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "In Java we add this `Source` method:"
msgstr "En Java añadimos este método `Source`:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Now we can query that (`ExchangeRate`) field:"
msgstr "Ahora podemos consultar ese campo ( `ExchangeRate`):"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "When we `Inject` and print the context in the `ExchangeRateService` we now get:"
msgstr "Cuando `Inject` e imprimir el contexto en el `ExchangeRateService` ahora obtenemos:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Note that the fieldName is now `exchangeRate` and the selectedFields is `[\"rate\"]`. You will also note that the source field is populated with the person."
msgstr "Observe que el fieldName es ahora `exchangeRate` y el selectedFields es `[\"rate\"]`. También observará que el campo fuente se rellena con la persona."

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Cache"
msgstr "Caché"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Another question that comes up regularly is how can you cache your endpoint results. As an example, let's say the Exchange Rate information can be updated daily, so we do not want to make a call to the http://exchangeratesapi.io/[exchangeratesapi.io] for every call."
msgstr "Otra pregunta que surge con regularidad es cómo puede almacenar en caché los resultados de su punto final. Como ejemplo, digamos que la información del tipo de cambio puede actualizarse diariamente, por lo que no queremos hacer una llamada a  link:http://exchangeratesapi.io/[exchangeratesapi.io] para cada llamada."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "You can just use the caching that comes with Quarkus! Simply include the cache extension:"
msgstr "Puedes utilizar la caché que viene con Quarkus. Simplemente incluya la extensión de la caché:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "And add the `@CacheResult` annotation to your method:"
msgstr "Y añade la anotación `@CacheResult` a tu método:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Read more about caching in Quarkus here: https://quarkus.io/guides/cache[quarkus.io/guides/cache]"
msgstr "Lea más sobre el almacenamiento en caché en Quarkus aquí:  link:https://quarkus.io/guides/cache[quarkus.io/guides/cache]"

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Asynchronous"
msgstr "Asíncrono"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Now, let's add another service that returns the weather conditions for a city:"
msgstr "Ahora, añadamos otro servicio que devuelva las condiciones meteorológicas de una ciudad:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Let's say this person is traveling to London, you can now do something like this:"
msgstr "Digamos que esta persona viaja a Londres, ahora puedes hacer algo así:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "At the moment the person and weather query will execute sequentially, and there is no real reason that this should be the case. We can get the weather at the same time that we get the person."
msgstr "Por el momento, la consulta sobre la persona y el tiempo se ejecutará de forma secuencial, y no hay ninguna razón real para que esto sea así. Podemos obtener el tiempo al mismo tiempo que la persona."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Let's change the java code:"
msgstr "Cambiemos el código java:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "and"
msgstr "y"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Now person and weather are being fetched concurrently."
msgstr "Ahora la persona y el tiempo se buscan simultáneamente."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Let's say this person actually wants to travel to London _and_ New York, we can do something like this:"
msgstr "Digamos que esta persona quiere viajar a Londres _y_ Nueva York, podemos hacer algo así:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "We can now change the code to also fetch the exchange rates concurrently:"
msgstr "Ahora podemos cambiar el código para obtener también los tipos de cambio al mismo tiempo:"

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Batch"
msgstr "Lote"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "If you want to get ALL people, and you are including a field (like `exchangeRate`) with a `Source` method, it means that for every person, we will call the `getExchangeRate` method. Depending on the number of people, that could be a lot of calls. So you might rather want to do a batch source method."
msgstr "Si quiere obtener TODAS las personas, y está incluyendo un campo (como `exchangeRate`) con un método `Source`, significa que para cada persona, llamaremos al método `getExchangeRate`. Dependiendo del número de personas, eso podría ser un montón de llamadas. Así que es mejor hacer un método de origen por lotes."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "This will allow you to get all the people in one method and do one call to get their exchange rates."
msgstr "Esto le permitirá tener a todas las personas en un solo método y hacer una sola llamada para obtener sus tipos de cambio."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "So, let's change the `getExchangeRate` method to take a `List` of person and return a `List` of `ExchangeRate`:"
msgstr "Así pues, cambiemos el método `getExchangeRate` para que tome un `List` de persona y devuelva un `List` de `ExchangeRate`:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Above will still work on `getPerson` method where there is only one person."
msgstr "Lo anterior seguirá funcionando en el método `getPerson` donde sólo hay una persona."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Doing a query on all people:"
msgstr "Haciendo una consulta a todas las personas:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "This will call the `getExchangeRate` method with all people."
msgstr "Esto llamará al método `getExchangeRate` con todas las personas."

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Generics"
msgstr "Genéricos"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "It's the year 2050 and we need to extend our travel service to also cater for aliens. Let's add a generic `Being` type:"
msgstr "Estamos en el año 2050 y tenemos que ampliar nuestro servicio de viajes para atender también a los extranjeros. Añadamos un tipo genérico de `Being`:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "And now change the Endpoint to allow people and alien queries:"
msgstr "Y ahora cambie el punto final para permitir consultas de personas y extranjeros:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "We can then query both human and alien beings:"
msgstr "Así podremos consultar tanto a los seres humanos como a los extraterrestres:"

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Events and custom execution"
msgstr "Eventos y ejecución personalizada"

#: _posts/2020-10-27-experimental_graphql.adoc
msgid ""
"Events are used internally when you enable integration with MicroProfile Metrics, MicroProfile OpenTracing and Bean Validation, but you can also take part in these events.\n"
"These are all CDI Events and can be used with the `@Observes` annotation."
msgstr ""

#. type: Title ===
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "While building the schema"
msgstr "Mientras se construye el esquema"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "When we scan the classpath for annotations and types, we build up a https://github.com/smallrye/smallrye-graphql/tree/main/common/schema-model[model] of all the operations. You can manipulate this model by taking part in the _create operation_ event:"
msgstr "Cuando exploramos el classpath en busca de anotaciones y tipos, construimos un  link:https://github.com/smallrye/smallrye-graphql/tree/main/common/schema-model[modelo] de todas las operaciones. Puedes manipular este modelo participando en el evento de _creación de operaciones_:"

#: _posts/2020-10-27-experimental_graphql.adoc
msgid ""
"Just before the final schema is built, after scanning all annotations and after the above event, you can _take part_ and contribute to the schema:\n"
"This exposes the underlying `graphql-java` implementation details, and can be useful when you want to do things that are not yet implemented in SmallRye GraphQL, like subscriptions for instance:"
msgstr ""

#. type: Title ===
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "While running a request"
msgstr "Mientras se ejecuta una solicitud"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "In this example request:"
msgstr "En este ejemplo de solicitud:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "the request flow is as follows:"
msgstr "el flujo de solicitudes es el siguiente:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "The Execution service gets the request."
msgstr "El servicio de ejecución recibe la solicitud."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "The person is being fetched with a `datafetcher`."
msgstr "La persona está siendo buscada con un `datafetcher`."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Your CDI bean (`@GraphQLApi`) method (`getPerson`) is being invoked."
msgstr "Se está invocando el método de su frijol CDI ( `@GraphQLApi`) ( `getPerson`)."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "The exchange rate is being fetched, passing the above person as an argument."
msgstr "Se busca el tipo de cambio, pasando a la persona anterior como argumento."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Your CDI bean (`@GraphQLApi`) method (`getExchangeRate`) is being invoked."
msgstr "Se está invocando el método de su frijol CDI ( `@GraphQLApi`) ( `getExchangeRate`)."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Data is being returned."
msgstr "Se devuelven los datos."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "You can receive events on all of these points:"
msgstr "Puede recibir eventos en todos estos puntos:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "You can also get events when an error occurs:"
msgstr "También puede obtener eventos cuando se produce un error:"

#. type: Title ===
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Using the Execution Service directly"
msgstr "Utilizar directamente el Servicio de Ejecución"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "The default assumed behavior is to interact with your endpoint via HTTP, you can however inject the `ExecutionService` yourself and execute requests."
msgstr "El comportamiento asumido por defecto es interactuar con su punto final a través de HTTP, sin embargo puede inyectar el `ExecutionService` usted mismo y ejecutar peticiones."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "As an example, lets do a request that gets all the names of all the people on startup:"
msgstr "Como ejemplo, hagamos una petición que obtenga todos los nombres de todas las personas en el inicio:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "We can now do this:"
msgstr "Ahora podemos hacerlo:"

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Transformation and mapping"
msgstr "Transformación y mapeo"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "By default, Date and Number values can be transformed using https://javaee.github.io/jsonb-spec/docs/user-guide.html#date-number-formats[JsonB Formats]"
msgstr "Por defecto, los valores de fecha y número pueden transformarse utilizando  link:https://javaee.github.io/jsonb-spec/docs/user-guide.html#date-number-formats[los formatos JsonB]"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "MicroProfile GraphQL Specification maps the relevant Java types to a GraphQL Scalar. You can change the mapping of an existing field to map to another Scalar type like this:"
msgstr "La Especificación GraphQL de MicroProfile mapea los tipos Java relevantes a un Scalar GraphQL. Puede cambiar el mapeo de un campo existente para mapear a otro tipo Scalar así:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "In the GraphQL Schema this will now map to an `int`."
msgstr "En el esquema GraphQL esto se asignará a un `int`."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "You can also add an Object that should transform to a `Scalar` Type and not a complex object, example you might have an `Email` Object, but do not want to use a complex type in GraphQL, and rather map this to a `String`:"
msgstr "También puede añadir un objeto que debe transformarse en un tipo `Scalar` y no en un objeto complejo, por ejemplo, puede tener un objeto `Email`, pero no quiere utilizar un tipo complejo en GraphQL, y más bien mapearlo a un `String`:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "To do this your `Email` POJO needs to implement the `toString` method and have a constructor that takes a String, or a static `Email fromString(String s)` method, or a `setValue(String value)` method."
msgstr "Para hacer esto su `Email` POJO necesita implementar el método `toString` y tener un constructor que tome un String, o un método estático `Email fromString(String s)`, o un método `setValue(String value)`."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "You can then use this as a field on your Response and add the `@ToScalar` annotation, i.e. person:"
msgstr "A continuación, puede utilizarlo como campo en su respuesta y añadir la anotación `@ToScalar`, es decir, persona:"

#. type: Title ==
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy, no-wrap
msgid "Build tools"
msgstr "Construir herramientas"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Lastly, support has been added to generate the schema on https://github.com/smallrye/smallrye-graphql/tree/main/tools[build] using https://github.com/smallrye/smallrye-graphql/tree/main/tools/maven-plugin[`maven`] (or https://github.com/smallrye/smallrye-graphql/tree/main/tools/gradle-plugin[`gradle`])."
msgstr "Por último, se ha añadido soporte para generar el esquema en la  link:https://github.com/smallrye/smallrye-graphql/tree/main/tools[compilación] utilizando  link:https://github.com/smallrye/smallrye-graphql/tree/main/tools/maven-plugin[`maven`] (o  link:https://github.com/smallrye/smallrye-graphql/tree/main/tools/gradle-plugin[`gradle`])."

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "Example, in `maven` you can add this to your `pom.xml`:"
msgstr "Por ejemplo, en `maven` puedes añadir esto a tu `pom.xml`:"

#. type: Plain text
#: _posts/2020-10-27-experimental_graphql.adoc
#, fuzzy
msgid "and the generated schema will be stored in `target/generated/`."
msgstr "y el esquema generado se almacenará en `target/generated/`."
