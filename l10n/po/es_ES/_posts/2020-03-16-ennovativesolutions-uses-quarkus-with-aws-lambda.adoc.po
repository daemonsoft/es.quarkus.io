# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Ennovative Solutions uses Quarkus with AWS Lambda to deliver a better customer experience with their new product PURQR"
msgstr "Ennovative Solutions utiliza Quarkus con AWS Lambda para ofrecer una mejor experiencia al cliente con su nuevo producto PURQR"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://www.ennovative-solutions.be/[Ennovative Solutions] is an IT Consulting and Services company out of Diepenbeek, Belgium. By working with many customers, including ones in retail, they identified that many of them were suffering low sales due to poor customer experience. As a result, in 2019, they created a new application called https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] (Purchasing via QR codes), which is a new cloud platform that comes with both a backend application and a mobile application to manage retailers’ physical store showrooms. By using the mobile app, one can perform in store analytics, e.g. popular products & categories, best performing salespersons, etc., and deliver a more personalized experience to end customers. The platform also manages appointments and customer data so when they leave the showroom they can receive an overview of what they liked via mail. In addition, PURQR integrates to customers’ quoting systems. For example, one of its goals is to provide customers with a more personalized follow-up quote to turn it into a sale. The solution also keeps customer information for further communication and possible co-sale and up-sale opportunities. Because one scans the products as part of its processes, one can get insights into popular products that the company can then stock up on.  Their cloud platform can improve customer experience and also increase sales."
msgstr "link:https://www.ennovative-solutions.be/[Ennovative Solutions] es una empresa de consultoría y servicios de TI con sede en Diepenbeek (Bélgica). Al trabajar con muchos clientes, incluidos los del sector minorista, identificaron que muchos de ellos estaban sufriendo bajas ventas debido a la mala experiencia del cliente. Como resultado, en 2019, crearon una nueva aplicación llamada  link:https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] (Compras a través de códigos QR), que es una nueva plataforma en la nube que viene con una aplicación de backend y una aplicación móvil para gestionar las salas de exposición de las tiendas físicas de los minoristas. Mediante la aplicación móvil, se pueden realizar análisis en la tienda, por ejemplo, de los productos y categorías más populares, de los vendedores con mejor rendimiento, etc., y ofrecer una experiencia más personalizada a los clientes finales. La plataforma también gestiona las citas y los datos de los clientes para que, cuando salgan de la sala de exposición, puedan recibir un resumen de lo que les ha gustado por correo. Además, PURQR se integra en los sistemas de cotización de los clientes. Por ejemplo, uno de sus objetivos es proporcionar a los clientes un presupuesto de seguimiento más personalizado para convertirlo en una venta. La solución también guarda la información del cliente para una mayor comunicación y posibles oportunidades de reventa. Al escanear los productos como parte de sus procesos, se puede obtener información sobre los productos populares de los que la empresa puede abastecerse. Su plataforma en la nube puede mejorar la experiencia del cliente y también aumentar las ventas."

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Their journey into Quarkus"
msgstr "Su viaje a Quarkus"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "For the development of PURQR, Ennovative Solutions decided to follow a Function-as-a-Service approach by using AWS Lambda as the serverless computing platform. When Dennis Baerten, Software Engineer with Ennovative Solutions, started his journey using AWS Lambda, he described it as _“I ran into the long startup times using regular Java in AWS Lambda”._ They soon realized that using plain Java on this serverless computing platform was not going to deliver the performance and experience that they were after. This is when they started to look at other options."
msgstr "Para el desarrollo de PURQR, Ennovative Solutions decidió seguir un enfoque de función como servicio utilizando AWS Lambda como plataforma informática sin servidor. Cuando Dennis Baerten, ingeniero de software de Ennovative Solutions, comenzó su andadura con AWS Lambda, lo describió así: _\"Me encontré con los largos tiempos de inicio utilizando Java normal en AWS Lambda\"._ Pronto se dieron cuenta de que usar Java normal en esta plataforma de computación sin servidor no iba a ofrecer el rendimiento y la experiencia que buscaban. Fue entonces cuando empezaron a buscar otras opciones."

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "From Micronaut to Quarkus"
msgstr "De Micronauta a Quarkus"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "A colleague of Dennis’ told him to look at Micronaut, which is another framework that supports GraalVM. He tried out Micronaut but encountered difficulties getting it to work with the type of application he was building. Furthermore, there was no Micronaut plugin to build his native image in AWS. _“Quarkus had more features and extensions than Micronaut that could be compiled to native (compatible with GraalVM)”,_ Dennis asserted. When he got started with Quarkus, one of the first things Dennis did was to enroll himself to the Quarkus Zulip channel. Dennis engaged and connected with the Quarkus community and obtained quick replies to his questions and even found some bugs in Quarkus. He was even able to apply the fixes himself via GitHub Pull Requests, which were eventually merged into the Quarkus project. Dennis expressed _“I valued and was very pleased with the support from the Quarkus community, which is very active”._ In addition, the fact that Red Hat was behind Quarkus was also important to Dennis. He was familiar with Hibernate and other open source technologies that are sponsored by Red Hat. He knew Red Hat was a big player in the IT world so knowing this gave Dennis the confidence in the technology. Knowing that Red Hat was a sponsor of Quarkus, reassured him about his decision to use it to implement his application."
msgstr "Un colega de Dennis le dijo que mirara Micronaut, que es otro framework que soporta GraalVM. Probó Micronaut pero tuvo dificultades para que funcionara con el tipo de aplicación que estaba construyendo. Además, no había ningún plugin de Micronaut para construir su imagen nativa en AWS. \" _Quarkus tenía más características y extensiones que Micronaut que se podían compilar en nativo (compatible con GraalVM)\",_ afirmó Dennis. Cuando empezó con Quarkus, una de las primeras cosas que hizo Dennis fue inscribirse en el canal de Quarkus Zulip. Dennis se comprometió y conectó con la comunidad de Quarkus y obtuvo respuestas rápidas a sus preguntas e incluso encontró algunos errores en Quarkus. Incluso fue capaz de aplicar las correcciones él mismo a través de GitHub Pull Requests, que finalmente se fusionaron en el proyecto Quarkus. Dennis expresó que _\"valoré y quedé muy satisfecho con el apoyo de la comunidad de Quarkus, que es muy activa\"._ Además, el hecho de que Red Hat estuviera detrás de Quarkus también era importante para Dennis. Estaba familiarizado con Hibernate y otras tecnologías de código abierto patrocinadas por Red Hat. Sabía que Red Hat era un actor importante en el mundo de las TI, por lo que conocer esto dio a Dennis la confianza en la tecnología. Saber que Red Hat era patrocinador de Quarkus, le tranquilizó en su decisión de utilizarlo para implementar su aplicación."

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions had tried Micronaut during the proof of concept phase. However, after learning about Quarkus and its benefits over Micronaut, they migrated everything to Quarkus. In their opinion, some of these benefits included:"
msgstr "Ennovative Solutions había probado Micronaut durante la fase de prueba de concepto. Sin embargo, después de conocer Quarkus y sus ventajas sobre Micronaut, migraron todo a Quarkus. En su opinión, algunas de estas ventajas son"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Great support via Zulip"
msgstr "Gran apoyo a través de Zulip"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ability to directly contribute to the project"
msgstr "Capacidad para contribuir directamente al proyecto"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Fast innovation"
msgstr "Innovación rápida"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Fast project release cadence that provides quick bug fixes and new features"
msgstr "Rápida cadencia de publicación de proyectos que proporciona rápidas correcciones de errores y nuevas funciones"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus is following closely what happens with GraalVM"
msgstr "Quarkus sigue de cerca lo que ocurre con GraalVM"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus is a hot topic and innovative technology that is talked about a lot at Java conferences"
msgstr "Quarkus es un tema candente y una tecnología innovadora de la que se habla mucho en las conferencias sobre Java"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "PURQR high-level architecture"
msgstr "Arquitectura de alto nivel de PURQR"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "PURQR consists of 7 Quarkus microservices that are currently running in production. They have been in production since October 2019."
msgstr "PURQR se compone de 7 microservicios de Quarkus que actualmente se ejecutan en producción. Están en producción desde octubre de 2019."

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Most of the microservices are HTTP-based and sit behind an Amazon API Gateway and at the backend they are all AWS Lambda functions. These microservices are:"
msgstr "La mayoría de los microservicios están basados en HTTP y se sitúan detrás de un Amazon API Gateway y en el backend son todos funciones de AWS Lambda. Estos microservicios son:"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "External product view - viewing capabilities for products for the end consumer"
msgstr "Vista externa del producto: capacidad de visualización de los productos para el consumidor final"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Product repository - this is where information about products reside"
msgstr "Repositorio de productos - aquí es donde reside la información sobre los productos"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Company settings - interface to set company wide parameters"
msgstr "Configuración de la empresa: interfaz para establecer los parámetros de toda la empresa"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Appointments - customer appointments functionality"
msgstr "Citas - funcionalidad de citas de clientes"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Label generation - capabilities for generating Dymo labels"
msgstr "Generación de etiquetas: capacidades para generar etiquetas Dymo"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Notifications - SQS consumer for asynchronous emails"
msgstr "Notificaciones - Consumidor SQS para correos electrónicos asíncronos"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Summary - aggregates all the data to display on the dashboard for the business owner"
msgstr "Resumen: agrega todos los datos para mostrarlos en el panel de control para el propietario de la empresa"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Here’s a high-level pictorial of the PURQR system that uses Quarkus with AWS Lamdba:"
msgstr "Aquí hay una imagen de alto nivel del sistema PURQR que utiliza Quarkus con AWS Lamdba:"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "As depicted in the logical architecture diagram above, the Quarkus-based microservices all run as AWS Lambda functions. It is worth mentioning that all these microservices run in test and production in Quarkus native mode, which leverages GraalVM native image. For local development and debugging purposes, they run these microservices in Quarkus JVM mode using https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[AWS Serverless Application Model] (SAM) on their local machines."
msgstr "Como se muestra en el diagrama de arquitectura lógica anterior, todos los microservicios basados en Quarkus se ejecutan como funciones de AWS Lambda. Cabe mencionar que todos estos microservicios se ejecutan en pruebas y producción en el modo nativo de Quarkus, que aprovecha la imagen nativa de GraalVM. Para fines de desarrollo y depuración locales, ejecutan estos microservicios en el modo JVM de Quarkus utilizando  link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[AWS Serverless Application Model] (SAM) en sus máquinas locales."

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Lastly, _“moving to Quarkus was easy.  Getting everything to work in native mode took a couple of days. And it took about two months to develop the complete application”,_ added Dennis."
msgstr "Por último, _\"pasar a Quarkus fue fácil. Conseguir que todo funcione en modo nativo nos llevó un par de días. Y el desarrollo de la aplicación completa ha durado unos dos meses\",_ añade Dennis."

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus benefits"
msgstr "Ventajas de Quarkus"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions found Quarkus to be a very valuable and rich Java stack with a wide range of capabilities to implement any type of business application. Among the many benefits that Quarkus provided to them, running Java applications in AWS Lambda functions without the downside of cold starts was one of them. Quarkus fast startup time was key here because they wanted to reduce the cold start timing of AWS Lambda functions to a bare minimum when running in both test and production environments. For example, _“using Spring with AWS Lambda would have been prohibitive because the startup time of Spring in AWS Lambda is too big from my research”,_ Dennis mentioned ( https://keyholesoftware.com/2018/04/26/aws-lambda-with-spring-boot/[1] , https://dzone.com/articles/aws-lambda-with-spring-boot[2] , https://pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-fix/[3] ). Also, from past experience, he had seen that _“using plain Java with AWS Lambda, it was taking 6 to 7 seconds for a cold startup whereas with Quarkus it takes about 200 milliseconds”,_ Dennis added. However, in order to be more thorough in his research, he took one of the simplest functions (no dependency injection, logging) he had and ran it in AWS Lambda in plain Java and Quarkus native mode, the latter being a combination of Quarkus + GraalVM native image. The measurements, as reported by the AWS Lambda platform, are as follows:"
msgstr "Ennovative Solutions descubrió que Quarkus es una pila de Java muy valiosa y rica con una amplia gama de capacidades para implementar cualquier tipo de aplicación empresarial. Entre las muchas ventajas que les proporcionaba Quarkus, la ejecución de aplicaciones Java en funciones de AWS Lambda sin el inconveniente de los arranques en frío era una de ellas. El rápido tiempo de inicio de Quarkus era clave en este caso porque querían reducir el tiempo de inicio en frío de las funciones de AWS Lambda al mínimo cuando se ejecutaban tanto en entornos de prueba como de producción. Por ejemplo, _\"usar Spring con AWS Lambda habría sido prohibitivo porque el tiempo de inicio de Spring en AWS Lambda es demasiado grande según mis investigaciones\",_ mencionó Dennis (  link:https://keyholesoftware.com/2018/04/26/aws-lambda-with-spring-boot/[1],  link:https://dzone.com/articles/aws-lambda-with-spring-boot[2],  link:https://pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-fix/[3] ). Además, según su experiencia pasada, había visto que _\"usando Java plano con AWS Lambda, se tardaba entre 6 y 7 segundos en arrancar en frío, mientras que con Quarkus se tarda unos 200 milisegundos\",_ añadió Dennis. Sin embargo, para ser más exhaustivo en su investigación, tomó una de las funciones más simples (sin inyección de dependencias, registro) que tenía y la ejecutó en AWS Lambda en Java plano y en modo nativo de Quarkus, siendo este último una combinación de Quarkus + imagen nativa de GraalVM. Las mediciones, según informa la plataforma AWS Lambda, son las siguientes:"

#. type: Block title
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus with AWS Lambda - measurements"
msgstr "Quarkus con AWS Lambda - medidas"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Metric name"
msgstr "Nombre de la métrica"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Plain Java"
msgstr "Java simple"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus native mode"
msgstr "Modo nativo de Quarkus"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Cold start time (ms)"
msgstr "Tiempo de arranque en frío (ms)"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "584.13"
msgstr "584.13"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "222.07"
msgstr "222.07"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Execution time (ms)"
msgstr "Tiempo de ejecución (ms)"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "76.12"
msgstr "76.12"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "6.67"
msgstr "6.67"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Memory consumed (MB)"
msgstr "Memoria consumida (MB)"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "102"
msgstr "102"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "72"
msgstr "72"

#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "In the table above, you can see a 62% reduction in cold start from plain Java to Quarkus native and a 91% reduction in execution time from plain Java to Quarkus native mode!  For memory consumption, there was a 29% reduction in going from plain Java to Quarkus native."
msgstr "En la tabla anterior, puede ver una reducción del 62% en el arranque en frío al pasar de Java plano a Quarkus nativo y una reducción del 91% en el tiempo de ejecución al pasar de Java plano al modo nativo de Quarkus. En cuanto al consumo de memoria, hubo una reducción del 29% al pasar de Java plano a Quarkus nativo."

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "By using Quarkus with AWS Lambda, Ennovative Solutions have been able to lower the cloud resource consumption costs, which include the use of AWS Lambda, SQS, DynamoDB, Route53, among others. Presently, PURQR has a handful of customers so their monthly costs are minimal. However, Dennis mentions that as their number of customers grows so will their cloud resource consumption costs.  _“As these costs increase, this is when the benefit of using Quarkus will be experienced due to its more efficient use of cloud resources and fast startup time compared to plain Java and Spring Boot”,_ Dennis stated."
msgstr "Al utilizar Quarkus con AWS Lambda, Ennovative Solutions ha podido reducir los costos de consumo de recursos en la nube, que incluyen el uso de AWS Lambda, SQS, DynamoDB, Route53, entre otros. Actualmente, PURQR tiene un puñado de clientes por lo que sus costos mensuales son mínimos. Sin embargo, Dennis menciona que a medida que su número de clientes crezca también lo harán sus costos de consumo de recursos en la nube. \" _A medida que estos costes aumenten, es cuando se experimentará el beneficio de utilizar Quarkus debido a su uso más eficiente de los recursos de la nube y a su rápido tiempo de inicio en comparación con Java simple y Spring Boot\",_ afirmó Dennis."

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "As a Spring developer, Dennis found Quarkus very easy to learn. He mentioned _“it took me about 3 days to get familiar with the Quarkus stack”._ In fact, he highlighted that the fast learning curve attracted him to Quarkus as well. He was also particularly impressed by the Quarkus documentation, which _\"is very good\",_ he added. Dennis thinks the Quarkus guides are very thorough and provide good detailed information. This is another reason why he selected Quarkus."
msgstr "Como desarrollador de Spring, Dennis encontró Quarkus muy fácil de aprender. Mencionó que _\"tardé unos 3 días en familiarizarme con la pila de Quarkus\"._ De hecho, destacó que la rápida curva de aprendizaje también le atrajo a Quarkus. También le impresionó especialmente la documentación de Quarkus, que _\"es muy buena\",_ añadió. Dennis cree que las guías de Quarkus son muy completas y proporcionan una buena información detallada. Esta es otra razón por la que eligió Quarkus."

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "Lecciones aprendidas"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus can run in JVM mode and native mode. If you are interested in running your application in Quarkus native mode, Dennis recommends to first check if Quarkus offers extensions for your required functional requirements. For example, if you’d like to access an in-memory-data-grid (IMDG) like Kafka, he suggests you first search the Quarkus extensions to see if there’s any extension related to this need. Quarkus extensions can compile to native so it’s better to check if Quarkus offers your required functionality before you start implementing your application with a library for which Quarkus does not provide an extension. If you don’t find a Quarkus extension for the third-party library you want to use, then Dennis recommends to check the Quarkus project issues to see if there’s already a pending request to “quark” the third-party library. Also, you’d want to check with the third-party library authors/project to see if they already have a Quarkus extension or are working on one.  You don’t want to find out that you can’t compile your application to a native executable after you have spent hours developing it! You want to avoid this if your goal is to compile to native. In short, the lesson learned here is _“check first if there are Quarkus extensions available for what you need”_, Dennis suggests."
msgstr "Quarkus puede funcionar en modo JVM y en modo nativo. Si estás interesado en ejecutar tu aplicación en modo nativo de Quarkus, Dennis recomienda que primero compruebes si Quarkus ofrece extensiones para tus requisitos funcionales requeridos. Por ejemplo, si quieres acceder a una red de datos en memoria (IMDG) como Kafka, sugiere que primero busques en las extensiones de Quarkus para ver si hay alguna extensión relacionada con esta necesidad. Las extensiones de Quarkus pueden compilar a nativo, por lo que es mejor comprobar si Quarkus ofrece su funcionalidad requerida antes de empezar a implementar su aplicación con una biblioteca para la que Quarkus no proporciona una extensión. Si no encuentras una extensión de Quarkus para la biblioteca de terceros que quieres usar, entonces Dennis recomienda revisar los temas del proyecto Quarkus para ver si ya hay una solicitud pendiente para \"quark\" la biblioteca de terceros. Además, es aconsejable comprobar con los autores/proyectos de la biblioteca de terceros si ya tienen una extensión de Quarkus o están trabajando en ella. No querrás descubrir que no puedes compilar tu aplicación a un ejecutable nativo después de haber pasado horas desarrollándola. Quieres evitar esto si tu objetivo es compilar a nativo. En resumen, la lección aprendida aquí es _\"comprueba primero si hay extensiones de Quarkus disponibles para lo que necesitas\",_ sugiere Dennis."

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "They were not able to use live coding with Quarkus because this capability does not currently support AWS Serverless Application Model (SAM) for the AWS Lambda functions running on their local machines."
msgstr "No pudieron utilizar la codificación en vivo con Quarkus porque esta capacidad no admite actualmente el modelo de aplicación sin servidor de AWS (SAM) para las funciones de AWS Lambda que se ejecutan en sus máquinas locales."

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Lastly, although learning Quarkus was fast, learning the internals of Quarkus native mode was more challenging and took longer to understand."
msgstr "Por último, aunque el aprendizaje de Quarkus fue rápido, el aprendizaje de los aspectos internos del modo nativo de Quarkus fue más difícil y llevó más tiempo entenderlo."

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "The future"
msgstr "El futuro"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions plans to continue using Quarkus for future development of PURQR as well as other solutions. They are extremely impressed by this new technology and the involvement and active participation of its community. About the Quarkus project, Dennis’s parting thoughts are _“Great job! Keep up the good work and continue accepting work from the community.”_"
msgstr "Ennovative Solutions tiene previsto seguir utilizando Quarkus para el desarrollo futuro de PURQR, así como de otras soluciones. Están muy impresionados por esta nueva tecnología y por la implicación y participación activa de su comunidad. Sobre el proyecto Quarkus, Dennis se despide con las siguientes palabras _: \"¡Gran trabajo! Seguid con el buen trabajo y seguid aceptando trabajos de la comunidad\"._"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Para más información sobre Quarkus:"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Página web de Quarkus:  http://quarkus.io"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Proyecto GitHub de Quarkus:  https://github.com/quarkusio/quarkus"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Twitter de Quarkus:  https://twitter.com/QuarkusIO"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Chat de Quarkus:  https://quarkusio.zulipchat.com/"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Lista de correo de Quarkus:  https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Canal de YouTube de Quarkus]"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Cuatro razones para usar Quarkus]"
