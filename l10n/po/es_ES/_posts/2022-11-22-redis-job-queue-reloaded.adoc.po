# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-22 13:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy, no-wrap
msgid "Redis Job Queue - Reloaded"
msgstr "Cola de trabajos de Redis - Recargada"

#. type: YAML Front Matter: synopsis
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy, no-wrap
msgid "How to implement a more reliable job queue with Redis, including fault tolerance, de-duplication, and poison pill."
msgstr "Cómo implementar una cola de trabajo más fiable con Redis, incluyendo la tolerancia a fallos, la desduplicación y la píldora venenosa."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"In https://quarkus.io/blog/redis-job-queue/[How to implement a job queue with Redis], we explained how to implement a job queue mechanism with Redis and the new Redis API from Quarkus.\n"
"The approach explored in that blog post had a significant flaw: if the execution of a job failed, the request was lost and will never be re-attempted."
msgstr "En link:https://quarkus.io/blog/redis-job-queue/[Cómo implementar una cola de trabajos con Redis] , explicamos cómo implementar un mecanismo de cola de trabajos con Redis y la nueva API Redis de Quarkus. El enfoque explorado en esa entrada de blog tenía un fallo importante: si la ejecución de un trabajo fallaba, la solicitud se perdía y nunca se volvería a intentar."

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "In this post, we explain how to improve the reliability of the job queue to handle failures, enable retry and use a _dead-letter queue_ to avoid poison pills."
msgstr "En este post, explicamos cómo mejorar la fiabilidad de la cola de trabajos para manejar los fallos, habilitar el reintento y utilizar una _cola de letras muertas_ para evitar las píldoras de veneno."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "Recap & Problem"
msgstr "Recapitulación y problema"

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "In the https://quarkus.io/blog/redis-job-queue/[previous blog post], we implemented the following system."
msgstr "En la  link:https://quarkus.io/blog/redis-job-queue/[anterior entrada del blog], implementamos el siguiente sistema."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"An application receives _fight requests_ and writes these requests into a Redis list.\n"
"Several simulators processed this list.\n"
"The outcomes of the _fights_ were communicated using Redis Pub/Sub."
msgstr "Una aplicación recibe _solicitudes de lucha_ y escribe estas solicitudes en una lista Redis. Varios simuladores procesaron esta lista. Los resultados de los _combates_ se comunicaron utilizando Redis Pub/Sub."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"The architecture works and ensures that a fight can only be executed once, thanks to the `brpop` command used by the simulator code.\n"
"This command pops the item from the queue in an atomic manner and ensure that the other simulators can't process it too."
msgstr "La arquitectura funciona y garantiza que un combate sólo pueda ejecutarse una vez, gracias al comando `brpop` utilizado por el código del simulador. Este comando saca el elemento de la cola de forma atómica y garantiza que los demás simuladores no puedan procesarlo también."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"However, this architecture has a drawback.\n"
"If the processing of the popped fight request fails, the request is lost.\n"
"No other simulator would be able to process it, and if the simulator that failed restarts, it will not reprocess the same request."
msgstr "Sin embargo, esta arquitectura tiene un inconveniente. Si falla el procesamiento de la solicitud de lucha saltada, la solicitud se pierde. Ningún otro simulador podría procesarla, y si el simulador que falló se reinicia, no volverá a procesar la misma solicitud."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "Introducing more queues"
msgstr "Introducir más colas"

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"An approach to handle that problem is to introduce more queues.\n"
"In addition to the main queue (the Redis list from the image above), we introduce one queue per simulator.\n"
"Thus, each simulator has its private queue."
msgstr "Un enfoque para manejar ese problema es introducir más colas. Además de la cola principal (la lista Redis de la imagen anterior), introducimos una cola por simulador. Así, cada simulador tiene su cola privada."

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "These private queues form a safety net."
msgstr "Estas colas privadas forman una red de seguridad."

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "So, the simulator does use not only the _main queue_ but also its private queue:"
msgstr "Por lo tanto, el simulador no sólo utiliza la _cola principal_, sino también su cola privada:"

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"When a simulator pops a request from the main queue, it does not process it immediately; it writes it to its private queue.\n"
"To achieve this, we cannot use `brpop` and then write to the other queue, as if something wrong happens in between, we would have the same problem.\n"
"Instead, we use `blmove,` which pops an element from a list and pushes it into another in an atomic fashion.\n"
"Thus, we ensure that multiple simulators cannot consume the same request and that the request cannot be lost."
msgstr "Cuando un simulador saca una solicitud de la cola principal, no la procesa inmediatamente, sino que la escribe en su cola privada. Para conseguirlo, no podemos utilizar `brpop` y luego escribir en la otra cola, ya que si algo malo ocurre entre medias, tendríamos el mismo problema. En su lugar, utilizamos `blmove,` , que extrae un elemento de una lista y lo introduce en otra de forma atómica. Así, nos aseguramos de que varios simuladores no puedan consumir la misma solicitud y de que ésta no pueda perderse."

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "So, we use the following code to move the request from the main queue to the private queue:"
msgstr "Por lo tanto, utilizamos el siguiente código para mover la solicitud de la cola principal a la cola privada:"

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "Now, the simulator does not simulate the requests from the main queue but needs to process the ones added to its private queue."
msgstr "Ahora, el simulador no simula las peticiones de la cola principal, sino que necesita procesar las que se añaden a su cola privada."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"This code is slightly different from the code from the previous blog.\n"
"This time, we do not pop.\n"
"We get the last item from the queue (index `-1` is the last one), process it, and then remove it from the queue.\n"
"We do this until the queue is empty."
msgstr "Este código es ligeramente diferente del código del blog anterior. Esta vez, no hacemos pop. Obtenemos el último elemento de la cola (el índice `-1` es el último), lo procesamos y lo eliminamos de la cola. Hacemos esto hasta que la cola esté vacía."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"Let's put everything together:\n"
"1. when the simulator starts, it should process the items from its private queue. So, if it crashes, it will retry to process the item.\n"
"2. once the private queue is empty, it gets new requests from the main queue. It will not process them directly but re-trigger the processing of the private queue until the queue is empty."
msgstr "Pongamos todo en orden: 1. cuando el simulador se inicia, debe procesar los elementos de su cola privada. Así, si se bloquea, volverá a intentar procesar el elemento. 2. una vez que la cola privada esté vacía, recibirá nuevas peticiones de la cola principal. No las procesará directamente, sino que volverá a iniciar el procesamiento de la cola privada hasta que la cola esté vacía."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "New architecture, new problems"
msgstr "Nueva arquitectura, nuevos problemas"

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"That approach fixes the initial problem.\n"
"If the processing fails, we retry it (as the request is not removed from the private queue).\n"
"That will handle transient failures pretty well."
msgstr "Ese enfoque soluciona el problema inicial. Si el procesamiento falla, lo reintentamos (ya que la solicitud no se elimina de la cola privada). Eso manejará bastante bien los fallos transitorios."

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "However, it also has its own set of drawbacks:"
msgstr "Sin embargo, también tiene sus propios inconvenientes:"

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "_Duplicates_: if the processing succeeds, but the `lrem` fails for any reason (like a network failure), the request will be processed another time as it was not removed from the queue."
msgstr "_Duplicados_: si el procesamiento tiene éxito, pero el `lrem` falla por cualquier razón (como un fallo de la red), la solicitud se procesará otra vez, ya que no se eliminó de la cola."

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "_Poison pill_: if a request cannot be processed successfully, it will retry to process it forever."
msgstr "_Píldora venenosa_: si una solicitud no puede ser procesada con éxito, volverá a intentar procesarla para siempre."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "De-duplication"
msgstr "Desduplicación"

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"Handling _duplicates_ require having a way to identify the requests uniquely and deduplicate manually.\n"
"In other words, if all our requests have a unique id, we can check if that id has already been processed (for example, by storing the processed ids in another list or a hash). If the item has already been processed, ignore it (remove it from the queue) and process it to the next one:"
msgstr "La gestión de _duplicados_ requiere tener una forma de identificar las solicitudes de forma única y deduplicarlas manualmente. En otras palabras, si todas nuestras solicitudes tienen un id único, podemos comprobar si ese id ya ha sido procesado (por ejemplo, almacenando los id procesados en otra lista o en un hash). Si el elemento ya ha sido procesado, lo ignoramos (lo eliminamos de la cola) y procesamos al siguiente:"

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "Avoiding swallowing the poison pill"
msgstr "Evitar tragarse la píldora del veneno"

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"Handling _poison pills_ is more complex.\n"
"A _poison pill_ is a request that will always make the processing fails.\n"
"It can be because of a bug in the processing code or something unexpected; it will always fail.\n"
"Retrying, in this case, will not help; we are not facing a transient issue."
msgstr "La gestión de las píldoras _venenosas_ es más compleja. Una píldora _venenosa_ es una solicitud que siempre hará que falle el procesamiento. Puede deberse a un error en el código de procesamiento o a algo inesperado; siempre fallará. Reintentar, en este caso, no ayudará; no estamos ante un problema transitorio."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"So, what can we do?\n"
"We need to track the number of processing attempts for that request, and if it exceeds a specific number, let's face it: we won't be able to handle the request.\n"
"We generally want to send the request to a dead-letter queue (DLQ), i.e., a specific queue storing the unprocessable items:"
msgstr "Entonces, ¿qué podemos hacer? Tenemos que hacer un seguimiento del número de intentos de procesamiento de esa solicitud, y si supera un número determinado, seamos realistas: no podremos atender la solicitud. Por lo general, queremos enviar la solicitud a una cola de letra muerta (DLQ), es decir, una cola específica que almacena los elementos no procesables:"

#. type: Plain text
#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "The counter is a specific Redis integer value that we increment and reset once we succeed or give up."
msgstr "El contador es un valor entero específico de Redis que incrementamos y ponemos a cero una vez que tenemos éxito o nos rendimos."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"The items from the DLQ are not lost; they are saved for future processing.\n"
"These items could be re-added to the main queue (to verify if it was not a transient issue or the bug was fixed).\n"
"Another approach requires that a human administrator looks at these requests before re-injecting them into the system; maybe it was just a formatting issue..."
msgstr "Los ítems de la DLQ no se pierden; se guardan para un procesamiento futuro. Estos elementos podrían volver a añadirse a la cola principal (para verificar si no se trataba de un problema transitorio o si el fallo se ha solucionado). Otro enfoque requiere que un administrador humano examine estas solicitudes antes de volver a inyectarlas en el sistema; tal vez sólo se trataba de un problema de formato..."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid "Summary"
msgstr "Resumen"

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"This post explores how to improve the job queue we implemented in https://quarkus.io/blog/redis-job-queue/[How to implement a job queue with Redis].\n"
"This initial implementation, while simple, would lose requests if the processing fails.\n"
"This post proposes another, more complex, architecture to handle that case but also handle duplicates and poison pills.\n"
"But, nothing comes for free, and the resulting code is slightly more complex."
msgstr "Este post explora cómo mejorar la cola link:https://quarkus.io/blog/redis-job-queue/[de] trabajos que implementamos en link:https://quarkus.io/blog/redis-job-queue/[Cómo implementar una cola de trabajos con Redis] . Esta implementación inicial, aunque sencilla, perdería peticiones si falla el procesamiento. Este post propone otra arquitectura, más compleja, para manejar ese caso pero también manejar duplicados y píldoras venenosas. Pero, nada sale gratis, y el código resultante es ligeramente más complejo."

#: _posts/2022-11-22-redis-job-queue-reloaded.adoc
#, fuzzy
msgid ""
"Remember: Redis is a fantastic toolbox.\n"
"But, it's a toolbox; you build what you need with it, as it is rarely available out of the box.\n"
"That being said, the richness of the Redis commands lets you do many things... (spoiler: we will see some of these things in future posts)."
msgstr "Recuerde: Redis es una fantástica caja de herramientas. Pero, es una caja de herramientas; usted construye lo que necesita con ella, ya que rara vez está disponible fuera de la caja. Dicho esto, la riqueza de los comandos de Redis le permite hacer muchas cosas... (spoiler: veremos algunas de estas cosas en futuros posts)."
