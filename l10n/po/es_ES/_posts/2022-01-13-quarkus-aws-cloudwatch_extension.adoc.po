# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ==
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy, no-wrap
msgid "Creating a Quarkus extension for AWS CloudWatch"
msgstr "Creación de una extensión de Quarkus para AWS CloudWatch"

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "We recently had the situation that we wanted to log our Quarkus application logs to AWS CloudWatch. Basically it takes some time but is not a big deal. Adding a CloudWatch dependency, creating a Log Handler and push the logs to CloudWatch via the provided AWS CloudWatch API. But what if you want to share it with others? Of course you could put it on GitHub as part of your project so others can copy and paste it, but that’s not the most elegant way to share code with others."
msgstr "Recientemente nos hemos encontrado con la situación de querer registrar los logs de nuestra aplicación Quarkus en AWS CloudWatch. Básicamente lleva algo de tiempo pero no es un gran problema. Añadir una dependencia de CloudWatch, crear un Log Handler y empujar los registros a CloudWatch a través de la API proporcionada de AWS CloudWatch. ¿Pero qué pasa si quieres compartirlo con otros? Por supuesto, podrías ponerlo en GitHub como parte de tu proyecto para que otros puedan copiarlo y pegarlo, pero esa no es la forma más elegante de compartir el código con otros."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"That’s why we implemented a Quarkus extension so others can use it more easily and don’t need to reinvent the wheel or need to copy paste things around.\n"
"How do I do that? Here the Quarkiverse Hub comes in. Quarkiverse is a GitHub organization where developers can host and share their extension with others. There are several benefits you get for free when hosting the extension in Quarkiverse instead of using the good old way of doing all the things on your own. By using Quarkiverse you don’t need to build the artifact, release it with the Sonatype Nexus Manager (or something similar) and distribute it on Maven Central and other repositories.\n"
"Quarkiverse comes with all these things so you can focus on implementing the extension itself. The following post describes what needs to be done to initialize, implement and share a CloudWatch Quarkus extension."
msgstr "Por eso hemos implementado una extensión de Quarkus para que los demás puedan utilizarlo más fácilmente y no tengan que reinventar la rueda ni copiar y pegar cosas por ahí. ¿Cómo hacerlo? Aquí entra en juego Quarkiverse Hub. Quarkiverse es una organización de GitHub donde los desarrolladores pueden alojar y compartir su extensión con otros. Hay varios beneficios que se obtienen de forma gratuita al alojar la extensión en Quarkiverse en lugar de utilizar la buena vieja manera de hacer todas las cosas por su cuenta. Al usar Quarkiverse no necesita construir el artefacto, liberarlo con el Sonatype Nexus Manager (o algo similar) y distribuirlo en Maven Central y otros repositorios. Quarkiverse viene con todas estas cosas para que pueda centrarse en implementar la extensión en sí. El siguiente post describe lo que hay que hacer para inicializar, implementar y compartir una extensión Quarkus de CloudWatch."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"If you want to use Quarkiverse to publish your extension on the Hub (which is what we recommend) and make use of all the advantages you get by using it, you simply need to open a new extension proposal issue in the quarkusio/quarkus GitHub organization. By doing this, most of the requirements are fulfilled already as there will be a template generated for you and you just have to implement your extension code. In case you are using an existing project as template, there are some requirements you need to take care of.\n"
"In order to automate extension releases and publication of docs, there are some rules that need to be followed for projects under the Quarkiverse organization:"
msgstr "Si desea utilizar Quarkiverse para publicar su extensión en el Hub (que es lo que recomendamos) y aprovechar todas las ventajas que se obtienen con su uso, sólo tiene que abrir una nueva edición de propuesta de extensión en la organización quarkusio/quarkus GitHub. Al hacer esto, la mayoría de los requisitos ya están cumplidos, ya que habrá una plantilla generada para usted y sólo tendrá que implementar el código de su extensión. En caso de que esté utilizando un proyecto existente como plantilla, hay algunos requisitos que debe tener en cuenta. Con el fin de automatizar los lanzamientos de extensiones y la publicación de documentos, hay algunas reglas que deben seguirse para los proyectos bajo la organización de Quarkiverse:"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "The extension repository should be named quarkus-<project>"
msgstr "El repositorio de extensiones debe llamarse quarkus-<proyecto>."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "A Quarkiverse extension *MUST* belong to the io.quarkiverse.<project> groupId"
msgstr "Una extensión de Quarkiverse *DEBE* pertenecer al grupo io.quarkiverse.<project> groupId"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "The root pom.xml *MUST* inherit from io.quarkiverse:quarkiverse-parent"
msgstr "El pom.xml raíz *DEBE* heredar de io.quarkiverse:quarkiverse-parent"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "A Quarkiverse extension contains the following folders and files:"
msgstr "Una extensión de Quarkiverse contiene las siguientes carpetas y archivos:"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "deployment"
msgstr "despliegue"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "runtime"
msgstr "tiempo de ejecución"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "integration-test"
msgstr "prueba de integración"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "docs"
msgstr "docs"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "pom.xml"
msgstr "pom.xml"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "LICENSE"
msgstr "LICENCIA"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "README"
msgstr "LÉAME"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"This article covers the runtime and deployment content only as the other things are optional, generated by the project template already or even important, but not the most important and pragmatic thing when you want to learn how a Quarkus extension can be created.\n"
"Let’s start with the deployment section. It contains classes needed for the initialization of the Quarkus extension. Without this initialization class, your extension won’t be identified when starting your Quarkus application."
msgstr "Este artículo sólo cubre el contenido de ejecución y despliegue, ya que el resto de cosas son opcionales, generadas ya por la plantilla del proyecto o incluso importantes, pero no lo más importante y pragmático cuando se quiere aprender cómo se puede crear una extensión de Quarkus. Empecemos por la sección de despliegue. Contiene las clases necesarias para la inicialización de la extensión de Quarkus. Sin esta clase de inicialización, su extensión no será identificada al iniciar su aplicación Quarkus."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"In the snippet above you can see a _feature()_ method which is annotated with _@BuildStep_ and returns a new FeatureBuildItem. It exposes the name of the feature (logging-cloudwatch) displayed in the log during application bootstrap.\n"
"The second method _addCloudWatchHandler()_ initializes the extensions runtime configurations provided by the LoggingCloudWatchConfig and LoggingCloudWatchHandlerValueFactory class. Luckily there is a LogHandlerBuildItem provided, so we can overwrite the existing log handler by adding our own implementation. There are lots of other BuildItems provided so it’s definitely worth it, taking a look at it if you want to create your own extension. The parameter of this method is a config class which will be described in the following snippet."
msgstr "En el fragmento anterior puede ver un método _feature(_ ) que está anotado con _@BuildStep_ y devuelve un nuevo FeatureBuildItem. Expone el nombre de la característica (logging-cloudwatch) que aparece en el registro durante el arranque de la aplicación. El segundo método _addCloudWatchHandler()_ inicializa las configuraciones en tiempo de ejecución de las extensiones proporcionadas por la clase LoggingCloudWatchConfig y LoggingCloudWatchHandlerValueFactory. Afortunadamente hay un LogHandlerBuildItem proporcionado, por lo que podemos sobrescribir el controlador de registro existente añadiendo nuestra propia implementación. Hay un montón de otros BuildItems proporcionados por lo que definitivamente vale la pena, echarle un vistazo si desea crear su propia extensión. El parámetro de este método es una clase config que será descrita en el siguiente snippet."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"The _LoggingCloudWatchConfig_ is building the bridge between the extension itself and the Quarkus application which uses the extension. It’s combining the _application.properties entries_ in the Quarkus application with our extension. That means with this class you can define the properties available in the _application.properties_ file and make the extension configurable from the outside.\n"
"The _@ConfigRoot_ defines the prefix of the property in the _application.properties_ and the _@ConfigItems_ is the postfix. One application.properties entry we are accepting with this class is log.cloudwatch.enabled for example."
msgstr "El _LoggingCloudWatchConfig_ está construyendo el puente entre la propia extensión y la aplicación Quarkus que utiliza la extensión. Está combinando las _entradas application_ .properties de la aplicación Quarkus con nuestra extensión. Esto significa que con esta clase puede definir las propiedades disponibles en el archivo application. _properties_ y hacer que la extensión sea configurable desde el exterior. El _@ConfigRoot_ define el prefijo de la propiedad en el application. _properties_ y el _@ConfigItems_ es el postfijo. Una entrada application.properties que aceptamos con esta clase es log.cloudwatch.enabled, por ejemplo."

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "Besides the _LoggingCloudWatchConfig_ there is another parameter of the _addCloudwatchLogHandler()_ method. It’s the corresponding factory class."
msgstr "Además del _LoggingCloudWatchConfig_ hay otro parámetro del método _addCloudwatchLogHandler()_. Es la clase de fábrica correspondiente."

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "The LoggingCloudWatchHandlerValueFactory is the glue between the actually business logic of the extension: dealing with application logs and putting these logs to AWS and the configurations of the _application.properties_ file mentioned before. As you can see in the _create()_ method, configuration entries are checked and used for initializing the CloudWatch connection."
msgstr "El LoggingCloudWatchHandlerValueFactory es el pegamento entre la lógica de negocio real de la extensión: tratar con los registros de la aplicación y poner estos registros en AWS y las configuraciones del archivo _application.properties_ mencionado anteriormente. Como puedes ver en el método _create()_, las entradas de configuración se comprueban y se utilizan para inicializar la conexión de CloudWatch."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"Now that we have made the extension configurable for the extension users by adding _application.properties_ entries, exposing the extension name and providing the configurations to the handler class which creates the AWS CloudWatch objects needed to put log messages in AWS CloudWatch, we only need to add one missing piece.\n"
"The Log Handler itself. In the snippet above, in the _LoggingCloudWatchHandlerValueFactory_ we created it already and returned it as a RuntimeValue which we are using in the _LoggingCloudwatchProcessor_ class. That’s the call chain needed to overwrite the existing default log handler."
msgstr "Ahora que hemos hecho que la extensión sea configurable para los usuarios de la extensión añadiendo entradas _application._ properties, exponiendo el nombre de la extensión y proporcionando las configuraciones a la clase handler que crea los objetos AWS CloudWatch necesarios para poner los mensajes de log en AWS CloudWatch, solo nos falta añadir una pieza. El propio Log Handler. En el fragmento anterior, en el _LoggingCloudWatchHandlerValueFactory_ ya lo creamos y lo devolvimos como un RuntimeValue que estamos utilizando en la clase _LoggingCloudwatchProcessor_ . Esa es la cadena de llamadas necesaria para sobrescribir el manejador de registro por defecto existente."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"This log handler is a java.util.LogHandler which takes the LogRecord object as a parameter of the publish method which will be called when writing a log in an application. For example like log.info(“I Love Open Source!”);. If configured correctly, this log handler will be called when writing logs. As we want to put the log messages in AWS CloudWatch, we need to add the logic for doing it.\n"
"Therefore we create an InputLogEvent and call _putLogEvents()_ which puts the log message to CloudWatch. That’s basically it."
msgstr "Este manejador de registro es un java.util.LogHandler que toma el objeto LogRecord como parámetro del método publish que será llamado cuando se escriba un registro en una aplicación. Por ejemplo como log.info(\"¡Me encanta el código abierto!\");. Si se configura correctamente, este manejador de registro será llamado cuando se escriban los registros. Como queremos poner los mensajes de registro en AWS CloudWatch, necesitamos añadir la lógica para hacerlo. Por lo tanto creamos un InputLogEvent y llamamos a _putLogEvents()_ que pone el mensaje de registro en CloudWatch. Eso es básicamente todo."

#. type: delimited block =
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "The snippets in this article are a bit shortened, but basically that’s what the extension contains."
msgstr "Los fragmentos de este artículo están un poco acortados, pero básicamente es lo que contiene la extensión."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"Let’s sum it up:\n"
"There is a processor class which initializes the extension, a configuration class which is needed to make the extension configurable, a value factory class which takes these configurations and creates a AWS CloudWatch connection  as well as a custom _LogHandler_ class which pushes each log message to CloudWatch."
msgstr "Resumámoslo: Hay una clase de procesador que inicializa la extensión, una clase de configuración que se necesita para hacer la extensión configurable, una clase de fábrica de valores que toma estas configuraciones y crea una conexión AWS CloudWatch, así como una clase _LogHandler_ personalizada que empuja cada mensaje de registro a CloudWatch."

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "After doing all these things, the only thing missing is releasing a version of the extension. This can be done by opening a Pull Request which updates the current-version and _next-version_ entry of the _project.yml_ file in the _.github_ folder. After merging this Pull Request, some GitHub Actions will be triggered which will bring your new version to Maven Central and finally others can use your extension as well :-)"
msgstr "Después de hacer todas estas cosas, lo único que falta es liberar una versión de la extensión. Esto puede hacerse abriendo un Pull Request que actualice la entrada current-version y _next-version_ del archivo _project.yml_ en la carpeta _.github_. Después de fusionar este Pull Request, se activarán algunas acciones de GitHub que llevarán tu nueva versión a Maven Central y finalmente otros podrán usar tu extensión también :-)"

#. type: Title ==
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumen"

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"As you can see, creating, implementing and sharing Quarkus extensions with others is actually very easy. So if you have\n"
"an idea of an extension which could be useful for the community, feel free to pitch your idea by creating a new extension proposal issue on the quarkusio/quarkus GitHub Issues section :-)"
msgstr "Como puede ver, crear, implementar y compartir extensiones de Quarkus con otros es realmente muy fácil. Así que si tiene una idea de una extensión que podría ser útil para la comunidad, no dude en lanzar su idea creando una nueva edición de propuesta de extensión en la sección de ediciones de GitHub de quarkusio/quarkus :-)"

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "In case you have questions, suggestions or something else, please feel free to contact me on https://twitter.com/bennetelli[Twitter]."
msgstr "Si tiene preguntas, sugerencias o algo más, no dude en ponerse en contacto conmigo en  link:https://twitter.com/bennetelli[Twitter]."

#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid ""
"Best regards,\n"
"Bennet"
msgstr "Saludos cordiales, Bennet"

#. type: Title ==
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy, no-wrap
msgid "Links"
msgstr "Enlaces"

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "https://quarkus.io/blog/quarkiverse/"
msgstr "https://quarkus.io/blog/quarkiverse/"

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "https://github.com/quarkiverse"
msgstr "https://github.com/quarkiverse"

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "https://github.com/quarkiverse/quarkus-logging-cloudwatch"
msgstr "https://github.com/quarkiverse/quarkus-logging-cloudwatch"

#. type: Plain text
#: _posts/2022-01-13-quarkus-aws-cloudwatch_extension.adoc
#, fuzzy
msgid "https://quarkus.io/guides/writing-extensions#create-new-extension-modules-using-maven"
msgstr "https://quarkus.io/guides/writing-extensions#create-new-extension-modules-using-maven"
