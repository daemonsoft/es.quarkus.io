msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Revolutionising Telecom Microservice - Modernising JDiameter with Quarkus"
msgstr "Revolucionar el microservicio de telecomunicaciones - Modernizar JDiameter con Quarkus"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "My journey of with JDiameter and Quarkus"
msgstr "Mi viaje de con JDiameter y Quarkus"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
msgid "Introduction"
msgstr "Introducción"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "The Diameter protocol serves as a cornerstone in any modern telecommunication backend, providing authentication, authorisation, and accounting (AAA) services in 3G, IMS, 4G, and 5G networks. Several vendors offer commercially licensed Diameter stacks, most of which are written in C++. As a result, many in the Java world have turned to the open-source RestComm JDiameter stack."
msgstr "El protocolo Diameter es la piedra angular de cualquier backend de telecomunicaciones moderno, ya que proporciona servicios de autenticación, autorización y contabilidad (AAA) en redes 3G, IMS, 4G y 5G. Varios proveedores ofrecen pilas Diameter con licencia comercial, la mayoría escritas en C++. Como resultado, muchos en el mundo Java han recurrido a la pila RestComm JDiameter de código abierto."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Developed in the early 2010s, JDiameter has not received any updates in the last seven years. A major challenge with JDiameter is its reliance on outdated dependencies—some with known Common Vulnerabilities and Exposures (CVEs)—and others that are deprecated or no longer supported. Additionally, JDiameter was written in Java 1.7, which restricts the use of modern advancements in the Java language, such as virtual threading."
msgstr "Desarrollado a principios de la década de 2010, JDiameter no ha recibido ninguna actualización en los últimos siete años. Uno de los principales problemas de JDiameter es su dependencia de dependencias obsoletas -algunas con vulnerabilidades y exposiciones comunes (CVE) conocidas- y otras que están obsoletas o ya no reciben soporte. Además, JDiameter se escribió en Java 1.7, lo que restringe el uso de los avances modernos del lenguaje Java, como el roscado virtual."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "With the shift towards microservices in telecommunications, many organisations now develop solutions that are deployed and managed using platforms like Kubernetes and OpenShift. In the Java ecosystem, developers have several microservices frameworks to choose from, with the major ones being Spring Boot, Micronaut, and my preferred choice, Quarkus."
msgstr "Con el cambio hacia los microservicios en las telecomunicaciones, muchas organizaciones desarrollan ahora soluciones que se despliegan y gestionan utilizando plataformas como Kubernetes y OpenShift. En el ecosistema Java, los desarrolladores tienen varios marcos de microservicios entre los que elegir, siendo los principales Spring Boot, Micronaut y mi opción preferida, Quarkus."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Over the past seven years, I have primarily developed solutions for charging and billing subscribers in prepaid mobile networks, including writing both a Diameter Routing Agent (DRA) and an Online Charging System (OCS). In both instances, I used Quarkus as the microservices framework and JDiameter as the Diameter stack—with much frustration, I must add."
msgstr "En los últimos siete años, he desarrollado principalmente soluciones para cobrar y facturar a los abonados en redes móviles de prepago, incluyendo la escritura tanto de un agente de enrutamiento Diameter (DRA) como de un sistema de cobro en línea (OCS). En ambos casos, utilicé Quarkus como marco de microservicios y JDiameter como pila Diameter, con mucha frustración, debo añadir."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "The solutions we developed were functional, but they felt more like a Quarkus application with a JDiameter sidecar. The Diameter stack operated independently, without leveraging the benefits offered by the Quarkus framework."
msgstr "Las soluciones que desarrollamos eran funcionales, pero parecían más bien una aplicación Quarkus con un sidecar JDiameter. La pila Diameter funcionaba de forma independiente, sin aprovechar las ventajas que ofrecía el marco Quarkus."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Quarkus JDiameter Extension"
msgstr "Extensión JDiameter de Quarkus"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Eventually, my frustration with the sidecar approach of integrating JDiameter with Quarkus led me to develop a solution that would allow the two to work more harmoniously. This initiative resulted in the creation of the Quarkus JDiameter extension."
msgstr "Finalmente, mi frustración con el enfoque lateral de la integración de JDiameter con Quarkus me llevó a desarrollar una solución que permitiera a ambos trabajar de forma más armoniosa. Esta iniciativa dio lugar a la creación de la extensión JDiameter de Quarkus."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "As mentioned earlier, the RestComm JDiameter stack had been neglected and was in dire need of some attention. My first step was to modernise the JDiameter stack by removing deprecated dependencies and updating the outdated ones to their latest versions."
msgstr "Como ya he mencionado, la pila RestComm JDiameter había sido descuidada y necesitaba urgentemente algo de atención. Mi primer paso fue modernizar la pila JDiameter eliminando las dependencias obsoletas y actualizando las obsoletas a sus últimas versiones."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Two key changes were made to the stack. The first was removing Pico containers—an outdated dependency injection framework from the pre-Java EE era—and the second was replacing the concurrency logic from the old Thread Group model with the more modern Thread Pool model. With the introduction of thread pooling, the Diameter stack can now utilise virtual threading!"
msgstr "Se realizaron dos cambios clave en la pila. El primero fue eliminar los contenedores Pico -un anticuado marco de inyección de dependencias de la era anterior a Java EE- y el segundo fue sustituir la lógica de concurrencia del antiguo modelo de Thread Group por el modelo más moderno de Thread Pool. Con la introducción de la agrupación de hilos, ¡la pila Diameter puede utilizar ahora hilos virtuales!"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "The next challenge was to develop a Quarkus extension to integrate the Diameter stack into the Quarkus framework. I had three main objectives with this extension:"
msgstr "El siguiente reto era desarrollar una extensión de Quarkus para integrar la pila Diameter en el marco de Quarkus. Tenía tres objetivos principales con esta extensión:"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "*Simplified Configuration*: Moving the configuration to the \"application.properties“ file to make the stack easier to configure."
msgstr "*Configuración simplificada* : Traslado de la configuración al archivo \"application.properties\" para facilitar la configuración de la pila."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "*Dependency Injection*: Enabling dependency injection of Diameter stacks and configuration into a scoped service."
msgstr "*Inyección de dependencia* : Habilitación de la inyección de dependencias de pilas Diameter y configuración en un servicio de ámbito."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "*Interceptor Service Framework*: Creating an interceptor service framework for a more straightforward implementation of Diameter applications."
msgstr "*Marco de servicio interceptor* : Creación de un marco de servicio interceptor para una implementación más sencilla de las aplicaciones Diameter."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
msgid "The Quarkus JDiameter stack has been released and is now part of Quarkiverse Hub. You can find it at link:https://github.com/quarkiverse/quarkus-jdiameter[Quarkiverse Hub]. Documentation for the stack is available at link:https://docs.quarkiverse.io/quarkus-jdiameter/dev/index.html[Quarkus JDiameter Documentation]."
msgstr ""

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusión"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "There is still considerable potential for tighter integration of the JDiameter stack into the Quarkus framework. A future project could involve exposing the statistics collected in the stack via the Quarkus MicroProfile Metrics interface."
msgstr "Todavía existe un potencial considerable para una integración más estrecha de la pila JDiameter en el marco Quarkus. Un proyecto futuro podría consistir en exponer las estadísticas recopiladas en la pila a través de la interfaz Quarkus MicroProfile Metrics."

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "If you’ve been frustrated with integrating JDiameter in a microservice environment, as I was, give the Quarkus JDiameter extension a try!"
msgstr "Si se ha sentido frustrado con la integración de JDiameter en un entorno de microservicios, como me ocurrió a mí, ¡pruebe la extensión JDiameter de Quarkus!"
