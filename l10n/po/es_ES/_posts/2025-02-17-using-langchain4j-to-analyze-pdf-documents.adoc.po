msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Using LangChain4j to analyze PDF documents"
msgstr "Uso de LangChain4j para analizar documentos PDF"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Learn how to extract structured metadata from PDF documents using LangChain4j and AI to automate document analysis."
msgstr "Aprenda a extraer metadatos estructurados de documentos PDF utilizando LangChain4j e IA para automatizar el análisis de documentos."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"In my consulting work, clients frequently present us with challenging problems that require innovative solutions.\n"
"Recently, we were tasked with extracting structured metadata from PDF documents through automated analysis. Below, I'll share a simplified version of this real-world challenge and how we approached it."
msgstr "En mi trabajo de consultoría, los clientes nos plantean con frecuencia problemas desafiantes que requieren soluciones innovadoras. Recientemente, nos encargaron extraer metadatos estructurados de documentos PDF mediante un análisis automatizado. A continuación, compartiré una versión simplificada de este reto del mundo real y cómo lo abordamos."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Use Case"
msgstr "Caso práctico"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Our client receives compressed archives (.zip files) containing up to hundreds of portable document format (PDF) lease documents that need review. Each document contains property lease details that must be validated for accuracy. The review process involves checking various business rules - for example, identifying leases with terms shorter than 2 years. Currently, this document validation is done manually, which is time-consuming. The client wants to automate and streamline this review workflow to improve efficiency."
msgstr "Nuestro cliente recibe archivos comprimidos (.zip) que contienen hasta cientos de documentos de arrendamiento en formato de documento portátil (PDF) que deben ser revisados. Cada documento contiene detalles de arrendamiento de propiedades que deben validarse para comprobar su exactitud. El proceso de revisión implica la comprobación de varias reglas de negocio, por ejemplo, la identificación de arrendamientos con plazos inferiores a 2 años. Actualmente, esta validación de documentos se realiza manualmente, lo que lleva mucho tiempo. El cliente desea automatizar y agilizar este flujo de trabajo de revisión para mejorar la eficacia."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Some complications with these lease documents are:"
msgstr "Algunas complicaciones de estos documentos de arrendamiento son:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents are not in a standard format so each lease may be written in a different way by a different property manager."
msgstr "Los documentos no tienen un formato estándar, por lo que cada contrato de arrendamiento puede ser redactado de forma diferente por un administrador de fincas distinto."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents may be scanned, so the text is sometimes human writing and not typewritten."
msgstr "Los documentos pueden estar escaneados, por lo que a veces el texto es escritura humana y no mecanografiada."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents may contain multiple pages, which are not always in the same order."
msgstr "Los documentos pueden contener varias páginas, que no siempre están en el mismo orden."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The lease terms may not be an actual date but written as \"Expires five years from the start date\" or \"Expires on the anniversary of the start date\"."
msgstr "Los términos del arrendamiento pueden no ser una fecha real sino estar escritos como \"Expira a los cinco años de la fecha de inicio\" o \"Expira en el aniversario de la fecha de inicio\"."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Metadata such as acreage and tax parcel information is needed by our client to validate the lease details."
msgstr "Metadatos como la superficie en acres y la información sobre las parcelas fiscales son necesarios para que nuestro cliente pueda validar los detalles del arrendamiento."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "You can understand why this is time consuming for a human to review and validate the documents."
msgstr "Puede entender por qué esto consume tiempo para que un humano revise y valide los documentos."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Our Solution"
msgstr "Nuestra solución"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "After consulting with https://github.com/dliubarskyi[Dmytro Liubarskyi] and collaborating with the Quarkus team, we implemented a solution using LangChain4j for document metadata extraction. We chose https://ai.google.dev/docs/gemini_api_overview[Google Gemini] as our Large Language Model (LLM) since it excels at PDF analysis through its built-in Optical Character Recognition (OCR) capabilities, enabling accurate text extraction from both digital and scanned documents."
msgstr "Tras consultar con link:https://github.com/dliubarskyi[Dmytro Liubarskyi] y colaborar con el equipo de Quarkus, implementamos una solución utilizando LangChain4j para la extracción de metadatos de documentos. Elegimos link:https://ai.google.dev/docs/gemini_api_overview[Google Gemini] como nuestro Modelo de Lenguaje Grande (LLM) ya que destaca en el análisis de PDF gracias a sus capacidades integradas de Reconocimiento Óptico de Caracteres (OCR), lo que permite una extracción de texto precisa tanto de documentos digitales como escaneados."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Technical Details"
msgstr "Detalles técnicos"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The application is built using:"
msgstr "La aplicación se construye utilizando:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus - A Kubernetes-native Java framework"
msgstr "Quarkus - Un framework Java nativo de Kubernetes"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "LangChain4j - Java bindings for LangChain to interact with LLMs"
msgstr "LangChain4j - Enlaces Java para LangChain para interactuar con LLMs"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Google Gemini AI - For PDF document analysis and information extraction"
msgstr "Google Gemini AI - Para el análisis de documentos PDF y la extracción de información"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus REST - For handling multipart file uploads"
msgstr "Quarkus REST - Para gestionar la carga de archivos multiparte"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "HTML/JavaScript frontend - Simple UI for file upload and results display"
msgstr "Frontend HTML/JavaScript - Interfaz de usuario sencilla para la carga de archivos y la visualización de resultados"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The backend processes the PDF through these steps:"
msgstr "El backend procesa el PDF siguiendo estos pasos:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Accepts PDF upload via multipart form data"
msgstr "Acepta la carga de PDF mediante datos de formulario multiparte"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Converts PDF content to base64 encoding"
msgstr "Convierte el contenido PDF a la codificación base64"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Sends to Gemini AI with a structured JSON schema for response formatting"
msgstr "Envía a Gemini AI con un esquema JSON estructurado para el formateo de la respuesta"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Returns parsed lease information in a standardized format"
msgstr "Devuelve la información de arrendamiento analizada en un formato estandarizado"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Displays results in a tabular format on the web interface"
msgstr "Muestra los resultados en formato tabular en la interfaz web"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The main components are:"
msgstr "Los componentes principales son:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseAnalyzerResource` - REST endpoint for PDF analysis"
msgstr "`LeaseAnalyzerResource` - Punto final REST para el análisis de PDF"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseReport` - Data structure for lease information"
msgstr "`LeaseReport` - Estructura de datos para la información de arrendamiento"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Web interface for file upload and results display"
msgstr "Interfaz web para la carga de archivos y la visualización de resultados"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "How it works"
msgstr "Cómo funciona"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "First we need a Google Gemini API key. You can get one for free, see more details here: https://ai.google.dev/gemini-api/docs/api-key[Gemini API Key Documentation^]."
msgstr "En primer lugar necesitamos una clave API de Google Gemini. Puede obtener una de forma gratuita, consulte más detalles aquí: link:https://ai.google.dev/gemini-api/docs/api-key[Gemini API Key Documentation] ."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Next we need to install the LangChain4j dependencies:"
msgstr "A continuación necesitamos instalar las dependencias de LangChain4j:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Configure Gemini LLM"
msgstr "Configurar Gemini LLM"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Next we need to wire up the Gemini LLM to the application (using your Google AI Gemini API key)."
msgstr "A continuación tenemos que conectar el LLM Gemini a la aplicación (utilizando su clave API Gemini de Google AI)."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Logging the request and response is optional but can be helpful for debugging."
msgstr "El registro de la solicitud y la respuesta es opcional, pero puede ser útil para la depuración."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Register the AI service"
msgstr "Registrar el servicio de IA"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "We must register the AI service to use the `LeaseAnalyzer` interface."
msgstr "Debemos registrar el servicio de IA para utilizar la interfaz `LeaseAnalyzer` ."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Define your data structure"
msgstr "Defina su estructura de datos"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Now we need to model the data structure for the lease information that we want the LLM to extract from any lease document.  You can customize these fields based on the information you need from the PDF documents but in our use case below we are extracting the following information:"
msgstr "Ahora necesitamos modelar la estructura de datos para la información de arrendamiento que queremos que el LLM extraiga de cualquier documento de arrendamiento. Puede personalizar estos campos en función de la información que necesite de los documentos PDF, pero en nuestro caso de uso a continuación vamos a extraer la siguiente información:"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Create the REST endpoint"
msgstr "Crear el punto final REST"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Lastly, we need to create a `LeaseAnalyzerResource` class that will use the LLM to extract the lease information from the PDF document."
msgstr "Por último, tenemos que crear una clase `LeaseAnalyzerResource` que utilizará el LLM para extraer la información de arrendamiento del documento PDF."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "There is a simple HTML/JavaScript frontend that allows you to upload a PDF document and view the results.  In the example below 3 different lease documents were uploaded and analyzed."
msgstr "Existe un sencillo frontend HTML/JavaScript que le permite cargar un documento PDF y ver los resultados. En el ejemplo siguiente se cargaron y analizaron 3 documentos de arrendamiento diferentes."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Lease Analyzer Results"
msgstr "Resultados del analizador de arrendamientos"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "You can find the complete example code on https://github.com/melloware/quarkus-lease-analyzer[GitHub^]."
msgstr "Puede encontrar el código de ejemplo completo en link:https://github.com/melloware/quarkus-lease-analyzer[GitHub] ."

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusión"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "This article demonstrated how LangChain4j and AI can be leveraged to automatically extract structured metadata from PDF documents. By implementing this solution, our client will significantly reduce manual document processing time, potentially saving thousands of work hours annually. The combination of LangChain4j and Google Gemini AI proves to be a powerful approach for automating document analysis workflows."
msgstr "Este artículo demostró cómo se pueden aprovechar LangChain4j y la IA para extraer automáticamente metadatos estructurados de documentos PDF. Al implantar esta solución, nuestro cliente reducirá significativamente el tiempo de procesamiento manual de los documentos, lo que puede suponer un ahorro de miles de horas de trabajo al año. La combinación de LangChain4j y Google Gemini AI demuestra ser un potente enfoque para automatizar los flujos de trabajo de análisis de documentos."
