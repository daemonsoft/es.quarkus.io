# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-02-09 10:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "DataCater uses Quarkus to make Data Streaming more accessible"
msgstr "DataCater utiliza Quarkus para hacer más accesible el flujo de datos"

#. type: YAML Front Matter: synopsis
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "DataCater provides a developer-friendly ETL platform. Learn why it chose Quarkus for its recent rewrite."
msgstr "DataCater proporciona una plataforma ETL fácil de desarrollar. Descubra por qué eligió Quarkus para su reciente reescritura."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"This article gives a brief overview of the data streaming platform DataCater, discusses how we moved from Scala Play! and Kafka Streams to Quarkus, and\n"
"presents why we think that Quarkus is an exceptional framework for developing cloud-native Java applications."
msgstr "Este artículo ofrece una breve visión general de la plataforma de flujo de datos DataCater, analiza cómo pasamos de Scala Play! y Kafka Streams a Quarkus, y presenta por qué pensamos que Quarkus es un marco excepcional para desarrollar aplicaciones Java nativas de la nube."

#. type: Title ==
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "What is DataCater?"
msgstr "¿Qué es DataCater?"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"https://datacater.io[DataCater^] is a real-time, cloud-native data pipeline platform based on Apache Kafka and Kubernetes. It allows users to build streaming data pipelines that stream records between different\n"
"Apache Kafka topics and can apply filters or transforms to the records on the way.\n"
"Given its focus on data scientists and data engineers as target users, DataCater enables users\n"
"to develop transforms in Python. It provides an https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[interactive, UI-based preview of streaming data pipelines^]\n"
"and uses Kubernetes as the runtime for pipeline deployments."
msgstr "link:https://datacater.io[DataCater] es una plataforma de canalización de datos en tiempo real y nativa de la nube basada en Apache Kafka y Kubernetes. Permite a los usuarios construir canalizaciones de datos en flujo que transmiten registros entre diferentes temas de Apache Kafka y pueden aplicar filtros o transformaciones a los registros por el camino. Dado que se centra en los científicos e ingenieros de datos como usuarios objetivo, DataCater permite a los usuarios desarrollar transformaciones en Python. Proporciona una link:https://www.loom.com/share/15947f13e71540948e3f9d57eac64976[vista previa interactiva, basada en la interfaz de usuario, de las canalizaciones de datos en flujo] y utiliza Kubernetes como tiempo de ejecución para los despliegues de canalizaciones."

#. type: Title ==
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy, no-wrap
msgid "Why did DataCater choose Quarkus?"
msgstr "¿Por qué eligió DataCater a Quarkus?"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"DataCater was created in 2020 and initially built its control plane on top of the Scala framework https://www.playframework.com/[Play^] and implemented pipelines with https://kafka.apache.org/documentation/streams/[Kafka Streams^].\n"
"Over time, we experienced the following limitations and issues with the chosen technologies:"
msgstr "DataCater se creó en 2020 e inicialmente construyó su plano de control sobre el framework Scala link:https://www.playframework.com/[Play] e implementó pipelines con link:https://kafka.apache.org/documentation/streams/[Kafka Streams] . Con el tiempo, experimentamos las siguientes limitaciones y problemas con las tecnologías elegidas:"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Inefficient resource usage:* Kafka Streams applications consume a considerable amount of main memory, making it quite expensive to operate at scale."
msgstr "*Uso ineficiente de recursos:* Las aplicaciones Kafka Streams consumen una cantidad considerable de memoria principal, lo que encarece bastante su funcionamiento a escala."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Long startup times:* Starting a Kafka Streams application can take up to a few minutes, which has a negative impact on the availability of streaming data pipelines."
msgstr "*Largos tiempos de arranque:* Iniciar una aplicación Kafka Streams puede llevar hasta unos minutos, lo que repercute negativamente en la disponibilidad de las canalizaciones de datos en flujo."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"*Restriction to intra-cluster streaming:* By default, Kafka Streams can only stream data between topics of the same Apache Kafka cluster. When facing use cases that stream data between different Kafka clusters, for instance, between a production and test cluster,\n"
"we had to employ additional tooling, e.g., MirrorMaker 2."
msgstr "*Restricción al streaming intra-clúster:* Por defecto, Kafka Streams sólo puede transmitir datos entre temas del mismo clúster de Apache Kafka. Cuando nos enfrentamos a casos de uso que transmiten datos entre distintos clústeres de Kafka, por ejemplo, entre un clúster de producción y uno de pruebas, tuvimos que emplear herramientas adicionales, por ejemplo, MirrorMaker 2."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*No support for Java 17:* The current Play! version 2.8 does not support running on top of Java 17."
msgstr "*No es compatible con Java 17:* La actual versión 2.8 de Play! no es compatible con Java 17."

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "Especially the first two issues, inefficient resource usage and long startup times, hurt a lot when operating in the cloud at scale."
msgstr "Especialmente los dos primeros problemas, el uso ineficiente de los recursos y los largos tiempos de arranque, hacen mucho daño cuando se opera en la nube a escala."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"In 2022, we rewrote DataCater to implement lots of learnings that we made when working with early users.\n"
"Using this unique opportunity, we also switched from Play! and Kafka Streams to Quarkus,\n"
"thus using Quarkus for implementing both our control plane and the data pipelines."
msgstr "En 2022, reescribimos DataCater para implementar muchos de los aprendizajes que obtuvimos al trabajar con los primeros usuarios. Aprovechando esta oportunidad única, también cambiamos de Play! y Kafka Streams a Quarkus, utilizando así Quarkus para implementar tanto nuestro plano de control como los conductos de datos."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"With Quarkus, we are able to bring the best of cloud native and messaging applications together. Streaming messages, especially in the context of Apache Kafka, is still a Java-dominated environment, while the traditional Java stack lacks the characteristics of cloud-native applications, like small footprints, fast startups, and self-containment.\n"
"*-Hakan Lofcali, CTO, DataCater*"
msgstr "Con Quarkus, somos capaces de reunir lo mejor de las aplicaciones nativas de la nube y de mensajería. El streaming de mensajes, especialmente en el contexto de Apache Kafka, sigue siendo un entorno dominado por Java, mientras que la pila tradicional de Java carece de las características de las aplicaciones nativas de la nube, como huellas pequeñas, arranques rápidos y autocontención. *-Hakan Lofcali, CTO, DataCater*"

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "In the following, we list the main reasons why we chose Quarkus over other Java frameworks:"
msgstr "A continuación, enumeramos las principales razones por las que elegimos Quarkus en lugar de otros frameworks Java:"

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Versatility:* We cannot only implement the API of our control plane with the Quarkus RESTeasy extension but can also employ Quarkus as the base for implementing streaming data pipelines using its https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging^] extension."
msgstr "*Versatilidad:* No sólo podemos implementar la API de nuestro plano de control con la extensión RESTeasy de Quarkus, sino que también podemos emplear Quarkus como base para implementar canalizaciones de datos en flujo utilizando su extensión link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] ."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid ""
"*Dev services:* Quarkus' dev services help us to spin up dependencies, like PostgreSQL or Apache Kafka, very fast and provide an outstanding developer experience. Our developers can focus on their job instead of\n"
"messing with the configuration of tooling."
msgstr "*Servicios dev:* Los servicios dev de Quarkus nos ayudan a poner en marcha dependencias, como PostgreSQL o Apache Kafka, muy rápidamente y proporcionan una experiencia excepcional al desarrollador. Nuestros desarrolladores pueden centrarse en su trabajo en lugar de enredar con la configuración de las herramientas."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Support for native executables:* Quarkus allows us to easily build native executables, which are very beneficial when operating in a cloud context. They require much fewer resources and achieve faster startup times."
msgstr "*Soporte para ejecutables nativos:* Quarkus nos permite construir fácilmente ejecutables nativos, que son muy beneficiosos cuando se opera en un contexto de nube. Requieren muchos menos recursos y consiguen tiempos de arranque más rápidos."

#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "*Minimal footprint:* Quarkus’ build time optimizations allow for smaller footprints of JVM- and GraalVM-based containers."
msgstr "*Huella mínima:* Las optimizaciones del tiempo de compilación de Quarkus permiten huellas más pequeñas de los contenedores basados en JVM y GraalVM."

#. type: Title ==
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "https://github.com/DataCater/datacater[DataCater GitHub repository^]"
msgstr "link:https://github.com/DataCater/datacater[Repositorio GitHub de DataCater, window=_blank]"

#. type: Plain text
#: _posts/2023-02-09-datacater-uses-quarkus-to-make-data-streaming-accessible.adoc
#, fuzzy
msgid "https://docs.datacater.io[DataCater documentation^]"
msgstr "link:https://docs.datacater.io[Documentación de DataCater, window=_blank]"
