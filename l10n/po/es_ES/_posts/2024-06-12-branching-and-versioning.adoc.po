msgid ""
msgstr ""
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "Why you should always update to the latest micro versions!"
msgstr "Por qué debe actualizarse siempre a las últimas microversiones"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "How does quarkus use branches and the implication on releases and Quarkus versions"
msgstr "Cómo utiliza quarkus las ramas y la implicación en los lanzamientos y versiones de Quarkus"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "We often get questions about how the Quarkus maintainers handle multiple branches and how this impacts releases. This short post attempts to provide the necessary information for answering such questions."
msgstr "A menudo recibimos preguntas sobre cómo manejan los mantenedores de Quarkus las ramas múltiples y cómo afecta esto a las versiones. Este breve post intenta proporcionar la información necesaria para responder a tales preguntas."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "Development branch"
msgstr "Rama de desarrollo"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid ""
"When a maintainer or contributor wants to make a change to Quarkus source code, a Pull Request is opened against the `main` branch.\n"
"This means that all changes once merged are part of the `main` branch and there are no feature branches (a practice that is sometimes referred to as trunk based development)."
msgstr "Cuando un mantenedor o colaborador desea realizar un cambio en el código fuente de Quarkus, se abre una Pull Request contra la rama `main` . Esto significa que todos los cambios una vez fusionados forman parte de la rama `main` y no hay ramas de características (una práctica que a veces se denomina desarrollo basado en el tronco)."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "The Maven version used on the `main` branch is always `999-SNAPSHOT`"
msgstr "La versión de Maven utilizada en la rama `main` es siempre `999-SNAPSHOT`"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "For folks who want to contribute to Quarkus but are uncertain which branch their new change should target, the answer is unequivocally the `main` branch."
msgstr "Para la gente que quiere contribuir a Quarkus pero no está segura de a qué rama debe dirigirse su nuevo cambio, la respuesta es inequívocamente la rama `main` ."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "New major or minor version"
msgstr "Nueva versión mayor o menor"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid ""
"As a short reminder, Quarkus always provides at least one Candidate Release version of a new minor or major version (in the latter case, there are almost always multiple such releases).\n"
"These releases use the `CR*` suffix, so for example the first candidate release for the `3.11` release was `3.11.CR1`."
msgstr "Como breve recordatorio, Quarkus siempre proporciona al menos una versión candidata de una nueva versión menor o mayor (en este último caso, casi siempre hay varias versiones de este tipo). Estas versiones utilizan el sufijo `CR*` , por lo que, por ejemplo, la primera versión candidata para la versión `3.11` fue `3.11.CR1` ."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid ""
"When time comes to do the new Candidate Release version of a new minor version a new branch using the major and minor is created at the head of the `main` branch.\n"
"For example for the `3.11` release, the branch was made of the following HEAD:"
msgstr "Cuando llega el momento de hacer la nueva versión candidata de una nueva versión menor, se crea una nueva rama con la mayor y la menor en la cabecera de la rama `main` . Por ejemplo, para la versión `3.11` , la rama se hizo con la siguiente HEAD:"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "After the release process is completed, the branch looks like this:"
msgstr "Una vez finalizado el proceso de liberación, la rama tendrá el siguiente aspecto:"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "New micro version"
msgstr "Nueva versión micro"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "After creating the release branch, all subsequent changes to `main` will target a future release unless they are backported to the release branch."
msgstr "Tras crear la rama de lanzamiento, todos los cambios posteriores en `main` tendrán como objetivo una versión futura a menos que se retroporten a la rama de lanzamiento."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid ""
"As we absolutely want a release branch to include the latest bug fixes from `main`, a manual triage needs to occur in order to decide\n"
"which changes in `main` should be backported to the release branch. The maintainers of the Quarkus use the `triage/backport*` labels\n"
"on candidate changes."
msgstr "Como queremos absolutamente que una rama de lanzamiento incluya las últimas correcciones de errores de `main` , es necesario realizar un triaje manual para decidir qué cambios de `main` deben retroportarse a la rama de lanzamiento. Los mantenedores de Quarkus utilizan las etiquetas `triage/backport*` en los cambios candidatos."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "When time comes to release a new micro version (or the final `.0` version), the selected changes are manually backported to the branch"
msgstr "Cuando llega el momento de publicar una nueva versión micro (o la versión final `.0` ), los cambios seleccionados se retroportan manualmente a la rama"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "New features from `main` are **not** backported to the release branch (with very few exceptions) as we want release branches to be as stable as possible."
msgstr "Las nuevas características de `main` *no* se retroportan a la rama de lanzamiento (con muy pocas excepciones), ya que queremos que las ramas de lanzamiento sean lo más estables posible."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "For example, for the `3.11.0` release the branch looked like this:"
msgstr "Por ejemplo, para la versión `3.11.0` la rama tenía este aspecto:"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "Compare this with the image for `3.11.0.CR1` and you'll see that only safe changes are included."
msgstr "Compárelo con la imagen de `3.11.0.CR1` y verá que sólo se incluyen los cambios seguros."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "Same for `3.11.1`:"
msgstr "Lo mismo para `3.11.1` :"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "This backport process happens independently for each supported release branch. It's also the reason why the GitHub project has multiple backport labels."
msgstr "Este proceso de backport se produce de forma independiente para cada rama de lanzamiento compatible. También es la razón por la que el proyecto GitHub tiene múltiples etiquetas backport."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "Conclusion"
msgstr "Conclusión"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "If Quarkus users should take away one thing from this post it's this:"
msgstr "Si los usuarios de Quarkus deben llevarse algo de este post es esto:"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid ""
"Regardless of the minor version of Quarkus being used, it is important to always use the latest micro version of a release. The reason for doing so should be evident from\n"
"this blog post, but it is worth reemphasizing: The latest micro release - let's call it `.z` - is almost always going to be more stable than `.0` (or anything before `.z`)\n"
"since it only contains bug fixes and does not contain new features, as those have a higher chance of introducing new bugs."
msgstr "Independientemente de la versión menor de Quarkus que se utilice, es importante utilizar siempre la última microversión de una versión. La razón para hacerlo debería ser evidente en esta entrada del blog, pero merece la pena volver a insistir en ello: La última microversión -llamémosla `.z` - casi siempre va a ser más estable que `.0` (o cualquier cosa anterior a `.z` ), ya que sólo contiene correcciones de errores y no contiene nuevas características, ya que éstas tienen una mayor probabilidad de introducir nuevos errores."

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "As to which version of Quarkus to use, it comes down to the following question:"
msgstr "En cuanto a qué versión de Quarkus utilizar, todo se reduce a la siguiente cuestión:"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid "Does my project value bleeding edge features or stability?"
msgstr "¿Mi proyecto valora las características punteras o la estabilidad?"

#: _posts/2024-06-12-branching-and-versioning.adoc
#, fuzzy
msgid ""
"If the answer is the former, then the absolute latest Quarkus version on Maven Central should be used.\n"
"If the answer is the latter, then the latest https://quarkus.io/blog/lts-releases/[LTS] version of Quarkus should be used."
msgstr "Si la respuesta es la primera, entonces debe utilizarse la última versión absoluta de Quarkus en Maven Central. Si la respuesta es la segunda, entonces debe utilizarse la última versión link:https://quarkus.io/blog/lts-releases/[LTS] de Quarkus."
